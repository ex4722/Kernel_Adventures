0xffffffff8100039b: ret 0x5f74;
0xffffffff8100049d: add [rax-0x16], ch; cmp dword ptr [rcx+0x400], 0xf3c6894c; movsd [rdi], [rsi]; leave; ret;
0xffffffff810004a0: cmp dword ptr [rcx+0x400], 0xf3c6894c; movsd [rdi], [rsi]; leave; ret;
0xffffffff810004aa: movsd [rdi], [rsi]; leave; ret;
0xffffffff8100051b: and [rax], dl; rol dword ptr [rcx-0x3fce238b], 0x48; add esp, 0xf0; pop rbx; pop rbp; ret;
0xffffffff8100051d: rol dword ptr [rcx-0x3fce238b], 0x48; add esp, 0xf0; pop rbx; pop rbp; ret;
0xffffffff81000521: xor eax, eax; add rsp, 0xf0; pop rbx; pop rbp; ret;
0xffffffff81000523: add rsp, 0xf0; pop rbx; pop rbp; ret;
0xffffffff81000524: add esp, 0xf0; pop rbx; pop rbp; ret;
0xffffffff81000f1e: ret 0xf474;
0xffffffff81001325: add bl, ch; mov ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81001327: mov ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81001390: mov rax, [rax]; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff81001391: mov eax, [rax]; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff810014bd: pop rsp; call qword ptr [0xffffffff81c27010];
0xffffffff81001556: push r13; push r12; push rbx; mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff81001557: push rbp; push r12; push rbx; mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff81001558: push r12; push rbx; mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff81001559: push rsp; push rbx; mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff8100155a: push rbx; mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff8100155b: mov rbx, rsi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff8100155c: mov ebx, esi; sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff8100155e: sub rsp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff8100155f: sub esp, 0x40; call qword ptr [0xffffffff81c27018];
0xffffffff81001576: ret 0x1c1;
0xffffffff810018e8: and eax, 0x81c26f58; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81001c74: leave; in eax, dx; add [rax-0x77], cl; add eax, 0xc81462; ret;
0xffffffff81002086: ret 0x7230;
0xffffffff810020b0: ret 0x7208;
0xffffffff8100215a: ret 0x71d8;
0xffffffff8100282c: ret 0x1c7f;
0xffffffff810028f8: int 0x5a; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff810028f9: pop rdx; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff81002b51: imul eax, [rax], 0x75c08500; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81002b74: not byte ptr [rax]; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81002c10: add cl, [rdi]; xchg esp, eax; rol dword ptr [rbx-0x395cbec3], 0; add cl, [rdi]; xchg esp, eax; ret 0xd138;
0xffffffff81002c12: xchg esp, eax; rol dword ptr [rbx-0x395cbec3], 0; add cl, [rdi]; xchg esp, eax; ret 0xd138;
0xffffffff81002c13: rol dword ptr [rbx-0x395cbec3], 0; add cl, [rdi]; xchg esp, eax; ret 0xd138;
0xffffffff81002c15: cmp eax, 0xc6a341; add cl, [rdi]; xchg esp, eax; ret 0xd138;
0xffffffff81002c1a: add cl, [rdi]; xchg esp, eax; ret 0xd138;
0xffffffff81002c51: mov [rip+0xc6a305], eax; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81002c52: add eax, 0xc6a305; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81002c53: add eax, 0x4800c6a3; mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81002c55: mov byte ptr [rax], 0x48; mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81002d8a: ret 0xc6a1;
0xffffffff81002f26: ret 0xc69f;
0xffffffff81002f3e: mov esp, [rbx+0x1d8]; movsxd rdi, [rbx+0x178]; call qword ptr [0xffffffff81c26fc0];
0xffffffff810030c2: ret 0xea75;
0xffffffff810030db: ret 0xda39;
0xffffffff810035a8: xor al, 0x37; pop rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810035aa: pop rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81003ac6: fucomip st, st(0); xchg esp, eax; in eax, 0x7f; add [rcx-0x73], al; cmp al, 4; call qword ptr [0xffffffff81c26fa0];
0xffffffff81003ac8: xchg esp, eax; in eax, 0x7f; add [rcx-0x73], al; cmp al, 4; call qword ptr [0xffffffff81c26fa0];
0xffffffff8100405a: sbb al, 0xc; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810043c1: push r14; push r13; push r12; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c2: push rsi; push r13; push r12; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c3: push r13; push r12; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c4: push rbp; push r12; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c5: push r12; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c6: push rsp; push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c7: push rbx; sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c8: sub rsp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff810043c9: sub esp, 0x20; call qword ptr [0xffffffff81c27000];
0xffffffff8100499e: shl byte ptr [rbp-0x42], 0x48; add esp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff81004ada: ret 0x8176;
0xffffffff81004ae8: sbb [rdi], al; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81004cd7: ret 0x4a81;
0xffffffff810050c7: ret 0x40c0;
0xffffffff8100514c: ret 0x3fc0;
0xffffffff81005154: mov esp, [rdx]; add [rax-0x7d], cl; clc; add [rax-0x39], ecx; rol byte ptr [rax+0x4881c140], 0xf; ret 0xf7c3;
0xffffffff81005165: ret 0xf7c3;
0xffffffff8100572b: mov esp, [rdi+0x1d8]; movsxd rdi, [rdi+0x178]; call qword ptr [0xffffffff81c26fc0];
0xffffffff8100574f: clc; adc [rax+1], cl; xor dword ptr [rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff81005750: adc [rax+1], cl; xor dword ptr [rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff81005ace: mov rax, [rbx*8-0x7e49ca80]; mov qword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005acf: mov eax, [rbx*8-0x7e49ca80]; mov qword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005ad1: fld st, qword ptr [rax+0x4881b635]; mov dword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005ad4: mov dh, 0x81; mov qword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005ad5: or dword ptr [rax-0x39], 0x3004; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005ad6: mov qword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005ad7: mov dword ptr [rax+rsi], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81005d02: add [rcx+rbp+0x31], dh; sar byte ptr [rbx], 0x15; add esp, edi; rol byte ptr [rax], 0x75; sub [rax-0x39], cl; ret 0x6128;
0xffffffff81005d04: sub [rcx], esi; sar byte ptr [rbx], 0x15; add esp, edi; rol byte ptr [rax], 0x75; sub [rax-0x39], cl; ret 0x6128;
0xffffffff81005d06: sar byte ptr [rbx], 0x15; add esp, edi; rol byte ptr [rax], 0x75; sub [rax-0x39], cl; ret 0x6128;
0xffffffff81005d09: add esp, edi; rol byte ptr [rax], 0x75; sub [rax-0x39], cl; ret 0x6128;
0xffffffff81005d11: ret 0x6128;
0xffffffff81005d30: ret 0x6130;
0xffffffff81005fc5: ret 0xd789;
0xffffffff81006091: rol byte ptr [rcx], 1; add [rax], al; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810062c8: ret 0x5f6;
0xffffffff810068b2: push 0x49000001; mov esp, edi; mov r14, rsi; mov [rsp+0x60], rax; mov edi, eax; call qword ptr [0xffffffff81c26fa0];
0xffffffff810068b7: mov esp, edi; mov r14, rsi; mov [rsp+0x60], rax; mov edi, eax; call qword ptr [0xffffffff81c26fa0];
0xffffffff81007491: leave; cmp rsi, 0x80; mov esi, 0x80; cmovb rax, rsi; and rax, 0xffffffffffffffc0; ret;
0xffffffff81007652: xchg esp, eax; and al, 0x88; add [rax], eax; add [rcx+0x48d689c7], cl; shr edx, 0x20; call qword ptr [0xffffffff81c26fa8];
0xffffffff81007909: out 0xe8, eax; and [rdi], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8100790b: and [rdi], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81007989: mov dword ptr [rax-0x177e3eb0], 0x5af34d; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8100798c: rol dword ptr [rcx+0x5af34de8], 0; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8100798d: sub eax, 0x5af34d; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81007be7: cmovne esp, edx; shl r13d, 2; mov edi, 0x38d; call qword ptr [0xffffffff81c26fa0];
0xffffffff81007d8c: ret 0xf781;
0xffffffff810080d2: add eax, 0x2404c641; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8100811d: or [rax-0x7d], cl; stc; cmp al, 0x74; pop rdi; leave; ret;
0xffffffff81008120: stc; cmp al, 0x74; pop rdi; leave; ret;
0xffffffff81008121: cmp al, 0x74; pop rdi; leave; ret;
0xffffffff81008123: pop rdi; leave; ret;
0xffffffff810081b9: leave; ret 0x8001;
0xffffffff810081c1: mov rcx, 0xffffffff007b0000; and rdx, rcx; or rax, rdx; mov [rdi+0x158], rax; leave; ret;
0xffffffff810081cb: and rdx, rcx; or rax, rdx; mov [rdi+0x158], rax; leave; ret;
0xffffffff810081cc: and edx, ecx; or rax, rdx; mov [rdi+0x158], rax; leave; ret;
0xffffffff810081ce: or rax, rdx; mov [rdi+0x158], rax; leave; ret;
0xffffffff810081cf: or eax, edx; mov [rdi+0x158], rax; leave; ret;
0xffffffff810081d0: ror byte ptr [rax-0x77], 1; xchg [rax+1], ebx; add [rax], al; leave; ret;
0xffffffff810081d1: mov [rdi+0x158], rax; leave; ret;
0xffffffff810081d2: mov [rdi+0x158], eax; leave; ret;
0xffffffff810081d3: xchg [rax+1], ebx; add [rax], al; leave; ret;
0xffffffff81008259: mov rcx, 0xffffffff007b0000; and rdx, rcx; or rdx, rax; mov [rdi+0x158], rdx; leave; ret;
0xffffffff81008263: and rdx, rcx; or rdx, rax; mov [rdi+0x158], rdx; leave; ret;
0xffffffff81008264: and edx, ecx; or rdx, rax; mov [rdi+0x158], rdx; leave; ret;
0xffffffff81008266: or rdx, rax; mov [rdi+0x158], rdx; leave; ret;
0xffffffff81008267: or edx, eax; mov [rdi+0x158], rdx; leave; ret;
0xffffffff81008269: mov [rdi+0x158], rdx; leave; ret;
0xffffffff8100826a: mov [rdi+0x158], edx; leave; ret;
0xffffffff81008d72: push 0x415b0118; pop rsp; pop rbp; ret;
0xffffffff81008e1d: sub eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81008ec9: leave; mov r13d, 0x38f; mov esi, 0xf; mov rdx, rbx; mov rdi, r13; call qword ptr [0xffffffff81c26fa8];
0xffffffff810090a0: add esp, eax; call qword ptr [0xffffffff81c26fa0];
0xffffffff810095d9: mov eax, 0x12; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8100994b: and [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81009e5e: inc dword ptr [rbp+0x482775c0]; mov dword ptr [rbx+0x358], 0x81009eb0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e60: shl byte ptr [rbp+0x27], 0x48; mov dword ptr [rbx+0x358], 0x81009eb0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e63: mov qword ptr [rbx+0x358], 0xffffffff81009eb0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e64: mov dword ptr [rbx+0x358], 0x81009eb0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e65: sbb dword ptr [rax+3], 0; add [rax+0x4881009e], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e67: add eax, [rax]; add [rax+0x4881009e], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e69: add [rax+0x4881009e], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81009e93: sbb [rax+0x458bffff], ebx; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8100a04a: ret 0x1008;
0xffffffff8100a272: ret 0x4e;
0xffffffff8100a3ec: shl dh, 3; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8100a87d: ret 0x4833;
0xffffffff8100ab6c: ret 0xf36;
0xffffffff8100ac19: ret 0xf9e9;
0xffffffff8100af72: ret 0x41;
0xffffffff8100b225: ret 0xf039;
0xffffffff8100b997: mov esp, edi; push rbx; mov ebx, 0x1d9; mov rdi, rbx; call qword ptr [0xffffffff81c26fa0];
0xffffffff8100bce3: movsxd edi, [rdi]; leave; ret;
0xffffffff8100bf20: or qword ptr [r12+0x158], 0x100000; add rsp, 0xa8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100bf21: or dword ptr [rsp+0x158], 0x100000; add rsp, 0xa8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100bf2a: adc [rax], al; add rsp, 0xa8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100bf2c: add rsp, 0xa8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100bf2d: add esp, 0xa8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100c004: xchg esp, eax; or eax, [rax]; add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff8100c005: or eax, [rax]; add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff8100c276: ret 0x44c7;
0xffffffff8100c50d: add rsp, 0x78; or eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100c50e: add esp, 0x78; or eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100c51e: xor eax, eax; add rsp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff8100c59d: add [rax], al; add [rcx-0x7d], al; cld; add cl, [rdi]; xchg esp, eax; ret 0xfb83;
0xffffffff8100c59f: add [rcx-0x7d], al; cld; add cl, [rdi]; xchg esp, eax; ret 0xfb83;
0xffffffff8100c5de: add eax, [rbx-0x47cf820]; add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff8100c63a: inc dword ptr [rcx-0x7d]; cld; add cl, [rdi]; xchg esp, eax; ret 0xfb83;
0xffffffff8100c63d: cld; add cl, [rdi]; xchg esp, eax; ret 0xfb83;
0xffffffff8100c63e: add cl, [rdi]; xchg esp, eax; ret 0xfb83;
0xffffffff8100c640: xchg esp, eax; ret 0xfb83;
0xffffffff8100c672: pop rdx; add [rbx-0x6bf0fe05], al; rol byte ptr [rcx-0x7d], 0xfc; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c673: add [rbx-0x6bf0fe05], al; rol byte ptr [rcx-0x7d], 0xfc; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c676: add [rdi], ecx; xchg esp, eax; rol byte ptr [rcx-0x7d], 0xfc; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c678: xchg esp, eax; rol byte ptr [rcx-0x7d], 0xfc; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c679: rol byte ptr [rcx-0x7d], 0xfc; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c67c: cld; add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c67d: add cl, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff8100c6b6: sti; add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff8100caf8: sub esp, ebp; and r12d, [rbp-0x38]; mov edi, r12d; add edi, [rip+0xc60511]; call qword ptr [0xffffffff81c26fa8];
0xffffffff8100cc6b: and [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8100cd13: ret 0xf3a0;
0xffffffff8100cfe8: test [rbx+0x4c000003], dl; mov esp, [rbp-0x30]; and r12, [rbp-0x40]; mov edi, r12d; add edi, [rip+0xc6001a]; call qword ptr [0xffffffff81c26fa0];
0xffffffff8100cfee: mov esp, [rbp-0x30]; and r12, [rbp-0x40]; mov edi, r12d; add edi, [rip+0xc6001a]; call qword ptr [0xffffffff81c26fa0];
0xffffffff8100d2ee: ret 0xbf72;
0xffffffff8100d3db: leave; push rsp; mov [rax], es; add dh, dh; ret 0xf10;
0xffffffff8100d3e9: leave; test al, 0xf6; ret 0xf20;
0xffffffff8100d5b7: ret 0x6328;
0xffffffff8100e8b9: mov esp, eax; call qword ptr [0xffffffff81c26fa0];
0xffffffff8100f2e4: ret 0x1d36;
0xffffffff8100f58e: add [rax], al; shl al, 1; add [rcx+0x415bd889], al; pop rsp; pop rbp; ret;
0xffffffff8100f590: shl al, 1; add [rcx+0x415bd889], al; pop rsp; pop rbp; ret;
0xffffffff8100f592: add [rcx+0x415bd889], al; pop rsp; pop rbp; ret;
0xffffffff81010029: mov ah, 8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81010072: pop rdx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81010111: ret 0x6490;
0xffffffff81010300: pop rsp; sbb eax, 0xc35d007f; ret;
0xffffffff810107ba: xor dword ptr [rax], 1; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff810107bb: xor [rcx], al; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff810108df: inc esi; add eax, 0xe95be9; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810108e1: add eax, 0xe95be9; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810108f4: adc al, 0xc6; add eax, 0xe95bd4; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810108f6: add eax, 0xe95bd4; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810109b9: sbb [rax], dl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81011a4c: mov esp, 0x49000000; mov esp, edi; lea r13, [rdi-0x188]; call qword ptr [0xffffffff81c27000];
0xffffffff81011a51: mov esp, edi; lea r13, [rdi-0x188]; call qword ptr [0xffffffff81c27000];
0xffffffff81011c23: add [rax], al; add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8101209a: ret 0x893;
0xffffffff8101330e: xchg esp, eax; add [rax], eax; add [rax-0x14568bfe], ch; xlat [rbx]; ret;
0xffffffff81013dbb: pop rax; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81014493: ret 0x4450;
0xffffffff81014650: ret 0xd839;
0xffffffff81014803: ret 0x47a0;
0xffffffff81014b83: ret 0x4b30;
0xffffffff81015b29: add [rbp+0x480974c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81015b47: xor eax, 0x48002187; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81015b49: and [rax], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81015c40: xchg [rcx], ah; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81016077: ret 0x3c73;
0xffffffff8101609f: ret 0xdc72;
0xffffffff810160c0: xchg esp, eax; add [rax], eax; add [rax], al; add [rax], al; add bl, al; ret;
0xffffffff81016102: xchg esp, eax; add [rax], eax; add [rax], al; add [rax], al; add [rbp-0x3d], bl; ret;
0xffffffff8101633c: mov dword ptr [rip+0xc089e6], 2; mov qword ptr [rip+0xc02bb7], 0xffffffff81c1ebc0; leave; ret;
0xffffffff8101633d: add eax, 0xc089e6; add al, [rax]; add [rax], al; mov qword ptr [rip+0xc02bb7], 0xffffffff81c1ebc0; leave; ret;
0xffffffff81016342: add al, [rax]; add [rax], al; mov qword ptr [rip+0xc02bb7], 0xffffffff81c1ebc0; leave; ret;
0xffffffff81016344: add [rax], al; mov qword ptr [rip+0xc02bb7], 0xffffffff81c1ebc0; leave; ret;
0xffffffff81016346: mov qword ptr [rip+0xc02bb7], 0xffffffff81c1ebc0; leave; ret;
0xffffffff81016347: mov dword ptr [rip+0xc02bb7], 0x81c1ebc0; leave; ret;
0xffffffff81016403: cld; shl byte ptr [rbp+0xb], 0x48; mov dword ptr [rip+0xc07486], 0; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016404: shl byte ptr [rbp+0xb], 0x48; mov dword ptr [rip+0xc07486], 0; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016407: mov qword ptr [rip+0xc07486], 0; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016408: mov dword ptr [rip+0xc07486], 0; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016409: add eax, 0xc07486; add [rax], al; add [rax], al; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff8101640a: xchg [rax+rax*8], dh; add [rax], al; add [rax], al; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff8101640e: add [rax], al; add [rax], al; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016410: add [rax], al; mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016412: mov qword ptr [rip+0xc08853], 0xffffffff81c1d820; leave; ret;
0xffffffff81016413: mov dword ptr [rip+0xc08853], 0x81c1d820; leave; ret;
0xffffffff810164b5: rol dword ptr [rcx+0x2177f4e8], 0; mov [rip+0xc062ca], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810164b6: sub eax, 0x2177f4; mov [rip+0xc062ca], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810164ba: and [rax], eax; mov [rip+0xc062ca], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810164bc: mov [rip+0xc062ca], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810164bd: add eax, 0xc062ca; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810164c0: rol byte ptr [rax], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81016522: mov esp, edi; push rbx; mov rbx, [r12+0x1d8]; mov edi, [r12+0x170]; call qword ptr [0xffffffff81c26fa0];
0xffffffff810166ac: ret 0x4881;
0xffffffff8101689c: ret 0x6500;
0xffffffff810168b7: ret 0x6568;
0xffffffff81016969: ret 0xd88e;
0xffffffff8101706d: adc al, 0x31; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101733d: mov esp, eax; call qword ptr [0xffffffff81c26ee0];
0xffffffff81017d70: ret 0x9c1d;
0xffffffff81018281: or ecx, [rdi]; xchg esp, eax; ret 0xd009;
0xffffffff810182db: ret 0x9d78;
0xffffffff8101831e: ret 0x9d85;
0xffffffff8101833e: ret 0x9d94;
0xffffffff8101835e: ret 0x9db0;
0xffffffff8101837e: ret 0x9dbc;
0xffffffff810183be: ret 0x9dde;
0xffffffff8101854b: ret 0x37c6;
0xffffffff81018714: ret 0x9e07;
0xffffffff81018880: xchg esp, eax; ret 0x2141;
0xffffffff810189c4: push r12; mov r12, rdi; push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189c5: push rsp; mov r12, rdi; push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189c6: mov r12, rdi; push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189c7: mov esp, edi; push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189c8: cld; push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189c9: push rbx; mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189ca: mov rbx, rsi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189cb: mov ebx, esi; sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189cd: sub rsp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189ce: sub esp, 8; call qword ptr [0xffffffff81c26ef0];
0xffffffff810189e8: sub eax, 0x1532; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81018c12: ror byte ptr [rax-0x77], 0xe5; sub rsp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c13: mov rbp, rsp; sub rsp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c14: mov ebp, esp; sub rsp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c15: in eax, 0x48; sub esp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c16: sub rsp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c17: sub esp, 0x10; mov [rbp-8], rdi; lea rdi, [rbp-0xa]; mov [rbp-0xa], ax; call qword ptr [0xffffffff81c26f28];
0xffffffff81018c28: and eax, 0x81c26f28; leave; ret;
0xffffffff810199e0: and [r11+0x4c], bl; mov esp, [rax+8]; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff810199e1: and [rbx+0x4c], bl; mov esp, [rax+8]; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff810199e4: mov esp, [rax+8]; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff81019ed8: pop rsi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81019f78: popfq; mov eax, [0x480006cad8e881af]; add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81019f79: mov eax, [0x480006cad8e881af]; add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81019f7a: scasd [rdi]; sub eax, 0x6cad8; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81019f7b: sub eax, 0x6cad8; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8101a35a: ret 0xa22b;
0xffffffff8101a43e: xchg esp, eax; and al, 0xe0; ret 0xf681;
0xffffffff8101a4ff: pop rax; add [rbp+0x1f850fc0], al; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8101a500: add [rbp+0x1f850fc0], al; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8101a504: test [rdi], ebx; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8101a739: ror byte ptr [rdi], 0x85; cwde; add [rax], eax; add [rbp+0x4c], ah; mov esp, [rip+0x7eff99a0]; call qword ptr [0xffffffff81b63b00];
0xffffffff8101a73c: cwde; add [rax], eax; add [rbp+0x4c], ah; mov esp, [rip+0x7eff99a0]; call qword ptr [0xffffffff81b63b00];
0xffffffff8101a73d: add [rax], eax; add [rbp+0x4c], ah; mov esp, [rip+0x7eff99a0]; call qword ptr [0xffffffff81b63b00];
0xffffffff8101a73f: add [rbp+0x4c], ah; mov esp, [rip+0x7eff99a0]; call qword ptr [0xffffffff81b63b00];
0xffffffff8101a742: mov esp, [rip+0x7eff99a0]; call qword ptr [0xffffffff81b63b00];
0xffffffff8101aae3: dec dword ptr [rax-0x77]; fadd st, dword ptr [rcx+rcx*4+0x63]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101aae6: fadd st, dword ptr [rcx+rcx*4+0x63]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101ab4e: ret 0xcbf9;
0xffffffff8101b593: ret 0x6b4;
0xffffffff8101b8b7: pop rcx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8101b952: sbb [rax-0x16], bh; sub eax, 0x59dad5; mov rax, [rip+0xc08e96]; mov eax, [rax]; leave; ret;
0xffffffff8101b955: sub eax, 0x59dad5; mov rax, [rip+0xc08e96]; mov eax, [rax]; leave; ret;
0xffffffff8101b958: ficomp st, dword ptr [rcx]; mov rax, [rip+0xc08e96]; mov eax, [rax]; leave; ret;
0xffffffff8101b959: pop rcx; add [rax-0x75], cl; add eax, 0xc08e96; mov eax, [rax]; leave; ret;
0xffffffff8101b95a: add [rax-0x75], cl; add eax, 0xc08e96; mov eax, [rax]; leave; ret;
0xffffffff8101b95b: mov rax, [rip+0xc08e96]; mov eax, [rax]; leave; ret;
0xffffffff8101b95c: mov eax, [rip+0xc08e96]; mov eax, [rax]; leave; ret;
0xffffffff8101b95d: add eax, 0xc08e96; mov eax, [rax]; leave; ret;
0xffffffff8101b962: mov eax, [rax]; leave; ret;
0xffffffff8101ba7e: ret 0xb850;
0xffffffff8101baaf: sbb [rax-0x16], bh; or dword ptr [rcx+rcx*4-0x1a], 0x59d975e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101bab2: or dword ptr [rcx+rcx*4-0x1a], 0x59d975e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101bab9: pop rcx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101be5a: ret 0xdfe;
0xffffffff8101c44f: out 0x49, al; mov esp, eax; mov rdi, rbx; mov rsi, r12; call qword ptr [0xffffffff81b63bb0];
0xffffffff8101c451: mov esp, eax; mov rdi, rbx; mov rsi, r12; call qword ptr [0xffffffff81b63bb0];
0xffffffff8101c770: shl byte ptr [rbx+rcx+0x48], 0x98; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101c772: or ecx, [rax-0x68]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101c7c5: movsxd rax, ebx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101c7c6: movsxd eax, ebx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101ca0f: leave; add [rcx+0x212479e8], eax; add [rbx+0x5d], bl; ret;
0xffffffff8101cae0: scasd [rdi]; sub eax, 0x316709; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cae1: sub eax, 0x316709; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cae4: xor [eax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101caf3: ret 0xad30;
0xffffffff8101caf7: or dword ptr [rax-0x39], 0xaf70c8c7; sub eax, 0x3166ec; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cafd: scasd [rdi]; sub eax, 0x3166ec; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cafe: sub eax, 0x3166ec; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cb00: in al, dx; xor [rax], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cb01: xor [rax], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cb02: xor [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cc2b: sub eax, 0x3165bf; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101cc2d: mov edi, 0x48003165; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101cca6: xor gs:[rax], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101ccfe: ret 0x751f;
0xffffffff8101cd12: add [rbx-0x3d090bab], cl; add [rbp+0x1c], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cd18: add [rbp+0x1c], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cd1a: sbb al, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cf8b: add dh, [rcx+rdi+0x48]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cfd0: sbb al, 0x12; and [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cfd2: and [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101cff9: adc [rax+rdx-0x80], dh; cmp eax, 0xc4fb7d; add [rcx+rcx-0x10], dh; inc dword ptr [rip+0xe8ac34]; leave; ret;
0xffffffff8101cffd: cmp eax, 0xc4fb7d; add [rcx+rcx-0x10], dh; inc dword ptr [rip+0xe8ac34]; leave; ret;
0xffffffff8101d002: add [rcx+rcx-0x10], dh; inc dword ptr [rip+0xe8ac34]; leave; ret;
0xffffffff8101d004: or eax, esi; inc dword ptr [rip+0xe8ac34]; leave; ret;
0xffffffff8101d006: inc dword ptr [rip+0xe8ac34]; leave; ret;
0xffffffff8101d007: add eax, 0xe8ac34; leave; ret;
0xffffffff8101d079: add [rsi+rcx-0x10], dh; inc dword ptr [rip+0xe8abbd]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d07d: inc dword ptr [rip+0xe8abbd]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d07e: add eax, 0xe8abbd; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d07f: mov ebp, 0x4800e8ab; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d178: xor [rax], eax; mov [rip+0xe8a6c7], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d179: add [rax-0x77], cl; sbb eax, 0xe8a6c7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d17a: mov [rip+0xe8a6c7], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d17b: mov [rip+0xe8a6c7], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d17c: sbb eax, 0xe8a6c7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8101d210: ret 0xae5d;
0xffffffff8101d21e: sub eax, 0x315fcc; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8101d2d1: scasb [rdi]; scasd [rdi]; sub eax, 0x69780; leave; ret;
0xffffffff8101d2d2: scasd [rdi]; sub eax, 0x69780; leave; ret;
0xffffffff8101d2d3: sub eax, 0x69780; leave; ret;
0xffffffff8101d39a: scasb [rdi]; scasd [rdi]; sub eax, 0x696b7; leave; ret;
0xffffffff8101d39b: scasd [rdi]; sub eax, 0x696b7; leave; ret;
0xffffffff8101d39c: sub eax, 0x696b7; leave; ret;
0xffffffff8101d6ff: mov eax, [0x415b0a75c08500e8]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8101d866: ret 0x8c81;
0xffffffff8101e05a: ret 0x598a;
0xffffffff8101e9b8: mov dh, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8101eb12: ret 0x42c6;
0xffffffff8101ebd4: mov al, [0x4100000000000007]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8101f1a2: ret 0x6981;
0xffffffff8101f304: ret 0x1476;
0xffffffff8101f310: ret 0xd776;
0xffffffff8101f559: add [rbp-0x7b], cl; in al, 0x75; sbb al, ch; pop rsp; adc al, [rip-0x2076b800]; call qword ptr [0xffffffff81c27008];
0xffffffff8101f55c: in al, 0x75; sbb al, ch; pop rsp; adc al, [rip-0x2076b800]; call qword ptr [0xffffffff81c27008];
0xffffffff8101f55e: sbb al, ch; pop rsp; adc al, [rip-0x2076b800]; call qword ptr [0xffffffff81c27008];
0xffffffff8101f560: pop rsp; adc al, [rip-0x2076b800]; call qword ptr [0xffffffff81c27008];
0xffffffff8101fa6e: or byte ptr [rip+0xe88059], 0x80; imul eax, [rbp-0xc]; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa73: add [rax-0xbba50f1], al; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa74: or byte ptr [rdi], 0xaf; hlt; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa75: imul eax, [rbp-0xc]; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa76: scasd [rdi]; hlt; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa78: hlt; xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa79: xor edx, edx; div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa7b: div dword ptr [rbp-0x10]; leave; ret;
0xffffffff8101fa87: xor al, 0xb8; add [rbx], cl; add [rax-0x458ba306], al; leave; xor eax, eax; ret;
0xffffffff8101fa89: add [rbx], cl; add [rax-0x458ba306], al; leave; xor eax, eax; ret;
0xffffffff8101fa8c: add [rax-0x458ba306], al; leave; xor eax, eax; ret;
0xffffffff8101fb8a: leave; mov rdi, r14; call qword ptr [0xffffffff81c27008];
0xffffffff8101fc93: ret 0x66d;
0xffffffff8101fe9c: mov esp, edi; mov edi, 0xcd; call qword ptr [0xffffffff81c26fa0];
0xffffffff8101ffaa: add [rax], al; add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8102046b: adc [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810206a8: push r13; push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206a9: push rbp; push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206aa: push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206ab: push rsp; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206ac: mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206ad: mov esp, edi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206ae: cld; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206af: push rbx; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810206e8: or dword ptr [rbx-0x178ae6fb], 0x7fc08500; pop rsp; mov rdi, r13; call qword ptr [0xffffffff81c27008];
0xffffffff810206f2: pop rsp; mov rdi, r13; call qword ptr [0xffffffff81c27008];
0xffffffff81020f54: leave; mov rax, rdi; and rax, 0xfffffffffffffff0; ret;
0xffffffff81020f6a: leave; and eax, 0x1fff; sub rdi, rax; mov rax, rdi; and rax, 0xfffffffffffffff0; ret;
0xffffffff810212eb: mov edx, eax; xrstor64 [rdi]; mov al, gs:[rip+0x7eff3960]; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212ed: xrstor64 [rdi]; mov al, gs:[rip+0x7eff3960]; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212ee: xrstor [rdi]; mov al, gs:[rip+0x7eff3960]; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212f1: mov al, gs:[rip+0x7eff3960]; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212f2: mov al, [rip+0x7eff3960]; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212f3: add eax, 0x7eff3960; mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212f8: mov byte ptr gs:[rip+0x7eff3958], 0; leave; ret;
0xffffffff810212f9: mov byte ptr [rip+0x7eff3958], 0; leave; ret;
0xffffffff81021409: mov byte ptr gs:[rip+0x7eff3847], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102140a: mov byte ptr [rip+0x7eff3847], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810215d7: ret 0x7b8;
0xffffffff810215fc: ret 0x7512;
0xffffffff81021619: ret 0xbceb;
0xffffffff81021a92: ret 0xf2e9;
0xffffffff81021ad6: rol byte ptr [rbp-0x3f6af02e], 0xf7; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81021cbd: ret 0xe970;
0xffffffff81021e60: mov eax, [rcx*4-0x7e1586a0]; add rsp, 8; add rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81021e67: add rsp, 8; add rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81021e68: add esp, 8; add rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81022163: leave; pop rbp; mov eax, [rcx*4-0x7e1586a0]; add rax, rdi; ret;
0xffffffff81022202: ret 0xc4;
0xffffffff81022390: ret 0x7a60;
0xffffffff81022940: ret 0x7406;
0xffffffff810229c6: and eax, 0x81c26f98; mov eax, [rbp-8]; leave; and eax, 1; ret;
0xffffffff810229cb: mov eax, [rbp-8]; leave; and eax, 1; ret;
0xffffffff810229cd: clc; leave; and eax, 1; ret;
0xffffffff81022b04: ret 0x778;
0xffffffff81022ca3: xchg esp, eax; xor [rax+0x3f], bl; add [rax], al; xor eax, eax; pop rbp; ret;
0xffffffff81022efe: enter 0xd009, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81022eff: or eax, edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81023025: xchg [rdx+7], esp; add [rax], al; movzx eax, ax; pop rbp; ret;
0xffffffff8102325c: pushfq; or al, [rax]; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff8102325d: or al, [rax]; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff81023286: mov [rbx+0x778], rax; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81023287: mov [rbx+0x778], eax; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8102328b: add [rax], al; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81023396: or al, [rax]; add rsp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102354c: pop rax; add [rbp-0x74178a40], al; or [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8102354d: add [rbp-0x74178a40], al; or [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8102354f: shl byte ptr [rbp-0x18], 0x8b; or [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81023584: ret 0x3ae0;
0xffffffff81023a52: ret 0x5bf;
0xffffffff81023a5d: outsd dx, [rsi]; add eax, fs:[rax]; leave; ret;
0xffffffff81023a5e: add eax, fs:[rax]; leave; ret;
0xffffffff81023a5f: add eax, [rax]; leave; ret;
0xffffffff81023b37: mov esp, esi; push rbx; mov rbx, rdi; call qword ptr [0xffffffff81c27010];
0xffffffff8102405c: ret 0xb475;
0xffffffff81024ad8: pop rsp; or al, al; add [rax-0x39], cl; shl byte ptr [rax], 0x55; ret 0x5b81;
0xffffffff81024b29: sub rsp, 0x18; mov [rbp-0x3c], edx; mov rdx, r14; mov dword ptr [rbp-0x38], 0x80000006; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81024b2a: sub esp, 0x18; mov [rbp-0x3c], edx; mov rdx, r14; mov dword ptr [rbp-0x38], 0x80000006; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81024c66: test dword ptr [rbp-4], 0xf000; setne al; add eax, 3; mov [rip+0xe82e26], ax; leave; ret;
0xffffffff81024c6b: add [rax], al; setne al; add eax, 3; mov [rip+0xe82e26], ax; leave; ret;
0xffffffff81024c6d: setne al; add eax, 3; mov [rip+0xe82e26], ax; leave; ret;
0xffffffff81024c70: add eax, 3; mov [rip+0xe82e26], ax; leave; ret;
0xffffffff81024c71: rol byte ptr [rbx], 0x66; mov [rip+0xe82e26], eax; leave; ret;
0xffffffff81024c72: add esp, [rsi-0x77]; add eax, 0xe82e26; leave; ret;
0xffffffff81024c75: add eax, 0xe82e26; leave; ret;
0xffffffff81024c85: mov [rip+0xe82e26], ax; leave; ret;
0xffffffff81024c86: mov [rip+0xe82e26], eax; leave; ret;
0xffffffff81024c87: add eax, 0xe82e14; leave; ret;
0xffffffff810252ca: pop rax; or [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff810252cb: or [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff81025486: lea rdx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025487: lea edx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102548a: lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102548b: lea ecx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102548d: hlt; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102548e: sub rsp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102548f: sub esp, 0x10; mov dword ptr [rbp-0x18], 0xb; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810254c7: mov [rip+0xc00123], eax; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810254c8: add eax, 0xc00123; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810256f0: and eax, 0x81c26f20; leave; ret;
0xffffffff810258b2: lea rdx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258b3: lea edx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258b6: lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258b7: lea ecx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258b9: hlt; sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258ba: sub rsp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258bb: sub esp, 0x10; mov dword ptr [rbp-0x18], 4; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810258dd: add eax, 1; mov [rbx+0xd0], ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810258de: rol byte ptr [rcx], 0x66; mov [rbx+0xd0], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810258e0: mov [rbx+0xd0], ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810258e1: mov [rbx+0xd0], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810258e2: adc eax, 0; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810258e3: rol byte ptr [rax], 1; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025a27: add [rbx+0x97401f8], al; add rsp, 0x10; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81025a2a: add [rcx+rcx+0x48], esi; add esp, 0x10; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81025a41: add [rax], al; add rsp, 0x10; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81025a43: add rsp, 0x10; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81025a44: add esp, 0x10; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81025b29: and al, 0xde; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81025b4f: lea rdx, [rbx+0x6c]; lea rcx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b50: lea rdx, [rbx+0x6c]; lea rcx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b51: lea edx, [rbx+0x6c]; lea rcx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b53: insb [rdi], dx; lea rcx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b54: lea rcx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b55: lea ecx, [rbx+0x68]; sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b58: sub rsp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b59: sub esp, 0x10; mov dword ptr [rdi], 0; mov dword ptr [rdi+0x5c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b64: pop rsp; add [rax], al; add [rax], al; call qword ptr [0xffffffff81c26f98];
0xffffffff81025b71: adc r14b, al; add eax, [rax*4+0x48077fc0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025b72: adc dh, al; add eax, [rax*4+0x48077fc0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025b74: add eax, [rax*4+0x48077fc0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025b75: add al, 0x85; sar byte ptr [rdi+7], 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025b77: sar byte ptr [rdi+7], 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025bda: movzx eax, ax; mov [rbx+0xb8], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025bdb: mov bh, 0xc0; mov [rbx+0xb8], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025bdc: ror byte ptr [rcx+0xb883], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025bdd: mov [rbx+0xb8], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025bdf: mov eax, 0x48000000; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025fe5: movzx eax, byte ptr [rdi+9]; mov [rbx+0xe8], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025fe9: mov [rbx+0xe8], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81025fea: sub eax, 0; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81026027: mov [rbx+0xe8], al; mov [rbx+8], dx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102602b: add [rax], al; mov [rbx+8], dx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102602d: mov [rbx+8], dx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102633f: ret 0x9c81;
0xffffffff810265fe: out dx, al; adc al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810265ff: adc al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81026665: ret 0x1410;
0xffffffff81026c43: test [rbp+1], ecx; add [rax], al; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff81026c46: add [rax], al; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff81026d62: shr dword ptr [rdi-0x310177f], 5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81026e9a: ret 0xb875;
0xffffffff81026f12: ret 0x5ce9;
0xffffffff81027020: ret 0xb3;
0xffffffff810270f6: mov [rdi+8], rax; mov eax, 0xa; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270f7: mov [rdi+8], eax; mov eax, 0xa; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270f8: or [r8+0xa], r15b; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270f9: or [rax+0xa], bh; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270fa: mov eax, 0xa; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270fb: or al, [rax]; add [rax], al; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270fd: add [rax], al; mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff810270ff: mov [rdi+0x14], ax; mov eax, 0x15; leave; ret;
0xffffffff81027100: mov [rdi+0x14], eax; mov eax, 0x15; leave; ret;
0xffffffff81027103: mov eax, 0x15; leave; ret;
0xffffffff8102713f: mov rax, 0x626172656e6c7556; mov dword ptr [rdi+8], 0xa656c; mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff81027149: mov dword ptr [rdi+8], 0xa656c; mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff8102714c: insb [rdi], dx; or al, gs:[rax]; mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff8102714d: or al, gs:[rax]; mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff8102714e: or al, [rax]; mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff81027150: mov [rdi], rax; mov eax, 0xb; leave; ret;
0xffffffff81027151: mov [rdi], eax; mov eax, 0xb; leave; ret;
0xffffffff81027153: mov eax, 0xb; leave; ret;
0xffffffff81027154: or eax, [rax]; add [rax], al; leave; ret;
0xffffffff8102716a: mov dword ptr [rdi+8], 0x64657463; mov [rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff8102716b: or [r11+0x74], r12b; mov fs:[rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff8102716c: or [rbx+0x74], ah; mov fs:[rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff8102716d: movsxd esi, [rbp+0x64]; mov [rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027170: mov fs:[rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027171: mov [rdi], rax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027172: mov [rdi], eax; mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027174: mov eax, 0xd; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027175: or eax, 0x66000000; mov [rdi+0xc], r8d; leave; ret;
0xffffffff81027176: add [rax], al; add [rsi+0x44], ah; mov [rdi+0xc], eax; leave; ret;
0xffffffff81027177: add [rax], al; mov [rdi+0xc], r8w; leave; ret;
0xffffffff81027178: add [rsi+0x44], ah; mov [rdi+0xc], eax; leave; ret;
0xffffffff81027179: mov [rdi+0xc], r8w; leave; ret;
0xffffffff8102717a: mov [rdi+0xc], r8d; leave; ret;
0xffffffff8102717b: mov [rdi+0xc], eax; leave; ret;
0xffffffff8102718f: adc al, 0xc5; add [rax-0x60], al; sub eax, 0x588486; leave; cdqe; ret;
0xffffffff81027191: add [rax-0x60], al; sub eax, 0x588486; leave; cdqe; ret;
0xffffffff81027194: sub eax, 0x588486; leave; cdqe; ret;
0xffffffff81027197: test [rax], bl; leave; cdqe; ret;
0xffffffff810271b5: ret 0xcaf5;
0xffffffff8102720c: ret 0xcb41;
0xffffffff81027265: ret 0xcb86;
0xffffffff8102727f: sub eax, 0x58839b; pop rdx; pop rcx; leave; cdqe; ret;
0xffffffff81027281: fwait; sbb dword ptr [rax], 0x5a; pop rcx; leave; cdqe; ret;
0xffffffff81027282: sbb dword ptr [rax], 0x5a; pop rcx; leave; cdqe; ret;
0xffffffff81027283: pop rax; add [rdx+0x59], bl; leave; cdqe; ret;
0xffffffff81027284: add [rdx+0x59], bl; leave; cdqe; ret;
0xffffffff81027285: pop rdx; pop rcx; leave; cdqe; ret;
0xffffffff81027286: pop rcx; leave; cdqe; ret;
0xffffffff810272de: fcmovne st, st(3); scasd [rdi]; sub eax, 0x588339; leave; cdqe; ret;
0xffffffff810272e0: scasd [rdi]; sub eax, 0x588339; leave; cdqe; ret;
0xffffffff810272e1: sub eax, 0x588339; leave; cdqe; ret;
0xffffffff810272ff: ret 0xcba5;
0xffffffff81027302: scasd [rdi]; or dword ptr [rax-0x39], 0xb10b3ec6; sub eax, 0x588310; mov eax, 0x1a; leave; ret;
0xffffffff81027303: or dword ptr [rax-0x39], 0xb10b3ec6; sub eax, 0x588310; mov eax, 0x1a; leave; ret;
0xffffffff81027307: or esi, [rcx-0x7cef177f]; pop rax; add [rax+0x1a], bh; leave; ret;
0xffffffff81027308: or esi, [rcx-0x7cef177f]; pop rax; add [rax+0x1a], bh; leave; ret;
0xffffffff8102730a: sub eax, 0x588310; mov eax, 0x1a; leave; ret;
0xffffffff8102730d: sbb dword ptr [rax], 0xffffffb8; sbb al, [rax]; add [rax], al; leave; ret;
0xffffffff8102730e: pop rax; add [rax+0x1a], bh; leave; ret;
0xffffffff8102730f: add [rax+0x1a], bh; leave; ret;
0xffffffff81027310: mov eax, 0x1a; leave; ret;
0xffffffff81027311: sbb al, [rax]; add [rax], al; leave; ret;
0xffffffff81027326: adc al, 0xc5; mov al, [0x5882efe881a03f]; leave; cdqe; ret;
0xffffffff81027328: mov al, [0x5882efe881a03f]; leave; cdqe; ret;
0xffffffff8102732b: sub eax, 0x5882ef; leave; cdqe; ret;
0xffffffff8102736e: scasd [rdi]; sub eax, 0x5882ab; leave; cdqe; ret;
0xffffffff8102736f: sub eax, 0x5882ab; leave; cdqe; ret;
0xffffffff810273aa: mov [rdi], rax; mov rax, 0xa495450203a6e6f; mov [rdi+8], rax; mov eax, 0x10; leave; ret;
0xffffffff810273ab: mov [rdi], eax; mov rax, 0xa495450203a6e6f; mov [rdi+8], rax; mov eax, 0x10; leave; ret;
0xffffffff810273ad: mov rax, 0xa495450203a6e6f; mov [rdi+8], rax; mov eax, 0x10; leave; ret;
0xffffffff810273b2: and [rax+0x54], dl; or cl, [r8-0x77]; or [r8+0x10], r15b; leave; ret;
0xffffffff810273b3: push rax; push rsp; or cl, [r8-0x77]; or [r8+0x10], r15b; leave; ret;
0xffffffff810273b4: push rsp; or cl, [r8-0x77]; or [r8+0x10], r15b; leave; ret;
0xffffffff810273b5: or cl, [r8-0x77]; or [r8+0x10], r15b; leave; ret;
0xffffffff810273b6: or cl, [rax-0x77]; or [r8+0x10], r15b; leave; ret;
0xffffffff810273b7: mov [rdi+8], rax; mov eax, 0x10; leave; ret;
0xffffffff810273b8: mov [rdi+8], eax; mov eax, 0x10; leave; ret;
0xffffffff810273b9: or [r8+0x10], r15b; leave; ret;
0xffffffff810273ba: or [rax+0x10], bh; leave; ret;
0xffffffff810273bb: mov eax, 0x10; leave; ret;
0xffffffff810273bc: adc [rax], al; add [rax], al; leave; ret;
0xffffffff8102741e: mov rax, 0x6465726975716572; mov [rdi+0x30], rax; mov eax, 0x3a; mov [rdi+0x38], si; leave; ret;
0xffffffff8102741f: mov eax, 0x75716572; imul esi, [rdx+0x65], 0x47894864; xor [rax+0x3a], bh; mov [rdi+0x38], si; leave; ret;
0xffffffff81027424: imul esi, [rdx+0x65], 0x47894864; xor [rax+0x3a], bh; mov [rdi+0x38], si; leave; ret;
0xffffffff81027427: mov fs:[rdi+0x30], rax; mov eax, 0x3a; mov [rdi+0x38], si; leave; ret;
0xffffffff81027428: mov [rdi+0x30], rax; mov eax, 0x3a; mov [rdi+0x38], si; leave; ret;
0xffffffff81027429: mov [rdi+0x30], eax; mov eax, 0x3a; mov [rdi+0x38], si; leave; ret;
0xffffffff8102742a: xor [r8+0x3a], r15b; mov [rdi+0x38], si; leave; ret;
0xffffffff8102742b: xor [rax+0x3a], bh; mov [rdi+0x38], si; leave; ret;
0xffffffff8102742c: mov eax, 0x3a; mov [rdi+0x38], si; leave; ret;
0xffffffff8102742d: cmp al, [rax]; add [rax], al; mov [rdi+0x38], si; leave; ret;
0xffffffff8102742f: add [rax], al; mov [rdi+0x38], si; leave; ret;
0xffffffff81027431: mov [rdi+0x38], si; leave; ret;
0xffffffff81027432: mov [rdi+0x38], esi; leave; ret;
0xffffffff8102743d: sub eax, 0x5881dd; leave; cdqe; ret;
0xffffffff810276c8: ret 0x7c08;
0xffffffff810277d8: idiv edi; push qword ptr [rcx]; ror cl, 0xc3; leave; mov eax, 0xfffffffa; ret;
0xffffffff810277da: push qword ptr [rcx]; ror cl, 0xc3; leave; mov eax, 0xfffffffa; ret;
0xffffffff810277dc: ror cl, 0xc3; leave; mov eax, 0xfffffffa; ret;
0xffffffff810277e4: inc ebx; leave; mov eax, 0xffffffff; ret;
0xffffffff81027a5e: ret 0x81af;
0xffffffff81027c4a: add ch, [rip+0x415b0007]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81027c4b: sub eax, 0x415b0007; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81027ef2: ret 0x8e8;
0xffffffff81028263: enter 0x5441, 0x53; sub rsp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028264: push r12; push rbx; sub rsp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028265: push rsp; push rbx; sub rsp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028266: push rbx; sub rsp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028267: sub rsp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028268: sub esp, 0x50; mov dword ptr [rbp-0x44], 2; mov dword ptr [rbp-0x3c], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81028b12: mov edx, 0x48ffffce; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81029093: ret 0x5d9;
0xffffffff810292c4: ret 0x9e73;
0xffffffff810295a7: ret 0xf57f;
0xffffffff810296de: mov [rip+0xbfbf0c], eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810296df: add eax, 0xbfbf0c; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810296e0: or al, 0xbf; mov edi, 0xc4834800; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810296e2: mov edi, 0xc4834800; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810299a5: ror byte ptr [rcx+rcx*4-0x1f], 1; mov rdx, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299a6: mov rcx, r12; mov rdx, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299a7: mov ecx, esp; mov rdx, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299a9: mov rdx, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299aa: mov edx, ebx; sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299ac: sub rsp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff810299ad: sub esp, 0x10; mov dword ptr [rbp-0x38], 1; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff8102aa03: add dh, al; add eax, 0xc44bb6; add [rax-0x39], ecx; mov dword ptr [rax], 0xe881c25a; leave; ret 0x58;
0xffffffff8102aa05: add eax, 0xc44bb6; add [rax-0x39], ecx; mov dword ptr [rax], 0xe881c25a; leave; ret 0x58;
0xffffffff8102aa0a: add [rax-0x39], ecx; mov dword ptr [rax], 0xe881c25a; leave; ret 0x58;
0xffffffff8102aa0d: mov dword ptr [rax], 0xe881c25a; leave; ret 0x58;
0xffffffff8102aa11: sub eax, 0x58c2c9; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102aa13: leave; ret 0x58;
0xffffffff8102aab6: sub eax, 0x58c224; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102aab9: ret 0x58;
0xffffffff8102acdc: xchg [rip+0x740000c4], bl; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102acdd: sbb eax, 0x740000c4; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ad04: cdqe; mov rax, [rdx+rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ad05: cwde; mov rax, [rdx+rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ad06: mov rax, [rdx+rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ad07: mov eax, [rdx+rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ad08: add al, 2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102ae4f: ret 0x7ca0;
0xffffffff8102affc: mov esp, 0x89480058; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8102affd: pop rax; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8102b03a: ret 0x4e00;
0xffffffff8102b13f: mov eax, [rip+0xc433df]; mov [rbx+0x70], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102b140: add eax, 0xc433df; mov [rbx+0x70], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102b145: mov [rbx+0x70], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8102b427: and eax, 0x81c26fa8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102c333: ret 0x1e7e;
0xffffffff8102c692: rol byte ptr [rsi+0x415b7efe], cl; pop rsp; pop rbp; ret;
0xffffffff8102c6fd: ret 0x203c;
0xffffffff8102c7ee: add al, [rcx+0x6d7ebe8]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8102c8cb: or eax, 0xc42cf2; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8102cb25: test al, 2; sub eax, 0x7e3b3; leave; ret;
0xffffffff8102cb27: sub eax, 0x7e3b3; leave; ret;
0xffffffff8102cb32: ret 0xdbbc;
0xffffffff8102ce8c: sbb [r15], r9b; xchg esp, eax; ret;
0xffffffff8102ce8d: sbb [rdi], cl; xchg esp, eax; ret;
0xffffffff8102cfd6: mov eax, 7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102cff2: add rsp, 8; movzx eax, al; pop rbx; pop rbp; add eax, 1; ret;
0xffffffff8102cff3: add esp, 8; movzx eax, al; pop rbx; pop rbp; add eax, 1; ret;
0xffffffff8102d04f: shl byte ptr [rbp-0x7c], 0x48; add esp, 8; mov eax, 6; pop rbx; pop rbp; ret;
0xffffffff8102d052: add rsp, 8; mov eax, 6; pop rbx; pop rbp; ret;
0xffffffff8102d053: add esp, 8; mov eax, 6; pop rbx; pop rbp; ret;
0xffffffff8102d0e2: mov esp, 0xf07d8b48; add rsp, 8; mov rax, rdi; pop rbx; pop rbp; ret;
0xffffffff8102d0e3: mov rdi, [rbp-0x10]; add rsp, 8; mov rax, rdi; pop rbx; pop rbp; ret;
0xffffffff8102d0e4: mov edi, [rbp-0x10]; add rsp, 8; mov rax, rdi; pop rbx; pop rbp; ret;
0xffffffff8102d0e7: add rsp, 8; mov rax, rdi; pop rbx; pop rbp; ret;
0xffffffff8102d0e8: add esp, 8; mov rax, rdi; pop rbx; pop rbp; ret;
0xffffffff8102d165: in al, 0x75; rcr dword ptr [rbx+0x41], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8102d167: rcr dword ptr [rbx+0x41], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8102d1b3: ret 0x9ce0;
0xffffffff8102d2bd: add [rbp+0x480e75c0], al; mov [rip+0xe7ca1f], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d2bf: shl byte ptr [rbp+0xe], 0x48; mov [rip+0xe7ca1f], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d2c2: mov [rip+0xe7ca1f], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d2c3: mov [rip+0xe7ca1f], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d2c4: sbb eax, 0xe7ca1f; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d2c7: out 0, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d341: mov esp, eax; lea ebx, [r12+0x280]; mov rdi, rbx; call qword ptr [0xffffffff81c26fa0];
0xffffffff8102d822: ret 0x3c83;
0xffffffff8102d86a: fdiv st(7), st; inc dword ptr [rbp+0x480775c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d8b1: and eax, 0x81c27008; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8102d8e8: add [rdx+rcx-0x7d], esi; clc; add dh, [rsi+0x48]; mov eax, edi; leave; ret;
0xffffffff8102d8ea: or al, [rbx+0x267402f8]; mov rax, rdi; leave; ret;
0xffffffff8102d8ec: clc; add dh, [rsi+0x48]; mov eax, edi; leave; ret;
0xffffffff8102d8ed: add dh, [rsi+0x48]; mov eax, edi; leave; ret;
0xffffffff8102d8ef: mov rax, rdi; leave; ret;
0xffffffff8102d8f0: mov rax, rdi; leave; ret;
0xffffffff8102d8f1: mov eax, edi; leave; ret;
0xffffffff8102d93f: or eax, 0x48ffffff; mov eax, [rbp-8]; leave; ret;
0xffffffff8102d94e: mov eax, 0xfa; leave; ret;
0xffffffff8102d9b1: sub eax, 0x58ba79; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102d9e4: sub eax, 0x7d4f6; leave; ret;
0xffffffff8102da59: sub eax, 0x58b9d1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102dd54: or dword ptr [rax-0x73], 0x415be865; pop rsp; pop r13; pop rbp; ret;
0xffffffff8102e1a8: push rbx; lea rbx, [rbp-0x40]; mov rsi, rbx; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1a9: lea rbx, [rbp-0x40]; mov rsi, rbx; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1aa: lea ebx, [rbp-0x40]; mov rsi, rbx; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1ab: pop rbp; ror byte ptr [rax-0x77], 0xde; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1ac: ror byte ptr [rax-0x77], 0xde; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1ad: mov rsi, rbx; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1ae: mov esi, ebx; sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1b0: sub rsp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e1b1: sub esp, 0x28; mov edi, [rdi+0xc]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8102e896: ret 7;
0xffffffff8102e899: add [rcx+rcx*4-0x20], cl; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102e89a: mov rax, r12; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8102eb81: ret 0xe97e;
0xffffffff8102eff5: add [rax-0x7cf58be0], ebp; leave; and esi, esi; ret 0x4860;
0xffffffff8102eff7: and [rdx+rcx-0x7d], dh; leave; and esi, esi; ret 0x4860;
0xffffffff8102effb: leave; and esi, esi; ret 0x4860;
0xffffffff8102effe: ret 0x4860;
0xffffffff8102f12b: mov esp, esi; shr rbx, 0x20; mov esi, r12d; mov edi, 0xc0000410; mov rdx, rbx; call qword ptr [0xffffffff81c26fa8];
0xffffffff8102f18a: cli; or [rdi], cl; xchg esp, eax; rol byte ptr [rax-0x6bf0fb07], 0xc2; and eax, edx; ret;
0xffffffff8102f18b: or [rdi], cl; xchg esp, eax; rol byte ptr [rax-0x6bf0fb07], 0xc2; and eax, edx; ret;
0xffffffff8102f18d: xchg esp, eax; rol byte ptr [rax-0x6bf0fb07], 0xc2; and eax, edx; ret;
0xffffffff8102f190: stc; add al, 0xf; xchg esp, eax; ret 0xd021;
0xffffffff8102f191: add al, 0xf; xchg esp, eax; ret 0xd021;
0xffffffff8102f1b3: or cl, [rdi]; xchg esp, eax; rol byte ptr [rdx+rdx*8+0x21c2940f], 0xd0; ret;
0xffffffff8102f1b5: xchg esp, eax; rol byte ptr [rdx+rdx*8+0x21c2940f], 0xd0; ret;
0xffffffff8102f1b8: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xd021;
0xffffffff8102f755: ret 0x4eb8;
0xffffffff8102f8fe: cmpsb [rsi], [rdi]; add esp, eax; add [rdx+4], dh; xor eax, eax; pop rbp; ret;
0xffffffff8102f93e: add sp, ax; add [rdx+4], dh; xor eax, eax; pop rbp; ret;
0xffffffff8102f97e: add esp, eax; add [rdx+4], dh; xor eax, eax; pop rbp; ret;
0xffffffff8102f97f: add esp, eax; add [rdx+4], dh; xor eax, eax; pop rbp; ret;
0xffffffff8102fa91: ret 0xeb6f;
0xffffffff8102fe0a: ret 0x24f8;
0xffffffff810300f9: ret 0xeb91;
0xffffffff81030239: mov bh, 0x48; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8103093f: ret 0x7b80;
0xffffffff81030968: nop; or [rax], al; leave; ret;
0xffffffff81030969: or [rax], al; leave; ret;
0xffffffff81030a3d: or [rax], al; mov byte ptr [rip+0xe7b13a], 0; leave; ret;
0xffffffff81030a3f: mov byte ptr [rip+0xe7b13a], 0; leave; ret;
0xffffffff81030a42: mov cl, 0xe7; add [rax], al; leave; ret;
0xffffffff81031645: push rbx; sub rsp, 0x10; mov eax, gs:[rip+0x7efddadf]; lea ebx, [rdi+rdi+0x200]; lea edi, [rbx+1]; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031646: sub rsp, 0x10; mov eax, gs:[rip+0x7efddadf]; lea ebx, [rdi+rdi+0x200]; lea edi, [rbx+1]; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031647: sub esp, 0x10; mov eax, gs:[rip+0x7efddadf]; lea ebx, [rdi+rdi+0x200]; lea edi, [rbx+1]; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031664: or [rdi], cl; test [rcx+0x49000000], al; mov esp, eax; mov edi, ebx; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031666: test [rcx+0x49000000], al; mov esp, eax; mov edi, ebx; call qword ptr [0xffffffff81c26fa0];
0xffffffff8103166c: mov esp, eax; mov edi, ebx; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031a72: mov esp, esi; push rbx; mov rbx, rdx; call qword ptr [0xffffffff81c26fb8];
0xffffffff81031ae1: outsd dx, [rsi]; leave; ret;
0xffffffff81031bb0: push r12; mov r12, rdx; push rbx; mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81031bb1: push rsp; mov r12, rdx; push rbx; mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81031bb2: mov r12, rdx; push rbx; mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81031bb3: mov esp, edx; push rbx; mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81031bb5: push rbx; mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81031ca6: push r14; push r13; push r12; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031ca7: push rsi; push r13; push r12; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031ca8: push r13; push r12; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031ca9: push rbp; push r12; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031caa: push r12; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031cab: push rsp; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031cac: push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031cad: sub rsp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031cae: sub esp, 0x10; call qword ptr [0xffffffff81c27000];
0xffffffff81031ed3: mov esp, [rdi]; add r14, 8; add r12d, ebx; mov edi, r12d; call qword ptr [0xffffffff81c26fa0];
0xffffffff81031eda: add esp, ebx; mov edi, r12d; call qword ptr [0xffffffff81c26fa0];
0xffffffff810322e7: mov dword ptr [rbx-0x7e1533b4], 1; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810322ec: add dword ptr [rcx], 0x48000000; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81032321: xor eax, eax; cmp dword ptr [rbp-4], 4; sete al; leave; ret;
0xffffffff81032323: cmp dword ptr [rbp-4], 4; sete al; leave; ret;
0xffffffff810323ba: cmp dword ptr [rbx-1], 0xffff6be8; inc dword ptr [rbp-0x76f88b40]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810323c1: imul edi, 0xffffffff; inc dword ptr [rbp-0x76f88b40]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810323c4: inc dword ptr [rbp-0x76f88b40]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81032460: fucomip st, st(0); sbb cl, [rdi+0xe]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81032462: sbb cl, [rdi+0xe]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81032568: fild st, dword ptr [rbp-0x76f68b40]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81032b9a: xor dword ptr [rbp-0x3b], 0x8948db31; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81032b9c: vpand xmm9, xmm9, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810338b6: ret 0x300f;
0xffffffff810339a6: ficomp st, word ptr [rax-0x3714ff19]; leave; ret;
0xffffffff81033ddd: xchg esp, eax; out 0, eax; pop rbp; ret;
0xffffffff81033e50: xchg esp, eax; out 0, eax; setae al; pop rbp; movzx eax, al; ret;
0xffffffff81033ffa: ret 0x7b;
0xffffffff810340e1: test al, 0x31; rol byte ptr [rcx-0x7d], cl; cld; add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff810340e3: rol byte ptr [rcx-0x7d], cl; cld; add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff810340e6: cld; add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff810340e7: add [rdi], ecx; xchg esp, eax; ret 0x8341;
0xffffffff810341b5: add [rdi], cl; xchg esp, eax; ret 0xc931;
0xffffffff810341b7: xchg esp, eax; ret 0xc931;
0xffffffff8103423f: ret 0xf140;
0xffffffff8103434a: ret 0x6f2;
0xffffffff81034930: lea rdx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034931: lea edx, [rbp-0x10]; lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034934: lea rcx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034935: lea ecx, [rbp-0xc]; sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034937: hlt; sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034938: sub rsp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034939: sub esp, 0x10; mov dword ptr [rbp-0x18], 5; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034996: ret 0x8d2;
0xffffffff8103499f: add al, ch; fld st, tbyte ptr [rbx-0x3fceffa9]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810349a1: fld st, tbyte ptr [rbx-0x3fceffa9]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81034b3d: lea rdx, [rbp-0x14]; lea rcx, [rbp-0x10]; sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b3e: lea edx, [rbp-0x14]; lea rcx, [rbp-0x10]; sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b40: in al, dx; lea rcx, [rbp-0x10]; sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b41: lea rcx, [rbp-0x10]; sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b42: lea ecx, [rbp-0x10]; sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b45: sub rsp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034b46: sub esp, 0x18; mov dword ptr [rbp-0x1c], 1; mov dword ptr [rbp-0x14], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81034bb4: and eax, 0x81c27008; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81034e8a: ret 0x57b4;
0xffffffff81034f2a: dec dword ptr [rdi]; add esp, eax; call qword ptr [0xffffffff81c27000];
0xffffffff81034f82: ret 0xe793;
0xffffffff810350f6: and [rbp+0xf], dh; add esp, eax; call qword ptr [0xffffffff81c27000];
0xffffffff810350f8: in eax, 0xf; add esp, eax; call qword ptr [0xffffffff81c27000];
0xffffffff8103533d: and [rsp+rax*2+0xf], dh; add esp, eax; call qword ptr [0xffffffff81c27000];
0xffffffff81035341: add esp, eax; call qword ptr [0xffffffff81c27000];
0xffffffff8103538c: rcl dh, 1; add [rax], eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8103538e: add [rax], eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810356a0: ret 0xf020;
0xffffffff810357c7: ret 0x56;
0xffffffff810358ba: ret 0x1e4e;
0xffffffff810358c6: ret 0x7974;
0xffffffff81035b8b: xor eax, 0x415b81b6; pop rsp; mov [rip+0xc34960], rax; pop rbp; ret;
0xffffffff81035b90: pop rsp; mov [rip+0xc34960], rax; pop rbp; ret;
0xffffffff81035daa: ret 0x7c;
0xffffffff81035fd1: ret 0x3181;
0xffffffff810361b0: ret 0x3975;
0xffffffff81036893: ret 0x501;
0xffffffff81036cda: ret 0xe39c;
0xffffffff8103766a: ret 0xb2;
0xffffffff8103816d: adc [rax], al; add [rcx-0x76348a3d], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8103816f: add [rcx-0x76348a3d], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810385de: data16 ret 0xff81;
0xffffffff81038615: data16 ret 0x4d81;
0xffffffff810386b0: data16 ret 0x8981;
0xffffffff8103873a: ret 0x7c98;
0xffffffff81038beb: or dh, 4; cmp esi, 2; cmovne edx, eax; mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bed: add al, 0x83; inc byte ptr [rdx]; cmovne edx, eax; mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bee: cmp esi, 2; cmovne edx, eax; mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bef: inc byte ptr [rdx]; cmovne edx, eax; mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bf1: cmovne edx, eax; mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bf4: mov [0xffffffffff5fd300], edx; leave; ret;
0xffffffff81038bf6: and eax, 0xff5fd300; leave; ret;
0xffffffff81038bf8: rcr dword ptr [rdi-1], cl; leave; ret;
0xffffffff81038cfd: push r12; push rbx; mov rbx, rdi; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038cfe: push rsp; push rbx; mov rbx, rdi; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038cff: push rbx; mov rbx, rdi; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d00: mov rbx, rdi; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d01: mov ebx, edi; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d02: sti; sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d03: sub rsp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d04: sub esp, 8; mov r12d, gs:[rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d05: in al, dx; or [rbp+0x44], ah; mov esp, [rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d06: or [rbp+0x44], ah; mov esp, [rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038d09: mov esp, [rip+0x7efd6421]; call qword ptr [0xffffffff81c27000];
0xffffffff81038fa0: or dword ptr [rax-0x77], 0x415b2042; pop rsp; pop r13; pop rbp; ret;
0xffffffff810392c3: imul eax, [rcx], 0x415b0058; pop rsp; pop r13; pop rbp; ret;
0xffffffff81039846: inc esi; add eax, 0xe75c4a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039848: add eax, 0xe75c4a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8103984a: pop rsp; out 0, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039bb4: rcr dword ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff81039cf2: inc esi; add eax, 0xe7579e; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039cf4: add eax, 0xe7579e; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039cf6: push rdi; out 0, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039d5f: add eax, 0xe75733; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81039d62: out 0, eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81039e17: ret 0x9dd0;
0xffffffff81039e6d: pop rsp; shl rdx, 0x20; pop r13; pop rbp; or rax, rdx; ret;
0xffffffff81039f5b: push rdi; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81039fe8: or dword ptr [rax-0x77], 0xf43fe8c6; push rdi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81039fee: hlt; push rdi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8103a046: ret 0x203;
0xffffffff8103a49a: sbb al, 0xf; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r13; pop rbp; ret;
0xffffffff8103a751: ret 0x2eae;
0xffffffff8103a912: test [rcx], dl; sbb eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8103a914: sbb eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8103aa39: add [rax+0x29], cl; fmul st, dword ptr [rcx+0x415b4050]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8103aa3c: fmul st, dword ptr [rcx+0x415b4050]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8103ab04: and cl, [rcx+0x415b1042]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8103afaf: or ecx, [rax+0x3b]; adc [rbp-0xe], dh; mov rbx, [rbp-8]; leave; ret;
0xffffffff8103afb2: adc [rbp-0xe], dh; mov rbx, [rbp-8]; leave; ret;
0xffffffff8103afd4: add [rax+rax], al; add [rdi], cl; test [rbp+0x48000014], bh; mov ebx, [rbp-8]; leave; ret;
0xffffffff8103afd5: add al, 0; add [rdi], cl; test [rbp+0x48000014], bh; mov ebx, [rbp-8]; leave; ret;
0xffffffff8103afd7: add [rdi], cl; test [rbp+0x48000014], bh; mov ebx, [rbp-8]; leave; ret;
0xffffffff8103afd9: test [rbp+0x48000014], bh; mov ebx, [rbp-8]; leave; ret;
0xffffffff8103afda: mov ebp, 0x48000014; mov ebx, [rbp-8]; leave; ret;
0xffffffff8103afdb: adc al, 0; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff8103b1c9: adc edi, [rbx+0x415b0057]; pop rsp; pop rbp; ret;
0xffffffff8103b1ca: mov ebx, 0x415b0057; pop rsp; pop rbp; ret;
0xffffffff8103b1cb: push rdi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8103b2f6: ret 0x1538;
0xffffffff8103b3b3: ret 0xf501;
0xffffffff8103b9c7: ret 0xf7a0;
0xffffffff8103ba00: ret 0xe8d0;
0xffffffff8103bdd9: ret 0x1531;
0xffffffff8103c2cc: ret 0x5225;
0xffffffff8103c346: ret 0x2eb8;
0xffffffff8103c397: ret 0x2d20;
0xffffffff8103cc70: ror byte ptr [rdi], 0x85; xchg esp, eax; add [rax], eax; add [rcx+0x558941d0], cl; add [rax+0x39], cl; ret 0x840f;
0xffffffff8103cc73: xchg esp, eax; add [rax], eax; add [rcx+0x558941d0], cl; add [rax+0x39], cl; ret 0x840f;
0xffffffff8103d308: pop rsp; out 0, ax; mov eax, [rax+0xf0]; mov eax, eax; pop rbp; ret;
0xffffffff8103d3a2: ret 0xe765;
0xffffffff8103dcfa: shr eax, cl; and eax, 0xf; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8103dcfc: and eax, 0xf; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8103de17: ret 0x3978;
0xffffffff8103e521: mov ah, 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8103e833: mov [rax], al; add [rax], al; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff8103e835: add [rax], al; add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff8103e837: add ecx, [rdi]; xchg esp, eax; ret;
0xffffffff8103e8a4: and eax, 0x81c26f98; mov eax, [rbp-0x10]; leave; ret;
0xffffffff8103e8a9: mov eax, [rbp-0x10]; leave; ret;
0xffffffff8103eb24: and eax, 0x81c26f98; mov eax, [rbp-4]; leave; ret;
0xffffffff8103eb63: ret 0x5208;
0xffffffff8103f0f6: in al, dx; adc [rbp+0xf0575f6], al; add dh, dl; leave; ret;
0xffffffff8103f0f7: adc [rbp+0xf0575f6], al; add dh, dl; leave; ret;
0xffffffff8103f0f9: div byte ptr [rbp+5]; lldt si; leave; ret;
0xffffffff8103f0fc: lldt si; leave; ret;
0xffffffff8103f0fd: add dh, dl; leave; ret;
0xffffffff8103f162: add [rax+0x14fff745], cl; and eax, 0x81c26f58; mov eax, 0x50; lldt ax; leave; ret;
0xffffffff8103f168: and eax, 0x81c26f58; mov eax, 0x50; lldt ax; leave; ret;
0xffffffff8103f16d: mov eax, 0x50; lldt ax; leave; ret;
0xffffffff8103f16e: push rax; add [rax], al; add [rdi], cl; add al, dl; leave; ret;
0xffffffff8103f16f: add [rax], al; add [rdi], cl; add al, dl; leave; ret;
0xffffffff8103f170: add [rax], al; lldt ax; leave; ret;
0xffffffff8103f171: add [rdi], cl; add al, dl; leave; ret;
0xffffffff8103f172: lldt ax; leave; ret;
0xffffffff8103f173: add al, dl; leave; ret;
0xffffffff8103f1c1: mov eax, 0x40; ltr ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8103f1c4: add [rax], al; ltr ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8103f1c5: add [rdi], cl; add al, bl; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8103f1c6: ltr ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8103f1c7: add al, bl; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8103f33e: mov [rsp+0x148], rax; mov rax, [rip+0xbe7cdb]; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f33f: mov [rsp+0x148], eax; mov rax, [rip+0xbe7cdb]; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f344: add [rax], al; mov rax, [rip+0xbe7cdb]; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f345: add [rax-0x75], cl; add eax, 0xbe7cdb; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f346: mov rax, [rip+0xbe7cdb]; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f347: mov eax, [rip+0xbe7cdb]; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f348: add eax, 0xbe7cdb; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f349: fstp tbyte ptr [rsi+rdi*4], st; mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f34d: mov [rsp+0x150], rax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f34e: mov [rsp+0x150], eax; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f34f: test [rax+rdx*2], ah; add [rax], eax; add [rax-0x75], cl; add al, 0xd4; leave; ret;
0xffffffff8103f350: and al, 0x50; add [rax], eax; add [rax-0x75], cl; add al, 0xd4; leave; ret;
0xffffffff8103f351: push rax; add [rax], eax; add [rax-0x75], cl; add al, 0xd4; leave; ret;
0xffffffff8103f352: add [rax], eax; add [rax-0x75], cl; add al, 0xd4; leave; ret;
0xffffffff8103f353: add [rax], al; mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f354: add [rax-0x75], cl; add al, 0xd4; leave; ret;
0xffffffff8103f355: mov rax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f356: mov eax, [rsp+rdx*8]; leave; ret;
0xffffffff8103f357: add al, 0xd4; leave; ret;
0xffffffff8103f36f: leave; add cl, ch; mov sil, 0xc9; add [rax-0x39], cl; ret 0xc956;
0xffffffff8103f3cc: or al, 0xb6; leave; add cl, ch; sbb [rsi-0x38b7ff37], esi; ret 0xc956;
0xffffffff8103f3ce: leave; add cl, ch; sbb [rsi-0x38b7ff37], esi; ret 0xc956;
0xffffffff8103f3d3: leave; add [rax-0x39], cl; ret 0xc956;
0xffffffff8103f3d7: ret 0xc956;
0xffffffff8103f3dc: add rdx, gs:[rip+0x7efcfd54]; add eax, 1; movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3dd: add rdx, [rip+0x7efcfd54]; add eax, 1; movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3de: add edx, [rip+0x7efcfd54]; add eax, 1; movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3df: adc eax, 0x7efcfd54; add eax, 1; movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3e4: add eax, 1; movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3e5: rol byte ptr [rcx], 0xf; mov bh, 0xc0; bts [rdx], rax; leave; ret;
0xffffffff8103f3e6: add [rdi], ecx; mov bh, 0xc0; bts [rdx], rax; leave; ret;
0xffffffff8103f3e7: movzx eax, ax; bts [rdx], rax; leave; ret;
0xffffffff8103f3e8: mov bh, 0xc0; bts [rdx], rax; leave; ret;
0xffffffff8103f3ea: bts [rdx], rax; leave; ret;
0xffffffff8103f3eb: bts [rdx], eax; leave; ret;
0xffffffff8103f3fe: movzx eax, ax; mov [rsp], rax; xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f3ff: mov bh, 0xc0; mov [rsp], rax; xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f401: mov [rsp], rax; xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f402: mov [rsp], eax; xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f403: add al, 0x24; xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f405: xor eax, eax; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f439: mov rcx, rsp; mov eax, 2; mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f43a: mov ecx, esp; mov eax, 2; mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f43c: mov eax, 2; mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f43d: add al, [rax]; add [rax], al; mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f43f: add [rax], al; mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f441: mov qword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f442: mov dword ptr [rsp+8], 0; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f444: and al, 8; add [rax], al; add [rax], al; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f446: add [rax], al; add [rax], al; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f448: add [rax], al; invpcid rax, [rcx]; leave; ret;
0xffffffff8103f44a: invpcid rax, [rcx]; leave; ret;
0xffffffff8103f7da: ret 0xf7ca;
0xffffffff8103f7fa: ret 0xf7cc;
0xffffffff8103f842: ret 0xf7b1;
0xffffffff8103f870: ret 0xf7bc;
0xffffffff8103f8a7: ret 0xf7b4;
0xffffffff8103f8cc: ret 0xf7bf;
0xffffffff8103f91f: ret 0xf7c1;
0xffffffff8103f932: ret 0xf7b6;
0xffffffff8103f945: ret 0xf7b2;
0xffffffff8103fa62: mov [0x975c2394800e775], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8103fa76: ret 0xf272;
0xffffffff8104008c: add [rbp+0x480975c0], al; sub esp, 0xffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8104008e: shl byte ptr [rbp+9], 0x48; sub esp, 0xffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff810400b5: ret 0x4358;
0xffffffff810400c0: sub eax, 0xfffffeca; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8104025a: ret 0x43b8;
0xffffffff81040291: ret 0x4378;
0xffffffff81040a02: add edi, 3; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81040b08: imul eax; or [rdx+4], esp; add [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff81040b0a: or [rdx+4], esp; add [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff81040b0d: add [rbp-0x7b], cl; dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff81040e91: mov esp, [rcx-0x19]; add [rbx+0x5d], bl; ret;
0xffffffff810410c2: add [rbx+0x41], bl; pop rsp; setb al; pop rbp; add eax, eax; ret;
0xffffffff810410c5: pop rsp; setb al; pop rbp; add eax, eax; ret;
0xffffffff81041203: ret 0x6681;
0xffffffff810417e8: add [rbp-0x3a], ah; add eax, 0x7efdb164; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff810417eb: add eax, 0x7efdb164; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104213d: xchg [rdi+0x49000001], bh; mov esp, edi; shr r12, 0x24; and r12d, 0xff8; call qword ptr [0xffffffff81b63b10];
0xffffffff8104213e: mov edi, 0x49000001; mov esp, edi; shr r12, 0x24; and r12d, 0xff8; call qword ptr [0xffffffff81b63b10];
0xffffffff81042143: mov esp, edi; shr r12, 0x24; and r12d, 0xff8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424f6: push r13; push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424f7: push rbp; push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424f8: push r12; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424f9: push rsp; mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424fa: mov r12, rdi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424fb: mov esp, edi; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424fc: cld; push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424fd: push rbx; sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424fe: sub rsp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810424ff: sub esp, 8; call qword ptr [0xffffffff81b63b10];
0xffffffff810428a4: cli; or eax, 0x80c0940f; cli; sbb [rdi], cl; xchg esp, eax; ret 0xd009;
0xffffffff810428a5: or eax, 0x80c0940f; cli; sbb [rdi], cl; xchg esp, eax; ret 0xd009;
0xffffffff810428aa: cli; sbb [rdi], cl; xchg esp, eax; ret 0xd009;
0xffffffff810428ab: sbb [rdi], cl; xchg esp, eax; ret 0xd009;
0xffffffff810429a5: add [rax], eax; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff81042f6e: ret 0x3ba;
0xffffffff81042f77: ret 0xb774;
0xffffffff81043044: sub bh, dh; or [rax], al; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81043046: or [rax], al; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81043567: mov esp, edi; push rbx; mov rbx, rsi; call qword ptr [0xffffffff81b63b00];
0xffffffff81043b97: movsd [rdi], [rsi]; out 0xc, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81043b98: out 0xc, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81043c4d: in eax, 0xe8; insd [rdi], dx; xchg esp, eax; or [rax], al; pop rbp; ret;
0xffffffff81043c4f: insd [rdi], dx; xchg esp, eax; or [rax], al; pop rbp; ret;
0xffffffff81043c50: xchg esp, eax; or [rax], al; pop rbp; ret;
0xffffffff81043dbc: ret 0x63d5;
0xffffffff81043f64: add [rbx+0x41], bl; pop rsp; movzx eax, al; pop rbp; ret;
0xffffffff810441d0: sub rsp, 0x18; mov [rbp-0x30], rdx; mov rdx, rax; mov rdi, [r8]; and edx, 0xff8; call qword ptr [0xffffffff81b63c00];
0xffffffff810441d1: sub esp, 0x18; mov [rbp-0x30], rdx; mov rdx, rax; mov rdi, [r8]; and edx, 0xff8; call qword ptr [0xffffffff81b63c00];
0xffffffff8104434d: mov esp, ecx; and edx, 0xff8; call qword ptr [0xffffffff81b63c10];
0xffffffff81044630: mov esp, esi; push rbx; mov rdi, [rsi]; call qword ptr [0xffffffff81b63c00];
0xffffffff81044ff4: add eax, 0xe728be; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810451c7: add dh, [rcx]; leave; mov rax, rcx; pop rbp; ret;
0xffffffff810451c9: leave; mov rax, rcx; pop rbp; ret;
0xffffffff810451cc: enter 0xc35d, 0x31; leave; mov rax, rcx; ret;
0xffffffff81045272: add rsp, 8; and rax, rdi; or rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81045273: add esp, 8; and rax, rdi; or rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81045301: ret 0xe381;
0xffffffff81045308: add rsp, 8; and rax, rcx; or rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81045309: add esp, 8; and rax, rcx; or rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810455d0: cmove esp, eax; and rbx, rdi; call qword ptr [0xffffffff81b63c10];
0xffffffff81045ebe: mov esp, ebp; mov rdi, rbx; call qword ptr [0xffffffff81b63bd8];
0xffffffff8104647a: ret 0xbef0;
0xffffffff8104650a: data16 ret 0;
0xffffffff8104659d: pop rsi; xchg esp, eax; ret 0;
0xffffffff81046810: xchg esp, eax; add [rax+0x72], ah; ret 0xe881;
0xffffffff81046d46: dec dword ptr [rax-0x75]; pop rbp; clc; pop rdx; leave; ret;
0xffffffff81047184: and eax, 0x81b63b38; add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81047194: and eax, 0x81b63b40; add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81047197: mov dh, 0x81; add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81047359: and [r11+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8104755a: leave; setne al; and eax, edx; ret;
0xffffffff8104764a: mov edx, [rbp-8]; xor eax, eax; leave; test edx, edx; setne al; ret;
0xffffffff8104764c: clc; xor eax, eax; leave; test edx, edx; setne al; ret;
0xffffffff8104764d: xor eax, eax; leave; test edx, edx; setne al; ret;
0xffffffff8104764f: leave; test edx, edx; setne al; ret;
0xffffffff810476cc: add [rbx+0x41], bl; pop rsp; setne al; pop rbp; lea eax, [rax+rax+2]; ret;
0xffffffff810476cf: pop rsp; setne al; pop rbp; lea eax, [rax+rax+2]; ret;
0xffffffff810476ef: ret 0x2b8;
0xffffffff810476fb: sbb sil, al; add eax, 0xe701ec; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810476fc: sbb dh, al; add eax, 0xe701ec; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810476fe: add eax, 0xe701ec; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81047701: out 0, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810478fc: ret 0x3c00;
0xffffffff81047987: add eax, 0xc6fffffc; add eax, 0xc280f1; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104798a: inc esi; add eax, 0xc280f1; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104798c: add eax, 0xc280f1; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104798d: int1; add dl, 0; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104798e: add dl, 0; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8104799c: ret 0x600;
0xffffffff8104806b: xchg esp, eax; adc ah, [rax+0x72]; ret 0x4881;
0xffffffff81048611: xchg esp, eax; add [rax+0x72], ah; ret 0xe981;
0xffffffff81048717: out dx, eax; or al, 0x49; mov esp, edi; shl r12, 6; add r12, [rip+0xb18449]; call qword ptr [0xffffffff81b63b98];
0xffffffff81048718: or al, 0x49; mov esp, edi; shl r12, 6; add r12, [rip+0xb18449]; call qword ptr [0xffffffff81b63b98];
0xffffffff8104871a: mov esp, edi; shl r12, 6; add r12, [rip+0xb18449]; call qword ptr [0xffffffff81b63b98];
0xffffffff81048e41: push rbx; sub rsp, 0x18; mov [rbp-0x30], rdi; mov rdi, rdx; mov [rbp-0x38], rsi; call qword ptr [0xffffffff81b63c10];
0xffffffff81048e42: sub rsp, 0x18; mov [rbp-0x30], rdi; mov rdi, rdx; mov [rbp-0x38], rsi; call qword ptr [0xffffffff81b63c10];
0xffffffff81048e43: sub esp, 0x18; mov [rbp-0x30], rdi; mov rdi, rdx; mov [rbp-0x38], rsi; call qword ptr [0xffffffff81b63c10];
0xffffffff81048fb9: mov esp, esi; push rbx; call qword ptr [0xffffffff81b63c00];
0xffffffff81049204: mov esp, edi; mov r13, 0xffffffff81c6e440; mov rdi, rbx; call qword ptr [0xffffffff81b63b48];
0xffffffff81049213: cmp rsi, [rsi+0x18e0e981]; leave; add [rbp-0x3a], ah; add eax, 0x7efd3731; add [rax-0x7f], ecx; ret;
0xffffffff81049214: cmp esi, [rsi+0x18e0e981]; leave; add [rbp-0x3a], ah; add eax, 0x7efd3731; add [rax-0x7f], ecx; ret;
0xffffffff8104921a: leave; add [rbp-0x3a], ah; add eax, 0x7efd3731; add [rax-0x7f], ecx; ret;
0xffffffff81049373: ret 0xc940;
0xffffffff8104952d: leave; add [rax-0x39], cl; ret 0xc960;
0xffffffff81049552: ret 0x6610;
0xffffffff810497f7: leave; add [rcx], dh; ror byte ptr [rax-0x39], cl; mov byte ptr [rax], 0x55; ret;
0xffffffff81049830: mov esp, [rip+0xbebf9a]; call qword ptr [0xffffffff81b63b10];
0xffffffff81049878: ret 0xa900;
0xffffffff81049a46: and eax, 0x81b63b50; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81049a47: push rax; cmp esi, [rsi-0x3b7cb77f]; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81049a48: cmp esi, [rsi-0x3b7cb77f]; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81049a49: mov dh, 0x81; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81049a4a: or dword ptr [rax-0x7d], 0x415b20c4; pop rsp; pop rbp; ret;
0xffffffff81049ae1: sub eax, 0x613f9; leave; ret;
0xffffffff81049b70: mov qword ptr [rbx], 0; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81049b71: mov dword ptr [rbx], 0; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81049c3d: ret 0xf600;
0xffffffff81049cbc: ret 0x7700;
0xffffffff81049d6c: ret 0x7900;
0xffffffff81049ea7: pop rsp; mov rax, rcx; pop r13; pop rbp; ret;
0xffffffff8104a33b: ret 0x9d20;
0xffffffff8104a877: cmp al, [rax]; add [rdi], cl; or ecx, [rax-0x75]; clc; leave; ret;
0xffffffff8104a879: add [rdi], cl; or ecx, [rax-0x75]; clc; leave; ret;
0xffffffff8104ab39: ret 0x2149;
0xffffffff8104aea9: fimul st, dword ptr [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8104b00e: adc [rbx+0x97f01fa], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b011: add [rdi+9], edi; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b29d: mov rax, rbx; mov qword ptr [rbx+0x368], 0xffffffff81c2b4c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b29e: mov eax, ebx; mov qword ptr [rbx+0x368], 0xffffffff81c2b4c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b2a0: mov qword ptr [rbx+0x368], 0xffffffff81c2b4c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b2a1: mov dword ptr [rbx+0x368], 0x81c2b4c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8104b791: dec dword ptr [rcx-0x73]; xchg esp, eax; and al, 0x88; add [rax], al; add [rax+0x39], cl; ret 0x4674;
0xffffffff8104b794: xchg esp, eax; and al, 0x88; add [rax], al; add [rax+0x39], cl; ret 0x4674;
0xffffffff8104bfbe: ret 0xff00;
0xffffffff8104d57b: add al, [rax]; mov rax, [rbp-0x10]; mov rbx, [rbp-8]; leave; ret;
0xffffffff8104d57d: mov rax, [rbp-0x10]; mov rbx, [rbp-8]; leave; ret;
0xffffffff8104d57e: mov eax, [rbp-0x10]; mov rbx, [rbp-8]; leave; ret;
0xffffffff8104d6e9: ret 0x7938;
0xffffffff8104dda0: mov qword ptr [r12], 0; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8104dda1: mov dword ptr [rsp], 0; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8104de35: mov [rip+0xe69aed], eax; xor eax, eax; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8104de36: add eax, 0xe69aed; xor eax, eax; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8104de39: out 0, al; xor eax, eax; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8104dfa8: mov ah, 0x56; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8104dfa9: push rsi; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8104e10d: ret 0x7f40;
0xffffffff8104e3c4: test al, 0x62; add eax, [rax]; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8104e3c6: add eax, [rax]; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8104e4c3: ret 0x79c0;
0xffffffff8104e941: ret 0x7ded;
0xffffffff8104ed85: fild st, word ptr [rdx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8104f213: ret 0x7300;
0xffffffff8104f26f: push rbp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8104f480: xchg esp, eax; ret 0x5381;
0xffffffff8104f61a: ret 0x5676;
0xffffffff8104ff1f: insd [rdi], dx; push rsi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8104ff6e: xchg esp, eax; ret 0x4981;
0xffffffff8105009d: xchg esp, eax; ret 0x4181;
0xffffffff81050145: xchg esp, eax; ret 0x4881;
0xffffffff810501c8: xchg esp, eax; ret 0x8981;
0xffffffff8105025d: cmp eax, 0x8948002e; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810503c4: xchg esp, eax; ret 0x8381;
0xffffffff810517a6: ret 0x4874;
0xffffffff81052140: ret 0xdb74;
0xffffffff8105215b: add al, 0x74; sbb [rcx-0x75], al; pop rsp; and al, 0x60; mov byte ptr [r14+0x808], 0; call qword ptr [0xffffffff81c27018];
0xffffffff8105215d: sbb [rcx-0x75], al; pop rsp; and al, 0x60; mov byte ptr [r14+0x808], 0; call qword ptr [0xffffffff81c27018];
0xffffffff81052160: pop rsp; and al, 0x60; mov byte ptr [r14+0x808], 0; call qword ptr [0xffffffff81c27018];
0xffffffff81052520: or dword ptr [rax-0x77], 0x415b605b; pop rsp; pop rbp; ret;
0xffffffff8105287a: ret 0xfc2a;
0xffffffff81052d32: ret 0x4030;
0xffffffff81052eef: pop rsp; sete al; pop r13; pop r14; pop rbp; ret;
0xffffffff81052ef1: xchg esp, eax; rol byte ptr [rcx+0x5d], 0x41; pop rsi; pop rbp; ret;
0xffffffff81052fe7: add eax, 0xe64f23; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81052ffe: add eax, 0xe64f0c; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81053140: ret 0x5b74;
0xffffffff81053198: ret 0xdd76;
0xffffffff81053a0c: ret 0x3030;
0xffffffff81053a83: inc esi; add eax, 0xe64485; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81053a85: add eax, 0xe64485; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81053a86: test [rsi], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81053c4c: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol bl, 0x66; nop [rax+rax]; nop [rax]; ret;
0xffffffff81053d99: ret 0x5977;
0xffffffff81054122: cmp eax, 0x415b00e6; pop rsp; pop rbp; ret;
0xffffffff81054153: inc esi; add eax, 0xe63db5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81054155: add eax, 0xe63db5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81054156: mov ch, 0x3d; out 0, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81054158: out 0, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810541c0: add eax, 0xe63d4a; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810541c3: out 0, al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810542ac: cmp al, 0xe6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81054437: ret 0xe3e8;
0xffffffff8105466c: shl byte ptr [rbx+rcx-0x7d], 0xf8; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff810550e4: ret 0x4490;
0xffffffff81055505: ret 0xe8;
0xffffffff81055506: ret 0xe8;
0xffffffff81055516: mov eax, [rbp-0x14]; leave; ret;
0xffffffff8105553c: mov al, [0xfffffb3be8810545]; leave; ret;
0xffffffff8105553f: sub eax, 0xfffffb3b; leave; ret;
0xffffffff8105556c: mov al, [0xfffffb0be8810548]; leave; ret;
0xffffffff8105556f: sub eax, 0xfffffb0b; leave; ret;
0xffffffff8105559c: adc [rcx+5], cl; sub eax, 0xfffffadb; leave; ret;
0xffffffff8105559f: sub eax, 0xfffffadb; leave; ret;
0xffffffff8105591c: add [rsi+5], al; sub eax, 0xfffffd9b; leave; ret;
0xffffffff8105591f: sub eax, 0xfffffd9b; leave; ret;
0xffffffff8105594c: rol byte ptr [rbx+5], 1; sub eax, 0xfffffd6b; leave; ret;
0xffffffff8105594f: sub eax, 0xfffffd6b; leave; ret;
0xffffffff81055ecb: ret 0x3304;
0xffffffff81055faf: add rsp, 0x50; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81055fb0: add esp, 0x50; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81056325: cmp [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff81056491: add [rax-0x68], cl; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81056492: cdqe; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81056493: cwde; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff810564df: movsxd rax, r12d; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff810564e0: movsxd eax, esp; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff810566cf: out 0xe8, eax; fild st, dword ptr [rsi+0x415b0018]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810566d1: fild st, dword ptr [rsi+0x415b0018]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810566d2: xchg [rax], bl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810576bd: clc; or [rdi], cl; xchg esp, eax; ret;
0xffffffff810576be: or [rdi], cl; xchg esp, eax; ret;
0xffffffff81057888: add al, 0; add [rcx-0x7d], cl; cld; adc [rdi], cl; xchg esp, eax; ret 0x8149;
0xffffffff8105788a: add [rcx-0x7d], cl; cld; adc [rdi], cl; xchg esp, eax; ret 0x8149;
0xffffffff8105788d: cld; adc [rdi], cl; xchg esp, eax; ret 0x8149;
0xffffffff8105788e: adc [rdi], cl; xchg esp, eax; ret 0x8149;
0xffffffff810578a2: test [rax+rax-0x7cb70000], ebp; cld; or [rax-0x39], cl; mov eax, 0xf81c050; xchg esp, eax; ret 0x8149;
0xffffffff810578a6: add [rcx-0x7d], cl; cld; or [rax-0x39], cl; mov eax, 0xf81c050; xchg esp, eax; ret 0x8149;
0xffffffff810578a9: cld; or [rax-0x39], cl; mov eax, 0xf81c050; xchg esp, eax; ret 0x8149;
0xffffffff810578aa: or [rax-0x39], cl; mov eax, 0xf81c050; xchg esp, eax; ret 0x8149;
0xffffffff810578ad: mov eax, 0xf81c050; xchg esp, eax; ret 0x8149;
0xffffffff810578b3: xchg esp, eax; ret 0x8149;
0xffffffff81057b70: leave; add [rax], al; add [rcx-0x77], al; iretd;
0xffffffff81057cfa: ret 0xc;
0xffffffff81057de0: leave; cmp eax, 8; sete al; movzx eax, al; lea eax, [rax+rax*4-5]; ret;
0xffffffff81057f41: lahf; or eax, [rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81057f42: or eax, [rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81058039: add esp, esi; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff81058642: ret 0x2073;
0xffffffff810586e8: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81058b29: add [rcx+0x1b87443], ecx; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81058c22: or cl, [rax]; push rsi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81058c84: test al, 7; push rsi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81058ccd: ret 0x808;
0xffffffff81059135: ret 0xd375;
0xffffffff81059208: add [rcx-0x73], cl; xchg esp, eax; and al, 0; add al, 0; add [rax+0x39], cl; ret 0x840f;
0xffffffff8105920b: xchg esp, eax; and al, 0; add al, 0; add [rax+0x39], cl; ret 0x840f;
0xffffffff81059e3d: mov rbx, 0x415bd88900000001; pop rsp; pop r13; pop rbp; ret;
0xffffffff8105a58b: xchg esp, eax; ret 0x941;
0xffffffff8105a8b7: dec dword ptr [rax-0x68]; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105a8b8: cdqe; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105a8b9: cwde; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105ac12: sbb ch, al; push rbp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8105ba70: shl byte ptr [rbp+0x16], 0x31; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8105badb: and rax, 0xfffffffffffffff2; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105bb63: or ecx, [rdi]; xchg esp, eax; ret 0xfe83;
0xffffffff8105bb65: xchg esp, eax; ret 0xfe83;
0xffffffff8105c0ce: ret 0x2e74;
0xffffffff8105c1b6: inc dword ptr [rbp+0x480974c0]; cwde; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff8105c1b8: shl byte ptr [rcx+rcx+0x48], 0x98; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff8105c1ba: or [rax-0x68], ecx; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff8105c1dc: add rsp, 0x30; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff8105c1dd: add esp, 0x30; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff8105c1ed: shufps xmm7, xmm7, 0xff; add rsp, 0x30; cdqe; pop rbx; pop rbp; ret;
0xffffffff8105c1f1: add rsp, 0x30; cdqe; pop rbx; pop rbp; ret;
0xffffffff8105c1f2: add esp, 0x30; cdqe; pop rbx; pop rbp; ret;
0xffffffff8105c279: add ebp, 0xffffffff; push qword ptr [rcx]; ror cl, 0xc3; leave; mov eax, 0xfffffff2; ret;
0xffffffff8105c27c: push qword ptr [rcx]; ror cl, 0xc3; leave; mov eax, 0xfffffff2; ret;
0xffffffff8105c27e: ror cl, 0xc3; leave; mov eax, 0xfffffff2; ret;
0xffffffff8105c33e: add rsp, 8; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff8105c33f: add esp, 8; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff8105c5ac: mov rax, [rbp-0x20]; leave; ret;
0xffffffff8105c5ad: mov eax, [rbp-0x20]; leave; ret;
0xffffffff8105c690: add [rax], al; mov rax, 0xfffffffffffffdfe; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8105c692: mov rax, 0xfffffffffffffdfe; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8105c693: mov eax, 0xfffffdfe; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8105c7e8: add [rbx+rcx-0x7d], esi; leave; add bh, [rax+1]; mov [rsi+0x78], cl; ret;
0xffffffff8105c7ec: leave; add bh, [rax+1]; mov [rsi+0x78], cl; ret;
0xffffffff8105c917: add rsp, 0x160; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8105c918: add esp, 0x160; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8105cb09: ret 0xa083;
0xffffffff8105cd18: ret 0xb3e9;
0xffffffff8105d131: ret 0x69c9;
0xffffffff8105d15b: sbb al, 0; add rsp, 0x50; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d230: xor eax, eax; add rsp, 0x188; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d232: add rsp, 0x188; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d233: add esp, 0x188; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d319: xor eax, eax; add rsp, 0x148; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d31a: ror byte ptr [rax-0x7f], 0xc4; add [rax], rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8105d31b: add rsp, 0x148; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d31c: add esp, 0x148; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105d31e: add [rax], rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8105d3c1: ret 0x55;
0xffffffff8105de18: mov ebp, 0x85480000; ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff8105de1a: add [rax-0x7b], cl; ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff8105de1d: ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff8105de20: leave; add [rax], al; add [rax-0x77], cl; ret;
0xffffffff8105eac4: push 0xf0ff883; xchg [rdi-0x77000000], esp; ret;
0xffffffff8105eac9: xchg [rdi-0x77000000], esp; ret;
0xffffffff8105f009: dec dword ptr [rax-0x68]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8105f448: leave; cmp rax, 1; sbb rax, rax; not rax; and rax, 0xfffffffffffffff2; ret;
0xffffffff8105fb8f: sub eax, 0x1ca2b; mov eax, ebx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8105fb93: add [rax], eax; mov eax, ebx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8105fc68: add rsp, 0x28; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105fc69: add esp, 0x28; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105fc6b: sub [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8105fdd4: add [rcx-0x3b7cb728], cl; and [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8105feb6: add rsp, 0x20; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105feb7: add esp, 0x20; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105fee1: add [rcx+rcx*4-0x20], al; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105fee2: mov eax, r12d; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105fee3: mov eax, esp; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8105ffdb: add [rax-0x77], cl; fucomip st, st(0); pop rsp; and cl, [rbx]; add [rbx+0x5d], bl; ret;
0xffffffff8105ffde: fucomip st, st(0); pop rsp; and cl, [rbx]; add [rbx+0x5d], bl; ret;
0xffffffff8105ffe0: pop rsp; and cl, [rbx]; add [rbx+0x5d], bl; ret;
0xffffffff810603f8: add [rbp+0x310b75c0], al; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810603fa: shl byte ptr [rbp+0xb], 0x31; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810603fc: or esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81060472: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xcd75;
0xffffffff81060474: xchg esp, eax; ret 0xcd75;
0xffffffff81060475: ret 0xcd75;
0xffffffff81060655: ret 0x7c74;
0xffffffff8106091a: ret 0xe27f;
0xffffffff81060a5e: add gs:[rcx+rcx*4+0x60], cl; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81060a5f: add [rcx+rcx*4+0x60], cl; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81060d76: sub eax, 0x33f34; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81060d7a: add eax, [rax]; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81060f31: adc ecx, [rbx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81060f73: adc cl, [rbx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81061021: pop rsp; push rbp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810610c8: out 0xe8, eax; mov esp, 0x415b0001; pop rsp; pop rbp; ret;
0xffffffff810610cb: mov esp, 0x415b0001; pop rsp; pop rbp; ret;
0xffffffff8106137c: mov esp, [rdi]; mov rbx, rdi; and r12d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff8106194c: and [rbp+7], dh; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81061a02: xchg esp, eax; add [rax], al; add [rax-0x39], cl; ret 0xc759;
0xffffffff81061b94: ret 0x6a55;
0xffffffff81061bc4: fst dword ptr [rax+rax+1], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; cdqe; pop rbp; ret;
0xffffffff81061bc6: add [rcx], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; cdqe; pop rbp; ret;
0xffffffff81061bc8: fcomp st, dword ptr [rbx+0x41]; pop rsp; cdqe; pop rbp; ret;
0xffffffff81061cf9: ret 0x6a5d;
0xffffffff81061dda: ret 0x6a65;
0xffffffff8106249d: adc [rcx], esi; leave; mov rdi, rbx; call qword ptr [0xffffffff81c27008];
0xffffffff81062f7b: mov esp, edx; push rbx; mov rbx, rdi; call qword ptr [0xffffffff81c27000];
0xffffffff810635b2: ret 0x19e9;
0xffffffff810637f1: test edx, edx; setne al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810637f3: setne al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81064426: and [rbp+9], dh; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81064823: ret 0x6b75;
0xffffffff8106483b: ret 0x78c;
0xffffffff81064b65: xchg esp, eax; add [rax], al; mov byte ptr [rbx], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810650e7: fmul st, dword ptr [rdi]; xchg esp, eax; ret 0xd;
0xffffffff810650e9: xchg esp, eax; ret 0xd;
0xffffffff81065684: ret 0x8628;
0xffffffff8106596a: ret 0x553a;
0xffffffff8106601b: ret 0x12c;
0xffffffff81066529: ret 0xba75;
0xffffffff810666eb: add al, 0; add rsp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff81066725: add al, [rax]; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066867: ret 0x6f2a;
0xffffffff81066907: ret 0x6f3a;
0xffffffff81066b06: sbb esp, ebp; add [rax], al; pop rbx; pop rbp; ret;
0xffffffff81066b3b: sbb esp, ebp; add [rax], al; pop rbx; pop rbp; ret;
0xffffffff81066cfd: and [r11+0x118801f2], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066cfe: and [rbx+0x118801f2], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066cff: xor edx, 1; mov [rcx], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066d02: mov [rcx], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066d3b: movzx ecx, byte ptr [rbp-9]; mov [rdx], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81066d3f: mov [rdx], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81067b22: ret 0xbc41;
0xffffffff81067e63: pop rbx; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106805c: and al, 4; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106808a: ret 0x8680;
0xffffffff810683b0: or eax, 0xe8df8948; xchg [rsi+0x415b000a], ebx; pop rsp; pop rbp; ret;
0xffffffff810683b3: fucomip st, st(0); xchg [rsi+0x415b000a], ebx; pop rsp; pop rbp; ret;
0xffffffff810683b5: xchg [rsi+0x415b000a], ebx; pop rsp; pop rbp; ret;
0xffffffff81068830: add [rcx+rcx*4+0x60], al; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8106906b: ret 0xb4c0;
0xffffffff8106925d: ret 0x5508;
0xffffffff810696c7: xor ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810697a3: ret 0x8690;
0xffffffff8106986d: cwde; xchg bl, ch; sub eax, 0xfffff87a; leave; ret;
0xffffffff8106986e: xchg bl, ch; sub eax, 0xfffff87a; leave; ret;
0xffffffff81069870: sub eax, 0xfffff87a; leave; ret;
0xffffffff81069938: ret 0x86ac;
0xffffffff81069975: cmpsd [rsi], [rdi]; pop rsp; push rsp; add [rbp+0x48], bl; cwde; ret;
0xffffffff810699ad: ret 0x9980;
0xffffffff810699b4: in eax, 0xe8; pop sp; push rsp; add [rbp+0x48], bl; cwde; ret;
0xffffffff810699b6: pop sp; push rsp; add [rbp+0x48], bl; cwde; ret;
0xffffffff810699d4: in eax, 0xe8; pop rsp; push rsp; add [rbp+0x48], bl; cwde; ret;
0xffffffff810699f6: pop rsp; push rsp; add [rbp+0x48], bl; cwde; ret;
0xffffffff81069aac: test [rdx], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81069fcd: mov [rbx+0x4f0], rdi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81069fce: mov [rbx+0x4f0], edi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81069fcf: mov ebx, 0x4f0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106a009: ret 0xfe43;
0xffffffff8106a149: ret 0xbf40;
0xffffffff8106a16f: ret 0xbf20;
0xffffffff8106a1ab: ret 0xbee0;
0xffffffff8106a279: ret 0x4f81;
0xffffffff8106a7dd: nop [rcx], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106a7de: sbb eax, [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106a983: ret 0xc0b0;
0xffffffff8106b783: ret 0xb6c0;
0xffffffff8106b868: out 0xe8, eax; shr byte ptr [rcx+0xa], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8106b86a: shr byte ptr [rcx+0xa], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8106bbfd: ret 0xc460;
0xffffffff8106bc93: xchg [rax-0x3838b77f], esp; add ch, al; ret 0xe881;
0xffffffff8106bfcb: pop rsp; and al, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106c0c3: ret 0x417c;
0xffffffff8106c1c6: or esi, [rbp+rbp+0x48]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106c1e9: add rsp, 8; movsxd rax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106c1ea: add rsp, 8; movsxd rax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106c1eb: add esp, 8; movsxd rax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106c348: xchg [rax-0x7778767f], esp; add [rax], al; add bl, al; mov qword ptr [rdi+0x80], 0xc00; mov dword ptr [rdi+0x88], 0x55555555; ret;
0xffffffff8106c79a: ret 0x54cd;
0xffffffff8106d227: ret 0x54;
0xffffffff8106d36c: rol al, 0x54; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106d36d: rcl byte ptr [rax+rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106d5e8: ret 0xe849;
0xffffffff8106d975: movsxd ebx, [rbx+rbx*2+0x41]; pop rsp; pop rbp; ret;
0xffffffff8106d976: pop rsp; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106e247: mov cl, 0x54; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106e279: mov esp, ebx; add r12, gs:[rip+0x7efa0eb5]; call qword ptr [0xffffffff81c27010];
0xffffffff8106e3dd: mov al, 0x54; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8106ea2f: add rsp, 0x10; pop rbx; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff8106ea30: add esp, 0x10; pop rbx; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff8106eba0: xchg esp, eax; ret 0xd3eb;
0xffffffff8106ef14: leave; adc bl, ch; iretd;
0xffffffff8106f1d8: add rsp, 0x30; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f1d9: add esp, 0x30; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f234: dec dword ptr [rax-0x68]; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f235: cdqe; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f236: cwde; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f316: ror byte ptr [rax-9], 0xd0; and rax, 0xfffffffffffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8106f317: not rax; and rax, 0xfffffffffffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8106f318: not eax; and rax, 0xfffffffffffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8106f31a: and rax, 0xfffffffffffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8106f3fb: mov rax, 0xfffffffffffffff2; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f3fc: mov eax, 0xfffffff2; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f705: shl byte ptr [rbx+rcx+0x48], 0x98; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f707: or ecx, [rax-0x68]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8106f82b: ret 0x7569;
0xffffffff8106fa9a: ret 0x76f4;
0xffffffff8106fe6d: ret 0xa7c0;
0xffffffff81070474: ret 0x7f5;
0xffffffff81070533: leave; mov rcx, 0x45d964b800ba4800; test edx, 0xc06948ff; add [rcx], cl; cmp eax, 0xd0014800; ret;
0xffffffff810706e3: sub esp, esi; mov edi, 0x89485b00; ret 0x5c41;
0xffffffff810706ec: pop rsp; pop rbp; mov rax, rdx; ret;
0xffffffff81070755: ret 0x78e9;
0xffffffff810707cc: mov al, 0xf3; mov edi, 0x75c08500; push rbp; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707ce: mov edi, 0x75c08500; push rbp; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707cf: add [rbp+0x553675c0], al; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d1: shl byte ptr [rbp+0x36], 0x55; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d3: push rbp; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d4: push rbp; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d5: mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d6: mov ebp, esp; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810707d7: in eax, 0x48; sub esp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff81070803: and eax, 0x81c27008; leave; ret;
0xffffffff81070864: ret 0xdee0;
0xffffffff81071500: add [rax+0x650b7408], ch; and dword ptr [rip+0x7efa3780], 0x7fffffff; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81071502: or [rbx+rcx+0x65], dh; and dword ptr [rip+0x7efa3780], 0x7fffffff; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81071505: and dword ptr gs:[rip+0x7efa3780], 0x7fffffff; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81071506: and dword ptr [rip+0x7efa3780], 0x7fffffff; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81071623: ret 0x20b9;
0xffffffff81071679: leave; cmovg rax, rdx; mov [rdi+0x28], rax; ret;
0xffffffff81072c88: xchg esp, eax; mov dl, 0xbb; add [rbp-0x7b], al; ror byte ptr [rdi], 0x94; ret 0xfa01;
0xffffffff81072c90: xchg esp, eax; ret 0xfa01;
0xffffffff81073a63: or dword ptr [rax+0x5b000000], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810753a6: leave; add [rax], eax; add [rbp+0x39], cl; ret;
0xffffffff81075931: ret 0x52;
0xffffffff810760ab: stc; mov al, [0xfc04d894881a08b]; xchg esp, eax; ret 0xb60f;
0xffffffff810760ac: mov al, [0xfc04d894881a08b]; xchg esp, eax; ret 0xb60f;
0xffffffff810760ad: mov esp, [rax+0x4d894881]; ror byte ptr [rdi], 0x94; ret 0xb60f;
0xffffffff810760d7: xchg esp, eax; ret 0x42e8;
0xffffffff81076661: xchg esp, eax; ret 0xb8e8;
0xffffffff8107667c: xchg esp, eax; ret 0x9de8;
0xffffffff81076abe: ret 0xbb74;
0xffffffff8107711c: add [rbx-0x21b80], cl; dec dword ptr [rcx+0x7dc83]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81077122: dec dword ptr [rcx+0x7dc83]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81077124: sbb esp, 7; add [rax], al; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107726e: ret 0x5410;
0xffffffff810772f6: ret 0x5420;
0xffffffff81077733: mov ebx, 0x108; add cl, [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff81077734: or [rcx], al; add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff81077736: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff81077738: add cl, [rdi]; xchg esp, eax; ret 0x2941;
0xffffffff8107773a: xchg esp, eax; ret 0x2941;
0xffffffff81077be3: pop rsp; mov [r13+0x7dc], eax; pop r13; pop r14; pop rbp; ret;
0xffffffff81078853: add bh, al; xchg [rax+6], esp; add [rax], al; add bl, al; nop; ret;
0xffffffff81078855: xchg [rax+6], esp; add [rax], al; add bl, al; nop; ret;
0xffffffff8107892a: xor bl, [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81078d89: ret 0x5878;
0xffffffff81078da0: and byte ptr [rbx+0x54], 0xfe; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81078da1: movsxd edx, [rsi+rdi*8+0x48]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81078de1: ret 0xb779;
0xffffffff81078fe7: ret 0x5488;
0xffffffff8107957b: ret 0x1972;
0xffffffff81079e6e: add [rcx-0x3a], al; add al, 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107a086: mov eax, esi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107a12b: mov al, [0x7824840149000001]; or [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107a131: test [rax+rdi*2], ah; or [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107a132: and al, 0x78; or [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107a134: or [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107a175: ret 0x5450;
0xffffffff8107ae53: imul esp, 0x415bffff; pop rsp; pop r13; pop rbp; ret;
0xffffffff8107b3ca: xchg esp, eax; and al, 0x70; or [rax], al; add [rax+0x29], cl; ret 0x820f;
0xffffffff8107b446: or [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8107bd48: ret 0xfa98;
0xffffffff8107bdb0: ret 0xd040;
0xffffffff8107c069: or al, ch; rcl ebx, 0x53; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107c06b: rcl ebx, 0x53; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107c114: sbb bl, dl; push rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8107c7a5: add [rbx-0x21e7cf5], cl; xchg [rbx], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8107c7a7: or eax, [rbx+0xb87fde1]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8107c7a8: and ecx, 0xfffffffd; xchg [rbx], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8107c7aa: std; xchg [rbx], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8107c7ab: xchg [rbx], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8107cc2e: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff8107d2b2: mov eax, 0x78000001; cmovs eax, [rbx+0x415b10c4]; pop rsp; pop rbp; ret;
0xffffffff8107d2b5: add [rax+0xf], bh; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107d2b7: cmovs eax, [rbx+0x415b10c4]; pop rsp; pop rbp; ret;
0xffffffff8107d2d1: add rsp, 0x10; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107d2d2: add esp, 0x10; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107d97a: ret 0x5480;
0xffffffff8107d994: ret 0x547c;
0xffffffff8107d9a6: ret 0x5478;
0xffffffff8107e2a3: ret 0xaf98;
0xffffffff8107e864: ret 0xafa8;
0xffffffff8107fae6: dec dword ptr [rax-0x68]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8107fb20: add [rax], al; add [rbx+0x41], bl; pop rsp; sub rax, 0x16; pop rbp; ret;
0xffffffff8107fb22: add [rbx+0x41], bl; pop rsp; sub rax, 0x16; pop rbp; ret;
0xffffffff8107fb25: pop rsp; sub rax, 0x16; pop rbp; ret;
0xffffffff8107fcaa: ret 0xafd0;
0xffffffff8107feda: fcomp st, dword ptr [rbx+0x41]; pop rsp; shr eax, 0x1f; pop rbp; ret;
0xffffffff8107ff6a: ret 0x5394;
0xffffffff8108014c: ret 0x7e01;
0xffffffff810805ca: ret 0xdb00;
0xffffffff810805fb: ret 0xce09;
0xffffffff810806ae: ret 0xe630;
0xffffffff8108110f: mov [rbx+0x18], r12; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81081110: mov [rbx+0x18], esp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81081111: movsxd ebx, [rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81081f48: mov [0x415bc031000000c0], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff81081ffa: cld; dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810823db: mov [rip+0xbac17f], eax; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810823dc: add eax, 0xbac17f; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810823de: sar dword ptr [rdx-0x2776b800], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff810823df: mov edx, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082425: mov [rip+0xbed705], eax; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082426: add eax, 0xbed705; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082427: add eax, 0x4800bed7; mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082428: xlat [rbx]; mov esi, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082429: mov esi, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810826be: push rdx; add [rax-0x68], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81082944: cwde; push r11; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81082945: push r11; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108301b: ret 0xbf74;
0xffffffff8108305a: cmp [rax], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8108391b: leave; ret 0xe6;
0xffffffff81083a42: ret 0xc772;
0xffffffff81083a77: xchg esp, eax; ret 0xf329;
0xffffffff81083a78: ret 0xf329;
0xffffffff81083a92: pop rsp; sbb eax, eax; pop rbp; and eax, 0xfffffff4; ret;
0xffffffff81083e48: ret 0x7f4f;
0xffffffff81083f91: ret 0x7f5b;
0xffffffff8108456f: ret 0x9200;
0xffffffff8108465a: sub eax, 0xfffffd40; pop rax; pop rdx; mov qword ptr [rip+0xe39693], 0; leave; ret;
0xffffffff81084660: pop rax; pop rdx; mov qword ptr [rip+0xe39693], 0; leave; ret;
0xffffffff81084661: pop rdx; mov qword ptr [rip+0xe39693], 0; leave; ret;
0xffffffff81084662: mov qword ptr [rip+0xe39693], 0; leave; ret;
0xffffffff81084663: mov dword ptr [rip+0xe39693], 0; leave; ret;
0xffffffff81084664: add eax, 0xe39693; add [rax], al; add [rax], al; leave; ret;
0xffffffff81084899: add [rdi+0x19], dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81084f8a: ret 0xe58d;
0xffffffff8108545d: or ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810865f0: ret 0x4774;
0xffffffff8108689a: ret 0xe574;
0xffffffff810869b3: push r12; mov r12d, esi; push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b4: push rsp; mov r12d, esi; push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b5: mov r12d, esi; push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b6: mov esp, esi; push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b7: hlt; push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b8: push rbx; sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869b9: sub rsp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff810869ba: sub esp, 8; mov [rbp-0x30], r8; call qword ptr [0xffffffff81c27000];
0xffffffff81086ea1: ret 0x920c;
0xffffffff8108719d: fsubp st(0), st; sub eax, 0x48fffffd; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8108719f: sub eax, 0x48fffffd; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff810871ac: ret 0x8398;
0xffffffff8108765a: or [rcx+0xd64fe8], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810876d3: ret 0xdec0;
0xffffffff81087bd0: mov esi, 0x89dc7200; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810889e1: ret 0x7ef8;
0xffffffff81088f67: add al, ch; movsxd ecx, [rsi+rdi*8-1]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81088f69: movsxd ecx, [rsi+rdi*8-1]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81089274: add dh, [rbx+rcx-0x7b]; shl byte ptr [rdi+rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81089a3a: ret 0x7785;
0xffffffff81089a97: ret 0xe510;
0xffffffff8108a503: add [rsi+rcx-0x3a], dh; and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8108a507: and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8108a6ac: setne al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108a6ad: xchg ebp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108b067: mov byte ptr [rbx+0xa4], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108b13a: ret 0x776e;
0xffffffff8108b4d1: sub ebp, [rbx+0x77]; add dh, al; and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8108b4d2: imul esi, [rdi], 0xffffffc6; and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8108b50e: push 0x77; add dh, al; and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8108b510: add dh, al; and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8108b512: and dword ptr [rax+rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8108b911: sub eax, 0xffffff09; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108b982: mov [rbx+0x190], rcx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108b983: mov [rbx+0x190], ecx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108b984: mov edx, [rax+0x48000001]; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108bb5d: stosd [rdi]; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108bc75: sub al, ch; test [rbx+0x77], esp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108bc77: test [rbx+0x77], esp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108be71: mov bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8108bf94: sar byte ptr [rax+0xc], 0x31; leave; mov eax, ecx; pop rbx; pop rbp; ret;
0xffffffff8108bf96: or al, 0x31; leave; mov eax, ecx; pop rbx; pop rbp; ret;
0xffffffff8108c464: ret 0xc290;
0xffffffff8108c47d: enter 0xffff, 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108cb6f: ret 0xbf01;
0xffffffff8108ce3a: ret 0x7751;
0xffffffff8108d0d9: add rsp, 8; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff8108d0da: add esp, 8; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff8108dabc: and [rdx+0x415b0052], dl; pop rsp; pop rbp; ret;
0xffffffff8108dabd: xchg edx, eax; push rdx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108e06a: ret 0x4781;
0xffffffff8108e649: ret 0x8c7c;
0xffffffff8108e867: mov [rip+0xe4fc9a], rdx; movsxd rax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8108e868: mov [rip+0xe4fc9a], edx; movsxd rax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8108e869: adc eax, 0xe4fc9a; movsxd rax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8108e86c: in al, 0; movsxd rax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8108ebee: mov al, [0x5280e9e881c2ec]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108ebf1: sub eax, 0x5280e9; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108ebf4: adc byte ptr [rdx], 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8108ec3c: ret 0xa4be;
0xffffffff8108f18b: ret 0x8f8f;
0xffffffff8108f338: sub al, 0x77; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8108fc76: ret 0x49f0;
0xffffffff81090493: ret 0xe548;
0xffffffff810906a9: or dword ptr [rbp-0x7cb7ffae], 0xffffffc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810906aa: lea edx, [rdx]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8109074c: inc dword ptr [rcx+rcx*4+0x63]; cmp [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810907b2: ret 0x4081;
0xffffffff81090a3a: adc bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81090aa2: in al, 0x75; sbb ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810916cc: dec dword ptr [rdi]; xchg esp, eax; ret 0x8b48;
0xffffffff81091e8b: ret 0xe54c;
0xffffffff81091eae: ret 0x430;
0xffffffff8109225a: and [r9-0x3a], al; add al, 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8109225b: and [rcx-0x3a], al; add al, 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8109267c: cmovbe rdx, [rbp-0x10]; mov [rcx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8109267d: cmovbe edx, [rbp-0x10]; mov [rcx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810926bd: mov rcx, [rbx+0x20]; mov [rcx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810926be: mov ecx, [rbx+0x20]; mov [rcx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810926c1: mov [rcx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810926c2: mov [rcx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81092be9: ret 0x2f78;
0xffffffff81092d4a: ret 0x9538;
0xffffffff81093a6b: add [rax+rax*8+0x415b0775], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff81093a8c: xor al, 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81093b20: or ecx, [rax-0x7b]; shl byte ptr [rsp+rcx*8-0x3a], 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81093b23: shl byte ptr [rsp+rcx*8-0x3a], 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81093bc1: stosd [rdi]; mov [0xb40a3894cfffd], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81093bc2: mov [0xb40a3894cfffd], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81093bc4: dec dword ptr [rcx+rcx*4-0x5d]; or eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81094b39: ret 0x387f;
0xffffffff81094e93: sub eax, 0x521e47; add rsp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff81094ff8: add [rcx], dh; dec dword ptr [rax-0x39]; enter 0x4cb0, 9; sub eax, 0xffffb438; leave; ret;
0xffffffff81094ffa: dec dword ptr [rax-0x39]; enter 0x4cb0, 9; sub eax, 0xffffb438; leave; ret;
0xffffffff81094ffe: enter 0x4cb0, 9; sub eax, 0xffffb438; leave; ret;
0xffffffff81095002: sub eax, 0xffffb438; leave; ret;
0xffffffff810950cf: add [rcx], dh; dec dword ptr [rax-0x39]; enter 0x4c90, 9; sub eax, 0xffffb361; leave; ret;
0xffffffff810950d1: dec dword ptr [rax-0x39]; enter 0x4c90, 9; sub eax, 0xffffb361; leave; ret;
0xffffffff810950d5: enter 0x4c90, 9; sub eax, 0xffffb361; leave; ret;
0xffffffff810950d9: sub eax, 0xffffb361; leave; ret;
0xffffffff81095263: ret 0x9520;
0xffffffff81095272: ret 0xf79e;
0xffffffff8109592e: xor dword ptr [rbp-0x21], 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff81095cba: ret 0xffc8;
0xffffffff81095e38: add [rcx+rcx*8+0x4c], dh; mov esp, [rbx+0x128]; call qword ptr [0xffffffff81c27000];
0xffffffff81095e3a: leave; mov r12, [rbx+0x128]; call qword ptr [0xffffffff81c27000];
0xffffffff81095e3c: mov esp, [rbx+0x128]; call qword ptr [0xffffffff81c27000];
0xffffffff81095e9f: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8548;
0xffffffff810960f5: ret 0x53c0;
0xffffffff81096131: xchg esp, eax; ret 0xf44;
0xffffffff8109664a: ret 0x8549;
0xffffffff810967a9: or al, [rax]; add al, ch; mov edi, 0x48fffd77; mov ebx, [rbp-8]; leave; ret;
0xffffffff810967ab: add al, ch; mov edi, 0x48fffd77; mov ebx, [rbp-8]; leave; ret;
0xffffffff810967ad: mov edi, 0x48fffd77; mov ebx, [rbp-8]; leave; ret;
0xffffffff810967af: std; dec dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff81097099: mov [rcx+0x18], rcx; mov [rcx+0x20], rcx; mov qword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff8109709a: mov [rcx+0x18], ecx; mov [rcx+0x20], rcx; mov qword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff8109709d: mov [rcx+0x20], rcx; mov qword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff8109709e: mov [rcx+0x20], ecx; mov qword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff8109709f: and [r8-0x39], cl; add [rax], al; add [rax], al; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a0: and [rax-0x39], cl; add [rax], al; add [rax], al; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a1: mov qword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a2: mov dword ptr [rcx+0x48], 0; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a5: add [rax], al; add [rax], al; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a7: add [rax], al; mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970a8: add [rax-0x39], cl; push r8; add [rax], al; add [rax], al; leave; ret;
0xffffffff810970a9: mov qword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970aa: mov dword ptr [rcx+0x50], 0; leave; ret;
0xffffffff810970ab: push r8; add [rax], al; add [rax], al; leave; ret;
0xffffffff810970ac: push rax; add [rax], al; add [rax], al; leave; ret;
0xffffffff8109746b: ret 0x2972;
0xffffffff81097489: ret 0x1e8;
0xffffffff8109771b: fld st, qword ptr [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81097963: push qword ptr [rbp+2]; leave; ret;
0xffffffff8109799f: test dword ptr [r8-0x39], 0xb09e50c6; sub eax, 0x29b9b3; movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979a0: test dword ptr [rax-0x39], 0xb09e50c6; sub eax, 0x29b9b3; movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979a7: sub eax, 0x29b9b3; movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979a9: mov bl, 0xb9; sub [rax], eax; movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979ab: sub [rax], eax; movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979ad: movzx eax, byte ptr [rbp-9]; leave; ret;
0xffffffff810979b9: sub [rsi-0x61177e50], bl; mov ecx, 0xc0310029; leave; ret;
0xffffffff810979bc: sub eax, 0x29b99e; xor eax, eax; leave; ret;
0xffffffff810979be: sahf; mov ecx, 0xc0310029; leave; ret;
0xffffffff810979bf: mov ecx, 0xc0310029; leave; ret;
0xffffffff810979c0: sub [rax], eax; xor eax, eax; leave; ret;
0xffffffff810985aa: ret 0xac85;
0xffffffff8109873d: ret 0x2b77;
0xffffffff810987f1: leave; call qword ptr [0xffffffff81c27000];
0xffffffff81098fbd: ret 0x8ff;
0xffffffff8109914e: xchg esp, eax; mov edi, 0xd08948d6; mul rdi; mov rax, rdx; shr rax, 0x17; ret;
0xffffffff810993b5: mov rdx, [rbp-0x10]; mov [rbx+8], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810993b6: mov edx, [rbp-0x10]; mov [rbx+8], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810993b9: mov [rbx+8], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810993ba: mov [rbx+8], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81099427: mov [r12+0x18], rdx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099428: mov [rsp+0x18], edx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8109942a: and al, 0x18; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810994d7: mov [r12+0x18], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810994d8: mov [rsp+0x18], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810994da: and al, 0x18; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099540: cmovs esp, [rbx-0x3d]; add rsp, 0xd0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099541: movsxd rax, ebx; add rsp, 0xd0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099542: movsxd eax, ebx; add rsp, 0xd0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099544: add rsp, 0xd0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81099545: add esp, 0xd0; pop rbx; pop r12; pop rbp; ret;
0xffffffff8109976f: add al, ch; sbb edx, [rsi+0x14]; add [rbp+0x480474c0], al; cwde; leave; ret;
0xffffffff81099771: sbb edx, [rsi+0x14]; add [rbp+0x480474c0], al; cwde; leave; ret;
0xffffffff81099774: add [rbp+0x480474c0], al; cwde; leave; ret;
0xffffffff81099776: shl byte ptr [rsp+rax+0x48], 0x98; leave; ret;
0xffffffff81099778: add al, 0x48; cwde; leave; ret;
0xffffffff8109997c: dec dword ptr [rax-0x68]; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8109997d: cdqe; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8109997e: cwde; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff810999b3: add rsp, 0x28; cdqe; pop rbx; pop rbp; ret;
0xffffffff810999b4: add esp, 0x28; cdqe; pop rbx; pop rbp; ret;
0xffffffff810999e7: xchg esp, eax; mov edi, 0xf88948d6; mul rdx; mov rax, rdx; shr rax, 0x17; ret;
0xffffffff81099a54: leave; pop rbp; mov rdx, rcx; ret;
0xffffffff81099a85: movsxd rdx, [rbp-0xc]; mov [rbx+8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81099a86: movsxd edx, [rbp-0xc]; mov [rbx+8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81099a88: hlt; mov [rbx+8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81099a89: mov [rbx+8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81099d33: leave; mov dl, 0xb6; add [rbp-0x46b689cc], cl; iretd;
0xffffffff8109a0c9: ret 0x4c5b;
0xffffffff8109a1b0: ret 0x9580;
0xffffffff8109aa62: mov es, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8109b1e5: add [rcx+rcx*4-0x20], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8109b454: fcomp st, st(7); push rcx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8109b486: in al, dx; or [rax+0xf003a7f], al; xchg esp, eax; ret 0xd038;
0xffffffff8109b487: or [rax+0xf003a7f], al; xchg esp, eax; ret 0xd038;
0xffffffff8109b48b: add [rdi], cl; xchg esp, eax; ret 0xd038;
0xffffffff8109b925: ret 0xa800;
0xffffffff8109c3ea: ret 0xe7c8;
0xffffffff8109c5ed: ret 0x7d75;
0xffffffff8109c66a: ret 0x8374;
0xffffffff8109cce9: ret 0xf476;
0xffffffff8109d3d9: pop rsp; mov [rip+0xe41438], eax; pop rbp; ret;
0xffffffff8109d526: ret 0x2a77;
0xffffffff8109d542: ret 0xf176;
0xffffffff8109d694: adc esp, esp; add bl, al; nop [rax+rax]; mov rax, [rip+0xe41191]; ret;
0xffffffff8109d7bd: mov [rbx+8], rax; mov [rbx], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8109d7be: mov [rbx+8], eax; mov [rbx], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8109d7c1: mov [rbx], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8109d7c2: mov [rbx], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8109e60b: ret 0xb40;
0xffffffff8109f3a2: ret 0xe3f5;
0xffffffff8109f8d3: fwait; push rcx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8109f9b1: ret 0x3172;
0xffffffff8109ffd2: or ch, [rbp+0x51]; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8109ffd4: push rcx; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810a0033: leave; mov r14b, 0; ret;
0xffffffff810a0204: or [rax], eax; leave; ret;
0xffffffff810a0251: mov eax, [0xffffff66e881b08f]; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a0254: sub eax, 0xffffff66; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a026f: sub eax, 0xffffff4b; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a0c9d: ret 0x5d01;
0xffffffff810a0d20: add [rax-0x77], ecx; sbb [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810a0d23: sbb [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810a0ee1: insb [rdi], dx; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff810a1b6c: add rsp, 0xd0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810a1b6d: add esp, 0xd0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810a2128: in eax, 0xf; xchg esp, eax; ret 0xfe8;
0xffffffff810a212a: xchg esp, eax; ret 0xfe8;
0xffffffff810a212b: ret 0xfe8;
0xffffffff810a2176: add rsp, 0x40; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a2177: add esp, 0x40; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a2257: rcr byte ptr [rbx+0x41], 1; pop rsp; and rax, 0xfffffffffffffff2; pop rbp; ret;
0xffffffff810a225a: pop rsp; and rax, 0xfffffffffffffff2; pop rbp; ret;
0xffffffff810a22ba: movsxd rax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a22bb: movsxd eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a2666: add [rax-0x68], cl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a2667: cdqe; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a2668: cwde; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a26bb: add [rbp+0x480974c0], al; cwde; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810a274e: add eax, 0x75db8548; or [rax-0x68], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810a276f: add rsp, 0x10; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff810a2770: add esp, 0x10; not rax; pop rbx; pop rbp; and rax, 0xfffffffffffffff2; ret;
0xffffffff810a2899: ret 0xef77;
0xffffffff810a2b01: test [rbx+0x48000000], dl; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810a2b31: cmp eax, 0xc74c985; add rsp, 0x20; mov eax, 0xffffffea; pop rbx; pop rbp; ret;
0xffffffff810a2b35: or al, 0x48; add esp, 0x20; mov eax, 0xffffffea; pop rbx; pop rbp; ret;
0xffffffff810a2b36: add rsp, 0x20; mov eax, 0xffffffea; pop rbx; pop rbp; ret;
0xffffffff810a2b37: add esp, 0x20; mov eax, 0xffffffea; pop rbx; pop rbp; ret;
0xffffffff810a2b62: xor eax, eax; mov [rbx+8], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810a2b64: mov [rbx+8], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810a2b65: mov [rbx+8], edx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810a2c2c: add [rdi+rbp+0x48], dh; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a2eb2: ret 0xed76;
0xffffffff810a300e: mov [r12+0x10], rax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a300f: mov [rsp+0x10], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30cf: add rsp, 0x18; mov eax, 0xffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30d0: add esp, 0x18; mov eax, 0xffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30f8: mov [r12], rdx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30f9: mov [rsp], edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30fa: adc al, 0x24; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a30fb: and al, 0x48; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a31ff: add [rcx-0x73], cl; xchg esp, eax; and al, 0; add al, 0; add [rax+0x39], cl; ret 0x850f;
0xffffffff810a3202: xchg esp, eax; and al, 0; add al, 0; add [rax+0x39], cl; ret 0x850f;
0xffffffff810a3755: ret 0xfb20;
0xffffffff810a3796: ret 0x44c6;
0xffffffff810a42fa: and eax, 0x81c27018; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a46e1: fsubr st, dword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a4999: ret 0xbae8;
0xffffffff810a4b8d: ret 0x900;
0xffffffff810a4d21: inc dword ptr [rbp+0x480874c0]; cwde; mov rbx, [rbp-8]; leave; ret;
0xffffffff810a4d43: mov rax, 0xfffffffffffffff2; mov rbx, [rbp-8]; leave; ret;
0xffffffff810a4d44: mov eax, 0xfffffff2; mov rbx, [rbp-8]; leave; ret;
0xffffffff810a4fb0: add al, 0x48; lea eax, [rdx+1]; leave; mov eax, eax; ret;
0xffffffff810a4fb1: lea rax, [rdx+1]; leave; mov eax, eax; ret;
0xffffffff810a4fb2: lea eax, [rdx+1]; leave; mov eax, eax; ret;
0xffffffff810a4fb5: leave; mov eax, eax; ret;
0xffffffff810a5119: cmovb rax, rbx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a511a: cmovb eax, ebx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810a578f: insd [rdi], dx; enter 0x75, 0x85; shl byte ptr [rsi+rcx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff810a5790: enter 0x75, 0x85; shl byte ptr [rsi+rcx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff810a5a0b: ret 0xdeeb;
0xffffffff810a5ffa: ret 0x6a00;
0xffffffff810a616e: test al, 0x7f; mov al, [0x415bfffffee9e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810a6170: mov al, [0x415bfffffee9e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810a621e: mov es, [rip+0x415b0000]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810a6275: mov al, [0x415bfffffde4e881]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810a6321: adc [rdx+0xa], bl; or dword ptr [rax-0x39], 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a6323: or al, [rcx+0x3c748]; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a6324: or dword ptr [rax-0x39], 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a64dd: ret 0xacf0;
0xffffffff810a6719: mov eax, 0x415b0075; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810a6778: add dh, [rsi+0x415b0000]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810a68b7: inc esi; add eax, 0xb60181; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a68b9: add eax, 0xb60181; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a68bb: add [rsi+0x415b0000], esi; pop rsp; pop rbp; ret;
0xffffffff810a68bc: mov dh, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a6ab0: mov dword ptr [rax+0x6a], 0x76e881c0; sub [rcx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a6ab2: push 0xffffffffffffffc0; sub eax, 0x512976; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a6ab3: rol byte ptr [rcx+0x512976e8], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a6ab4: sub eax, 0x512976; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a6ab7: sub [rcx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810a6b81: push rcx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810a6cd3: leave; or [rcx], ch; enter 0x2148, 0xd0; shl rax, 6; add rax, [rip+0xbc8eab]; ret;
0xffffffff810a6eac: ret 0xfa74;
0xffffffff810a6eaf: dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810a7100: add [rcx-0x77], cl; pop rsp; and al, 0x30; mov byte ptr [rbx+0x5c4], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810a7103: pop rsp; and al, 0x30; mov byte ptr [rbx+0x5c4], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810a7412: ret 0x80eb;
0xffffffff810a795a: ret 0x5774;
0xffffffff810a7d23: sub eax, 0xfffffda7; leave; cdqe; ret;
0xffffffff810a8958: add dh, [rcx]; leave; mov byte ptr [rbx+0x10], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810a895a: leave; mov byte ptr [rbx+0x10], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810a9635: add dh, al; add esp, 5; add [rax], al; add [rcx-0x3a], al; adc [rax], r8b; call qword ptr [0xffffffff81c27018];
0xffffffff810a9637: add esp, 5; add [rax], al; add [rcx-0x3a], al; adc [rax], r8b; call qword ptr [0xffffffff81c27018];
0xffffffff810aab7c: sbb [rbx-0xa8afe1e], al; leave; ret;
0xffffffff810aab7f: add [rbp-0xb], esi; leave; ret;
0xffffffff810aab81: cmc; leave; ret;
0xffffffff810aade2: ret 0xde00;
0xffffffff810ab43d: or [r11+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810ab72a: ret 0xfaaa;
0xffffffff810ab87e: mov ah, 0x50; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ab99e: sahf; push 0x415b0006; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ab99f: push 0x415b0006; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ac28f: add rsp, 0x28; mov rax, rcx; pop rbx; pop r12; pop rbp; ret;
0xffffffff810ac290: add esp, 0x28; mov rax, rcx; pop rbx; pop r12; pop rbp; ret;
0xffffffff810ac2f4: movsxd rax, [rsi]; leave; add rsi, rax; mov rax, rsi; ret;
0xffffffff810ac2f5: movsxd eax, [rsi]; leave; add rsi, rax; mov rax, rsi; ret;
0xffffffff810ac2f7: leave; add rsi, rax; mov rax, rsi; ret;
0xffffffff810ac305: adc [rbx-0x1f8afe08], eax; leave; xor esi, esi; mov rax, rsi; ret;
0xffffffff810ac307: clc; add [rbp-0x20], esi; leave; xor esi, esi; mov rax, rsi; ret;
0xffffffff810ac308: add [rbp-0x20], esi; leave; xor esi, esi; mov rax, rsi; ret;
0xffffffff810ac30b: leave; xor esi, esi; mov rax, rsi; ret;
0xffffffff810ac42d: ret 0x6a80;
0xffffffff810ac6ac: ret 0xb429;
0xffffffff810ac727: ret 0xd3e8;
0xffffffff810ac778: ret 0xb41f;
0xffffffff810aca79: ret 0x6f60;
0xffffffff810acaef: ret 0x6f30;
0xffffffff810acbe9: xchg ebx, eax; scasd [rdi]; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff810acbea: scasd [rdi]; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff810acdb0: sub al, 0x9f; push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810acdb1: lahf; push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ace46: sahf; push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ad0e4: sub eax, 0x509bf6; add rsp, 0x38; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810ad0ea: add rsp, 0x38; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810ad0eb: add esp, 0x38; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810ad71f: ret 0x7a83;
0xffffffff810adfda: ret 0xfce4;
0xffffffff810ae1bb: ret 0xfba4;
0xffffffff810aef6d: ret 0x6520;
0xffffffff810af9b3: mov [rbx+0x415b004f], edi; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810af9b4: mov ebx, 0x415b004f; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810afc35: xchg esp, eax; ret 0x8941;
0xffffffff810afc4a: ret 0x78;
0xffffffff810afcfa: sbb ebx, eax; xor dword ptr [rbp-0x25], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff810afcfc: xor dword ptr [rbp-0x25], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff810b0204: scasd [rdi]; sub eax, 0xfffd684e; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810b0205: sub eax, 0xfffd684e; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810b0445: ret 0x6008;
0xffffffff810b0617: sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810b0618: sub esp, 0xffffff80; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810b0c94: sub esp, 0; add [rax], al; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff810b101f: mov esp, eax; mov byte ptr [rip+0xe2f07c], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810b11f2: ret 0x50;
0xffffffff810b120b: shl byte ptr [rbp-0x33], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b120d: int 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b16d5: ret 0xb7d9;
0xffffffff810b1758: in al, 0xb7; or al, 0; leave; ret;
0xffffffff810b175a: or al, 0; leave; ret;
0xffffffff810b1b1a: ret 0x3274;
0xffffffff810b1b41: ror byte ptr [rdi], 1; xchg esp, eax; ret 0x394d;
0xffffffff810b1b43: xchg esp, eax; ret 0x394d;
0xffffffff810b1c10: pop rsp; lodsd [rsi]; or al, 0; pop rbx; pop rbp; ret;
0xffffffff810b1dc5: mov eax, [rbp-0xc]; leave; ret;
0xffffffff810b1dc7: hlt; leave; ret;
0xffffffff810b1f27: sub eax, 0x504db3; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810b23f3: mov al, [0xf81c325a0000001]; xchg esp, eax; rol bl, 0x90; cmp [rdi+0x1b8], rdi; setne al; ret;
0xffffffff810b23f6: add [rax+0xf81c325], ah; xchg esp, eax; rol bl, 0x90; cmp [rdi+0x1b8], rdi; setne al; ret;
0xffffffff810b23fc: xchg esp, eax; rol bl, 0x90; cmp [rdi+0x1b8], rdi; setne al; ret;
0xffffffff810b24e6: add al, 0x84; shl byte ptr [rax+rcx+0x45], 0x31; leave; mov eax, r9d; pop rbp; ret;
0xffffffff810b24e8: shl byte ptr [rax+rcx+0x45], 0x31; leave; mov eax, r9d; pop rbp; ret;
0xffffffff810b24ea: or [rbp+0x31], al; leave; mov eax, r9d; pop rbp; ret;
0xffffffff810b24ed: leave; mov eax, r9d; pop rbp; ret;
0xffffffff810b24fe: leave; not r9d; and r9d, 0xfffffff0; mov eax, r9d; ret;
0xffffffff810b2ab9: add esp, 0x60; mov [r15+0x70], r12; mov [r15+0x78], rax; mov [rax], rdx; mov byte ptr [rip+0xe2d5d6], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810b2d5a: ret 0x3474;
0xffffffff810b2e73: pcmpgtw mm1, [rax-1]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b2f6f: add [rcx], al; add [rax], al; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810b375d: pop rsp; push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b3a70: ret 0x3375;
0xffffffff810b3b78: ret 0x4f74;
0xffffffff810b3bd4: ret 0xa475;
0xffffffff810b3cfd: ret 0x4fee;
0xffffffff810b3e39: ret 0xe2;
0xffffffff810b44ad: ret 0xfa21;
0xffffffff810b518c: add [rcx-0x73], cl; xchg esp, eax; and al, 0xb0; add al, [rax]; add [rax+0x39], cl; ret 0x3e74;
0xffffffff810b518f: xchg esp, eax; and al, 0xb0; add al, [rax]; add [rax+0x39], cl; ret 0x3e74;
0xffffffff810b544b: ret 0x19a0;
0xffffffff810b54aa: ret 0x4f62;
0xffffffff810b5b1f: ret 0x7be8;
0xffffffff810b5cea: and bh, [rbx+0xc]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b5e6f: mov esp, eax; adc al, [rax]; add [rax-0x39], cl; ret 0x555;
0xffffffff810b6033: mov al, 0xcb; add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b612c: add [rbx], dh; push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b616e: and eax, ebx; xor dword ptr [rax+rcx+0x5b], 0x41d08948; pop rsp; pop rbp; ret;
0xffffffff810b6170: xor dword ptr [rax+rcx+0x5b], 0x41d08948; pop rsp; pop rbp; ret;
0xffffffff810b61ad: ret 0x1a0;
0xffffffff810b6403: ret 0xad40;
0xffffffff810b6493: ret 0x3580;
0xffffffff810b67df: sub al, 0x50; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b6909: add [rdi+rcx*8+0xf], dh; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810b6b4d: mov dh, 5; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b6fa3: ret 0xb938;
0xffffffff810b70c9: mov cl, 5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810b72f1: ret 0xb944;
0xffffffff810b731d: ret 0xb959;
0xffffffff810b7b14: ret 0x3138;
0xffffffff810b81ce: outsb dx, [rsi]; mov al, [0x415b30c483480005]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b81cf: mov al, [0x415b30c483480005]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b81d0: add eax, 0xc4834800; xor [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810b87ba: ret 0xfb30;
0xffffffff810b8ace: xor dword ptr [rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff810b8adc: rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff810b8d81: ret 0xbae0;
0xffffffff810b8ee0: ret 0x2be;
0xffffffff810b9097: ret 0x608;
0xffffffff810b91cd: mov esp, edi; push rbx; mov ebx, gs:[rip+0x7ef55f59]; call qword ptr [0xffffffff81c27000];
0xffffffff810b95a6: ret 0x91c0;
0xffffffff810b9acb: add rsp, 0x50; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff810b9acc: add esp, 0x50; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff810ba621: ret 0x9af0;
0xffffffff810ba804: ret 0x6a74;
0xffffffff810ba9ea: bnd ret 0x4f;
0xffffffff810baa86: ret 0xabc0;
0xffffffff810baf9c: ret 0xadb0;
0xffffffff810baff5: ret 0xada8;
0xffffffff810bb597: cwde; or eax, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb5eb: or r8, [r8]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb5ec: or eax, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb60f: mov ebp, es; or al, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb69d: outsb dx, [rsi]; or al, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb6cb: xchg [rdx], edx; or al, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb6f0: lea edx, [rcx]; or al, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb6f2: or al, [rax]; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb715: xchg edx, ebx; or [rax], eax; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb73a: mov ds, cx; or [rax], eax; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bb790: or [rax], eax; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbba4: popfq; add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbc6: add [rdi], cl; test ah, cl; add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbc8: test ah, cl; add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbc9: int3; add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbf5: add [rdi], cl; test [rbp+rax+0xf480000], dl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbf7: test [rbp+rax+0xf480000], dl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbbf8: xchg esp, eax; add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc43: add [rdi], cl; add dword ptr [rax*1+0xf480000], 0xffffffbf; add cl, [r8-0x73]; pop rsp; ret;
0xffffffff810bbc45: add dword ptr [rax*1+0xf480000], 0xffffffbf; add cl, [r8-0x73]; pop rsp; ret;
0xffffffff810bbc47: add eax, 0xf480000; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc6a: xchg cl, dh; add al, 0; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc6b: int1; add al, 0; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc8d: add [rdi], cl; cmp dword ptr [rsp+rax], 0; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc8f: cmp dword ptr [rsp+rax], 0; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc91: add al, 0; add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bbc93: add [rax+0xf], cl; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bc180: dec dword ptr [rax+0xf]; mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bc183: mov edi, 0x8d480243; pop rsp; ret;
0xffffffff810bc184: add cl, [r8-0x73]; pop rsp; ret;
0xffffffff810bc185: add cl, [rax-0x73]; pop rsp; ret;
0xffffffff810bc624: enter 0xffec, 0xff; leave; ret;
0xffffffff810bcb8c: adc [rcx-0x76b7fffc], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810bd018: xchg esp, ecx; add [rax], al; add [rax+1], bh; ret;
0xffffffff810bd0af: rol byte ptr [rcx], cl; ror byte ptr [rax-0x75], 1; adc [rax-0x7b], ecx; shl byte ptr [rbp-0x1b], cl; leave; ret;
0xffffffff810bd0b1: ror byte ptr [rax-0x75], 1; adc [rax-0x7b], ecx; shl byte ptr [rbp-0x1b], cl; leave; ret;
0xffffffff810bd0b4: adc [rax-0x7b], ecx; shl byte ptr [rbp-0x1b], cl; leave; ret;
0xffffffff810bd0b7: shl byte ptr [rbp-0x1b], cl; leave; ret;
0xffffffff810bd35a: rol byte ptr [rcx+0xf], cl; xchg esp, eax; ret 0x3145;
0xffffffff810bd44c: mov al, [0x610c7c74881c342]; out dx, al; sub eax, 0x15ffc4; leave; ret;
0xffffffff810bd44f: or dword ptr [rax-0x39], 0xee0610c7; sub eax, 0x15ffc4; leave; ret;
0xffffffff810bd453: adc [rsi], al; out dx, al; sub eax, 0x15ffc4; leave; ret;
0xffffffff810bd455: out dx, al; sub eax, 0x15ffc4; leave; ret;
0xffffffff810bd456: sub eax, 0x15ffc4; leave; ret;
0xffffffff810bd76e: pop rsp; mov byte ptr [rbx+8], 0; mov rdi, [r13]; call qword ptr [0xffffffff81c27008];
0xffffffff810bd7b1: add [rcx], dh; leave; mov rdi, [r13]; call qword ptr [0xffffffff81c27008];
0xffffffff810bd7b3: leave; mov rdi, [r13]; call qword ptr [0xffffffff81c27008];
0xffffffff810bd83e: add rsp, 8; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810bd83f: add esp, 8; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff810bd875: mov ebx, 0x415b004f; pop rsp; pop rbp; ret;
0xffffffff810bd8a3: ret 0x4675;
0xffffffff810bd976: add [rcx-0x3a], al; and al, 0x10; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810bd97a: and al, 0x10; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810bdd26: mov [rbx+8], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810bdd8f: sub eax, 0xfffffcdb; mov eax, [rbp-0x10]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff810bdfbc: pop rsp; mov [r13], rax; pop r13; pop r14; pop rbp; ret;
0xffffffff810be13a: mov [0x415be08944004f8b], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff810be2f0: cmp al, 0xb1; add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff810be2f1: mov cl, 0x4f; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810be619: add al, ch; or edx, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff810be61b: or edx, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff810c01c9: ret 0x8d08;
0xffffffff810c041d: or dword ptr [rax-0x7d], 0x415b20c4; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810c0569: ret 0xf650;
0xffffffff810c06b9: ret 0xc7f7;
0xffffffff810c0a42: add ecx, [rdi]; xchg esp, eax; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff810c16d8: mov al, [0x415bf0658d480000]; pop rsp; pop rbp; ret;
0xffffffff810c2062: ret 0x4df0;
0xffffffff810c21a7: fadd st, dword ptr [rax]; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff810c2e53: ret 0x7ef4;
0xffffffff810c2f56: dec dword ptr [rcx-0x75]; xchg esp, eax; and al, 0xb8; add [rax], al; add [rax+1], cl; ret 0x2b49;
0xffffffff810c2f59: xchg esp, eax; and al, 0xb8; add [rax], al; add [rax+1], cl; ret 0x2b49;
0xffffffff810c39a3: shl byte ptr [rbx+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810c3fee: rcr byte ptr [rbx], 0xc; sub eax, 0xffff9b69; add rsp, 0x90; pop rbx; pop rbp; ret;
0xffffffff810c3ff1: sub eax, 0xffff9b69; add rsp, 0x90; pop rbx; pop rbp; ret;
0xffffffff810c3ff7: add rsp, 0x90; pop rbx; pop rbp; ret;
0xffffffff810c3ff8: add esp, 0x90; pop rbx; pop rbp; ret;
0xffffffff810c408d: ret 0x5c75;
0xffffffff810c4a85: ret 0x678;
0xffffffff810c5daa: add dword ptr [r12+8], 1; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810c5dab: add dword ptr [rsp+8], 1; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810c5dae: or [rcx], al; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff810c5f03: ret 0x2374;
0xffffffff810c6333: ret 0x1275;
0xffffffff810c6670: ret 0x48a0;
0xffffffff810c8860: ret 0x5675;
0xffffffff810c9252: or eax, 0x974c084; leave; mov rax, 0xffffffff81ee06a8; ret;
0xffffffff810c9257: leave; mov rax, 0xffffffff81ee06a8; ret;
0xffffffff810c926f: xchg [rcx+rax], ecx; add [rcx], dh; rol byte ptr [rbp-0x7c], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c9270: add [rax], r8; add [rcx], dh; rol byte ptr [rbp-0x7c], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c9271: add [rax], eax; add [rcx], dh; rol byte ptr [rbp-0x7c], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c9273: add [rcx], dh; rol byte ptr [rbp-0x7c], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c9275: rol byte ptr [rbp-0x7c], cl; ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c9278: ror byte ptr [rdi], cl; xchg esp, eax; ret 0x894c;
0xffffffff810c95f3: ret 0x568d;
0xffffffff810c982e: add [rax], al; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff810c9859: ret 0xcc;
0xffffffff810c9fbf: adc al, 0; add [rbp+0x480674c0], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff810c9fc1: add [rbp+0x480674c0], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff810c9fc3: shl byte ptr [rsi+rax+0x48], 0x8b; pop rbp; clc; leave; ret;
0xffffffff810ca91f: add [rax-0x73], cl; xchg eax, esp; add [rax], al; add [rax-0x7b], cl; dec dword ptr [rax-0x39]; ret 0xffea;
0xffffffff810ca922: xchg eax, esp; add [rax], al; add [rax-0x7b], cl; dec dword ptr [rax-0x39]; ret 0xffea;
0xffffffff810cabe5: cmovl ecx, [rcx-0x3f0d1719]; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff810caead: ror byte ptr [rax-0x77], 0x4b; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810caeb0: sub [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810cb02a: ret 0x6472;
0xffffffff810cb2c1: ret 0xaee9;
0xffffffff810cb65a: ret 0xf618;
0xffffffff810cb671: ret 0x7ae9;
0xffffffff810cc49b: mov eax, [rbp-0x5c]; add rsp, 0x50; pop rbx; pop r12; pop rbp; ret;
0xffffffff810cc49d: movsb [rdi], [rsi]; add rsp, 0x50; pop rbx; pop r12; pop rbp; ret;
0xffffffff810cc6ec: leave; nop [rax]; mov eax, 1; ret;
0xffffffff810cc8bf: ret 0xb150;
0xffffffff810ccbe1: mov rdx, [rbp-0x10]; mov [rbx+0x168], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810ccbe2: mov edx, [rbp-0x10]; mov [rbx+0x168], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810ccbe5: mov [rbx+0x168], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810ccbe6: mov [rbx+0x168], edx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810ccbe7: xchg ebx, eax; push 0x48000001; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810ccbe8: push 0x48000001; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff810cce84: push r12; mov r12, rsi; push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce85: push rsp; mov r12, rsi; push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce86: mov r12, rsi; push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce87: mov esp, esi; push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce88: hlt; push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce89: push rbx; mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce8a: mov rbx, rdi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce8b: mov ebx, edi; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce8c: sti; sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce8d: sub rsp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cce8e: sub esp, 8; call qword ptr [0xffffffff81c27000];
0xffffffff810cd1a6: ret 0xcf20;
0xffffffff810cd7ac: mov esp, 0x415b004e; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810cd89b: ret 0x9c73;
0xffffffff810ce76f: fisttp qword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810cec5a: ret 0x7334;
0xffffffff810cf1b0: ret 0xc675;
0xffffffff810cf747: ret 0xe81e;
0xffffffff810cfc2b: add dh, [rcx+rcx+0x48]; add esp, 0x28; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff810cfc4e: scasb [rdi]; add [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff810cfc4f: add [rax], al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff810cfe58: or [rbp+rsi+0x31], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810d028b: ret 0xabeb;
0xffffffff810d072b: pop rax; add [rbp+4], dh; leave; xor eax, eax; ret;
0xffffffff810d072c: add [rbp+4], dh; leave; xor eax, eax; ret;
0xffffffff810d0762: xor al, 0xf; xchg esp, eax; shl byte ptr [rdi+rax-0x37], 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff810d0764: xchg esp, eax; shl byte ptr [rdi+rax-0x37], 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff810d0774: rol dword ptr [rax], 0; movzx eax, byte ptr [rbp-0x11]; leave; ret;
0xffffffff810d0775: add [rax], al; movzx eax, byte ptr [rbp-0x11]; leave; ret;
0xffffffff810d0776: add [rdi], cl; mov dh, 0x45; out dx, eax; leave; ret;
0xffffffff810d0777: movzx eax, byte ptr [rbp-0x11]; leave; ret;
0xffffffff810d0778: mov dh, 0x45; out dx, eax; leave; ret;
0xffffffff810d1c34: ret 0x1480;
0xffffffff810d1e66: ret 0xbc75;
0xffffffff810d27a5: mov al, [0x4e4532e881c34b]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff810d27a8: sub eax, 0x4e4532; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff810d32cb: pop rsp; sbb rax, rax; pop rbp; not rax; and rax, 0xfffffffffffffff2; ret;
0xffffffff810d34c4: ret 0xb2c0;
0xffffffff810d3618: add eax, 0xe0d47a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810d3d65: ret 0x6381;
0xffffffff810d3eb6: fcomp st, dword ptr [rbx+0x41]; pop rsp; cmovs rax, rsi; pop r13; pop rbp; ret;
0xffffffff810d3eb9: pop rsp; cmovs rax, rsi; pop r13; pop rbp; ret;
0xffffffff810d40a3: ret 0x80;
0xffffffff810d4f04: ret 0xbda0;
0xffffffff810d56e1: ret 0x57e9;
0xffffffff810d603f: inc dword ptr [rdx+rdx*8+0x7d835975]; cwde; add [rdi], ecx; xchg esp, eax; ret 0x3944;
0xffffffff810d6046: cwde; add [rdi], ecx; xchg esp, eax; ret 0x3944;
0xffffffff810d6047: add [rdi], ecx; xchg esp, eax; ret 0x3944;
0xffffffff810d6049: xchg esp, eax; ret 0x3944;
0xffffffff810d60ca: mov esp, [rbp-0x78]; mov byte ptr [r14+0x3a0], 0; mov rdi, [rbp-0x70]; call qword ptr [0xffffffff81c27008];
0xffffffff810d6b17: xchg esp, eax; ret 0xf383;
0xffffffff810d6b18: ret 0xf383;
0xffffffff810d714f: ret 0xc570;
0xffffffff810d73e6: ror byte ptr [rax+1], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff810d770f: mov ebp, 0x8bfffffe; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810d79ea: ret 0x143;
0xffffffff810d8634: sub [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810d86de: cmovbe rax, rdx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810d86df: cmovbe eax, edx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810d8fc6: dec dword ptr [rdi]; xchg esp, eax; ret 0xb60f;
0xffffffff810d9141: mov ebx, 0x48ffff45; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff810d92fa: ret 0xf6;
0xffffffff810d99f0: ret 0xb220;
0xffffffff810d9a24: ret 0xb224;
0xffffffff810d9a72: ret 0x76e9;
0xffffffff810da3fa: ret 0xfbfe;
0xffffffff810da54d: mov rax, [rbp-0x28]; mov [r10], rax; mov rax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da54e: mov eax, [rbp-0x28]; mov [r10], rax; mov rax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da551: mov [r10], rax; mov rax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da552: mov [rdx], eax; mov rax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da554: mov rax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da555: mov eax, [rbp-0x30]; mov [r11], rax; leave; ret;
0xffffffff810da558: mov [r11], rax; leave; ret;
0xffffffff810da559: mov [rbx], eax; leave; ret;
0xffffffff810da783: push 0x4c7c97e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810da932: xor eax, eax; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810da940: cmp rbx, rax; seta al; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810da941: cmp ebx, eax; seta al; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810da943: seta al; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff810daa68: idiv dword ptr [rdx+0x10]; cmp rax, 0x10; cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa69: mov edx, 0x10; cmp rax, 0x10; cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa6c: add [rax], al; cmp rax, 0x10; cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa6e: cmp rax, 0x10; cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa6f: cmp eax, 0x10; cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa70: clc; adc [rax+0xf], cl; ror byte ptr [r8-0x77], 1; adc eax, 0xb5a273; leave; ret;
0xffffffff810daa71: adc [rax+0xf], cl; ror byte ptr [r8-0x77], 1; adc eax, 0xb5a273; leave; ret;
0xffffffff810daa72: cmovge rdx, rax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa73: cmovge edx, eax; mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa74: ror byte ptr [r8-0x77], 1; adc eax, 0xb5a273; leave; ret;
0xffffffff810daa75: ror byte ptr [rax-0x77], 1; adc eax, 0xb5a273; leave; ret;
0xffffffff810daa76: mov [rip+0xb5a273], rdx; leave; ret;
0xffffffff810daa77: mov [rip+0xb5a273], edx; leave; ret;
0xffffffff810daa78: adc eax, 0xb5a273; leave; ret;
0xffffffff810daa7b: mov ch, 0; leave; ret;
0xffffffff810daab5: mov qword ptr [rip+0xe06060], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810daab6: mov dword ptr [rip+0xe06060], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810dab05: mov dword ptr [rip+0xb5a1d9], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810daba2: ret 0x9450;
0xffffffff810dad1a: ret 0xe858;
0xffffffff810dad5a: ret 0x5000;
0xffffffff810dbffe: dec dword ptr [rax+0x63]; cld; add gs:[rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dbfff: movsxd rax, [rbp-4]; add gs:[rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dc000: movsxd eax, [rbp-4]; add gs:[rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dc002: cld; add gs:[rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dc003: add gs:[rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dc004: add [rip+0x7ef3f64d], rax; leave; ret;
0xffffffff810dc005: add [rip+0x7ef3f64d], eax; leave; ret;
0xffffffff810dc006: add eax, 0x7ef3f64d; leave; ret;
0xffffffff810dcd42: ret 0xb3e0;
0xffffffff810dd053: ret 0xb460;
0xffffffff810dd408: ret 0x3c80;
0xffffffff810ddad7: add [rbp+7], dh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff810de5cd: ret 0x5301;
0xffffffff810df5fa: ret 0xf9cf;
0xffffffff810dfe17: mov esp, [rbp+rax+0x40]; mov byte ptr [r12+0x1300], 0; call qword ptr [0xffffffff81c27018];
0xffffffff810e08af: ret 0xf749;
0xffffffff810e09d3: ret 0xc6e9;
0xffffffff810e0cb1: ret 0x6b74;
0xffffffff810e1956: ret 0xc683;
0xffffffff810e1b3b: add ecx, [rdi]; xchg ebx, ebp; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff810e1b3d: xchg ebx, ebp; add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff810e1b3f: add al, [rax]; add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff810e1b41: add [rdi], cl; xchg esp, eax; ret 0xd338;
0xffffffff810e1b43: xchg esp, eax; ret 0xd338;
0xffffffff810e1b44: ret 0xd338;
0xffffffff810e2e06: mov al, [0x458948b845894881]; shr al, 0x9b; pop rsp; add al, [rax]; leave; ret;
0xffffffff810e2e07: or dword ptr [rax-0x77], 0x8948b845; shr r8b, 0x9b; pop rsp; add al, [rax]; leave; ret;
0xffffffff810e2e0e: shr r8b, 0x9b; pop rsp; add al, [rax]; leave; ret;
0xffffffff810e2e0f: shr al, 0x9b; pop rsp; add al, [rax]; leave; ret;
0xffffffff810e2e11: fwait; pop rsp; add al, [rax]; leave; ret;
0xffffffff810e2e12: pop rsp; add al, [rax]; leave; ret;
0xffffffff810e302f: mov eax, [0x415be08944000000]; pop rsp; pop rbp; ret;
0xffffffff810e367d: mov dl, 5; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e36b9: mov cl, 5; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e405d: add eax, [rax]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810e4367: adc eax, 0x890004fd; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e4446: add al, 0; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810e4952: mov esp, eax; mov rax, [rbp-0x38]; mov rdi, [rax]; call qword ptr [0xffffffff81b63c00];
0xffffffff810e4975: ret 0xa7;
0xffffffff810e4a6f: ret 0x9ee9;
0xffffffff810e5bd0: mov bh, dh; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff810e5c8f: pop rsp; add eax, 1; pop r13; pop r14; pop rbp; ret;
0xffffffff810e5dd4: pop rdx; pop rcx; leave; ret;
0xffffffff810e6b31: shl byte ptr [rax+rcx+0x48], 0x98; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e6b33: or [rax-0x68], cl; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e6b34: cdqe; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e6b35: cwde; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e6b5b: sar rax, 6; mov rbx, [rbp-8]; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b5c: sar eax, 6; mov rbx, [rbp-8]; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b5f: mov rbx, [rbp-8]; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b60: mov ebx, [rbp-8]; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b61: pop rbp; clc; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b62: clc; shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b63: shl rax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b64: shl eax, 0xc; add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b66: or al, 0x48; add eax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b67: add rax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b68: add eax, [rip+0xa7a012]; leave; ret;
0xffffffff810e6b69: add eax, 0xa7a012; leave; ret;
0xffffffff810e6bb3: mov rax, 0xfffffffffffffff6; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e6bb4: mov eax, 0xfffffff6; mov rbx, [rbp-8]; leave; ret;
0xffffffff810e729a: ret 0xff56;
0xffffffff810e75fe: or al, 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff810e7708: add rsp, 0xf8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810e7709: add esp, 0xf8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff810e7962: ret 0xb4d4;
0xffffffff810e807a: sbb dil, r15b; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e807b: sbb bh, bh; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e8101: fiadd st, word ptr [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810e818a: ret 0x1356;
0xffffffff810e82c4: pop rsp; pop r13; setae dl; pop rbp; mov eax, edx; ret;
0xffffffff810e8620: ret 0x9f7f;
0xffffffff810e864f: ret 0x94eb;
0xffffffff810e890b: ret 0x4165;
0xffffffff810e8916: ret 0xd7f;
0xffffffff810e8aa6: ret 0xca7d;
0xffffffff810e8c26: ret 0xcb7d;
0xffffffff810e8f43: ret 0xd0b0;
0xffffffff810e9067: ret 0xd09f;
0xffffffff810e96fd: ret 0xb4e0;
0xffffffff810e9837: ret 0xd9d0;
0xffffffff810e989c: ret 0xd192;
0xffffffff810e9965: ret 0x6508;
0xffffffff810e99aa: ret 0x7dba;
0xffffffff810ea18e: ret 0xb0d1;
0xffffffff810ea193: ret 0xf9c8;
0xffffffff810ea259: ret 0xc28e;
0xffffffff810ea5d1: adc ebp, [rdx-0x38b7ff4c]; add esp, eax; ret;
0xffffffff810ea5d4: add [rax-0x39], cl; add esp, eax; ret;
0xffffffff810ea5d7: add esp, eax; ret;
0xffffffff810ea705: cmovl ecx, [rcx-0x115d1719]; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ea735: out dx, al; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ead6e: add eax, 5; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ead6f: rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff810eafa9: pop rsp; mov [r14], eax; pop r13; pop r14; pop rbp; ret;
0xffffffff810eb04f: ret 0x5300;
0xffffffff810eb083: ret 0x376;
0xffffffff810eb818: pop rsp; add al, [rax]; pop rbx; pop r12; pop rbp; ret;
0xffffffff810eb9ed: and [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810eb9ee: and [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810ecc23: pop rsp; mov [r14], rdx; pop r13; pop r14; pop rbp; ret;
0xffffffff810eccf7: or byte ptr [rax+0x2b], 0x1d; cmp dword ptr [rsi], 0x14800a7; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810eccfb: cmp dword ptr [rsi], 0x14800a7; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810eccfc: cmpsd [rsi], [rdi]; add [rax+1], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810eccfd: cmpsd [rsi], [rdi]; add [rax+1], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810eccfe: add [rax+1], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810ed0c5: pop rdx; mov al, [0xc48348e775e0394c]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ed0c6: mov al, [0xc48348e775e0394c]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ed0cb: out 0x48, eax; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff810ed113: fwait; add al, r13b; sbb eax, 0x415bfff6; pop rsp; pop rbp; ret;
0xffffffff810ed114: add al, r13b; sbb eax, 0x415bfff6; pop rsp; pop rbp; ret;
0xffffffff810ed115: add al, ch; sbb eax, 0x415bfff6; pop rsp; pop rbp; ret;
0xffffffff810ed118: sbb eax, 0x415bfff6; pop rsp; pop rbp; ret;
0xffffffff810ed2da: ret 0xb480;
0xffffffff810ed9a2: leave; pop rbx; mov rax, rcx; pop r12; pop rbp; ret;
0xffffffff810eda22: sbb eax, [rbx-0x103efe11]; add eax, [rbx-0x49f0fe1a]; xchg [rax], esp; cmp eax, 0x387581b6; mov rax, [rax*8-0x7e49c240]; ret;
0xffffffff810eda27: out dx, eax; add eax, [rbx-0x49f0fe1a]; xchg [rax], esp; cmp eax, 0x387581b6; mov rax, [rax*8-0x7e49c240]; ret;
0xffffffff810eda28: add eax, [rbx-0x49f0fe1a]; xchg [rax], esp; cmp eax, 0x387581b6; mov rax, [rax*8-0x7e49c240]; ret;
0xffffffff810eda2e: xchg [rax], esp; cmp eax, 0x387581b6; mov rax, [rax*8-0x7e49c240]; ret;
0xffffffff810edb6a: sub eax, 0xfff98ee9; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff810ee01c: ret 0xdee8;
0xffffffff810ee057: mov esp, edx; push rbx; mov rbx, rsi; call qword ptr [0xffffffff81c27000];
0xffffffff810ee13e: add [rcx-0x3b7cb728], r9b; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ef193: add eax, 0x1b8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810ef3d0: add [rax], al; add [rcx], esi; rol byte ptr [rax+0xf007c7b], cl; xchg esp, eax; ret 0xc283;
0xffffffff810ef3d2: add [rcx], esi; rol byte ptr [rax+0xf007c7b], cl; xchg esp, eax; ret 0xc283;
0xffffffff810ef3d4: rol byte ptr [rax+0xf007c7b], cl; xchg esp, eax; ret 0xc283;
0xffffffff810ef3d8: add [rdi], cl; xchg esp, eax; ret 0xc283;
0xffffffff810ef492: ret 0x8d4f;
0xffffffff810ef67b: add [rdi], ecx; xchg esp, eax; rol dword ptr [rcx+rcx*8-0x72b6c28b], 0x81; add [rax+rax], al; add [rbp-0x77], cl; iretd;
0xffffffff810ef67d: xchg esp, eax; rol dword ptr [rcx+rcx*8-0x72b6c28b], 0x81; add [rax+rax], al; add [rbp-0x77], cl; iretd;
0xffffffff810ef70e: ret 0xdbf0;
0xffffffff810eff85: ret 0x4074;
0xffffffff810f0012: add [rcx+rcx-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff810f0b16: in eax, 0xe8; xchg esp, eax; idiv edi; call far fword ptr [rbp-0x3d];
0xffffffff810f0b18: xchg esp, eax; idiv edi; call far fword ptr [rbp-0x3d];
0xffffffff810f0f09: ret 0x3c6;
0xffffffff810f100a: ret 0x1100;
0xffffffff810f164f: ret 0x80f0;
0xffffffff810f18ba: ret 0xc175;
0xffffffff810f18ce: ret 0xad75;
0xffffffff810f19c8: pop rsp; call qword ptr [0xffffffff81b63c10];
0xffffffff810f1d80: leave; and [rax-0x39], cl; ret;
0xffffffff810f2b6a: sar byte ptr [rsi+6], 0x48; mov eax, [rbp-8]; leave; ret;
0xffffffff810f2be8: and eax, 0x81c27008; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff810f2d5f: mov rbx, rsi; sub rsp, 0x20; mov rcx, [rdi+0x40]; mov rcx, [rcx+0x40]; mov rdi, [rcx+rax*8]; call qword ptr [0xffffffff81b63be8];
0xffffffff810f2d60: mov ebx, esi; sub rsp, 0x20; mov rcx, [rdi+0x40]; mov rcx, [rcx+0x40]; mov rdi, [rcx+rax*8]; call qword ptr [0xffffffff81b63be8];
0xffffffff810f2d62: sub rsp, 0x20; mov rcx, [rdi+0x40]; mov rcx, [rcx+0x40]; mov rdi, [rcx+rax*8]; call qword ptr [0xffffffff81b63be8];
0xffffffff810f2d63: sub esp, 0x20; mov rcx, [rdi+0x40]; mov rcx, [rcx+0x40]; mov rdi, [rcx+rax*8]; call qword ptr [0xffffffff81b63be8];
0xffffffff810f2fad: add [rdx+0x48], dh; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff810f30a8: xchg esp, eax; mul dword ptr [rax+0x5d000002]; ret;
0xffffffff810f3793: mov byte ptr [rax], 0; add rsp, 0x10; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff810f3794: add [rax], al; add rsp, 0x10; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff810f3796: add rsp, 0x10; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff810f3797: add esp, 0x10; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff810f38b1: add al, 0x75; leave; mov rax, gs:[0x14d00]; mov dword ptr [rax+0x2e0], 0; pop rbp; ret;
0xffffffff810f38b3: leave; mov rax, gs:[0x14d00]; mov dword ptr [rax+0x2e0], 0; pop rbp; ret;
0xffffffff810f38e7: ror dword ptr [rax-0x39], 1; xor [r8], r8b; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe083;
0xffffffff810f38ea: xor [r8], r8b; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe083;
0xffffffff810f38eb: xor [rax], al; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe083;
0xffffffff810f3990: ret 0x3b10;
0xffffffff810f3bea: xor [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff810f4005: mov esp, eax; call qword ptr [0xffffffff81b63c08];
0xffffffff810f40fb: cmove esp, edx; xor edi, edi; and rax, r12; add rax, [rip+0xa6ca76]; mov r12, rax; call qword ptr [0xffffffff81b63c18];
0xffffffff810f410b: mov esp, eax; call qword ptr [0xffffffff81b63c18];
0xffffffff810f41be: mov esp, eax; call qword ptr [0xffffffff81b63bf0];
0xffffffff810f465f: add [rbp+0x49], dl; mov eax, edi; mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4660: push rbp; mov r8, rdi; mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4661: mov r8, rdi; mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4662: mov eax, edi; mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4663: clc; mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4664: mov rdi, rdx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4665: mov edi, edx; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4666: xlat [rbx]; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4667: mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4668: mov ebp, esp; sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f4669: in eax, 0x48; sub esp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f466a: sub rsp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f466b: sub esp, 8; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f46a1: add [rdx+0x33], dh; mov rax, [rip+0xa6c4c5]; shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46a3: xor ecx, [rax-0x75]; add eax, 0xa6c4c5; shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46a4: mov rax, [rip+0xa6c4c5]; shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46a5: mov eax, [rip+0xa6c4c5]; shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46a6: add eax, 0xa6c4c5; shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46ab: shl rcx, 6; add rax, rcx; leave; ret;
0xffffffff810f46ac: shl ecx, 6; add rax, rcx; leave; ret;
0xffffffff810f46d2: fnstenv [rax]; leave; ret;
0xffffffff810f4716: out 0xff, al; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff810f4717: out 0xff, al; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff810f4938: ret 0xa6;
0xffffffff810f5226: ret 0xbb48;
0xffffffff810f587c: mov r12, rdi; push rbx; sub rsp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f587d: mov esp, edi; push rbx; sub rsp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f587e: cld; push rbx; sub rsp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f587f: push rbx; sub rsp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f5880: sub rsp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f5881: sub esp, 0x10; mov r14, [rdi]; mov rdi, [rdi+0x30]; call qword ptr [0xffffffff81b63bd8];
0xffffffff810f6856: ret 0x3872;
0xffffffff810f6aff: ret 0xbd49;
0xffffffff810f7149: mov esp, eax; call qword ptr [0xffffffff81b63c00];
0xffffffff810f7733: xchg esp, eax; cmpsb [rsi], [rdi]; add [rax-0x7d], cl; ret 0xff28;
0xffffffff810f84b7: ret 0x8128;
0xffffffff810f8652: ret 0xb849;
0xffffffff810f8a4f: leave; mov eax, 0x40; ret;
0xffffffff810f8a7a: ret 0xd275;
0xffffffff810f9329: mov esp, [rcx+0x40]; mov [rbp-0x40], rcx; mov [rbp-0x48], rax; mov rdi, [rdi]; mov [rbp-0x30], rbx; call qword ptr [0xffffffff81b63c00];
0xffffffff810f9fa0: ret 0xa540;
0xffffffff810fa5a6: push qword ptr [rbp-0x30]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff810fa653: ret 0x2548;
0xffffffff810fa8f7: add eax, 0xde63a3; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810fa8fa: fiadd st, word ptr [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810fb105: ret 0xaa00;
0xffffffff810fb109: or dword ptr [rcx+rcx*4-0x29], 0x4ad43ee8; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff810fb3a0: xchg [rax+0xf000000], esp; xchg ebp, eax; ret 0x854d;
0xffffffff810fb6db: ret 0x4b;
0xffffffff810fc289: push rax; sbb [rax-0x77], cl; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810fc28a: sbb [rax-0x77], cl; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff810fca04: adc al, [rax]; add rsp, 0x88; pop rbx; pop r12; pop rbp; ret;
0xffffffff810fe61b: xchg esp, eax; ror byte ptr [rax-0x7f], 0xfa; shl byte ptr [rax-0x3d6bf07f], cl; or eax, edx; ret;
0xffffffff810ff8ca: ret 0x3910;
0xffffffff810ffc20: cmp cl, [rax-9]; add ebx, [rdi+0xfffffff]; xchg esp, eax; ret 0x8548;
0xffffffff810ffc23: add ebx, [rdi+0xfffffff]; xchg esp, eax; ret 0x8548;
0xffffffff81100e12: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rbx+rax-0x3a], cl; add al, [rax]; leave; ret;
0xffffffff81100e14: add [rax-0x7b], cl; shl byte ptr [rbx+rax-0x3a], cl; add al, [rax]; leave; ret;
0xffffffff81100e17: shl byte ptr [rbx+rax-0x3a], cl; add al, [rax]; leave; ret;
0xffffffff81100e19: add eax, esi; add al, [rax]; leave; ret;
0xffffffff81100e1a: mov byte ptr [rdx], 0; leave; ret;
0xffffffff811014d3: ret 0xca8;
0xffffffff811015c6: ror byte ptr [rax-0x7d], 0xc4; cmp [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81102d37: shl byte ptr [rbp+9], 0x48; add esp, 0x30; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81102d5c: mov eax, [rbp-0x34]; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81102d5e: int3; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81102da1: sub dl, [rax]; sub eax, 0xfffffdb7; leave; ret;
0xffffffff81102da3: sub eax, 0xfffffdb7; leave; ret;
0xffffffff81102e5a: inc dword ptr [rbp-0x3f6bf040]; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e68: xor [r11-0x3f7afe40], al; sete al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e69: xor [rbx-0x3f7afe40], al; sete al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e6c: add [rbp-0x3f6bf040], eax; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e6d: test eax, eax; sete al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e6f: sete al; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81102e70: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x5d], bl; ret;
0xffffffff81103370: ret 0xcf0;
0xffffffff8110365d: sbb [rax-0x77], cl; push rcx; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81103660: push rcx; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811036f0: adc eax, 0x415bfff9; pop rsp; pop rbp; ret;
0xffffffff81104170: pop rsp; add [rax], eax; add [rcx+rcx*4-0xe], cl; shr rdx, 0x12; and edx, 0xff8; call qword ptr [0xffffffff81b63c10];
0xffffffff81105e39: ret 0xef30;
0xffffffff81105e56: ret 0xef68;
0xffffffff8110615f: adc cl, [rax-0x75]; or qword ptr [rax+0x18], 8; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106160: mov rax, [rax+0x48]; or qword ptr [rax+0x18], 8; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106161: mov eax, [rax+0x48]; or qword ptr [rax+0x18], 8; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106164: or qword ptr [rax+0x18], 8; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106165: or dword ptr [rax+0x18], 8; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106167: sbb [rax], cl; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81106168: or [rax-0x77], cl; fmul st, dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff811062a0: pushfq; mov edi, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff811062a1: mov edi, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff81106f68: sub eax, 0xffffa292; leave; ret;
0xffffffff811078b7: fucomip st, st(0); xor ecx, [rax+0xe]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811078b9: xor ecx, [rax+0xe]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8110803e: ret 0x7890;
0xffffffff81108112: ret 0x7a80;
0xffffffff811082e4: ret 0xf39e;
0xffffffff8110839a: ret 0xb0f3;
0xffffffff811083aa: ret 0xdd8a;
0xffffffff8110858c: dec dword ptr [rax-0x7d]; add eax, 0xdd87b3; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8110858f: add eax, 0xdd87b3; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81108590: mov bl, 0x87; fld st, qword ptr [rax]; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81108592: fld st, qword ptr [rax]; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff811093bf: ret 0x1c76;
0xffffffff81109a7d: add r14b, al; add eax, 0xdd7402; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81109a7e: add dh, al; add eax, 0xdd7402; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81109a80: add eax, 0xdd7402; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81109a81: add dh, [rbp+rbx*8]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81109a83: fld st, qword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81109d42: ret 0x28ba;
0xffffffff8110a939: xor eax, 0x415b0000; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8110b0d2: ret 0x8840;
0xffffffff8110b148: ret 0x107;
0xffffffff8110b1a6: ret 0xc73;
0xffffffff8110b3aa: ret 0xdd5a;
0xffffffff8110b967: cld; sbb eax, 0x415b0776; pop rsp; pop r13; pop rbp; ret;
0xffffffff8110b968: sbb eax, 0x415b0776; pop rsp; pop r13; pop rbp; ret;
0xffffffff8110b99c: pop rsp; setne al; pop r13; pop rbp; ret;
0xffffffff8110dae1: ret 0x65f0;
0xffffffff8110db08: ret 0x3ec3;
0xffffffff8110dc96: ret 0xe9d;
0xffffffff8110df8b: and eax, 0x81c27018; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8110e12c: ret 0x9d7e;
0xffffffff8110e177: ret 0xf763;
0xffffffff8110e203: ret 0xf773;
0xffffffff8110e96a: ret 0xe150;
0xffffffff8110eb76: leave; add [rax], al; add al, [rax]; mov [rdi+8], ecx; ret;
0xffffffff8110f805: mov [r12+0x10], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8110f806: mov [rsp+0x10], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8110f808: and al, 0x10; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111006a: or [rcx-0x3b090b8b], cl; add dh, [rdi+rax+0x48]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81110093: test [rcx+0x3b], eax; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111068a: ret 0xd00;
0xffffffff811107ea: ret 0xf844;
0xffffffff81111d2e: pop rsp; and al, 0x20; mov [r12+0x28], rcx; btr qword ptr [r12], 0; call qword ptr [0xffffffff81c27008];
0xffffffff81112aa5: ret 0x6a28;
0xffffffff81113166: out 0x4c, al; mov esp, [rbp-0x48]; mov byte ptr [r14], 0; call qword ptr [0xffffffff81c27018];
0xffffffff81113168: mov esp, [rbp-0x48]; mov byte ptr [r14], 0; call qword ptr [0xffffffff81c27018];
0xffffffff81113563: ret 0x5ba;
0xffffffff811138e6: pop rsp; mov rax, r8; pop r13; pop r14; pop rbp; ret;
0xffffffff811139ef: sub cl, [rcx+0x415b3843]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811139f1: cmp [r11+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81113a6e: idiv edi; leave; ret;
0xffffffff81113b93: ret 0xf72e;
0xffffffff81113b9c: add rsp, 0xb0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81113b9d: add esp, 0xb0; pop rbx; pop r12; pop rbp; ret;
0xffffffff81113c29: ret 0x1076;
0xffffffff81113c8e: ret 0xfc58;
0xffffffff81113d18: ret 0x9e;
0xffffffff81113d31: ret 0x8a;
0xffffffff811140ce: ret 0x6d87;
0xffffffff811141f6: ret 0x11a;
0xffffffff811142dc: ret 0x20a;
0xffffffff811143d4: ret 0xff70;
0xffffffff811148af: ret 0xa4;
0xffffffff81115189: xchg esp, eax; sti; dec dword ptr [rcx-0x75]; or [rax-0x73], r9b; push rax; jmp far fword ptr [rax+0x450f4c01];
0xffffffff811155c6: ret 0xff28;
0xffffffff8111569b: ret 0x7475;
0xffffffff811156ad: ret 0x6275;
0xffffffff81115c8a: ret 0xfb89;
0xffffffff81115e57: xor eax, 0x415b004a; pop rsp; pop r13; pop rbp; ret;
0xffffffff81115e9b: add [rax-0x77], cl; in eax, 0xe8; pop rsp; or ah, bh; call far fword ptr [rbp-0x3d];
0xffffffff81115e9e: in eax, 0xe8; pop rsp; or ah, bh; call far fword ptr [rbp-0x3d];
0xffffffff81115ea0: pop rsp; or ah, bh; call far fword ptr [rbp-0x3d];
0xffffffff81115f39: adc eax, [rdi+0x415bfffb]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8111614d: ror byte ptr [rax+1], 1; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81116d02: ret 0xda77;
0xffffffff81117c34: add [rax], al; add [rcx-0x531413bb], cl; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81117c36: add [rcx-0x531413bb], cl; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81117c3b: lodsb [rsi]; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81118ca3: xchg esp, eax; ret 0xbe0f;
0xffffffff81118ca4: ret 0xbe0f;
0xffffffff81118cc3: ret 0x2b9;
0xffffffff81118d08: add [rax], al; add [rcx-0x501413bb], cl; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81118d0a: add [rcx-0x501413bb], cl; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81118d0f: scasd [rdi]; leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff81118d91: ret 0x40;
0xffffffff81119332: mov rdx, [rbp-0x28]; mov [rbx], rdx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81119333: mov edx, [rbp-0x28]; mov [rbx], rdx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81119374: add rsp, 0x28; mov rax, 0xffffffffffffffa1; pop rbx; pop rbp; ret;
0xffffffff81119375: add esp, 0x28; mov rax, 0xffffffffffffffa1; pop rbx; pop rbp; ret;
0xffffffff81119698: mov [rbx+0x68], rax; mov qword ptr [rbx+0xb8], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81119699: mov [rbx+0x68], eax; mov qword ptr [rbx+0xb8], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8111969c: mov qword ptr [rbx+0xb8], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8111969d: mov dword ptr [rbx+0xb8], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8111969e: cmp dword ptr [rax], 0; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff811196b5: div byte ptr [rbp+0x32]; mov rax, [rdi+0x68]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff811196b8: mov rax, [rdi+0x68]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff811196b9: mov eax, [rdi+0x68]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8111a0c7: ret 0x90a0;
0xffffffff8111b27d: mov [r12], rdx; add rsp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b27e: mov [rsp], edx; add rsp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b27f: adc al, 0x24; add rsp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b280: and al, 0x48; add esp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b281: add rsp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b282: add esp, 0x60; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111b6ca: ret 0x1b4;
0xffffffff8111c00d: ret 0xef0;
0xffffffff8111c077: movsxd eax, [rax+rcx*2-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8111c311: ret 0x8111;
0xffffffff8111c327: ret 0xef8;
0xffffffff8111c351: ret 0x5fe0;
0xffffffff8111c50c: sub [rcx-0x76b7bbbd], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8111c64a: push qword ptr [rsi+7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c665: mov rdx, [rbx+0xe8]; mov [rax+0xe8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c666: mov edx, [rbx+0xe8]; mov [rax+0xe8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c66a: add [rax], al; mov [rax+0xe8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c66c: mov [rax+0xe8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c66d: mov [rax+0xe8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111c7df: adc [rcx+0x40bf], eax; add al, ch; xchg ebp, eax; pop rsp; hlt; call far fword ptr [rbp-0x3d];
0xffffffff8111c7e3: add [rax], al; add al, ch; xchg ebp, eax; pop rsp; hlt; call far fword ptr [rbp-0x3d];
0xffffffff8111c7e5: add al, ch; xchg ebp, eax; pop rsp; hlt; call far fword ptr [rbp-0x3d];
0xffffffff8111c7e7: xchg ebp, eax; pop rsp; hlt; call far fword ptr [rbp-0x3d];
0xffffffff8111c7e8: pop rsp; hlt; call far fword ptr [rbp-0x3d];
0xffffffff8111d977: ret 0xc720;
0xffffffff8111da32: ret 0x77c;
0xffffffff8111daec: ret 0xca30;
0xffffffff8111e41a: ret 0xf61c;
0xffffffff8111e901: test [rax+0x48000009], ch; mov [rbx+0x18], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111e904: add [rax], al; mov [rbx+0x18], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111e906: mov [rbx+0x18], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111e907: mov [rbx+0x18], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8111e997: ret 0xd729;
0xffffffff8111f6b1: ret 0x86ff;
0xffffffff8111fc4a: ret 0xfdb;
0xffffffff8111fc56: and eax, 0xfffffff2; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8111fd31: inc dword ptr [rbp+0x480c74c0]; add esp, 0x88; cdqe; pop rbx; pop rbp; ret;
0xffffffff8111fd35: or al, 0x48; add esp, 0x88; cdqe; pop rbx; pop rbp; ret;
0xffffffff8111fd51: add rsp, 0x88; cdqe; pop rbx; pop rbp; ret;
0xffffffff8111fd52: add esp, 0x88; cdqe; pop rbx; pop rbp; ret;
0xffffffff8112005a: add [rax-0x75], cl; adc dword ptr [rax-0x39fffffd], 0xffffff80; rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8112005d: adc dword ptr [rax-0x39fffffd], 0xffffff80; rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff81120063: add al, 5; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81120064: rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff811200b9: sbb dh, al; add eax, 0xdc1687; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811200bb: add eax, 0xdc1687; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811200bc: xchg [rsi], edx; fadd st, qword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811200be: fadd st, qword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81120a58: ret 0xd2e8;
0xffffffff81120c52: rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81121fc4: ret 0x86e8;
0xffffffff811223c8: xchg [rbp+rax-0x17ff0000], edi; in eax, dx; push 0x415bfff3; pop rsp; pop rbp; ret;
0xffffffff811223ca: add eax, 0xe8010000; in eax, dx; push 0x415bfff3; pop rsp; pop rbp; ret;
0xffffffff811223cd: add eax, ebp; in eax, dx; push 0x415bfff3; pop rsp; pop rbp; ret;
0xffffffff811223cf: in eax, dx; push 0x415bfff3; pop rsp; pop rbp; ret;
0xffffffff811223d0: push 0x415bfff3; pop rsp; pop rbp; ret;
0xffffffff811224d1: ret 0x488b;
0xffffffff811225a7: add eax, [rbx+0x415b08c8]; pop rsp; pop rbp; ret;
0xffffffff811225a9: enter 0x5b08, 0x41; pop rsp; pop rbp; ret;
0xffffffff811226ca: mov edx, 0xb80028; add [rax], al; add [rdx+2], dh; leave; ret;
0xffffffff811226cf: add [rax], al; add [rdx+2], dh; leave; ret;
0xffffffff811226d1: add [rdx+2], dh; leave; ret;
0xffffffff811226da: and bh, [rdx+rdi*8-0x3ba7401]; leave; ret;
0xffffffff811226db: mov esp, 0x458bfffa; cld; leave; ret;
0xffffffff81122882: ret 0xdc40;
0xffffffff81122893: leave; add [rax], eax; pop rbp; ret;
0xffffffff811228de: shl byte ptr [rbp+0x36], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811228e0: add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811229ac: shl byte ptr [rbp+0x13], 0x48; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff81122bd8: ret 0x7200;
0xffffffff81123240: ret 0x1758;
0xffffffff811239d9: xor [rcx], al; add [rcx-0x3b7cb728], cl; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811239db: add [rcx-0x3b7cb728], cl; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81123a26: inc dword ptr [rbp+0x480774c0]; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81123a4a: add [rax], eax; mov eax, [rbp-0x1c]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8112409c: fcomp st, qword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811240c9: inc dword ptr [rcx-0x3a]; and al, 4; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811240cd: and al, 4; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811241e2: pop rsp; mov dword ptr [r13+0x48], 0; pop r13; pop rbp; ret;
0xffffffff81124807: ret 0;
0xffffffff8112488f: add eax, 0x750400f6; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81124892: add al, 0x75; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81124a58: add al, 0x10; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811255e7: inc dword ptr [rbp+0x480974c0]; add esp, 0x10; cdqe; pop rbx; pop rbp; ret;
0xffffffff81125684: inc dword ptr [rbp+0x480974c0]; cwde; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81125686: shl byte ptr [rcx+rcx+0x48], 0x98; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81125688: or [rax-0x68], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81125689: cdqe; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112568a: cwde; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112651e: ret 0xfeb8;
0xffffffff8112658a: xchg esp, eax; rol byte ptr [rcx+0x5c], 0x41; pop rbp; pop rbp; ret;
0xffffffff81126938: ret 0xf6b8;
0xffffffff81127160: pop rsp; mov al, [0x894cc84d8b4c0000]; iretd;
0xffffffff8112728d: add al, ch; cli; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81127290: cli; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811275a2: pop rsp; xor eax, 1; pop rbp; movzx eax, al; neg eax; ret;
0xffffffff811278fa: ret 0x112;
0xffffffff81128a31: ret 0x4875;
0xffffffff81128b16: ret 0xff8c;
0xffffffff81128d2c: ret 0xa3e9;
0xffffffff81129240: cli; add ecx, [rdi]; xchg esp, eax; ret 0x8b48;
0xffffffff81129241: add ecx, [rdi]; xchg esp, eax; ret 0x8b48;
0xffffffff8112a467: adc [rax], al; add [rax-0x77], cl; xor [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8112a469: add [rax-0x77], cl; xor [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8112a50b: sbb [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8112b0f7: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff8112c22a: and al, 0x30; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8112c52b: and eax, 1; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112c537: add rsp, 0x38; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112c538: add esp, 0x38; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112c660: leave; add [rax], al; add [rax-0x7d], cl; ret;
0xffffffff8112c97c: shl byte ptr [rdi+rbp+0x48], cl; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112d57a: ret 0x95;
0xffffffff8112d668: ret 0x6372;
0xffffffff8112d8bd: ret 0x4377;
0xffffffff8112dbd2: xor edx, edx; xchg [rbx+0x20], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8112dbd4: xchg [rbx+0x20], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8112dcb2: mov rax, [rdx+0x708]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112dcb3: mov eax, [rdx+0x708]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112e914: inc dword ptr [rbx+0x974fcf8]; add rsp, 0x10; cdqe; pop rbx; pop rbp; ret;
0xffffffff8112e923: mov qword ptr [rbx], 0xffffffff8112e8e0; add rsp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop rbp; ret;
0xffffffff8112e924: mov dword ptr [rbx], 0x8112e8e0; add rsp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop rbp; ret;
0xffffffff8112e92a: add rsp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop rbp; ret;
0xffffffff8112e92b: add esp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop rbp; ret;
0xffffffff8112e99d: ror byte ptr [rcx-0x77], 0x55; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8112e9a0: push rbp; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8112ef60: add rsp, 0x10; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112ef61: add esp, 0x10; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112f02d: add rsp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112f02e: add esp, 0x10; mov rax, 0xfffffffffffffdfc; pop rbx; pop r12; pop rbp; ret;
0xffffffff8112f28c: pop rsp; add [rax+1], edi; mov [rdi], rsi; ret;
0xffffffff8112f72b: shr dword ptr [rax], 1; insd [rdi], dx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8112f72d: insd [rdi], dx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8112f7f1: mov [0xfffe26e6e800b406], eax; leave; ret;
0xffffffff8112f806: mov al, [0xfff654a1e88112f7]; leave; ret;
0xffffffff8112f807: not dword ptr [rdx]; sub eax, 0xfff654a1; leave; ret;
0xffffffff8112f809: sub eax, 0xfff654a1; leave; ret;
0xffffffff8112f822: not dword ptr [rdx]; sub eax, 0xfff65486; leave; ret;
0xffffffff8112f824: sub eax, 0xfff65486; leave; ret;
0xffffffff8112f826: xchg [rsi+rsi*8-1], dl; leave; ret;
0xffffffff8112f827: push rsp; idiv bh; leave; ret;
0xffffffff8112f828: idiv bh; leave; ret;
0xffffffff8112f8eb: pop r8; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8112fb8a: mov byte ptr [rip+0xad8973], 0; mov eax, [rbp-0x10]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112fb8f: add [rax], al; mov eax, [rbp-0x10]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112fb91: mov eax, [rbp-0x10]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8112fba3: ret 0x590;
0xffffffff811304c3: add esi, eax; add eax, 0xad7fb9; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811304c5: add eax, 0xad7fb9; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811305af: or al, [rax+0x6e8302ce]; pop rsp; add [rcx-0x3fce3cea], ecx; ret;
0xffffffff811305b4: outsb dx, [rsi]; pop rsp; add [rcx-0x3fce3cea], ecx; ret;
0xffffffff811305b5: pop rsp; add [rcx-0x3fce3cea], ecx; ret;
0xffffffff81130815: ret 0x3674;
0xffffffff811308be: push rsp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81130ffd: ret 0x1090;
0xffffffff81131062: ret 0x720;
0xffffffff81131126: add rsp, 8; xor eax, eax; pop rbx; pop r13; pop rbp; ret;
0xffffffff81131127: add esp, 8; xor eax, eax; pop rbx; pop r13; pop rbp; ret;
0xffffffff811311a4: add [rcx+0x40c65c50], ecx; pop rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811311a7: pop rsp; mov byte ptr [rax+0x58], 0; pop rbx; pop r12; pop rbp; ret;
0xffffffff811311aa: pop rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81131249: mov byte ptr [rbx+0x58], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811318f7: add esi, eax; add eax, 0xad6b85; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811318f9: add eax, 0xad6b85; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81131bc1: ret 0x29e8;
0xffffffff81131df4: mov rax, [rbp-0x10]; mov [rax+0x18], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81131df5: mov eax, [rbp-0x10]; mov [rax+0x18], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81131df8: mov [rax+0x18], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81131df9: mov [rax+0x18], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81132722: add esi, eax; add eax, 0xad5d5a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81132724: add eax, 0xad5d5a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81132893: ret 0xf541;
0xffffffff811329b5: add dword ptr [rax], 0xffffffc6; add eax, 0xad5afe; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811329ba: add dh, al; add eax, 0xad5afe; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811329bc: add eax, 0xad5afe; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81133439: add al, ch; xor [rbp+0x48], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8113343b: xor [rbp+0x48], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81133ae5: ret 0x3a75;
0xffffffff81133b6e: xor [rax-0x75], cl; xchg eax, esp; add [rax], al; add [rax+0x39], cl; ret 0x574;
0xffffffff81133b71: xchg eax, esp; add [rax], al; add [rax+0x39], cl; ret 0x574;
0xffffffff81133fce: pop rsp; cmovae rax, rdx; pop r13; pop r14; pop rbp; ret;
0xffffffff811348de: ret 0x6170;
0xffffffff81134c87: fcomp st, dword ptr [rbx+0x41]; pop rsp; cmovs rax, rdx; pop r13; pop rbp; ret;
0xffffffff81134c8a: pop rsp; cmovs rax, rdx; pop r13; pop rbp; ret;
0xffffffff81134e42: ret 0xee69;
0xffffffff81134f65: dec dword ptr [rcx+rcx*4-0x20]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81134f9a: ret 0x4845;
0xffffffff811350ef: shl byte ptr [rbp+9], 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8113514f: ret 0x3660;
0xffffffff8113560d: out dx, eax; leave; insb [rdi], dx; add [rcx-0x77], al; ret 0x8545;
0xffffffff8113560e: leave; insb [rdi], dx; add [rcx-0x77], al; ret 0x8545;
0xffffffff8113573a: ret 0xd4e9;
0xffffffff81135c3e: mov [0x8083c600000084], eax; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81135ee6: fucomip st, st(0); xchg esp, eax; ret 0x47;
0xffffffff81135ee8: xchg esp, eax; ret 0x47;
0xffffffff81135ee9: ret 0x47;
0xffffffff811363f6: ret 0xd0eb;
0xffffffff81136446: ret 0x37a4;
0xffffffff81136b63: push rdi; cmp [rax-0x7d], cl; cli; add [rdi+2], edi; leave; ret;
0xffffffff81136b64: cmp [rax-0x7d], cl; cli; add [rdi+2], edi; leave; ret;
0xffffffff81136b67: cli; add [rdi+2], edi; leave; ret;
0xffffffff81136b68: add [rdi+2], edi; leave; ret;
0xffffffff81136b7b: inc dword ptr [rdi]; mov rax, [rbp-8]; leave; ret;
0xffffffff81136b7c: add [r8-0x75], r9b; clc; leave; ret;
0xffffffff81136c88: ret 0x4d73;
0xffffffff81136ffd: add rsp, 8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8113710d: ret 0x37b0;
0xffffffff811376fa: add [rax], al; add [rax], al; add [rax-0x3838b7ab], dl; mov al, [0xb0e8e5894881c365]; mov esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff811376fc: add [rax], al; add [rax-0x3838b7ab], dl; mov al, [0xb0e8e5894881c365]; mov esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff811376fe: add [rax-0x3838b7ab], dl; mov al, [0xb0e8e5894881c365]; mov esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff81137704: mov al, [0xb0e8e5894881c365]; mov esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff8113770d: mov esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff81137951: ret 0xd575;
0xffffffff81137cd4: add [rcx-0x73], cl; xchg esp, eax; and al, 0x98; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff81137cd7: xchg esp, eax; and al, 0x98; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff81137e4c: push rbx; xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81137f1c: xor cl, bh; add [rax], al; leave; ret;
0xffffffff81138b1a: ret 0x37c8;
0xffffffff81138b45: ret 0x6540;
0xffffffff81138cc7: mov [rbx+0x70], rcx; mov [rax+0x28], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138cc8: mov [rbx+0x70], ecx; mov [rax+0x28], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138ccb: mov [rax+0x28], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138ccc: mov [rax+0x28], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138e7f: lea edi, [rip+0x458bfffe]; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138ef7: adc eax, 0x8bfffe3d; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138ef8: cmp eax, 0x458bfffe; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81138ff3: add eax, 0xacf50b; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8113906d: add [rbp+9], dh; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811396ba: dec dword ptr [rdi]; xchg esp, eax; ret 0x8d48;
0xffffffff8113a139: ret 0xace3;
0xffffffff8113a78c: fild st, dword ptr [rcx+0x400e2]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8113a78f: add [rax+rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8113a790: add al, 0; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8113aa39: ret 0xacda;
0xffffffff8113b75b: inc esi; add eax, 0xaccda1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8113b75d: add eax, 0xaccda1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8113bdfb: out 0xe8, eax; fild st, word ptr [rdx-0x27760002]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8113bdfd: fild st, word ptr [rdx-0x27760002]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8113be01: mov eax, ebx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8113c5da: ret 0xc72;
0xffffffff8113c6dd: mov [rbx+0x18], rax; mov [rdi], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6de: mov [rbx+0x18], eax; mov [rdi], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6e1: mov [rdi], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6fa: mov rcx, [rbx+8]; mov [rbx+0x18], rcx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6fb: mov ecx, [rbx+8]; mov [rbx+0x18], rcx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6fe: mov [rbx+0x18], rcx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c6ff: mov [rbx+0x18], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c709: cdqe; add [rbx+0x18], rax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c70a: cwde; add [rbx+0x18], rax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c70b: add [rbx+0x18], rax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113c70c: add [rbx+0x18], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8113d14e: sbb [rax+rcx*4+0x2c], al; add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8113d2a9: ret 0xd829;
0xffffffff8113d32a: sbb eax, 0x18438948; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d32b: mov [rbx+0x18], rax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d355: shl byte ptr [rbp+rbp+0x48], 0x98; add [rbx+0x18], rax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d358: cdqe; add [rbx+0x18], rax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d359: cwde; add [rbx+0x18], rax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d35a: add [rbx+0x18], rax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d35b: add [rbx+0x18], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d42d: sbb [r9+r8-0x37], cl; mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d42e: sbb [rcx+rax-0x37], cl; mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d42f: add rcx, r9; mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d430: add ecx, ecx; mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d431: leave; mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d432: mov [rbx+0x18], rcx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d433: mov [rbx+0x18], ecx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d467: mov [rbx+0x18], r8; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d468: mov [rbx+0x18], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8113d54b: rol byte ptr [rax+0xf], cl; xchg esp, eax; mov dword ptr [rcx+0x38], 0x844a74f8; shl byte ptr [rbp+8], cl; mov rax, 0xffffffffffffffea; ret;
0xffffffff8113d54e: xchg esp, eax; mov dword ptr [rcx+0x38], 0x844a74f8; shl byte ptr [rbp+8], cl; mov rax, 0xffffffffffffffea; ret;
0xffffffff8113d7f8: shl byte ptr [rbp-0x34], 0x48; add esp, 0x10; mov eax, 0xffffffff; pop rbx; pop rbp; ret;
0xffffffff8113d7fa: int3; add rsp, 0x10; mov eax, 0xffffffff; pop rbx; pop rbp; ret;
0xffffffff8113d7fb: add rsp, 0x10; mov eax, 0xffffffff; pop rbx; pop rbp; ret;
0xffffffff8113d7fc: add esp, 0x10; mov eax, 0xffffffff; pop rbx; pop rbp; ret;
0xffffffff8113d991: movsxd rdx, eax; add rsp, 0x100; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff8113d992: movsxd edx, eax; add rsp, 0x100; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff8113d994: add rsp, 0x100; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff8113d995: add esp, 0x100; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff8113e07a: mov eax, [0x41e089445bffffff]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8113eaa2: ret 0xd13;
0xffffffff8113eac1: ret 0xd2b;
0xffffffff8113ec8a: and al, 0x58; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8113ec8b: pop rax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8113f2a2: ret 0xca20;
0xffffffff8113f746: ret 0x2c6;
0xffffffff8113fb7b: add eax, 0xda3c5b; add al, ch; cmp dl, [rax+0x415bffff]; pop rsp; pop rbp; ret;
0xffffffff8113fb7e: fiadd st, dword ptr [rax]; add al, ch; cmp dl, [rax+0x415bffff]; pop rsp; pop rbp; ret;
0xffffffff8113fb80: add al, ch; cmp dl, [rax+0x415bffff]; pop rsp; pop rbp; ret;
0xffffffff8113fb82: cmp dl, [rax+0x415bffff]; pop rsp; pop rbp; ret;
0xffffffff8113fd6a: ret 0x37d8;
0xffffffff8113ffe0: pop rsp; sbb eax, 0xc35dffff; xor eax, eax; ret;
0xffffffff811401a1: xchg esp, eax; std; call far fword ptr [rbp-0x3d];
0xffffffff811405f0: or eax, 0xe8e7894c; mov bh, 0x8f; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff811405f3: out 0xe8, eax; mov bh, 0x8f; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff811405f5: mov bh, 0x8f; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff81140917: sbb eax, 0x415bfff2; pop rsp; pop r13; pop rbp; ret;
0xffffffff8114094d: ret 0xb30a;
0xffffffff811409e2: ret 0x174;
0xffffffff81141854: add al, [rax]; add al, ch; xchg esp, eax; stosb [rdi]; call far fword ptr [rbx+0x41];
0xffffffff81141856: add al, ch; xchg esp, eax; stosb [rdi]; call far fword ptr [rbx+0x41];
0xffffffff81141858: xchg esp, eax; stosb [rdi]; call far fword ptr [rbx+0x41];
0xffffffff81141d79: sbb [rbx], cl; add [rax+0x400], bh; mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d7a: or eax, [rax]; mov eax, 0x400; mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d7b: add [rax+0x400], bh; mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d7c: mov eax, 0x400; mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d7f: add [rax], al; mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d80: add [rax-0x75], cl; pop rbp; clc; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d81: mov rbx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d82: mov ebx, [rbp-8]; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d83: pop rbp; clc; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d84: clc; sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d85: sub rax, [rsp+0x30]; leave; ret;
0xffffffff81141d86: sub eax, [rsp+0x30]; leave; ret;
0xffffffff81141d88: and al, 0x30; leave; ret;
0xffffffff8114242f: ret 0x7275;
0xffffffff81142522: ret 0xda12;
0xffffffff81142600: ret 0x480a;
0xffffffff81142916: add [rax], al; and dword ptr [rbx+0x30], 0xffffdfff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81142918: and dword ptr [rbx+0x30], 0xffffdfff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114299c: inc dword ptr [rcx+0x2000304b]; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114299d: or dword ptr [rbx+0x30], 0x2000; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811429a0: add [rax], ah; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81143507: push rbp; xchg esp, eax; stc; inc dword ptr [rbx+0x5bfe1863]; pop rbp; ret;
0xffffffff81143508: xchg esp, eax; stc; inc dword ptr [rbx+0x5bfe1863]; pop rbp; ret;
0xffffffff81143972: ret 0x3c50;
0xffffffff81143c25: ret 0x3310;
0xffffffff81143c3f: mov [rbx], rdx; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81143c40: mov [rbx], edx; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81143ea2: ret 0x5889;
0xffffffff81144715: ret 0x3feb;
0xffffffff81144c36: dec dword ptr [rcx+rcx*4-0x20]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81144c37: mov rax, r12; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81144c38: mov eax, esp; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81144f5d: ret 0x4c70;
0xffffffff81145891: imul eax, [rax], 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81145afc: leave; int1; call far fword ptr [rbp-0x3d];
0xffffffff81145c49: ret 0xb000;
0xffffffff81145f75: fisttp dword ptr [rax-0x73], st; enter 0xc985, 0xf; xchg esp, eax; ret;
0xffffffff81145f79: enter 0xc985, 0xf; xchg esp, eax; ret;
0xffffffff8114609f: shr bl, cl; out dx, al; leave; mov rax, 0xfffffffffffffff2; ret;
0xffffffff811460a1: out dx, al; leave; mov rax, 0xfffffffffffffff2; ret;
0xffffffff8114662f: dec dword ptr [rax-0x75]; and al, 8; leave; ret;
0xffffffff81146630: mov rax, [rsp+8]; leave; ret;
0xffffffff81146631: mov eax, [rsp+8]; leave; ret;
0xffffffff81146633: and al, 8; leave; ret;
0xffffffff8114666a: xchg esi, eax; leave; mov rax, 0xffffffffffffffdc; ret;
0xffffffff8114666b: leave; mov rax, 0xffffffffffffffdc; ret;
0xffffffff811466cc: ret 0x8480;
0xffffffff81146800: inc dword ptr [rbp-0x47f38740]; add [rax], al; add [rax], al; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146802: sar byte ptr [rax+0xc], 0xb8; add [rax], al; add [rax], al; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146804: or al, 0xb8; add [rax], al; add [rax], al; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146805: mov eax, 0; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146806: add [rax], al; add [rax], al; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146807: add [rax], al; add [rax+0xf], cl; clc; leave; ret;
0xffffffff81146808: add [rax], al; cmove rax, [rbp-8]; leave; ret;
0xffffffff81146809: add [rax+0xf], cl; clc; leave; ret;
0xffffffff8114680a: cmove rax, [rbp-8]; leave; ret;
0xffffffff8114680b: cmove eax, [rbp-8]; leave; ret;
0xffffffff8114687e: movsxd rdx, eax; test eax, eax; cmovns rdx, [rbp-0x18]; leave; mov rax, rdx; ret;
0xffffffff8114687f: movsxd edx, eax; test eax, eax; cmovns rdx, [rbp-0x18]; leave; mov rax, rdx; ret;
0xffffffff81146881: test eax, eax; cmovns rdx, [rbp-0x18]; leave; mov rax, rdx; ret;
0xffffffff81146883: cmovns rdx, [rbp-0x18]; leave; mov rax, rdx; ret;
0xffffffff81146884: cmovns edx, [rbp-0x18]; leave; mov rax, rdx; ret;
0xffffffff8114690d: add rsp, 0x88; mov rax, 0xffffffffffffffdc; pop rbx; pop r12; pop rbp; ret;
0xffffffff8114690e: add esp, 0x88; mov rax, 0xffffffffffffffdc; pop rbx; pop r12; pop rbp; ret;
0xffffffff8114695d: ret 0xe983;
0xffffffff81146eab: add eax, 0x85000000; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81146f53: and al, 4; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8114733b: leave; mov [rbx+0x50], rcx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8114751a: inc dword ptr [rbp+0x480974c0]; add esp, 0x78; cdqe; pop rbx; pop rbp; ret;
0xffffffff81147534: add rsp, 0x78; cdqe; pop rbx; pop rbp; ret;
0xffffffff81147535: add esp, 0x78; cdqe; pop rbx; pop rbp; ret;
0xffffffff811476fd: add eax, 0xd9c115; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811476ff: rcr ecx, 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81147700: fld st, dword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81147792: imul eax, [rax], 0x48; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff811477a3: adc al, 0x25; sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b30c4; pop rsp; pop rbp; ret;
0xffffffff811477a4: and eax, 0x81c27018; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff811477a5: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b30c4; pop rsp; pop rbp; ret;
0xffffffff811477a8: or dword ptr [rax-0x7d], 0x415b30c4; pop rsp; pop rbp; ret;
0xffffffff81147972: ret 0xecc0;
0xffffffff81147d0a: sub eax, 0xffffff80; leave; ret;
0xffffffff81147d5b: ret 0xe61;
0xffffffff81147e5b: imul eax, [rax], 0x48; mov eax, [rbp-0x50]; leave; ret;
0xffffffff81147e5d: mov rax, [rbp-0x50]; leave; ret;
0xffffffff81147e5e: mov eax, [rbp-0x50]; leave; ret;
0xffffffff8114811d: ret 0xc641;
0xffffffff81148917: add [r13+0x22850fc0], r8b; cmp [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81148918: add [rbp+0x22850fc0], al; cmp [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8114891c: test [rdx], esp; cmp [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8114891e: cmp [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811489ae: mov esp, [rsi+0x28]; call qword ptr [0xffffffff81c27000];
0xffffffff81148a15: pop rsp; clc; call far fword ptr [rbx+0x41];
0xffffffff81148fc6: push r14; push r13; push r12; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fc7: push rsi; push r13; push r12; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fc8: push r13; push r12; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fc9: push rbp; push r12; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fca: push r12; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fcb: push rsp; push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fcc: push rbx; sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fcd: sub rsp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff81148fce: sub esp, 0x18; call qword ptr [0xffffffff81c27000];
0xffffffff811493da: pop rsp; pop rbp; mov [rip+0xd9a446], eax; ret;
0xffffffff8114955e: ret 0x3eb;
0xffffffff81149a04: add [rbp-0x1d7bf040], al; sub [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81149a08: test dl, ah; sub [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81149a0a: sub [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81149d01: ret 0x1073;
0xffffffff81149d11: ret 0x1777;
0xffffffff8114a2fd: ret 0x7872;
0xffffffff8114a993: dec dword ptr [rax+0x60]; leave; ret;
0xffffffff8114b1ca: ret 0xf8e7;
0xffffffff8114bde0: fucomip st, st(0); mov edx, 0x48ffffc0; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8114bde2: mov edx, 0x48ffffc0; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8114bde3: sar bh, 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114c133: add [rdx-5], edi; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114c147: push rbp; mov ebp, 0xc031ffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114c148: mov ebp, 0xc031ffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8114c25b: ret 0xffc6;
0xffffffff8114c293: ret 0xf3a7;
0xffffffff8114c511: in eax, 0xe8; cdq; xchg esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff8114c513: cdq; xchg esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff8114c57e: ret 0xf060;
0xffffffff8114c6a8: xchg esp, eax; mov esp, 0xcfe8ffff; or al, 0xf9; dec dword ptr [rax-0x77]; fisttp word ptr [rax-0x39], st; ret 0xffff;
0xffffffff8114ced5: and al, 0x10; add [rdi], cl; xchg esp, eax; ret 0x3d;
0xffffffff8114ced7: add [rdi], cl; xchg esp, eax; ret 0x3d;
0xffffffff8114ced9: xchg esp, eax; ret 0x3d;
0xffffffff8114d6ac: xor [rsi+0x415b0046], dl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8114df50: ret 0x3d01;
0xffffffff8114e085: ret 0xc470;
0xffffffff8114e22f: add eax, 0xaba30b; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8114e231: mov [0x415bd889480000ab], eax; pop rsp; pop rbp; ret;
0xffffffff8114e243: add eax, 0xaba2f7; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8114e245: mov [0x415bd889480000ab], al; pop rsp; pop rbp; ret;
0xffffffff8114ec28: fimul st, dword ptr [r8-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8114ed9a: ret 0x46a7;
0xffffffff8114f39a: xchg edx, eax; mov al, [0x415b08c483480046]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8114f39b: mov al, [0x415b08c483480046]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81150b46: xchg esp, eax; and al, 0x88; add [rax], eax; add [rcx], al; ret 0x5439;
0xffffffff81150b4d: ret 0x5439;
0xffffffff81152414: ret 0xf2a0;
0xffffffff8115245f: sbb eax, 0x8b000988; xchg esp, eax; and al, 0x8c; add [rax], eax; add [rcx], bh; ret 0x840f;
0xffffffff811528fd: xchg esp, eax; and al, 0x8c; add [rax], eax; add [rcx], bh; ret 0x840f;
0xffffffff81152af0: xchg esp, eax; and al, 0x8c; add [rax], eax; add [rcx], bh; ret 0x274;
0xffffffff81152dda: ret 0x988;
0xffffffff81152e96: add al, ch; mov ebp, 0x48fff33b; sub esp, 0xffffff80; pop rbx; pop rbp; ret;
0xffffffff81152e98: mov ebp, 0x48fff33b; sub esp, 0xffffff80; pop rbx; pop rbp; ret;
0xffffffff81152e9c: sub rsp, 0xffffffffffffff80; pop rbx; pop rbp; ret;
0xffffffff81152e9d: sub esp, 0xffffff80; pop rbx; pop rbp; ret;
0xffffffff81153a0f: or [rax], eax; add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81153a11: add rsp, 0x98; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81153a12: add esp, 0x98; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81154333: push 0x53890874; push 0x4bb8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81154335: or [rcx+0x4bb86853], cl; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81154337: push rbx; push 0x4bb8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81154338: push 0x4bb8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8115433a: add [r8], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811544f3: ret 0x47c0;
0xffffffff81154533: ret 0x45b0;
0xffffffff81154673: xchg esp, eax; and al, 0x30; add al, 0; add [rax-0x77], cl; fucomip st, st(0); iretd;
0xffffffff81154b17: ret 0xb112;
0xffffffff811558a6: ret 0x3924;
0xffffffff81155a2f: fdiv st, dword ptr [rbp-0x2e]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81155b7a: ror byte ptr [rax], 0x85; leave; cmovne rsi, rax; mov [rsi], edx; ret;
0xffffffff81155b7d: leave; cmovne rsi, rax; mov [rsi], edx; ret;
0xffffffff81155d07: ret 0x6840;
0xffffffff81155d79: ret 0x6820;
0xffffffff811563ac: mov byte ptr [rax], 0; mov rax, rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811563ad: add [rax], al; mov rax, rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811563af: mov rax, rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811563b0: mov eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811563b9: mov byte ptr [rax], 0; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff811565db: dec dword ptr [rcx+rcx*4+0x63]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811566d8: add rsp, 0x90; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff811566d9: add esp, 0x90; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81156e93: ret 0x6d90;
0xffffffff81157fc6: add [rax-0x7b], cl; shl byte ptr [rdi+0x48], 0x89; push 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81157fc9: shl byte ptr [rdi+0x48], 0x89; push 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81158332: ret 0x3c90;
0xffffffff81159027: sub eax, 0xfffff6c3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811590b1: add [r11+0x41], r11b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81159e88: ret 0x89e9;
0xffffffff8115a2a6: xchg esi, eax; rol byte ptr [rcx], 0; leave; ret;
0xffffffff8115a2a7: rol byte ptr [rcx], 0; leave; ret;
0xffffffff8115a360: ret 0xbfeb;
0xffffffff8115a410: add [rax], al; add [rbx+0x41], bl; pop rsp; sub eax, 0xe; pop rbp; ret;
0xffffffff8115a412: add [rbx+0x41], bl; pop rsp; sub eax, 0xe; pop rbp; ret;
0xffffffff8115a415: pop rsp; sub eax, 0xe; pop rbp; ret;
0xffffffff8115a732: ret 0xf7ff;
0xffffffff8115a8fe: dec dword ptr [rax-0x68]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115a8ff: cdqe; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115a900: cwde; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115a954: enter 0xfffd, 0xff; cdqe; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8115aa1b: adc edx, ebp; add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff8115aa9e: ret 0x4cc3;
0xffffffff8115ab79: cmovs ecx, [rcx+0x843893b]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8115ab7c: cmp ecx, [rcx-0x3fcef7bd]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8115b06b: ret 0x3cd0;
0xffffffff8115b3de: ret 0xaa30;
0xffffffff8115b66c: pop rsp; and rdx, 0xfffffffffffffff2; pop r13; pop rbp; mov rax, rdx; ret;
0xffffffff8115be9a: sub [rax-5], al; mov al, [0xf7501e283077481]; leave; ret;
0xffffffff8115be9c: sti; mov al, [0xf7501e283077481]; leave; ret;
0xffffffff8115be9d: mov al, [0xf7501e283077481]; leave; ret;
0xffffffff8115be9e: xor dword ptr [rdi+rax-0x7d], 0xf7501e2; leave; ret;
0xffffffff8115bea3: add [rbp+0xf], esi; leave; ret;
0xffffffff8115beb7: test dword ptr [rax-0x77], 0x1fe8f845; add al, 0xfc; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8115bebe: add al, 0xfc; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8115bebf: cld; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8115c07f: ret 0x3cd4;
0xffffffff8115c1de: xchg [rip-0x617ff4f], bh; pop rsp; sti; dec ecx; ret;
0xffffffff8115c1df: cmp eax, 0xf9e800b1; pop rsp; sti; dec ecx; ret;
0xffffffff8115c1e1: add al, ch; stc; pop rsp; sti; dec ecx; ret;
0xffffffff8115c1e3: stc; pop rsp; sti; dec ecx; ret;
0xffffffff8115c1e4: pop rsp; sti; dec ecx; ret;
0xffffffff8115c4ea: ret 0xeef1;
0xffffffff8115cde1: ret 9;
0xffffffff8115e657: ret 0x8f8b;
0xffffffff8115f82f: dec qword ptr gs:[rdx]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115f830: dec qword ptr [rdx]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115f831: dec dword ptr [rdx]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8115f93c: add [rax-0x77], cl; fucomip st, st(0); fwait; leave; sti; call far fword ptr [rbx+0x41];
0xffffffff8115f93f: fucomip st, st(0); fwait; leave; sti; call far fword ptr [rbx+0x41];
0xffffffff8115f941: fwait; leave; sti; call far fword ptr [rbx+0x41];
0xffffffff8115f97e: sbb [rcx-0x75], cl; xchg esp, eax; and al, 0xa8; add [rax], al; add [rbx+0x634801c3], al; ret;
0xffffffff8115f981: xchg esp, eax; and al, 0xa8; add [rax], al; add [rbx+0x634801c3], al; ret;
0xffffffff81160687: ret 0x19bd;
0xffffffff81160c79: ret 0x3ce0;
0xffffffff81160ccb: movsxd rax, ebx; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff81160ccc: movsxd eax, ebx; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff811612df: or eax, 0x415b006a; pop rsp; pop rbp; ret;
0xffffffff8116168c: ret 0x3075;
0xffffffff81161699: ret 0x2575;
0xffffffff8116180b: ret 0x3d00;
0xffffffff811618c2: add eax, 0xd82438; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811618c5: fadd st, dword ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811619bf: add [rax], al; add al, ch; cmp [rbp+0x415bfffc], ebx; pop rsp; pop rbp; ret;
0xffffffff811619c1: add al, ch; cmp [rbp+0x415bfffc], ebx; pop rsp; pop rbp; ret;
0xffffffff811619c3: cmp [rbp+0x415bfffc], ebx; pop rsp; pop rbp; ret;
0xffffffff81161b85: add [rax], al; add [rbp+rcx*8+0x31], dh; rol byte ptr [rax+0x5b01447b], 0xf; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161b87: add [rbp+rcx*8+0x31], dh; rol byte ptr [rax+0x5b01447b], 0xf; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161b89: int 0x31; rol byte ptr [rax+0x5b01447b], 0xf; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161b8b: rol byte ptr [rax+0x5b01447b], 0xf; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161b8e: add [rbx+0xf], r11d; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161b8f: add [rbx+0xf], ebx; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81161c33: add r11b, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81162192: fucomip st, st(0); push 0x480069fe; add esp, 0xc8; pop rbx; pop rbp; ret;
0xffffffff81162194: push 0x480069fe; add esp, 0xc8; pop rbx; pop rbp; ret;
0xffffffff81162198: add rsp, 0xc8; pop rbx; pop rbp; ret;
0xffffffff81162199: add esp, 0xc8; pop rbx; pop rbp; ret;
0xffffffff81163009: ret 0x1a27;
0xffffffff81163019: ret 0x1a1d;
0xffffffff811630fd: ret 0x1a3b;
0xffffffff81163231: ret 0x1a41;
0xffffffff8116367a: ret 0xad34;
0xffffffff81163d4a: ret 0x454a;
0xffffffff81164756: ret 0x1b14;
0xffffffff81164762: ret 0x975b;
0xffffffff81164a60: sti; inc dword ptr [rbp+0x480774c0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81164b78: enter 0xe873, 0x48; add esp, 0x10; mov eax, 0xfffffff8; pop rbx; pop rbp; ret;
0xffffffff81164b7b: add rsp, 0x10; mov eax, 0xfffffff8; pop rbx; pop rbp; ret;
0xffffffff81164b7c: add esp, 0x10; mov eax, 0xfffffff8; pop rbx; pop rbp; ret;
0xffffffff81164be5: ret 0x3938;
0xffffffff81164e8b: add [rbp+0x310b75c0], al; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81164e8d: shl byte ptr [rbp+0xb], 0x31; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81165673: xchg esp, eax; ret 0x7deb;
0xffffffff81165674: ret 0x7deb;
0xffffffff8116773d: ret 0xcbe9;
0xffffffff81167e57: ret 0xd7;
0xffffffff81167e59: add al, ch; and dword ptr [rax-0x7cb70006], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81167e5b: and dword ptr [rax-0x7cb70006], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81167e5c: mov al, [0x415b08c48348fffa]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81167f3a: ret 0xfa95;
0xffffffff81168a18: and al, 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81168d14: add [rcx+rcx+0x48], r14b; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8116901b: add al, ch; fisttp word ptr [rdi+0x415b0069], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff8116901d: fisttp word ptr [rdi+0x415b0069], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff811692e1: inc dword ptr [rbp+0x48c774c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81169371: mov eax, 0xd889fff2; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81169440: mov qword ptr [rdx+0x2a0], 1; mov qword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81169441: mov dword ptr [rdx+0x2a0], 1; mov qword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81169443: mov al, [0x4800000001000002]; mov dword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81169449: add [rax], al; mov qword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8116944b: mov qword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8116944c: mov dword ptr [rdx+0x2a8], 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8116949f: ret 0x7774;
0xffffffff8116950c: ret 0xa075;
0xffffffff811697ac: or [rdi-0x19], bh; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff811697ae: out 0x48, eax; add esp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81169df2: xchg esp, eax; ret 0x945;
0xffffffff8116a342: ret 0xa8e8;
0xffffffff8116a762: ret 0xfff1;
0xffffffff8116a8aa: add byte ptr [rip+0x48000000], 0x89; fucomip st, st(0); leave; xchg edi, eax; cld; call far fword ptr [rbx+0x41];
0xffffffff8116a8ae: add [rax-0x77], cl; fucomip st, st(0); leave; xchg edi, eax; cld; call far fword ptr [rbx+0x41];
0xffffffff8116a8b1: fucomip st, st(0); leave; xchg edi, eax; cld; call far fword ptr [rbx+0x41];
0xffffffff8116a8b3: leave; xchg edi, eax; cld; call far fword ptr [rbx+0x41];
0xffffffff8116b2a6: ret 0x4d7f;
0xffffffff8116b497: or al, 8; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8116b557: movsxd esp, [rax+1]; push 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8116b55b: push 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8116b5d6: adc [r9+r9*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8116b5d7: adc [rcx+rcx*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8116bac3: and al, 0x31; fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8116c6fc: std; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8116daea: ret 0xf621;
0xffffffff8116e830: or [r8], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8116eea3: mov rbx, rsi; sub rsp, 0x10; mov r13, [rcx+0x40]; mov r15, [rcx+0x38]; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116eea4: mov ebx, esi; sub rsp, 0x10; mov r13, [rcx+0x40]; mov r15, [rcx+0x38]; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116eea6: sub rsp, 0x10; mov r13, [rcx+0x40]; mov r15, [rcx+0x38]; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116eea7: sub esp, 0x10; mov r13, [rcx+0x40]; mov r15, [rcx+0x38]; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f656: sub rsp, 0x18; mov rax, [rcx+0x38]; mov r14, [rcx+0x40]; mov rdi, [rdi]; mov [rbp-0x38], rax; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f657: sub esp, 0x18; mov rax, [rcx+0x38]; mov r14, [rcx+0x40]; mov rdi, [rdi]; mov [rbp-0x38], rax; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f993: ret 0x640;
0xffffffff8116f9c3: mov r13, rdx; push r12; push rbx; sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9c4: mov ebp, edx; push r12; push rbx; sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9c6: push r12; push rbx; sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9c7: push rsp; push rbx; sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9c8: push rbx; sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9c9: sub rsp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff8116f9ca: sub esp, 0x20; mov rdi, [rdi]; call qword ptr [0xffffffff81b63c00];
0xffffffff811709e4: or dword ptr [rax+1], 0; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811709e5: add [rax], rax; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811709e6: add [rax], eax; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811709ff: cld; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81170bb1: or dl, [rdi]; sub eax, 0xfffacee7; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81170bb3: sub eax, 0xfffacee7; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81170dc3: pop rsp; test eax, eax; pop rbp; sete al; movzx eax, al; ret;
0xffffffff81170f7d: shl al, 0xff; and [r15+r8+0x48], sil; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81170f80: and [r15+r8+0x48], sil; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81170f92: or ah, [rbp+rbp*8-0xbba7401]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811711d1: fucomip st, st(0); leave; mov eax, [0x5c415be08944ffed]; pop rbp; ret;
0xffffffff811711d3: leave; mov eax, [0x5c415be08944ffed]; pop rbp; ret;
0xffffffff811712cc: mov al, [0xc48348d88948ffed]; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117141e: ret 0x1ea5;
0xffffffff81171a76: add rsp, 0x18; mov rax, rcx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81171a77: add esp, 0x18; mov rax, rcx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81171ae6: add rsp, 0x18; pop rbx; pop r12; mov rax, rcx; pop rbp; ret;
0xffffffff81171ae7: add esp, 0x18; pop rbx; pop r12; mov rax, rcx; pop rbp; ret;
0xffffffff81171ae9: sbb [rbx+0x41], bl; pop rsp; mov rax, rcx; pop rbp; ret;
0xffffffff81171b8f: sub rsp, 0xffffffffffffff80; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81171b90: sub esp, 0xffffff80; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81172139: ret 0x22c8;
0xffffffff81172164: ret 0x22b0;
0xffffffff811721ec: ret 0x22f2;
0xffffffff81172344: pop rsp; pop r13; or rax, r14; pop r14; pop rbp; ret;
0xffffffff8117280a: ret 0xf629;
0xffffffff811728d8: ret 0x37e;
0xffffffff811732ea: ret 0xed7a;
0xffffffff81173a8f: ret 0x2340;
0xffffffff81173ff8: ret 0x1400;
0xffffffff81174018: ret 0xcc0;
0xffffffff8117421c: mov rax, 0xfffffffffffffffe; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8117421d: mov eax, 0xfffffffe; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8117491b: ret 0xb125;
0xffffffff81174a2e: leave; sti; call far fword ptr [rbx+0x41];
0xffffffff81174d52: dec dword ptr [rax-0x7b]; shl byte ptr [rdx+rax-0x37], 0xc3; mov rdx, [rbp-8]; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d55: shl byte ptr [rdx+rax-0x37], 0xc3; mov rdx, [rbp-8]; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d5a: mov rdx, [rbp-8]; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d5b: mov edx, [rbp-8]; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d5c: push rbp; clc; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d5d: clc; sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174d5e: sub dword ptr [rdx+0x60], 1; leave; ret;
0xffffffff81174dba: ret 0x70e8;
0xffffffff81174eb1: mov ebx, 0x48fffffb; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81175e2c: ret 0x1ee8;
0xffffffff81177233: ret 0x7450;
0xffffffff81177525: and [r11+r9+0x31], sil; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81177526: and [rbx+rcx+0x31], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81177ba7: ret 0xe852;
0xffffffff81177f96: ret 0xc4e8;
0xffffffff81178253: ret 0x7e8;
0xffffffff811782c5: ret 0x95e8;
0xffffffff81178522: ret 0x68e8;
0xffffffff81178557: ret 0x33e8;
0xffffffff811785ed: ret 0x9de8;
0xffffffff81178765: ret 0x25e8;
0xffffffff811787d3: ret 0xb7e8;
0xffffffff811792bd: push 0x415bc031; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81179596: pop rsp; pop rbp; and eax, 7; cmovne eax, edx; ret;
0xffffffff8117983a: cmp edx, 0x5744000; leave; mov rax, rcx; ret;
0xffffffff81179843: enter 0x48c3, 0x8b; clc; leave; mov rax, rcx; ret;
0xffffffff81179845: mov rcx, [rbp-8]; leave; mov rax, rcx; ret;
0xffffffff81179846: mov ecx, [rbp-8]; leave; mov rax, rcx; ret;
0xffffffff81179848: clc; leave; mov rax, rcx; ret;
0xffffffff81179b19: ret 0x51c0;
0xffffffff81179c8f: add eax, 0xd6b52b; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117abef: add [rsp+rcx-0x3a], esi; add eax, 0xd6a5c7; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117abf1: or al, 0xc6; add eax, 0xd6a5c7; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117abf3: add eax, 0xd6a5c7; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117ac04: push 0xffffffffc6fff1a0; add eax, 0xd6a5b1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117ac05: mov al, [0xd6a5b105c6fff1]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117ac07: inc esi; add eax, 0xd6a5b1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117ac09: add eax, 0xd6a5b1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117b67c: ret 0x2f18;
0xffffffff8117b69d: ret 0x2f08;
0xffffffff8117b6db: ret 0x2eec;
0xffffffff8117b700: ret 0x2ee4;
0xffffffff8117b721: ret 0x2ef6;
0xffffffff8117ba0f: mov [rax], rbx; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8117ba10: mov [rax], ebx; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8117ba75: fucomip st, st(0); and eax, 0x48fffc0a; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8117ba77: and eax, 0x48fffc0a; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8117bad8: add [r15+r8+0x48], sil; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8117baea: and ch, [rdx+0x458b0033]; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8117baec: xor eax, [rax]; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8117c234: fcomp st, dword ptr [rbx+0x41]; pop rsp; or rax, rdx; pop r13; pop rbp; ret;
0xffffffff8117c237: pop rsp; or rax, rdx; pop r13; pop rbp; ret;
0xffffffff8117c4a1: ret 0xb95a;
0xffffffff8117c4c9: clc; add eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117c7b0: ret 0xc4b0;
0xffffffff8117cc36: mov eax, 0xe881c36f; mov al, [0x415bd889480043a0]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117cc3c: mov al, [0x415bd889480043a0]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117cd34: sub [rip+0x415bfffc], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117cd35: sbb eax, 0x415bfffc; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117cf9b: adc byte ptr [rax+0x8000000], 0x75; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8117d049: shl dword ptr [rdx-5], cl; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8117d04b: sti; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8117d2da: ret 0x42ea;
0xffffffff8117d741: ret 0xfeba;
0xffffffff8117dc25: ret 0xf5e8;
0xffffffff8117dd5f: mov ebp, 0x24548b49; or [rax-0x7d], cl; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8117dd64: or [rax-0x7d], cl; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8117e136: add [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8117e1e5: mov dword ptr [rax], 0xe881ee62; mov r10b, 0x43; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117e1eb: mov r10b, 0x43; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117e1ec: mov dl, 0x43; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117e222: ret 0x5200;
0xffffffff8117e271: mov cl, 0x43; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8117e272: add [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8117e639: ret 0xd67b;
0xffffffff8117e99c: ret 0x51e0;
0xffffffff8117ee30: cld; movsd [rdi], [rsi]; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117eeb6: mov dword ptr [rdx], 0x70e881ee; movsd [rdi], [rsi]; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117eebd: movsd [rdi], [rsi]; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8117eee2: ret 0x7020;
0xffffffff8117fc83: ret 0x6204;
0xffffffff81180508: add rsp, 0x50; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81180509: add esp, 0x50; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118054e: in eax, 0xff; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81180581: out 0xe8, eax; mov [rbx], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81180583: mov [rbx], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811806c4: ret 0x52e0;
0xffffffff811806db: ret 0x5653;
0xffffffff81180753: ret 0x53a0;
0xffffffff8118079a: ret 0x5340;
0xffffffff81180c4a: ret 0xd655;
0xffffffff81180c75: adc eax, 0x415bfff9; pop rsp; pop r13; pop rbp; ret;
0xffffffff81180f31: add al, ch; sub [rdi], ebp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81180f33: sub [rdi], ebp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8118151f: ret 0xee4b;
0xffffffff81181aa2: sub eax, 0xfff04fb1; mov eax, 0xffffffea; mov rbx, [rbp-8]; leave; ret;
0xffffffff81181aa8: mov eax, 0xffffffea; mov rbx, [rbp-8]; leave; ret;
0xffffffff81181e34: mov rax, rbx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81182784: add cl, [rax+3]; sub [r8-0x7b], cl; shl byte ptr [rbx+rax+0x48], cl; mov [rdx], ecx; leave; ret;
0xffffffff81182787: sub [r8-0x7b], cl; shl byte ptr [rbx+rax+0x48], cl; mov [rdx], ecx; leave; ret;
0xffffffff81182788: sub [rax-0x7b], cl; shl byte ptr [rbx+rax+0x48], cl; mov [rdx], ecx; leave; ret;
0xffffffff8118278b: shl byte ptr [rbx+rax+0x48], cl; mov [rdx], ecx; leave; ret;
0xffffffff8118278e: mov [rdx], rcx; leave; ret;
0xffffffff81182799: sub [rcx+rsi*4], dh; cmp dword ptr [rdx+0x114], 0xf0c6c748; push rbp; mov eax, [0xc0310003a1c2e881]; leave; ret;
0xffffffff8118279a: xor al, 0xb1; cmp dword ptr [rdx+0x114], 0xf0c6c748; push rbp; mov eax, [0xc0310003a1c2e881]; leave; ret;
0xffffffff8118279c: cmp dword ptr [rdx+0x114], 0xf0c6c748; push rbp; mov eax, [0xc0310003a1c2e881]; leave; ret;
0xffffffff811827a6: push rbp; mov eax, [0xc0310003a1c2e881]; leave; ret;
0xffffffff811827a7: mov eax, [0xc0310003a1c2e881]; leave; ret;
0xffffffff811827a8: sub eax, 0x3a1c2; xor eax, eax; leave; ret;
0xffffffff811827aa: ret 0x3a1;
0xffffffff811827ac: add eax, [rax]; xor eax, eax; leave; ret;
0xffffffff811827c8: sub eax, 0x3a1a2; pop rax; xor eax, eax; leave; ret;
0xffffffff811827cc: add eax, [rax]; pop rax; xor eax, eax; leave; ret;
0xffffffff81182cba: xchg esp, eax; rol byte ptr [rcx+9], 0xc0; movzx r8d, r8b; mov rax, r8; pop rbp; ret;
0xffffffff81182d39: ret 0x3173;
0xffffffff81182d4e: pop rsp; shr eax, cl; pop rbp; ret;
0xffffffff81182d61: xchg esp, eax; and al, 0xce; add [rax], al; add [rcx], al; rol dword ptr [rcx], cl; ret;
0xffffffff8118381a: mov [r12+0x3a], ax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118381b: mov [r12+0x3a], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118381c: mov [rsp+0x3a], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118381e: and al, 0x3a; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81183971: mov [r12+0x38], ax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81183972: mov [r12+0x38], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81183973: mov [rsp+0x38], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81183975: and al, 0x38; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81183c22: xchg esp, eax; idiv bh; pop rbp; ret;
0xffffffff81184206: pop rsp; mov qword ptr [r14], 0; pop r13; pop r14; pop rbp; ret;
0xffffffff81184314: ret 0x3668;
0xffffffff81184b5c: or [r9-0x75], r9b; xchg esp, eax; and al, 0x30; add [rax], eax; add dh, dh; ret 0xf01;
0xffffffff81184b5d: or [rcx-0x75], cl; xchg esp, eax; and al, 0x30; add [rax], eax; add dh, dh; ret 0xf01;
0xffffffff81184b60: xchg esp, eax; and al, 0x30; add [rax], eax; add dh, dh; ret 0xf01;
0xffffffff811850cb: pop rsp; cmovne eax, r14d; pop r13; pop r14; pop rbp; ret;
0xffffffff8118512a: pop rsp; cmovs rax, rdx; pop r13; pop r14; pop rbp; ret;
0xffffffff811851c9: ret 0x5820;
0xffffffff811852e7: ret 0x5808;
0xffffffff81185389: ret 0x57e0;
0xffffffff811854b6: ret 0x57c0;
0xffffffff8118558e: ret 0x57a0;
0xffffffff811856c7: pop rsp; add [rax], eax; pop rbp; ret;
0xffffffff811857ae: add [rcx+0x39e8f84d], cl; adc eax, [rsi]; add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff811857b4: adc eax, [rsi]; add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff81186470: pop rbx; mov eax, [0x415bffffed08e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81186471: mov eax, [0x415bffffed08e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8118648e: ret 0x7ce8;
0xffffffff8118657b: ret 0x490c;
0xffffffff8118694f: pop rsp; mov eax, [0xffefb6e8e5894881]; call far fword ptr [rbp-0x3d];
0xffffffff81186999: in eax, 0x7d; fstp qword ptr [rbx+0x41], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff8118900d: adc [rax-0x7b], cl; ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rcx+0x39], al; iretd;
0xffffffff81189010: ror byte ptr [rdi], 0x84; leave; add [rax], al; add [rcx+0x39], al; iretd;
0xffffffff81189013: leave; add [rax], al; add [rcx+0x39], al; iretd;
0xffffffff8118a287: fnstenv [rcx+rcx+0x48]; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118a298: setbe al; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8118a299: xchg esi, eax; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8118abfb: ret 0x5503;
0xffffffff8118be64: xchg esp, eax; ret 0xc883;
0xffffffff8118bf73: ret 0x2141;
0xffffffff8118d878: ret 0x6775;
0xffffffff8118d90f: ret 0x5703;
0xffffffff8118eaaa: ret 0x9c3;
0xffffffff8118eb18: add [rbx-0x76b31bbb], cl; out 0x89, eax; in al, 0xe8; leave; ret;
0xffffffff8118eb1e: out 0x89, eax; in al, 0xe8; leave; ret;
0xffffffff8118eb21: in al, 0xe8; leave; ret;
0xffffffff8118ec75: ret 0x6910;
0xffffffff8118ee75: sbb esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff8118efad: ret 0xaebe;
0xffffffff8118f014: ret 0xb5be;
0xffffffff8118fd69: ret 0xf3d0;
0xffffffff81190a8e: ret 0x2107;
0xffffffff81190ad0: ret 0xc7c1;
0xffffffff81190ad9: ret 0xfa31;
0xffffffff81190af0: ret 0x2105;
0xffffffff81190b46: ret 0xd701;
0xffffffff81190bcd: ret 0xf201;
0xffffffff81190c27: ret 0x310b;
0xffffffff81190db8: add [rbx+0x41], bl; pop rsp; mov [r13+0xc], eax; pop r13; pop rbp; ret;
0xffffffff81190dbb: pop rsp; mov [r13+0xc], eax; pop r13; pop rbp; ret;
0xffffffff81190dce: pop rsp; mov qword ptr [r13+8], 0; pop r13; pop rbp; ret;
0xffffffff81191a26: ret 0x42ae;
0xffffffff81191a52: ret 0x4292;
0xffffffff81191e4a: ret 0x98f;
0xffffffff81192aa6: ret 0xc025;
0xffffffff81192fc3: ret 0x27e8;
0xffffffff81193125: ret 0x65e8;
0xffffffff81194a2e: ret 0xe2e9;
0xffffffff8119529a: sar dh, 0xff; inc dword ptr [rcx-0x7d]; cld; add [rdi], ecx; xchg esp, eax; ret 0x3945;
0xffffffff8119529d: inc dword ptr [rcx-0x7d]; cld; add [rdi], ecx; xchg esp, eax; ret 0x3945;
0xffffffff811952a0: cld; add [rdi], ecx; xchg esp, eax; ret 0x3945;
0xffffffff811952a1: add [rdi], ecx; xchg esp, eax; ret 0x3945;
0xffffffff811952a3: xchg esp, eax; ret 0x3945;
0xffffffff8119627f: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r14; pop rbp; ret;
0xffffffff811962eb: and ebx, [rbx+0x41]; pop rsp; pop r14; pop rbp; ret;
0xffffffff81196b46: add rsp, 0x18; lea eax, [rbx+0x3c]; pop rbx; pop r12; pop rbp; ret;
0xffffffff81196b47: add esp, 0x18; lea eax, [rbx+0x3c]; pop rbx; pop r12; pop rbp; ret;
0xffffffff81196b49: sbb [rbp+0x415b3c43], cl; pop rsp; pop rbp; ret;
0xffffffff81196c08: xchg esp, eax; out dx, al; call far fword ptr [rbx+0x44];
0xffffffff81196c86: add [rbp+9], dh; add rsp, 0x68; pop rbx; pop r12; pop rbp; ret;
0xffffffff81196ce6: ret 0x663c;
0xffffffff81196d0c: mov eax, [rbp-0x74]; add rsp, 0x68; pop rbx; pop r12; pop rbp; ret;
0xffffffff811971d4: ret 0xd1be;
0xffffffff811971f7: ret 0xadbe;
0xffffffff8119735d: ret 0xa8be;
0xffffffff811985c2: mov [rbx], rdx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff811985c3: mov [rbx], edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81199843: ret 0xa7e8;
0xffffffff81199902: ret 0x6be;
0xffffffff8119a38e: fcomp st, qword ptr [rbx+0x41]; pop rsp; seta al; pop rbp; ret;
0xffffffff8119a391: pop rsp; seta al; pop rbp; ret;
0xffffffff8119ba83: and [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8119ba9d: mov [r12+0x20], rdx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8119ba9e: mov [rsp+0x20], edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8119baa0: and al, 0x20; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff8119c572: ret 0x1c77;
0xffffffff8119c798: or eax, 0x74c08548; or [rax-0x75], cl; adc [rbx+0x27401e2], al; leave; ret;
0xffffffff8119c79b: shl byte ptr [rax+rcx+0x48], 0x8b; adc [rbx+0x27401e2], al; leave; ret;
0xffffffff8119c79d: or [rax-0x75], cl; adc [rbx+0x27401e2], al; leave; ret;
0xffffffff8119c7a0: adc [rbx+0x27401e2], al; leave; ret;
0xffffffff8119c7d2: dec dword ptr [rax+0x60]; leave; mov rax, 0xfffffffffffffffb; ret;
0xffffffff8119c7d5: leave; mov rax, 0xfffffffffffffffb; ret;
0xffffffff8119ca47: mov ax, [0x415bfffe8961e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8119ca48: mov eax, [0x415bfffe8961e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8119ca66: mov ax, [0x415bfffe8712e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8119ca67: mov eax, [0x415bfffe8712e881]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8119ca6a: adc al, [rdi+0x415bfffe]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8119cd41: and gs:[rbx+rcx-0x75], dh; xchg esp, edi; add al, [rax]; add [rcx-0x3c3fcefa], cl; mov eax, 0xffffffa1; ret;
0xffffffff8119cd42: and [rbx+rcx-0x75], dh; xchg esp, edi; add al, [rax]; add [rcx-0x3c3fcefa], cl; mov eax, 0xffffffa1; ret;
0xffffffff8119cd46: xchg esp, edi; add al, [rax]; add [rcx-0x3c3fcefa], cl; mov eax, 0xffffffa1; ret;
0xffffffff8119d519: ret 0xb145;
0xffffffff8119ec6d: ret 0xb08d;
0xffffffff8119f263: ret 0x48a8;
0xffffffff8119f36e: ret 0x4960;
0xffffffff8119f3af: ret 0x4611;
0xffffffff8119f3c1: ret 0x462e;
0xffffffff8119f3f7: ret 0x4647;
0xffffffff8119f42f: ret 0x4658;
0xffffffff8119f444: ret 0x466a;
0xffffffff8119f460: ret 0x4684;
0xffffffff8119f519: xchg esp, eax; ret 0xc339;
0xffffffff811a061a: ret 0xfe22;
0xffffffff811a1c8a: enter 1, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811a28b5: mov eax, [0x415bfffe2774e881]; pop rsp; pop rbp; ret;
0xffffffff811a2bfe: ret 0xe783;
0xffffffff811a2c8a: ret 0xbab0;
0xffffffff811a2e3e: ret 0x7e75;
0xffffffff811a2f2f: ret 0x98e9;
0xffffffff811a30e3: mov [rbx+0x2f8], eax; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811a328a: add rsp, 0x40; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff811a328b: add esp, 0x40; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff811a33dd: ret 0x3240;
0xffffffff811a3439: add rsp, 0x148; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff811a343a: add esp, 0x148; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff811a343c: add [rax], rax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811a388f: leave; or dh, dh; ret 0xf10;
0xffffffff811a389a: leave; adc dh, dh; ret 0xf20;
0xffffffff811a3d42: ret 0xc089;
0xffffffff811a3ee6: ret 0x2000;
0xffffffff811a3fd8: ret 0x49dd;
0xffffffff811a46ae: ret 0x49f8;
0xffffffff811a4a39: ret 0x97d;
0xffffffff811a4b06: ret 0x217c;
0xffffffff811a5568: ret 0x310f;
0xffffffff811a55ef: ret 0xda29;
0xffffffff811a5ee1: ret 0xd7e;
0xffffffff811a6149: ret 0x4d18;
0xffffffff811a651e: ret 0x47c7;
0xffffffff811a72fb: cli; dec dword ptr [rdi]; xchg esp, eax; ret 0xc3f6;
0xffffffff811a72fc: dec dword ptr [rdi]; xchg esp, eax; ret 0xc3f6;
0xffffffff811a72fe: xchg esp, eax; ret 0xc3f6;
0xffffffff811a72ff: ret 0xc3f6;
0xffffffff811a78b2: ret 0x4df8;
0xffffffff811a83de: ret 0x8342;
0xffffffff811a8d73: ret 0x447e;
0xffffffff811a946a: ret 0x20e8;
0xffffffff811a9601: ret 0xf4e9;
0xffffffff811a97b2: ret 0x4f20;
0xffffffff811a99cd: ret 0x4f40;
0xffffffff811a9a71: ret 0x588d;
0xffffffff811a9db7: ret 0x4ba9;
0xffffffff811a9e25: ret 0xb5e8;
0xffffffff811aa176: ret 0x4fb8;
0xffffffff811aa1cb: ret 0x4fe0;
0xffffffff811aa1e9: ret 0x5030;
0xffffffff811aa20c: ret 0x5058;
0xffffffff811aa2be: ret 0x4d74;
0xffffffff811ac45a: ret 0x6e1;
0xffffffff811acdf6: add al, 0x89; adc eax, [rbx+0x538901c2]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811acdf8: adc eax, [rbx+0x538901c2]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811acdfb: add [rcx+0x415b0853], ecx; pop rsp; pop rbp; ret;
0xffffffff811ad1df: shl byte ptr [rbp+rdx*8+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811ad827: ret 0xc374;
0xffffffff811adaf2: cli; pop qword ptr [rbx]; add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff811adaf3: pop qword ptr [rbx]; add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff811add0c: pop rsp; pop r13; not rax; pop rbp; and eax, 1; ret;
0xffffffff811ae0be: ret 0x6bef;
0xffffffff811ae37f: ret 0x6c00;
0xffffffff811ae5c0: lodsb [rsi]; xchg ebx, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ae5d5: xchg edi, eax; xchg ebx, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ae5d6: xchg ebx, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811af63a: ret 0x5520;
0xffffffff811af68a: ret 0xf1ef;
0xffffffff811af800: mov eax, [rbp-0x18]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b0736: sub eax, 0xfffd4a44; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b075b: mov qword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b075c: mov dword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b07f9: mov eax, [0x415bfffd4bb0e881]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811b0958: ret 0;
0xffffffff811b0aca: ret 0xf984;
0xffffffff811b0e30: ret 0x490b;
0xffffffff811b2170: add rsp, 8; mov rax, 0xfffffffffffffffe; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b2171: add esp, 8; mov rax, 0xfffffffffffffffe; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b21a1: mov rax, 0xffffffffffffff8b; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b21a2: mov eax, 0xffffff8b; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811b334a: add [rcx+0x40000ff], al; add [rdi], cl; xchg [rbx], esp; add [rax], eax; add dh, dh; ret 0xf03;
0xffffffff811b3350: add [rdi], cl; xchg [rbx], esp; add [rax], eax; add dh, dh; ret 0xf03;
0xffffffff811b3352: xchg [rbx], esp; add [rax], eax; add dh, dh; ret 0xf03;
0xffffffff811b35df: ret 0x9be8;
0xffffffff811b367d: ret 0x1945;
0xffffffff811b3af9: ret 0x1172;
0xffffffff811b4b59: ret 0x9d74;
0xffffffff811b4ea8: ret 0xf002;
0xffffffff811b5484: leave; std; dec dword ptr [rbx+rcx*4+0x55]; ror byte ptr [rax-0x77], 1; ret;
0xffffffff811b554b: ret 0x82be;
0xffffffff811b5595: ret 0x3ebe;
0xffffffff811b55b7: ret 0x87be;
0xffffffff811b563e: ret 0xece8;
0xffffffff811b5992: mov esp, [rdx+0x28]; call qword ptr [0xffffffff81c27000];
0xffffffff811b67a6: ret 0xd389;
0xffffffff811b6e0a: leave; mov eax, r8d; mov rdx, rsi; imul ecx, eax; mov [rdx], ecx; ret;
0xffffffff811b73df: ret 0x5d77;
0xffffffff811b74de: add [rax-0x77], ecx; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811b902d: fadd st, dword ptr [rbx+0x415bf0e0]; pop rsp; pop rbp; ret;
0xffffffff811b943a: ret 0x49;
0xffffffff811b9853: ret 0x60e0;
0xffffffff811b9893: ret 0x6110;
0xffffffff811b99d6: ret 0x61f8;
0xffffffff811ba2aa: ret 0x778b;
0xffffffff811ba50b: ret 0x43be;
0xffffffff811ba651: ret 0x645d;
0xffffffff811ba6be: ret 0x6288;
0xffffffff811babba: pop rsp; add rax, rdx; pop r13; pop r14; pop rbp; ret;
0xffffffff811bac0a: xchg esp, eax; idiv edi; mov rax, 0xffffffffffffff8c; pop rbx; pop rbp; ret;
0xffffffff811bad48: add [rax], al; add al, ch; sub byte ptr [rsi+rdi*8], 0xff; leave; ret;
0xffffffff811bad4a: add al, ch; sub byte ptr [rsi+rdi*8], 0xff; leave; ret;
0xffffffff811bad4c: sub byte ptr [rsi+rdi*8], 0xff; leave; ret;
0xffffffff811bb0ca: ret 0xec64;
0xffffffff811bb7c8: ret 0x32e8;
0xffffffff811bb7e4: ret 0x16e8;
0xffffffff811bbba5: add [rcx-0x3b7cb708], cl; and [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811bbe10: ret 0xa179;
0xffffffff811bc106: shl byte ptr [rdx+rcx*2+0x48], 0x8b; adc [rbx+0x77401e2], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bc10b: adc [rbx+0x77401e2], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bc142: dec dword ptr [rax+0x60]; add rsp, 8; mov rax, 0xfffffffffffffffb; pop rbx; pop rbp; ret;
0xffffffff811bc145: add rsp, 8; mov rax, 0xfffffffffffffffb; pop rbx; pop rbp; ret;
0xffffffff811bc146: add esp, 8; mov rax, 0xfffffffffffffffb; pop rbx; pop rbp; ret;
0xffffffff811bc153: add rsp, 8; mov rax, 0xfffffffffffffff4; pop rbx; pop rbp; ret;
0xffffffff811bc154: add esp, 8; mov rax, 0xfffffffffffffff4; pop rbx; pop rbp; ret;
0xffffffff811bc1c4: cmp [rbx-0xb], dl; dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff811bc1e7: stosd [rdi]; add al, ch; xor bl, [rbp+0x415bfff4]; pop rsp; pop rbp; ret;
0xffffffff811bc1e8: add al, ch; xor bl, [rbp+0x415bfff4]; pop rsp; pop rbp; ret;
0xffffffff811bc1ea: xor bl, [rbp+0x415bfff4]; pop rsp; pop rbp; ret;
0xffffffff811bc215: cmc; dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff811bc462: ret 0x9056;
0xffffffff811bc49a: xchg esp, eax; test byte ptr [rdx], 2; mov rdx, 0xffffffff81b16629; cmovne rax, rdx; ret;
0xffffffff811bc4a0: ret 0x6629;
0xffffffff811bc736: ret 0x6eb8;
0xffffffff811bc8ad: rol byte ptr [rax], 1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811bcda0: ret 0x6ee0;
0xffffffff811bce4d: cmp edx, 0x7758000; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bce50: xor byte ptr [rbp+7], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811bce5f: ret 0x66da;
0xffffffff811bce7e: idiv edi; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bce8b: ret 0x66b0;
0xffffffff811bcebd: ret 0x66c1;
0xffffffff811bd02f: ret 0x670e;
0xffffffff811bd25b: ret 0x7158;
0xffffffff811bd30f: ret 0x7188;
0xffffffff811bd43a: ret 0x830c;
0xffffffff811bd446: ret 0x74a0;
0xffffffff811bd5eb: ret 0x7438;
0xffffffff811bd688: ret 0x7800;
0xffffffff811bd6b0: ret 0x6779;
0xffffffff811bd715: ret 0x7460;
0xffffffff811bd773: ret 0x7218;
0xffffffff811bd7c6: ret 0x7248;
0xffffffff811bd83c: ret 0x7278;
0xffffffff811bd950: ret 0x7358;
0xffffffff811bd9f4: ret 0x6791;
0xffffffff811bda19: ret 0x72c8;
0xffffffff811bda57: ret 0x67d4;
0xffffffff811bdab0: ret 0x67bb;
0xffffffff811bdace: ret 0x73b8;
0xffffffff811bdae9: ret 0x67a6;
0xffffffff811bdb29: ret 0x7388;
0xffffffff811bdbd3: ret 0x72f0;
0xffffffff811bdc61: add [rdi], cl; test [rsi+0x48000000], ebp; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdc63: test [rsi+0x48000000], ebp; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdc74: ret 0x74d0;
0xffffffff811bdc7f: sub eax, 0xffffe82b; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdc95: ret 0x7558;
0xffffffff811bdcb6: ret 0x67f0;
0xffffffff811bdcc7: or qword ptr [rbx+0x50], 1; mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdcc8: or dword ptr [rbx+0x50], 1; mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdcc9: push r8; add [rax+1], edi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdcca: push rax; add [rax+1], edi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdccb: add [rax+1], edi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdccc: mov eax, 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdccd: add [rax], eax; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811bdcfb: ret 0x7590;
0xffffffff811bdd83: ret 0x7638;
0xffffffff811be2e8: ret 0x77b8;
0xffffffff811be329: add [rsi+0x3b], ah; xor al, 0xf; xchg esp, ebx; add [rax], al; add [rax-0x39], cl; ret 0x7868;
0xffffffff811be32d: xor al, 0xf; xchg esp, ebx; add [rax], al; add [rax-0x39], cl; ret 0x7868;
0xffffffff811be32f: xchg esp, ebx; add [rax], al; add [rax-0x39], cl; ret 0x7868;
0xffffffff811be336: ret 0x7868;
0xffffffff811be44f: ret 0x7828;
0xffffffff811be46e: ret 0x78b0;
0xffffffff811be644: ret 0x7930;
0xffffffff811bec40: ret 0x7998;
0xffffffff811becc3: ret 0x7a88;
0xffffffff811bf39d: ret 0x6884;
0xffffffff811bf716: ret 0x7bf8;
0xffffffff811bf85e: ret 0x6925;
0xffffffff811bfb9e: ret 0x7f20;
0xffffffff811bfc5a: ret 0x7f78;
0xffffffff811bfe60: ret 0x6904;
0xffffffff811c006a: ret 0x7da8;
0xffffffff811c008b: ret 0x7dd8;
0xffffffff811c00d2: ret 0x7e08;
0xffffffff811c0128: ret 0x7eb0;
0xffffffff811c0137: ret 0x7c88;
0xffffffff811c0175: ret 0x695b;
0xffffffff811c01c6: ret 0x79e0;
0xffffffff811c01e0: ret 0x7ee8;
0xffffffff811c020d: ret 0x7a10;
0xffffffff811c0914: ret 0x7f58;
0xffffffff811c0923: ret 0x6978;
0xffffffff811c093e: sub esp, 0xffffffff; dec dword ptr [rax-0x39]; ret 0x7fc0;
0xffffffff811c0977: ret 0x698a;
0xffffffff811c0983: ret 0x69a6;
0xffffffff811c09fe: ret 0x8268;
0xffffffff811c0a45: ret 0x8198;
0xffffffff811c0b01: ret 0x85a0;
0xffffffff811c0b7c: ret 0x8550;
0xffffffff811c0b9b: ret 0x84b0;
0xffffffff811c0c0e: ret 0x84f8;
0xffffffff811c0c42: ret 0x83c0;
0xffffffff811c0c79: ret 0x8408;
0xffffffff811c0cbb: ret 0x8370;
0xffffffff811c0cdd: ret 0x82d0;
0xffffffff811c112d: ret 0x6af3;
0xffffffff811c11ba: ret 0x6b78;
0xffffffff811c144a: ret 0x8bb0;
0xffffffff811c1541: ret 0x8bd8;
0xffffffff811c1592: ret 0x6b25;
0xffffffff811c15cf: ret 0x6b3f;
0xffffffff811c160f: ret 0x6b58;
0xffffffff811c16a7: ret 0x8c00;
0xffffffff811c1923: ret 0x8ae0;
0xffffffff811c194e: ret 0x6b07;
0xffffffff811c198e: ret 0x8b80;
0xffffffff811c19c3: ret 0x8b40;
0xffffffff811c1a1e: ret 0x8318;
0xffffffff811c1a54: ret 0x8ab8;
0xffffffff811c1a96: ret 0x6ac1;
0xffffffff811c1ae0: ret 0x6aab;
0xffffffff811c1b48: ret 0x8828;
0xffffffff811c1bec: ret 0x85e0;
0xffffffff811c1d56: ret 0x86c8;
0xffffffff811c1e8e: ret 0x8950;
0xffffffff811c1f98: ret 0x7a48;
0xffffffff811c20da: ret 0xe1;
0xffffffff811c2114: ret 0x6a6f;
0xffffffff811c213a: ret 0x6a1a;
0xffffffff811c21c9: ret 0x4539;
0xffffffff811c2285: ret 0x6a37;
0xffffffff811c237d: ret 0x87c8;
0xffffffff811c23cf: ret 0x6a53;
0xffffffff811c242b: ret 0x87a0;
0xffffffff811c244e: ret 0x8778;
0xffffffff811c2457: ret 0x8748;
0xffffffff811c2472: ret 0x8720;
0xffffffff811c24a6: ret 0x86f8;
0xffffffff811c24f4: ret 0x8620;
0xffffffff811c251b: ret 0x8698;
0xffffffff811c2562: ret 0x80d0;
0xffffffff811c2583: ret 0x88a8;
0xffffffff811c25a4: ret 0x8868;
0xffffffff811c25c5: ret 0x8a20;
0xffffffff811c25f1: ret 0x8920;
0xffffffff811c2698: ret 0x8650;
0xffffffff811c26c0: ret 0x8a00;
0xffffffff811c26e1: ret 0x89e0;
0xffffffff811c272a: ret 0x80b0;
0xffffffff811c273b: ret 0x8080;
0xffffffff811c2770: ret 0x7fe0;
0xffffffff811c277c: ret 0x8108;
0xffffffff811c3037: ret 0x45da;
0xffffffff811c31f5: ret 0xf515;
0xffffffff811c32b3: ret 0x66a8;
0xffffffff811c38fb: sub al, ch; pop rdi; xchg esp, eax; std; dec dword ptr [rax-0x77]; ret;
0xffffffff811c38fd: pop rdi; xchg esp, eax; std; dec dword ptr [rax-0x77]; ret;
0xffffffff811c38fe: xchg esp, eax; std; dec dword ptr [rax-0x77]; ret;
0xffffffff811c41b9: sub [rdx], eax; add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff811c41bb: add [rbp-0x74f88a40], al; clc; leave; ret;
0xffffffff811c41bd: shl byte ptr [rbp+7], 0x8b; clc; leave; ret;
0xffffffff811c42ed: ret 0x3105;
0xffffffff811c45bb: ret 0x4913;
0xffffffff811c4bc9: ret 0xe804;
0xffffffff811c7080: ret 0xb6b8;
0xffffffff811c728d: ret 0x2de8;
0xffffffff811c7381: ret 0x4813;
0xffffffff811c738b: adc [rbp+0x48e575d2], eax; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff811c738d: shl byte ptr [rbp-0x1b], cl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff811c738f: in eax, 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff811c88fa: ret 0xf9f5;
0xffffffff811c8e76: ret 0xcf7f;
0xffffffff811c96e6: xchg esp, esi; call far fword ptr [rbp-0x3d];
0xffffffff811ca36c: ret 0x61c0;
0xffffffff811cb33f: ret 0x92c4;
0xffffffff811cb489: ret 0x92f1;
0xffffffff811cb4ef: lodsd [rsi]; leave; idiv edi; pop rbx; pop rbp; ret;
0xffffffff811cb4f0: leave; idiv edi; pop rbx; pop rbp; ret;
0xffffffff811cb6aa: ret 0xf7c7;
0xffffffff811cb827: xchg esp, eax; and al, 0x98; add [rax], al; add [rax+0x29], cl; ret 0x8948;
0xffffffff811cce11: ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811cce12: movzx eax, al; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff811cce13: mov dh, 0xc0; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff811cce2a: add rsp, 0x18; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff811cce2b: add esp, 0x18; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff811cde5d: pop rsp; and al, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff811cdfa4: ret 0xd76;
0xffffffff811ce6ad: mov [rbx], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811cf004: rol byte ptr [rbp-0x76fc812e], 0x59; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811cf008: add ecx, [rcx+0x415b1059]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811cf00a: pop rcx; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811cf117: ret 0x98e0;
0xffffffff811cf1b4: add [rdi], cl; xchg esp, eax; rol bl, 0x66; nop [rax+rax]; xor eax, eax; ret;
0xffffffff811cf1b5: add [rdi], cl; xchg esp, eax; rol bl, 0x66; nop [rax+rax]; xor eax, eax; ret;
0xffffffff811cf1b7: xchg esp, eax; rol bl, 0x66; nop [rax+rax]; xor eax, eax; ret;
0xffffffff811cf41d: leave; not ecx; and [rax+0x24], esi; and [rax+0x2c], edx; and [rax+0x28], ecx; ret;
0xffffffff811cf513: ret 0x66f0;
0xffffffff811cf90a: ret 0xf0e8;
0xffffffff811cfa77: ret 0xa7e9;
0xffffffff811cfabe: ret 0x6ce8;
0xffffffff811cfea5: add rsp, 0x18; pop rbx; pop r12; bswap eax; pop rbp; ret;
0xffffffff811cfea6: add esp, 0x18; pop rbx; pop r12; bswap eax; pop rbp; ret;
0xffffffff811cfea8: sbb [rbx+0x41], bl; pop rsp; bswap eax; pop rbp; ret;
0xffffffff811cfeab: pop rsp; bswap eax; pop rbp; ret;
0xffffffff811d06ab: add [rbx+0x41], bl; pop rsp; test eax, eax; pop rbp; cmove eax, edx; ret;
0xffffffff811d06ae: pop rsp; test eax, eax; pop rbp; cmove eax, edx; ret;
0xffffffff811d0856: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xc084;
0xffffffff811d08b6: add [rax], r8d; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811d0ab1: mov byte ptr [rbx+0x24], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811d0ab3: and al, 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811d0ac5: idiv edi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811d0d84: test [rdi+0x48000011], edx; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811d1122: and ecx, [rbx-0x37f00fbb]; mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811d1126: bswap eax; mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811d1127: enter 0x389, 0x48; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811d1128: mov [rbx], eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811d1298: pop rsp; pop r13; pop r15; pop rbp; ret;
0xffffffff811d20e1: add esp, esi; dec dword ptr [rax-0x77]; fucomip st, st(0); mov ah, 0xa9; hlt; call far fword ptr [rbx+0x5d];
0xffffffff811d225a: mov esp, [rcx+0x5c415b81]; pop r13; pop r14; pop r15; pop rbp; ret;
0xffffffff811d230b: ror dword ptr [rsi+rsi*8], 0xff; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811d27b5: cmc; dec dword ptr [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811d2aaa: ret 0xf5df;
0xffffffff811d33c4: pop rsp; sub rax, r11; pop r13; pop r14; pop rbp; ret;
0xffffffff811d347f: add eax, 0xd132cb; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811d3490: add eax, 0xd132ba; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811d3493: rol dword ptr [rax], 1; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811d3579: ret 0x4838;
0xffffffff811d3590: ret 0x7ac0;
0xffffffff811d35f2: ret 0x7ae0;
0xffffffff811d3871: out 0xe8, eax; sub [rdx+0x415bfff4], edx; pop rsp; pop rbp; ret;
0xffffffff811d3873: sub [rdx+0x415bfff4], edx; pop rsp; pop rbp; ret;
0xffffffff811d3eb8: ret 0x9a60;
0xffffffff811d4afa: ret 0x3dba;
0xffffffff811d528c: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811d5c0b: leave; cmc; dec dword ptr [rax-0x77]; ret 0x8548;
0xffffffff811d5cba: in al, 0xf4; dec dword ptr [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811d5cbb: hlt; dec dword ptr [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811d5cbc: dec dword ptr [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811d6093: test [rsi-0x16000002], al; mov esp, 0x31fffffe; leave; mov rax, rcx; ret;
0xffffffff811d6099: mov esp, 0x31fffffe; leave; mov rax, rcx; ret;
0xffffffff811d609c: push qword ptr [rcx]; leave; mov rax, rcx; ret;
0xffffffff811d6dc5: ret 0x67d0;
0xffffffff811d6fec: ret 0x67b0;
0xffffffff811d709f: ret 0xa020;
0xffffffff811d70d4: ret 0xa0b0;
0xffffffff811d7130: ret 0xa0f0;
0xffffffff811d7145: ret 0xffe7;
0xffffffff811d7190: ret 0xa0d0;
0xffffffff811d75d5: ret 0x6754;
0xffffffff811d7b3a: ret 0x9feb;
0xffffffff811d7f36: dec dword ptr [rax+0xf]; fmul st, dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811d7f45: fmul st, dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811d8543: leave; xor [rbp+0x738b4400], esp; sbb [rax-0x77], cl; ret 0x8b44;
0xffffffff811d8683: ret 0xa390;
0xffffffff811d950a: ret 0x83e0;
0xffffffff811d9b98: ret 0x1974;
0xffffffff811d9c44: mov eax, 0x7c000000; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811da266: ret 0xc740;
0xffffffff811da4b2: pop rsp; sete al; pop r13; pop rbp; movzx eax, al; ret;
0xffffffff811da4b4: xchg esp, eax; rol byte ptr [rcx+0x5d], 0x5d; movzx eax, al; ret;
0xffffffff811da5cf: ret 0x2474;
0xffffffff811daf09: ror byte ptr [rdi], cl; xchg esp, eax; ret;
0xffffffff811db0f0: ret 0x92;
0xffffffff811dbf17: ret 0x9c90;
0xffffffff811dbf77: ret 0xa3b0;
0xffffffff811dd81a: ret 0xd5d0;
0xffffffff811dda98: ret 0xa3e0;
0xffffffff811de31a: ret 0xa580;
0xffffffff811de592: dec dword ptr [rax-0x7b]; shl byte ptr [rbp+4], 0x48; mov eax, [rbp-8]; leave; ret;
0xffffffff811de595: shl byte ptr [rbp+4], 0x48; mov eax, [rbp-8]; leave; ret;
0xffffffff811de7c2: shr al, 0xb8; insb [rdi], dx; out 0xff, eax; leave; ret;
0xffffffff811de834: ror byte ptr [rax-0x77], 0x45; enter 0x42e8, 0x6c; out 0xff, eax; leave; ret;
0xffffffff811de838: enter 0x42e8, 0x6c; out 0xff, eax; leave; ret;
0xffffffff811de83b: insb [rdi], dx; out 0xff, eax; leave; ret;
0xffffffff811de865: or cl, [rbx+0x2d493]; add [rbp+0x480775d2], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811de869: add al, [rax]; add [rbp+0x480775d2], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811de86b: add [rbp+0x480775d2], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff811de86d: shl byte ptr [rbp+7], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811de8f4: ror byte ptr [rax-0x77], 0x45; enter 0x52e8, 0x6b; out 0xff, eax; leave; ret;
0xffffffff811de8f8: enter 0x52e8, 0x6b; out 0xff, eax; leave; ret;
0xffffffff811de8fa: push rdx; imul esp, edi, 0xffffffff; leave; ret;
0xffffffff811de8fb: imul esp, edi, 0xffffffff; leave; ret;
0xffffffff811de964: ror byte ptr [rax-0x77], 0x45; enter 0x62e8, 0x65; out 0xff, eax; leave; ret;
0xffffffff811de968: enter 0x62e8, 0x65; out 0xff, eax; leave; ret;
0xffffffff811de96b: out 0xff, eax; leave; ret;
0xffffffff811dea43: ror dword ptr [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811ded79: cmp [rdi], cl; xchg esp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret;
0xffffffff811def48: ret 0x7075;
0xffffffff811df24d: ret 0x14b8;
0xffffffff811df301: ret 0xd44;
0xffffffff811df311: sbb esp, ebx; cmc; dec dword ptr [rax-0x77]; ret 0xf883;
0xffffffff811df34e: inc dword ptr [rcx+0xf9]; add [rdi+rax+0x48], esi; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811df352: add [rax], al; add [rdi+rax+0x48], esi; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811df354: add [rdi+rax+0x48], esi; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811df37e: mov [rbx+0x10], eax; xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff811df396: add rsp, 0x18; mov eax, 0xffffffc3; pop rbx; pop rbp; ret;
0xffffffff811df397: add esp, 0x18; mov eax, 0xffffffc3; pop rbx; pop rbp; ret;
0xffffffff811dfabf: add [rax-0x26], bh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811dfac0: mov eax, 0xffffffda; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811dfae5: mov eax, [rax+0x24]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811dfb82: mov al, [0x415b08c48348ffe8]; pop rsp; pop rbp; ret;
0xffffffff811dfccb: or [rbx+0x41], bl; pop rsp; shr eax, 4; pop rbp; and eax, 1; ret;
0xffffffff811dfcce: pop rsp; shr eax, 4; pop rbp; and eax, 1; ret;
0xffffffff811dffa9: ret 0x6768;
0xffffffff811e0bea: ret 0xa40;
0xffffffff811e1d39: mov [0x415be08944ffe9e3], eax; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811e1e30: mov esp, 0x31ffffee; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e1e4b: mov eax, 0xfffffffe; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e1f5f: mov esp, ebx; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff811e2087: in al, 0x74; or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811e2544: add [rbp+0x48eb75db], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e25cf: add rsp, 8; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e25d0: add esp, 8; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e26bf: ret 0xab1a;
0xffffffff811e2b13: pop rsp; add [rax], al; pop rbp; ret;
0xffffffff811e2c95: ret 0xaaad;
0xffffffff811e2e77: test [rdx+0x415bfff5], edx; pop rsp; pop rbp; ret;
0xffffffff811e2ff1: ret 0x3d;
0xffffffff811e3a21: or dword ptr [rax-0x7b], 0x440f48d2; shr al, 1; rol byte ptr [rsi+0x415bfff5], cl; pop rsp; pop rbp; ret;
0xffffffff811e3a24: ror byte ptr [rax+0xf], cl; shr al, 1; rol byte ptr [rsi+0x415bfff5], cl; pop rsp; pop rbp; ret;
0xffffffff811e3a28: shr al, 1; rol byte ptr [rsi+0x415bfff5], cl; pop rsp; pop rbp; ret;
0xffffffff811e3a2a: rol byte ptr [rsi+0x415bfff5], cl; pop rsp; pop rbp; ret;
0xffffffff811e3c66: ret 0x448d;
0xffffffff811e45a6: add [rbp+0x480c75c0], al; add esp, 0x90; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e45a8: shl byte ptr [rbp+0xc], 0x48; add esp, 0x90; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e45aa: or al, 0x48; add esp, 0x90; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e45ab: add rsp, 0x90; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e45ac: add esp, 0x90; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e45ae: nop; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e487d: fsub st, dword ptr [rcx]; leave; ret;
0xffffffff811e48d4: or eax, [rbx+0x5389fee2]; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e48d7: dec byte ptr [rcx+0x415b2853]; pop rsp; pop rbp; ret;
0xffffffff811e48d9: push rbx; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e510a: ret 0x1377;
0xffffffff811e54ab: mov eax, [rax+rax+0x415b0000]; pop rsp; pop rbp; ret;
0xffffffff811e5835: push 0x415bfff5; pop rsp; pop rbp; ret;
0xffffffff811e5a19: add eax, [rbx-0x3fcefef5]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e5a1c: add [rcx], esi; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e5daa: ret 0x97ad;
0xffffffff811e5e57: ret 0xc77;
0xffffffff811e5f8c: div byte ptr [rcx+rbp*4+0x48]; add esp, 8; mov eax, esi; pop rbx; pop rbp; ret;
0xffffffff811e5f8f: add rsp, 8; mov eax, esi; pop rbx; pop rbp; ret;
0xffffffff811e5f90: add esp, 8; mov eax, esi; pop rbx; pop rbp; ret;
0xffffffff811e60f8: add [rsi+rax+0x48], sil; mov ebx, [rbp-8]; leave; ret;
0xffffffff811e60f9: add [rsi+rax+0x48], dh; mov ebx, [rbp-8]; leave; ret;
0xffffffff811e610c: push rax; mov edi, 0x8b480061; pop rbp; clc; leave; ret;
0xffffffff811e610d: mov edi, 0x8b480061; pop rbp; clc; leave; ret;
0xffffffff811e6128: add al, ch; sar byte ptr [rsi-0x74b7ff9f], cl; pop rbp; clc; leave; ret;
0xffffffff811e612a: sar byte ptr [rsi-0x74b7ff9f], cl; pop rbp; clc; leave; ret;
0xffffffff811e612b: mov esi, 0x8b480061; pop rbp; clc; leave; ret;
0xffffffff811e6163: out 0xe8, eax; xchg edi, eax; mov esi, 0x415b0061; pop rsp; pop rbp; ret;
0xffffffff811e6165: xchg edi, eax; mov esi, 0x415b0061; pop rsp; pop rbp; ret;
0xffffffff811e6166: mov esi, 0x415b0061; pop rsp; pop rbp; ret;
0xffffffff811e61f3: imul eax, [rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff811e6233: mov r14, 0x415b08c483480061; pop rsp; pop rbp; ret;
0xffffffff811e64e5: pop rsp; cmc; call far fword ptr [rbx+0x41];
0xffffffff811e6df1: inc dword ptr [rbp+0x48e37fc0]; add esp, 0x30; pop rbx; pop rbp; ret;
0xffffffff811e6df3: sar byte ptr [rdi-0x1d], 0x48; add esp, 0x30; pop rbx; pop rbp; ret;
0xffffffff811e7139: ret 0x91e8;
0xffffffff811e715e: ret 0x8ce8;
0xffffffff811e716e: inc dword ptr [rbp+0x48db7fc0]; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e7170: sar byte ptr [rdi-0x25], 0x48; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e71ce: ret 0x4a72;
0xffffffff811e738c: or dword ptr [rbx+0x10c08300], 0x31f84389; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811e7391: adc [rcx-0x3fce07bd], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811e76a7: enter 0x4808, 0x89; in eax, 0x89; and r8b, r13b; pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e76a8: or [rax-0x77], cl; in eax, 0x89; and r8b, r13b; pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e76ab: in eax, 0x89; and r8b, r13b; pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e76ad: and r8b, r13b; pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e76ae: and al, ch; pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e76b0: pop rsp; test al, 0xff; call far fword ptr [rbp-0x3d];
0xffffffff811e8183: xchg esp, eax; ret 0x2d3c;
0xffffffff811e8184: ret 0x2d3c;
0xffffffff811e8751: mov esp, ebp; cmp al, 0; pop rbp; ret;
0xffffffff811e87f9: fucomip st, st(0); sar dword ptr [rax+0x548bffff], 0x24; xor [rbp+0x48d775d2], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff811e87fb: sar dword ptr [rax+0x548bffff], 0x24; xor [rbp+0x48d775d2], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff811e87fe: dec dword ptr [rbx-0x7acfdbac]; shl byte ptr [rbp-0x29], cl; mov rbx, [rbp-8]; leave; ret;
0xffffffff811e8802: xor [rbp+0x48d775d2], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff811e8804: shl byte ptr [rbp-0x29], cl; mov rbx, [rbp-8]; leave; ret;
0xffffffff811e8806: xlat [rbx]; mov rbx, [rbp-8]; leave; ret;
0xffffffff811e8bd2: ret 0xeb44;
0xffffffff811e8bdd: ret 0xcb40;
0xffffffff811e8bfa: ret 0x8904;
0xffffffff811e95e6: ret 0x3346;
0xffffffff811e9644: ret 0x5f33;
0xffffffff811e98c2: xchg esp, eax; add [rax], al; add [rcx-0x77], al; ret;
0xffffffff811e999b: pop rsp; pop r14; mov [rsi], edx; mov [rsi+0xc], ecx; pop rbp; ret;
0xffffffff811e9ebf: ret 0xc8b;
0xffffffff811eacdb: ret 0xd66;
0xffffffff811ead7a: pop rsp; add [rax], eax; add [rax], al; mov [r8+0x5a], dx; ret;
0xffffffff811eaf97: in eax, 0x74; out 0xff, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff811eaf99: out 0xff, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff811eb647: fwait; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff811eba45: inc dword ptr [rcx+rcx*4+0x63]; xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ebc7d: ret 0xab75;
0xffffffff811ebceb: leave; stosd [rdi]; iretd;
0xffffffff811ebe7c: ret 0xaeef;
0xffffffff811ec35f: ret 0x8dc0;
0xffffffff811ec372: ret 0x8675;
0xffffffff811ed213: ret 0x811e;
0xffffffff811ed291: ret 0x1570;
0xffffffff811ed458: ret 0x68c4;
0xffffffff811ed49f: ror byte ptr [rax-0x76b78fbd], 1; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811ed70b: xchg esp, eax; ret 0x895b;
0xffffffff811ed770: xor dword ptr [rbp-0x2e], 0x8948db31; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811ed889: ret 0xafbf;
0xffffffff811ed9b4: fsubp st(0), st; xchg [rsi+0x61], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ed9b6: xchg [rsi+0x61], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811eda39: out 0xe8, eax; xchg ecx, eax; mov [0x415b6063894c003b], al; pop rsp; pop rbp; ret;
0xffffffff811eda3b: xchg ecx, eax; mov [0x415b6063894c003b], al; pop rsp; pop rbp; ret;
0xffffffff811eda3c: mov [0x415b6063894c003b], al; pop rsp; pop rbp; ret;
0xffffffff811edb8e: ret 0xdb31;
0xffffffff811edefb: sbb cl, [rcx+rcx*4+0x63]; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811edf90: dec dword ptr [rcx+rcx*4+0x63]; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811ee06c: or eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ee1f7: add eax, 0x4800613e; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee25c: mov [r12], rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee25d: mov [rsp], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee25e: add al, 0x24; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee634: inc dword ptr [rbp+0x481075c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee636: shl byte ptr [rbp+0x10], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811ee6da: mov [0x41e089445b000007], al; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811ef7b2: ret 0x2875;
0xffffffff811ef7da: ret 0xd874;
0xffffffff811efa68: ret 0x4c89;
0xffffffff811efc82: and [rbx+0x41], r11b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811efdd4: xchg esp, eax; and al, 0xa0; add [rax], eax; add bh, dh; ret 0;
0xffffffff811f0445: mov esi, 0x415bffe8; pop rsp; pop rbp; ret;
0xffffffff811f0cb4: ret 0x68f8;
0xffffffff811f0cde: ret 0xf380;
0xffffffff811f10c7: xor [r11], r15b; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f10c8: xor [rbx], bh; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f119f: add al, ch; imul ebp, [rdi], 0x3b; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f11a1: imul ebp, [rdi], 0x3b; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f2973: add [rbx+0x41], rbx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811f2e91: fucomip st, st(0); mov [rbp+0x415b0000], ebp; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f2e93: mov [rbp+0x415b0000], ebp; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f2fe1: mov [rbx+0x98], rax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811f2fe2: mov [rbx+0x98], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff811f3178: ret 0xefc0;
0xffffffff811f3659: ret 0x810c;
0xffffffff811f3945: pop rsp; xor eax, eax; pop r13; pop rbp; ret;
0xffffffff811f3cba: ret 0x26a;
0xffffffff811f3ec8: adc dword ptr [rdx+rax-0x76b40000], 0xffffffe0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f45c8: mov [rcx+0x10], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f45c9: mov [rcx+0x10], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f463f: mov [r12+0x5c8], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f4640: mov [rsp+0x5c8], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f4643: enter 5, 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f4726: ret 0x97eb;
0xffffffff811f486e: or dword ptr [rax-0x7d], 0x894808c4; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f4909: shl byte ptr [rcx+rdx-0x18], 0xff; mov [0x894808c48348ffff], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811f491e: mov [0xc48348d88948ffff], eax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f491f: mov [0xc48348d88948ffff], eax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f4983: shl byte ptr [rcx+rdx-0x18], 0x85; mov [0x894808c48348ffff], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811f4a03: shl byte ptr [rcx+rdx-0x18], 5; mov [0x894808c48348ffff], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811f4a08: mov [0x894808c48348ffff], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811f4a19: mov [0xc48348d88948ffff], al; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f4a88: mov eax, [0x894808c48348ffff]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff811f4a99: mov eax, [0xc48348d88948ffff]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f4b30: cmove rax, rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f4b31: cmove eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f55e7: inc dword ptr [rax+rax*8+0x415b1375]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811f5603: fstp dword ptr [rbx+0x415bffff], st; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff811f5bba: add dh, [rdi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f6056: add [rsi-0x77], ah; xchg eax, esp; add eax, 0xc0310000; mov [rdi+0x268], rdx; mov [rdi+0x264], ecx; ret;
0xffffffff811f6059: xchg eax, esp; add eax, 0xc0310000; mov [rdi+0x268], rdx; mov [rdi+0x264], ecx; ret;
0xffffffff811f60fa: or dword ptr [rax-0x75], 0x1a083; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f60fd: and dword ptr [rax+0x5b000001], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f6720: ret 0x40e9;
0xffffffff811f672b: ret 0x17e9;
0xffffffff811f68a3: inc dword ptr [rbp+0x480978c0]; add esp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f68a5: sar byte ptr [rax+9], 0x48; add esp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff811f6f42: rol byte ptr [rip+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff811f7594: or ecx, [rcx-0x3b7cb728]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811f75ff: mov rbx, rdx; sub rsp, 0x18; test ecx, ecx; sete r13b; add r13d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff811f7600: mov ebx, edx; sub rsp, 0x18; test ecx, ecx; sete r13b; add r13d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff811f7602: sub rsp, 0x18; test ecx, ecx; sete r13b; add r13d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff811f7603: sub esp, 0x18; test ecx, ecx; sete r13b; add r13d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff811f7607: leave; sete r13b; add r13d, 1; call qword ptr [0xffffffff81c27000];
0xffffffff811f767d: mov al, [0x415b18c483480000]; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f76c8: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b18c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f76cb: or dword ptr [rax-0x7d], 0x415b18c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff811f772e: fsubp st(6), st; cmp eax, [rax]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff811f772f: out dx, al; cmp eax, [rax]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff811f7730: cmp eax, [rax]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff811f7f0b: test [r13-0x7b], r8b; rol byte ptr [rcx+0xf], 0x94; rol byte ptr [rbx+0x4103807d], 0xf; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f0c: test [rbp-0x7b], al; rol byte ptr [rcx+0xf], 0x94; rol byte ptr [rbx+0x4103807d], 0xf; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f0f: rol byte ptr [rcx+0xf], 0x94; rol byte ptr [rbx+0x4103807d], 0xf; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f12: xchg esp, eax; rol byte ptr [rbx+0x4103807d], 0xf; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f13: rol byte ptr [rbx+0x4103807d], 0xf; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f17: add eax, [rcx+0xf]; xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f7f1a: xchg esp, eax; mov dword ptr [rbp+8], 0x292074f8; ret 0xd285;
0xffffffff811f89fd: ret 0x5d89;
0xffffffff811f9711: sub [r8+0x3b], r9b; sub [rdi], r9b; xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret;
0xffffffff811f9712: sub [rax+0x3b], cl; sub [rdi], r9b; xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret;
0xffffffff811f9715: sub [rdi], r9b; xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret;
0xffffffff811f9716: sub [rdi], cl; xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret;
0xffffffff811f9718: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rcx], 0xc0; ret;
0xffffffff811f993f: nop; push rbp; mov rbp, rsp; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9940: push rbp; mov rbp, rsp; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9941: mov rbp, rsp; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9942: mov ebp, esp; push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9943: in eax, 0x53; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9944: push rbx; sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9945: sub rsp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9946: sub esp, 0x10; call qword ptr [0xffffffff81c27010];
0xffffffff811f9b08: ret 0xb8e0;
0xffffffff811f9cd2: add eax, 0x415bffea; pop rsp; pop rbp; ret;
0xffffffff811f9f0e: ret 0x67c0;
0xffffffff811fa978: or [rax], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811fa9c1: xchg esp, ecx; add [rax], al; add [rbp-0x3f6af040], al; movzx eax, al; ret;
0xffffffff811fab02: mov edx, 0x48ffe81a; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fabe9: xchg esp, eax; ret 0x73e9;
0xffffffff811fabf4: xchg esp, eax; ret 0x43e9;
0xffffffff811fac5e: xor [rcx-0x75], cl; xchg esp, eax; and al, 0x18; add [rax], eax; add [rcx+0x3c8b48d8], cl; ret 0x87f6;
0xffffffff811fac61: xchg esp, eax; and al, 0x18; add [rax], eax; add [rcx+0x3c8b48d8], cl; ret 0x87f6;
0xffffffff811fac9c: and [rbx+0x415bffe9], ah; pop rsp; pop r13; pop rbp; ret;
0xffffffff811facee: ret 0x830e;
0xffffffff811fb0d1: add rsp, 0x20; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fb0d2: add esp, 0x20; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fb117: mov qword ptr [rbx+0x30], 0; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fb118: mov dword ptr [rbx+0x30], 0; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fb11d: add [rax], al; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fb57c: push 0x60; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff811fb8d0: ret 0x4ae8;
0xffffffff811fb997: ret 0xb8fd;
0xffffffff811fbba5: add rsp, 8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff811fbf5e: xchg eax, esp; add [rax], al; add al, dh; bts [rax], r8; pop rbp; ret;
0xffffffff811fc10e: ret 0x408d;
0xffffffff811fc973: fnstenv [rcx]; add [rax], al; leave; ret;
0xffffffff811fcab5: fisttp dword ptr [rcx-0x75], st; xchg esp, eax; and al, 0x18; add [rax], eax; add [rcx+0x48b48d8], cl; ret 0x908b;
0xffffffff811fcab8: xchg esp, eax; and al, 0x18; add [rax], eax; add [rcx+0x48b48d8], cl; ret 0x908b;
0xffffffff811fcd32: setne al; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fcd33: xchg ebp, eax; ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811fdb4e: ret 0xaa10;
0xffffffff811fecfc: push qword ptr [rdi+9]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff811fefba: ret 0x1c;
0xffffffff811ff179: ret 0x6918;
0xffffffff811ff66e: ret 0xace8;
0xffffffff811ff8a5: fadd st, dword ptr [r10]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff811ff8a6: fadd st, dword ptr [rdx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8120022f: sbb eax, 0x415b0060; pop rsp; pop r13; pop rbp; ret;
0xffffffff812004dd: ret 0x706f;
0xffffffff81200b42: ret 0xd8e8;
0xffffffff81200c43: sub ecx, [rcx-0x75]; xchg esp, eax; and al, 0x18; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff81200cc6: xor [rcx-0x75], ecx; xchg esp, eax; and al, 0x18; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff81200cc9: xchg esp, eax; and al, 0x18; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff81201b3d: add [rcx-0x75], al; xchg esp, eax; and al, 0xd8; add eax, [rax]; add dh, dh; ret 0x7540;
0xffffffff81201b40: xchg esp, eax; and al, 0xd8; add eax, [rax]; add dh, dh; ret 0x7540;
0xffffffff81202d1a: ret 0x12f1;
0xffffffff81202d25: or [rax-0x75], cl; or [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81202d28: or [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81202f6d: outsd dx, [rsi]; adc eax, [rax]; pop rax; leave; ret;
0xffffffff81202f6e: adc eax, [rax]; pop rax; leave; ret;
0xffffffff81203303: rol byte ptr [rcx], 0x41; pop rsp; pop rbp; ret;
0xffffffff81203419: ret 0x3a;
0xffffffff81203801: xchg esp, eax; ror byte ptr [rdi], 0xb6; shl bh, 0xd8; ret;
0xffffffff81203976: add [rcx+rcx+0x48], dh; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81203a8b: push qword ptr [rcx]; fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81203c4a: ret 0x3a04;
0xffffffff81204246: ret 0xd629;
0xffffffff812042dc: adc al, 9; enter 0x689, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812042de: enter 0x689, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812045f4: ret 0xda8f;
0xffffffff81204917: ret 0x6928;
0xffffffff8120498e: mov eax, [0x89480012d28be881]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8120502b: ret 0xbd81;
0xffffffff812050cd: ret 0x4de8;
0xffffffff812055c9: sub eax, 0x3aa051; add rsp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff812055cd: cmp al, [rax]; add rsp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81205670: ret 0x4825;
0xffffffff81205744: ret 0xb272;
0xffffffff8120585d: ret 0xbddd;
0xffffffff81206401: ret 0xa474;
0xffffffff8120675d: ret 0xa974;
0xffffffff81206b84: ret 0x10eb;
0xffffffff812071f4: ret 0xbf5c;
0xffffffff812072ba: out 0xf, eax; xchg esp, eax; shr eax, 0xd; idiv edi; dec dword ptr [rax-0x39]; ret 0xffe4;
0xffffffff812072bc: xchg esp, eax; shr eax, 0xd; idiv edi; dec dword ptr [rax-0x39]; ret 0xffe4;
0xffffffff812072c5: ret 0xffe4;
0xffffffff812072d3: adc [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff81207578: ret 0xbf6f;
0xffffffff81207a7a: ret 0x3a44;
0xffffffff81207b10: ret 0x4b74;
0xffffffff812085db: mov dl, 0xc8; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x8548;
0xffffffff812085dd: add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x8548;
0xffffffff812085df: add [rdi], cl; xchg esp, eax; ret 0x8548;
0xffffffff81208778: ret 0x3a80;
0xffffffff81208eb9: ficomp st, word ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81209606: ret 0x9060;
0xffffffff81209ab7: ret 0x9590;
0xffffffff81209be7: ret 0x9550;
0xffffffff8120a01b: ret 0xefe8;
0xffffffff8120a4fc: mov al, [0x41e089445bfffe71]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8120adf3: ret 0xffa1;
0xffffffff8120b343: ret 0x47e8;
0xffffffff8120b375: ret 0xc323;
0xffffffff8120b423: sub eax, 0xfffffe67; leave; ret;
0xffffffff8120b42f: mov edi, 0xf8; add [rbp-0x1a], dh; leave; ret;
0xffffffff8120b432: add [rax], al; add [rbp-0x1a], dh; leave; ret;
0xffffffff8120b434: add [rbp-0x1a], dh; leave; ret;
0xffffffff8120b870: ret 0xaae8;
0xffffffff8120b8a0: ret 0x7ae8;
0xffffffff8120c89d: adc [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8120cb6b: adc [rax+0x415b0039], esi; pop rsp; pop rbp; ret;
0xffffffff8120cb6c: mov al, 0x39; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8120cc17: leave; cmp al, [rax]; mov [r15+0x18], rbx; mov rax, [r15+0x1b8]; mov byte ptr [rax], 0; call qword ptr [0xffffffff81c27018];
0xffffffff8120cfc7: add [rdi], cl; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; movzx eax, al; pop rbp; ret;
0xffffffff8120cfc9: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; movzx eax, al; pop rbp; ret;
0xffffffff8120cfcd: pop rsp; movzx eax, al; pop rbp; ret;
0xffffffff8120d0b3: ret 0x6272;
0xffffffff8120d0e7: add [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; cmove rax, rcx; pop rbp; ret;
0xffffffff8120d0ea: rcr byte ptr [rbx+0x41], 1; pop rsp; cmove rax, rcx; pop rbp; ret;
0xffffffff8120d0ed: pop rsp; cmove rax, rcx; pop rbp; ret;
0xffffffff8120d112: ret 0x1ee9;
0xffffffff8120d4c2: add [rax], al; add [rcx+0x415b044b], cl; pop rsp; pop rbp; ret;
0xffffffff8120d4c4: add [rcx+0x415b044b], cl; pop rsp; pop rbp; ret;
0xffffffff8120d5dc: ret 0x4c06;
0xffffffff8120d7d8: ret 0x4e58;
0xffffffff8120dacb: add [rax], al; add [rsi-0x7d], ah; mov ebx, 0xbc; add [rdi], ecx; xchg esp, eax; ret 0x8948;
0xffffffff8120dacd: add [rsi-0x7d], ah; mov ebx, 0xbc; add [rdi], ecx; xchg esp, eax; ret 0x8948;
0xffffffff8120dad0: mov ebx, 0xbc; add [rdi], ecx; xchg esp, eax; ret 0x8948;
0xffffffff8120dad3: add [rax], al; add [rdi], ecx; xchg esp, eax; ret 0x8948;
0xffffffff8120dad5: add [rdi], ecx; xchg esp, eax; ret 0x8948;
0xffffffff8120e009: add esp, esp; dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8120e00a: add esp, esp; dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8120e21a: ret 0x39a5;
0xffffffff8120e40d: and al, 0xe0; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8120e40f: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8120e411: add [rdi], cl; xchg esp, eax; ret 0x8948;
0xffffffff8120e413: xchg esp, eax; ret 0x8948;
0xffffffff8120e7d9: ret 0x67e9;
0xffffffff8120f90d: ret 0x482c;
0xffffffff8120fb6f: ret 0xd709;
0xffffffff8120fff9: mov [r12+0x50], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8120fffa: mov [rsp+0x50], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8120fffc: and al, 0x50; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812101f0: ret 0x2ae8;
0xffffffff812109ff: ret 0x975;
0xffffffff81210b90: sbb ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81210bbd: ret 0xd177;
0xffffffff81210e9a: ret 0x3a86;
0xffffffff812117dc: ret 0x3ee8;
0xffffffff81211d4f: ret 0x1c89;
0xffffffff81211f19: ret 0x2b75;
0xffffffff812123c5: ret 0x2190;
0xffffffff81212b56: or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81212bc7: push 0x415b003a; pop rsp; pop rbp; ret;
0xffffffff81212bc8: push 0x415b003a; pop rsp; pop rbp; ret;
0xffffffff81212c41: add al, ch; sbb [rax+rbp*8-1], edi; leave; ret;
0xffffffff81212c43: sbb [rax+rbp*8-1], edi; leave; ret;
0xffffffff81212dce: out 0xe8, al; pop rsp; push rax; in eax, dx; call far fword ptr [rbx+0x41];
0xffffffff81212dd0: pop rsp; push rax; in eax, dx; call far fword ptr [rbx+0x41];
0xffffffff81213381: ret 0xce77;
0xffffffff812133ef: ret 0xd077;
0xffffffff812133f3: ret 0x743f;
0xffffffff812135ba: ret 0x39eb;
0xffffffff81213619: ret 0xd1e8;
0xffffffff81213713: and [rdi], cl; test [rax+rax-0x77d0000], edx; sub al, 0xf; xchg esp, eax; ret 0xc085;
0xffffffff81213715: test [rax+rax-0x77d0000], edx; sub al, 0xf; xchg esp, eax; ret 0xc085;
0xffffffff81213716: xchg esp, eax; add [rax], al; add [rbx-0x6bf0d308], al; ret 0xc085;
0xffffffff8121371b: clc; sub al, 0xf; xchg esp, eax; ret 0xc085;
0xffffffff8121371c: sub al, 0xf; xchg esp, eax; ret 0xc085;
0xffffffff8121371e: xchg esp, eax; ret 0xc085;
0xffffffff81213a6a: ret 0x483f;
0xffffffff81213dba: ret 0x69;
0xffffffff81213ea1: pop rsp; mov eax, r10d; pop r13; pop r14; pop rbp; ret;
0xffffffff81213f87: enter 0xc085, 0xf; xchg esp, eax; iretd;
0xffffffff81214949: ret 0x94;
0xffffffff81214a24: ret 0x30eb;
0xffffffff81214bba: inc dword ptr [rax+rax*8+0x415bda75]; pop rsp; pop rbp; ret;
0xffffffff8121586b: leave; out dx, eax; call far fword ptr [rbx+0x41];
0xffffffff812159a0: ret 0xe76;
0xffffffff812159c5: fistp qword ptr [rax-0xe], st; leave; ret;
0xffffffff812159c6: mov eax, 0xfffffff2; leave; ret;
0xffffffff812159db: dec byte ptr [r8+0x29]; dec byte ptr [rax-0x7b]; div byte ptr [rbp+0x1f]; xor eax, eax; leave; ret;
0xffffffff812159dc: dec byte ptr [rax+0x29]; dec byte ptr [rax-0x7b]; div byte ptr [rbp+0x1f]; xor eax, eax; leave; ret;
0xffffffff812159df: dec byte ptr [rax-0x7b]; div byte ptr [rbp+0x1f]; xor eax, eax; leave; ret;
0xffffffff812159e2: div byte ptr [rbp+0x1f]; xor eax, eax; leave; ret;
0xffffffff81215b53: ret 0x39;
0xffffffff8121621b: push rbx; and ebx, 0x480b0fff; mov eax, [rbp-8]; leave; ret;
0xffffffff8121621c: and ebx, 0x480b0fff; mov eax, [rbp-8]; leave; ret;
0xffffffff812162ac: test [rbp+0x48000001], esp; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121631e: add rsp, 8; mov eax, esi; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121631f: add esp, 8; mov eax, esi; pop rbx; pop r12; pop rbp; ret;
0xffffffff812166e5: xchg esp, eax; add [rax], al; add [rbp-0x75], cl; or [rbp-0x75], cl; sbb sil, r14b; ret 0xf04;
0xffffffff81216a9b: ret 0x895d;
0xffffffff81216cd8: ret 0xa55d;
0xffffffff81216f26: ret 0x3e9;
0xffffffff81218321: xchg esp, ebx; add [rax], al; add [rcx-0x75], al; push rbp; add dh, dh; ret 0xf06;
0xffffffff81218442: ret 0xf06;
0xffffffff8121a0a1: sbb [rax-0x77], cl; or [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121a154: push rdi; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121a2e0: ror byte ptr [rcx+0x43892043], 1; and al, 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8121a2e1: mov [rbx+0x20], eax; mov [rbx+0x24], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8121a2e4: mov [rbx+0x24], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8121a2e6: and al, 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8121a871: leave; lea rax, [rdx+rcx]; mov rbp, rsp; pop rbp; ret;
0xffffffff8121a899: leave; pop rbp; sete al; ret;
0xffffffff8121ab4c: pop rsp; and al, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121ac56: and al, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8121ad11: add al, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8121aedd: ret 0x5077;
0xffffffff8121af34: pop rsp; mov dword ptr [r13], 0; pop r13; pop r14; pop rbp; ret;
0xffffffff8121b185: or ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121b1d7: add [rbx+4], r12d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121b1d8: add [rbx+4], esp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121b1d9: movsxd eax, [rax+rcx*2]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121b35b: pop rsp; lahf; add cl, ch; sar dh, 0xff; jmp qword ptr [rsi+0x66];
0xffffffff8121b889: fstp tbyte ptr [rcx], st; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121b8d2: pop rdx; fstp tbyte ptr [rcx], st; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121b8d3: fstp tbyte ptr [rcx], st; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121b92d: or dword ptr [rcx+rcx*4-0x1a], 0x39dafae8; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121b933: fidivr st, dword ptr [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121b9da: push rdx; fidivr st, dword ptr [rcx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121b9db: fidivr st, dword ptr [rcx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121ba57: sub eax, 0xffe60b63; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121ba5b: out 0xff, al; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8121c70d: ret 0x54e9;
0xffffffff8121c99a: ret 0x39cb;
0xffffffff8121ca72: ret 0x5b76;
0xffffffff8121cbcf: ret 0x5976;
0xffffffff8121cc88: ret 0x3273;
0xffffffff8121cf78: ret 0x74f8;
0xffffffff8121d316: ret 0xf1d0;
0xffffffff8121d39c: add [rcx], dh; rcr byte ptr [rbx+0x41], cl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff8121d4c7: ret 0xfa01;
0xffffffff8121d4d3: ret 0xff0;
0xffffffff8121d604: ret 0x920f;
0xffffffff8121d614: leave; test edx, edx; sete al; ret;
0xffffffff8121d619: rol bl, 0x83; clc; push qword ptr [rbp-0x21]; leave; xor eax, eax; ret;
0xffffffff8121d61c: clc; push qword ptr [rbp-0x21]; leave; xor eax, eax; ret;
0xffffffff8121d61d: push qword ptr [rbp-0x21]; leave; xor eax, eax; ret;
0xffffffff8121d642: or eax, 0xb0fffe3; movzx eax, byte ptr [rbp-1]; leave; ret;
0xffffffff8121d6c4: ret 0x2177;
0xffffffff8121d73f: add [rdi], cl; xchg esp, eax; ret 0xe374;
0xffffffff8121d741: xchg esp, eax; ret 0xe374;
0xffffffff8121d742: ret 0xe374;
0xffffffff8121d83c: ret 0x485d;
0xffffffff8121d877: ret 0xd73;
0xffffffff8121d8a4: fmul st, dword ptr [rax+0x39]; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8121d944: ret 0xc7f6;
0xffffffff8121da04: rol byte ptr [rcx-0x77], 0x5d; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121da07: pop rbp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8121db43: ret 0xc8ce;
0xffffffff8121db7b: ret 0xc8c8;
0xffffffff8121e230: mov esp, eax; mov rax, r12; pop r12; pop r13; pop rbp; ret;
0xffffffff8121e4c4: ret 0xc937;
0xffffffff8121e55a: ret 0x4b8d;
0xffffffff8121e664: ret 0xc943;
0xffffffff8121e6f1: ret 0xc94b;
0xffffffff8121efd4: or ecx, [rcx+0x48c03103]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8121f096: mov [rbx], ax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8121f155: or ecx, [rax+0x48c03103]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8121f156: mov [rbx], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8121f5fd: ret 0x66f3;
0xffffffff8121f65b: ret 0x6df3;
0xffffffff8121fa26: ret 0xf910;
0xffffffff8121fccd: add [rbp-0x597af040], al; add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121fcd2: cmpsb [rsi], [rdi]; add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8121fd75: ficomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81220268: add [rax], al; mov rax, [rdx+0x20]; add rax, rsi; sub rax, [rdx+0x18]; leave; ret;
0xffffffff8122026a: mov rax, [rdx+0x20]; add rax, rsi; sub rax, [rdx+0x18]; leave; ret;
0xffffffff8122026b: mov eax, [rdx+0x20]; add rax, rsi; sub rax, [rdx+0x18]; leave; ret;
0xffffffff8122026e: add rax, rsi; sub rax, [rdx+0x18]; leave; ret;
0xffffffff8122026f: add eax, esi; sub rax, [rdx+0x18]; leave; ret;
0xffffffff81220271: sub rax, [rdx+0x18]; leave; ret;
0xffffffff81220272: sub eax, [rdx+0x18]; leave; ret;
0xffffffff81220281: sub eax, 0xffe667d2; or rax, 0xffffffffffffffff; leave; ret;
0xffffffff81220285: out 0xff, al; or rax, 0xffffffffffffffff; leave; ret;
0xffffffff81220287: or rax, 0xffffffffffffffff; leave; ret;
0xffffffff81220288: or eax, 0xffffffff; leave; ret;
0xffffffff812202d8: mov rax, [rax+0x20]; sub rax, rdx; add rax, rcx; leave; ret;
0xffffffff812202d9: mov eax, [rax+0x20]; sub rax, rdx; add rax, rcx; leave; ret;
0xffffffff812202dc: sub rax, rdx; add rax, rcx; leave; ret;
0xffffffff812202dd: sub eax, edx; add rax, rcx; leave; ret;
0xffffffff812202df: add rax, rcx; leave; ret;
0xffffffff812202e0: add eax, ecx; leave; ret;
0xffffffff812202ea: or dword ptr [rax-0x73], 0x65e8f875; out 0xff, al; mov rax, 0xffffffffffffffff; leave; ret;
0xffffffff812202f0: out 0xff, al; mov rax, 0xffffffffffffffff; leave; ret;
0xffffffff812202f2: out 0xff, al; mov rax, 0xffffffffffffffff; leave; ret;
0xffffffff812202f4: mov rax, 0xffffffffffffffff; leave; ret;
0xffffffff812202f5: mov eax, 0xffffffff; leave; ret;
0xffffffff81220a69: ret 0xdd74;
0xffffffff81220a6e: fstp qword ptr [rbx+0x41], st; pop rsp; mov eax, r13d; pop r13; pop rbp; ret;
0xffffffff81220d62: ret 0x88eb;
0xffffffff812211c1: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol bl, 0x31; ror byte ptr [rax-0x7b], 0xff; sete al; ret;
0xffffffff812212cb: ret 0x11a0;
0xffffffff812217e7: ret 0xe905;
0xffffffff81222750: ret 0x32e9;
0xffffffff8122374a: ret 0xeede;
0xffffffff81223c8b: ret 0x3174;
0xffffffff81223c91: ret 0xfa75;
0xffffffff81223f94: inc dword ptr [rbp+0x31]; leave; mov eax, 0xfffffffc; mov [rcx], r9; ret;
0xffffffff81223f97: leave; mov eax, 0xfffffffc; mov [rcx], r9; ret;
0xffffffff812241b0: ret 0x44e9;
0xffffffff81225768: ret 0x4b89;
0xffffffff81226193: ret 0xdce9;
0xffffffff812262bb: ret 0xa0e9;
0xffffffff81226821: xchg esp, eax; ret 0xd084;
0xffffffff81226822: ret 0xd084;
0xffffffff81226cdb: ret 0x7389;
0xffffffff812279af: ret 0x28b;
0xffffffff81227fd1: ret 0xb6e9;
0xffffffff812288be: ret 0xe177;
0xffffffff81228dab: pop rsp; pop rbp; sub eax, r10d; add esi, eax; mov [rdi+0x90], esi; ret;
0xffffffff8122975a: ret 0x9477;
0xffffffff8122a1a1: ret 0xec75;
0xffffffff8122a2dc: ret 0xd302;
0xffffffff8122a4c9: ret 0x1703;
0xffffffff8122a770: ret 0x4129;
0xffffffff8122ac6a: ret 0x38e7;
0xffffffff8122ae58: in eax, 0x38; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8122b5ab: xchg ecx, eax; push 0x415b0038; pop rsp; pop rbp; ret;
0xffffffff8122b5ac: push 0x415b0038; pop rsp; pop rbp; ret;
0xffffffff8122b71a: add al, 0xe8; and [rdi+0x38], ah; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122b71c: and [rdi+0x38], ah; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122bbee: ret 0xfaa8;
0xffffffff8122c199: ret 0x2db8;
0xffffffff8122c34d: ret 0xba76;
0xffffffff8122c46d: ret 0xe8eb;
0xffffffff8122c7a9: ret 0x6160;
0xffffffff8122c7c3: ret 0x69a0;
0xffffffff8122c84e: ret 0xbeb;
0xffffffff8122cc71: ret 0x89e8;
0xffffffff8122cec6: sbb [r13-0x77], spl; adc [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff8122cec7: sbb [rbp-0x77], ah; adc [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff8122d0e2: sbb [r9+r9*4+0x24], al; add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8122d0e3: sbb [rcx+rcx*4+0x24], al; add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8122d1ea: ret 0xf0f3;
0xffffffff8122d2ee: ret 0x4739;
0xffffffff8122d585: ret 0x328b;
0xffffffff8122d610: push rbp; fmul st, qword ptr [rcx-0x3b7cb7ed]; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122d611: fmul st, qword ptr [rcx-0x3b7cb7ed]; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122d612: mov [rbx], edx; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122d663: mov rdx, [rbp-0x20]; mov [rbx], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8122d664: mov edx, [rbp-0x20]; mov [rbx], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8122d667: mov [rbx], rdx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8122d668: mov [rbx], edx; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8122d6bd: add [rax], al; add al, ch; or edx, esp; out 0xff, eax; leave; ret;
0xffffffff8122d6bf: add al, ch; or edx, esp; out 0xff, eax; leave; ret;
0xffffffff8122d6c1: or edx, esp; out 0xff, eax; leave; ret;
0xffffffff8122d711: out 0xff, eax; leave; ret;
0xffffffff8122d75f: add al, ch; imul edx, ebx, 0xffffffe7; inc dword ptr [rbp-0x74fc8a40]; clc; leave; ret;
0xffffffff8122d761: imul edx, ebx, 0xffffffe7; inc dword ptr [rbp-0x74fc8a40]; clc; leave; ret;
0xffffffff8122d7ad: add al, ch; sbb eax, 0x85ffe7d3; shl byte ptr [rbp+3], 0x8b; clc; leave; ret;
0xffffffff8122d7af: sbb eax, 0x85ffe7d3; shl byte ptr [rbp+3], 0x8b; clc; leave; ret;
0xffffffff8122d7b0: shl edi, cl; inc dword ptr [rbp-0x74fc8a40]; clc; leave; ret;
0xffffffff8122d825: shl bh, cl; inc dword ptr [rbp-0x74fc8a40]; clc; leave; ret;
0xffffffff8122d827: inc dword ptr [rbp-0x74fc8a40]; clc; leave; ret;
0xffffffff8122d829: shl byte ptr [rbp+3], 0x8b; clc; leave; ret;
0xffffffff8122d8a1: out 0xff, eax; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122d8f3: in eax, 0x53; mov rbx, rdi; lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f4: push rbx; mov rbx, rdi; lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f5: mov rbx, rdi; lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f6: mov ebx, edi; lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f7: sti; lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f8: lea rsi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8f9: lea esi, [rbp-0xc]; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8fb: hlt; sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8fc: sub rsp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122d8fd: sub esp, 8; mov edi, [rdi]; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122da03: or rdx, rcx; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122da04: or edx, ecx; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122dae2: dec dword ptr [rax-0x77]; in eax, 0x53; mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae3: mov rbp, rsp; push rbx; mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae4: mov ebp, esp; push rbx; mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae5: in eax, 0x53; mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae6: push rbx; mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae7: mov rbx, rsi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122dae8: mov ebx, esi; lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122daea: lea rsi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122daeb: lea esi, [rbp-0xc]; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122daed: hlt; sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122daee: sub rsp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122daef: sub esp, 8; call qword ptr [0xffffffff81c26fb0];
0xffffffff8122db00: mov [rbx], rax; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff8122db01: mov [rbx], eax; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff8122dbbe: ret 0x2348;
0xffffffff8122dbdd: add [rbp-0x3dbbf040], al; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122dc9d: sbb al, 0x41; pop rsp; pop rbx; ret;
0xffffffff8122dc9f: pop rsp; pop rbx; ret;
0xffffffff8122de22: fiadd st, dword ptr [rcx+0x5d]; add [rbx+0x1389f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122de23: pop r13; add [rbx+0x1389f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e0ee: pop rbp; add [rbx+0x1388f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e0ef: add [rbx+0x1388f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e0f0: mov edx, [rbp-0xc]; mov [rbx], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e0f2: hlt; mov [rbx], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e0f3: mov [rbx], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e15c: mov edx, [rbp-0xc]; mov [rbx], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e15e: hlt; mov [rbx], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e1c9: pop rbp; add [rbx+0x1389f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e1ca: pop rbp; add [rbx+0x1389f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e1cb: add [rbx+0x1389f455], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e1cc: mov edx, [rbp-0xc]; mov [rbx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e1ce: hlt; mov [rbx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e487: mov [rax], rdx; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122e488: mov [rax], edx; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122e533: or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; mov eax, edx; pop r13; pop rbp; ret;
0xffffffff8122e537: or [rbx+0x41], bl; pop rsp; mov eax, edx; pop r13; pop rbp; ret;
0xffffffff8122e6ad: or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; mov eax, ecx; pop r13; pop rbp; ret;
0xffffffff8122e6b1: or [rbx+0x41], bl; pop rsp; mov eax, ecx; pop r13; pop rbp; ret;
0xffffffff8122e874: ret 0x5c6;
0xffffffff8122e8a9: pop rsp; pop r13; mov eax, edx; pop rbp; ret;
0xffffffff8122e95a: sub eax, 0xffe4d990; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e95e: in al, 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122e99e: cli; add al, 0xf; xchg esp, eax; rol byte ptr [rbx-0x6bf0f506], 0xc2; or eax, edx; ret;
0xffffffff8122e99f: add al, 0xf; xchg esp, eax; rol byte ptr [rbx-0x6bf0f506], 0xc2; or eax, edx; ret;
0xffffffff8122e9a1: xchg esp, eax; rol byte ptr [rbx-0x6bf0f506], 0xc2; or eax, edx; ret;
0xffffffff8122e9a4: cli; or cl, [rdi]; xchg esp, eax; ret 0xd009;
0xffffffff8122e9a5: or cl, [rdi]; xchg esp, eax; ret 0xd009;
0xffffffff8122e9d2: or [rdi], cl; xchg esp, eax; shl dword ptr [rsi-0x3f], 0xea; or [rbx-0x37f7fe1e], al; cmovne eax, edx; ret;
0xffffffff8122e9d4: xchg esp, eax; shl dword ptr [rsi-0x3f], 0xea; or [rbx-0x37f7fe1e], al; cmovne eax, edx; ret;
0xffffffff8122e9e9: ret 0xfe83;
0xffffffff8122f3f6: ret 0xd171;
0xffffffff8122f4e7: mov ecx, [rax+7]; add [rax], al; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8122f6ab: add rsp, 0x10; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122f6ac: add esp, 0x10; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8122f806: movzx eax, word ptr [rbp-2]; leave; shr ax, 4; and eax, 1; ret;
0xffffffff8122f80a: leave; shr ax, 4; and eax, 1; ret;
0xffffffff8122f8e6: mov [0x8948fffff633e881], al; adc [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8122f8ec: dec dword ptr [rax-0x77]; adc [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8122f8ef: adc [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8122fa22: shl byte ptr [rbp+0xd], 0x89; or dword ptr [rbx+rax], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122fa24: or eax, 0x34c8389; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122fa43: movzx eax, byte ptr [rbp-9]; mov [rbx+0x34c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8122fa96: add [rbp+0x312875c0], al; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122fa98: shl byte ptr [rbp+0x28], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122fa9a: sub [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8122ff5b: ret 0xd1af;
0xffffffff812302b9: ret 0x20be;
0xffffffff81230323: ret 0x26be;
0xffffffff812304bc: ret 0xd1e9;
0xffffffff81230621: or byte ptr [rbx+0x614], 0x20; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81230626: add [rax], ah; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81230660: or byte ptr [rbx+0x613], 0x20; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81230665: add [rax], ah; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812306bf: shl byte ptr [rbp+0xc], 0x48; add esp, 8; mov eax, 0x100; pop rbx; pop rbp; ret;
0xffffffff812306c1: or al, 0x48; add esp, 8; mov eax, 0x100; pop rbx; pop rbp; ret;
0xffffffff812306c2: add rsp, 8; mov eax, 0x100; pop rbx; pop rbp; ret;
0xffffffff812306c3: add esp, 8; mov eax, 0x100; pop rbx; pop rbp; ret;
0xffffffff812307d2: ret 0xd4d8;
0xffffffff812309b0: add [rax], al; add [rax-0x77], cl; fisttp word ptr [rdi], st; xchg esp, eax; ret 0xe083;
0xffffffff812309b2: add [rax-0x77], cl; fisttp word ptr [rdi], st; xchg esp, eax; ret 0xe083;
0xffffffff812309b5: fisttp word ptr [rdi], st; xchg esp, eax; ret 0xe083;
0xffffffff81230cba: and [rbp+9], dh; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81231348: add bh, bh; dec dword ptr [rdi]; xchg esp, eax; ret 0xd309;
0xffffffff8123134a: dec dword ptr [rdi]; xchg esp, eax; ret 0xd309;
0xffffffff8123134c: xchg esp, eax; ret 0xd309;
0xffffffff81231358: ret 0xd308;
0xffffffff81231b34: and [rdi], cl; xchg esp, eax; ret 0x548d;
0xffffffff81231d25: mov esp, [rax+0x43894800]; or [rax-0x77], cl; sbb [rax-0x7d], cl; ret;
0xffffffff81231fd2: ret 0xd968;
0xffffffff8123245e: ret 0x7d80;
0xffffffff812329d9: ret 0x1473;
0xffffffff81232daa: fucomip st, st(0); mov al, [0x415bd88948fffffa]; pop rsp; pop rbp; ret;
0xffffffff81232dac: mov al, [0x415bd88948fffffa]; pop rsp; pop rbp; ret;
0xffffffff81232e68: shr al, 0x82; add edx, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81232e6b: add edx, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81233424: cmp [rbx+0x10], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81233489: add eax, 0x415b0010; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8123395f: ret 0x718d;
0xffffffff81233b93: ret 0xdb84;
0xffffffff81233bc4: mov [r12+0x611], bl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81233bc5: mov [rsp+0x611], bl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81233eda: mov eax, 0x80; leave; sar ecx, 0xc; and ecx, 7; shl eax, cl; ret;
0xffffffff81233edd: add [rax], al; leave; sar ecx, 0xc; and ecx, 7; shl eax, cl; ret;
0xffffffff81233edf: leave; sar ecx, 0xc; and ecx, 7; shl eax, cl; ret;
0xffffffff81233f06: movzx ecx, word ptr [rbp-2]; mov eax, 0x80; leave; shr cl, 5; shl eax, cl; ret;
0xffffffff81233f0a: mov eax, 0x80; leave; shr cl, 5; shl eax, cl; ret;
0xffffffff81233f0d: add [rax], al; leave; shr cl, 5; shl eax, cl; ret;
0xffffffff81233f0f: leave; shr cl, 5; shl eax, cl; ret;
0xffffffff8123407e: ret 0x37;
0xffffffff812341c3: pop rsp; mov rax, r13; pop r13; pop rbp; ret;
0xffffffff8123444a: ret 0x37a0;
0xffffffff81234774: div dword ptr [r13+9]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234775: div dword ptr [rbp+9]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234791: ret 0xde10;
0xffffffff81234a86: add rsp, 8; mov eax, 0xffffffe7; pop rbx; pop r12; pop rbp; ret;
0xffffffff81234a87: add esp, 8; mov eax, 0xffffffe7; pop rbx; pop r12; pop rbp; ret;
0xffffffff81234af0: add eax, 0xcb2a3a; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81234bba: ret 0x741f;
0xffffffff81234bca: ret 0xf673;
0xffffffff81234bd1: add eax, 0x3ba; add [rbx+0x41], bl; pop rsp; cmove eax, edx; pop rbp; ret;
0xffffffff81234bd4: add [rax], al; add [rbx+0x41], bl; pop rsp; cmove eax, edx; pop rbp; ret;
0xffffffff81234bd6: add [rbx+0x41], bl; pop rsp; cmove eax, edx; pop rbp; ret;
0xffffffff81234c67: sbb [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81234d22: add [rdx], bh; cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234d23: mov edx, 0; cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234d26: add [rax], al; cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234d28: cmovne eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234e27: stc; add al, [rbx-0x1f2cfc1f]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234e28: add al, [rbx-0x1f2cfc1f]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234e29: and ecx, 3; shl eax, cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81234e2c: shl eax, cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812350f7: xor eax, 0x48ffff91; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81235344: ret 0x5021;
0xffffffff81235610: ret 0xef74;
0xffffffff812356d4: mov [0x1057e2e80c740000], eax; add [rax-0x13], bh; leave; ret;
0xffffffff812356db: push rdi; adc [rax], al; mov eax, 0xffffffed; leave; ret;
0xffffffff812356dc: adc [rax], al; mov eax, 0xffffffed; leave; ret;
0xffffffff812356dd: add [rax-0x13], bh; leave; ret;
0xffffffff812356de: mov eax, 0xffffffed; leave; ret;
0xffffffff8123575a: ret 0x3813;
0xffffffff81235795: add dword ptr [rax], 0xc7480000; mov dword ptr [rax], 0xe881c3aa; cmp edx, [rip+0x415b0038]; pop rsp; pop rbp; ret;
0xffffffff81235798: add [rax-0x39], cl; mov dword ptr [rax], 0xe881c3aa; cmp edx, [rip+0x415b0038]; pop rsp; pop rbp; ret;
0xffffffff8123579b: mov dword ptr [rax], 0xe881c3aa; cmp edx, [rip+0x415b0038]; pop rsp; pop rbp; ret;
0xffffffff8123579c: add [rdx+0x3be881c3], ch; adc eax, 0x415b0038; pop rsp; pop rbp; ret;
0xffffffff812357a1: cmp edx, [rip+0x415b0038]; pop rsp; pop rbp; ret;
0xffffffff812357a2: adc eax, 0x415b0038; pop rsp; pop rbp; ret;
0xffffffff812359b6: mov eax, [rbp-4]; leave; shr eax, 0x1c; and eax, 1; ret;
0xffffffff812359b8: cld; leave; shr eax, 0x1c; and eax, 1; ret;
0xffffffff812359b9: leave; shr eax, 0x1c; and eax, 1; ret;
0xffffffff81235a37: and eax, 0xeb; add eax, 0x14; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a3a: add [rax], al; add eax, 0x14; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a3c: add eax, 0x14; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a3e: adc al, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a6e: add [rdx+0x14], bh; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a6f: mov edx, 0x14; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235a72: add [rax], al; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81235bc1: imul eax, [rsi-0x27760001], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81235bc2: xchg bh, bh; dec dword ptr [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81235c32: shl byte ptr [rbp+7], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81235da4: ret 0x7ad0;
0xffffffff81235e84: ret 0x8d18;
0xffffffff81235e96: mov esi, 0x415b0000; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81235eac: ret 0x7ab0;
0xffffffff812364d6: mov dword ptr [rbx+0x80], 4; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123650a: mov [rbx+0x80], r12d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123650b: mov [rbx+0x80], esp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812365b0: mov dword ptr [rbx+0x80], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812368ba: sub eax, 0xffff85d0; leave; ret;
0xffffffff81236bf0: cmp [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8123717b: test eax, 0x415b0010; pop rsp; pop rbp; ret;
0xffffffff812374a3: ret 0xdbba;
0xffffffff812374eb: ret 0xdfc8;
0xffffffff81237589: ret 0xdbc5;
0xffffffff8123779c: ret 0xe0e0;
0xffffffff812378f2: ret 0xe120;
0xffffffff81237935: ret 0xe0a8;
0xffffffff81237abf: and byte ptr [r12+0x612], 0xf7; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81237ac0: and byte ptr [rsp+0x612], 0xf7; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81237ac3: adc al, [rsi]; add [rax], al; test dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81237ac5: add [rax], al; test dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81237ac6: add bh, dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81237ac7: test dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81238039: lahf; pop rsp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81238111: ret 0x223;
0xffffffff81238186: inc dword ptr [rax+rax*8+0x415bda75]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81238197: pop rsp; sete al; pop r13; pop rbp; ret;
0xffffffff81238199: xchg esp, eax; rol byte ptr [rcx+0x5d], 0x5d; ret;
0xffffffff812381cc: and edx, 0xfffff; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81238207: shr eax, 8; and eax, 0x1f; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123820a: and eax, 0x1f; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123850a: inc dword ptr [rbp+0x480978c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81238519: dec dword ptr [rbx+0x618]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81238720: sub al, 0x22; out 0xff, al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123880a: inc dword ptr [rbx+0x2274e7f8]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81238d20: inc dword ptr [rbx+0x1974e7f8]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81238d66: or [rbp+9], dh; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81238f43: or [rcx-0x3f], ch; mov [rip+0x415b0000], edi; pop rsp; pop r13; pop rbp; ret;
0xffffffff81238f45: ror dword ptr [rcx+0x5b00003d], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81238f46: mov [rip+0x415b0000], edi; pop rsp; pop r13; pop rbp; ret;
0xffffffff81238f47: cmp eax, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff81239193: ret 0xe4d8;
0xffffffff812392dc: add [rdx+0x415b000f], ah; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812392de: ltr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81239401: ret 0x2c3c;
0xffffffff812399f1: pop rsp; add [rax+0x5bbfee63], al; pop r12; pop r13; pop rbp; ret;
0xffffffff81239c71: out 0xe8, eax; mov [rbx+0x415b005c], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff81239c73: mov [rbx+0x415b005c], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff81239c74: sbb dword ptr [rax+rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81239dc7: pop rsp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81239e7e: pop rsp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123a2e1: add [rax], al; add [rax-0x7b], cl; shl byte ptr [rsi+rcx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8123a2e3: add [rax-0x7b], cl; shl byte ptr [rsi+rcx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8123a2e6: shl byte ptr [rsi+rcx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8123ac9c: ret 0x485b;
0xffffffff8123af7f: adc al, 0xf; xchg esp, eax; ret 0xc031;
0xffffffff8123b139: adc eax, 0xf303980; xchg esp, eax; ret 0x8349;
0xffffffff8123b13c: xor [rdi], cl; xchg esp, eax; ret 0x8349;
0xffffffff8123b13e: xchg esp, eax; ret 0x8349;
0xffffffff8123b201: mov [r12+0x579], dl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123b202: mov [rsp+0x579], dl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123baf6: cmp esi, [rdi]; add [rax+0x36], bh; leave; ret;
0xffffffff8123baf7: cmp esi, [rdi]; add [rax+0x36], bh; leave; ret;
0xffffffff8123baf9: add [rax+0x36], bh; leave; ret;
0xffffffff8123bafa: mov eax, 0x36; leave; ret;
0xffffffff8123c071: ret 0xe67e;
0xffffffff8123c0c4: xchg esp, eax; ret 0xc8d;
0xffffffff8123c0ed: ret 0x81c2;
0xffffffff8123c0ee: ret 0xb281;
0xffffffff8123c285: xor esi, [rdi]; add [rax-0x68], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123c2bb: ret 0xdd47;
0xffffffff8123c2d0: xor r14, [rdi]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8123c2d1: xor esi, [rdi]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8123c2f9: ret 0xdd39;
0xffffffff8123c30d: ret 0xdd37;
0xffffffff8123c3db: ret 0xdd4f;
0xffffffff8123c3f7: and eax, 0x48003732; cwde; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123c3f8: xor dh, [rdi]; add [rax-0x68], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8123c4bc: fmul st, dword ptr [rdi]; xchg esp, eax; ret 0x5be8;
0xffffffff8123c4be: xchg esp, eax; ret 0x5be8;
0xffffffff8123c4bf: ret 0x5be8;
0xffffffff8123ca67: add [rax-0x77], cl; fucomip st, st(0); and [rbx+0x415b0000], dh; pop rsp; pop rbp; ret;
0xffffffff8123ca6a: fucomip st, st(0); and [rbx+0x415b0000], dh; pop rsp; pop rbp; ret;
0xffffffff8123ca6c: and [rbx+0x415b0000], dh; pop rsp; pop rbp; ret;
0xffffffff8123ca6d: mov bl, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123cb43: add rsp, 0x18; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123cb44: add esp, 0x18; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8123cef9: ret 0x4be;
0xffffffff8123d7e6: or r15b, dil; dec dword ptr [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d7e7: or bh, bh; dec dword ptr [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d80c: cmp dword ptr [rbx-0x16], 0xf5b49e8; add [rcx-0x3b7cb728], cl; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d813: pop r11; str [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d814: pop rbx; str [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d815: str [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d816: add [rcx-0x3b7cb728], cl; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123d896: mov edi, 0xfffe491; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8123d899: dec dword ptr [rdi]; or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8123d89b: or ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8123da6f: pop rsp; add [rbp-0x3d], bl; mov rax, 0xffffffffffffffed; ret;
0xffffffff8123da9f: pop rsp; add [rbp-0x3d], bl; mov eax, 0xffffffed; ret;
0xffffffff8123de06: ret 0xae1;
0xffffffff8123e442: ret 0x74e0;
0xffffffff8123e464: and [rax], al; add al, ch; xchg esp, eax; cmp ebx, [rax+rax+0x5d]; ret;
0xffffffff8123e466: add al, ch; xchg esp, eax; cmp ebx, [rax+rax+0x5d]; ret;
0xffffffff8123e468: xchg esp, eax; cmp ebx, [rax+rax+0x5d]; ret;
0xffffffff8123e4ec: ret 0x82b0;
0xffffffff8123e505: ret 0x7d68;
0xffffffff8123e5d0: add [rax-0x77], cl; pop rax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123e5d3: pop rax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8123ec4b: xchg esp, eax; ror dword ptr [rax+0x3d], 0x80; xchg ebp, eax; ret 0xf81;
0xffffffff8123ec88: mov ebx, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8123ecd9: ret 0xee9c;
0xffffffff8123eeff: add [rdi], cl; xchg esp, eax; rol byte ptr [rcx-0x7d], 0xfe; add [rdi], ecx; xchg esp, eax; ret 0xd020;
0xffffffff8123ef01: xchg esp, eax; rol byte ptr [rcx-0x7d], 0xfe; add [rdi], ecx; xchg esp, eax; ret 0xd020;
0xffffffff8123ef02: rol byte ptr [rcx-0x7d], 0xfe; add [rdi], ecx; xchg esp, eax; ret 0xd020;
0xffffffff8123ef06: add [rdi], ecx; xchg esp, eax; ret 0xd020;
0xffffffff8123efda: ret 0xeead;
0xffffffff8123f533: ret 0x4ae9;
0xffffffff8123f8f1: ret 0xef58;
0xffffffff8123fea9: ret 0xaeb;
0xffffffff8124012f: ret 0xefd8;
0xffffffff81240239: ret 0xc7e9;
0xffffffff8124051c: ret 0xf010;
0xffffffff812410d9: ret 0xf098;
0xffffffff8124116b: ret 0xf168;
0xffffffff81241df7: and dword ptr [rdx+0x5bbaeb81], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81241e4f: ret 0x1be8;
0xffffffff81241e83: fistp word ptr [rbx+0x41], st; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81242068: sar esi, 0xff; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812422fc: ret 0x4865;
0xffffffff81242b11: ret 0xd775;
0xffffffff81242d01: ret 0x6f74;
0xffffffff812430df: ret 0xf24;
0xffffffff81243449: ret 0x6000;
0xffffffff81243706: fild st, dword ptr [rcx+0xffe2e6]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81243708: out 0xe2, al; inc dword ptr [rax]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8124370a: inc dword ptr [rax]; add [rdi], cl; xchg esp, eax; ret;
0xffffffff8124387d: ret 0x6dd0;
0xffffffff812438a6: ret 0x4d20;
0xffffffff812438ce: ret 0x6db0;
0xffffffff812438df: ret 0x6b60;
0xffffffff812438ef: ret 0x5ad0;
0xffffffff812438ff: ret 0x6dc0;
0xffffffff8124390f: ret 0x6970;
0xffffffff81243942: and eax, 0xf; mov [rbx+0x34c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243945: mov [rbx+0x34c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243946: or dword ptr [rbx+rax], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812439d4: mov [rbx+0x458], rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812439d5: mov [rbx+0x458], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81243a79: ret 0x38c;
0xffffffff81243aed: or [rdi+rax+0x48], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81243bad: add [rdi+rax+0x48], esi; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81243c28: sub eax, 0xef8b2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243c5f: ret 0x7505;
0xffffffff81243d1a: xchg edx, eax; mov [0x77510f745f6fffe], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243d1b: mov [0x77510f745f6fffe], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243d84: and [rdi+rax+0x48], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81243dab: xor bh, 0xb1; sub eax, 0xef72c; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243dae: sub eax, 0xef72c; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243de1: add dh, [rdi+rax+0x48]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e68: add [rax], al; add [rbx-0x10990bab], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e6a: add [rbx-0x10990bab], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e6b: mov edx, [rbp-0xc]; out dx, ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e6d: hlt; out dx, ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e6e: out dx, ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81243e6f: out dx, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812440a9: ret 0x31e8;
0xffffffff812440f2: add [rbp+0x2f], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81244161: sub eax, 0xef379; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812442b5: ret 0x3f5;
0xffffffff812445ef: cmp eax, 0xebfffe9c; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81244a03: add [rbp+0x480974c0], al; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81244bb7: add [rax], al; add al, ch; xor [rax+0x415bfffe], esp; pop rsp; pop rbp; ret;
0xffffffff81244bb9: add al, ch; xor [rax+0x415bfffe], esp; pop rsp; pop rbp; ret;
0xffffffff81244bbb: xor [rax+0x415bfffe], esp; pop rsp; pop rbp; ret;
0xffffffff81244c18: add [rbp+0x310f75c0], al; rol byte ptr [rbx-0x6bf09f1d], 0xc0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81244c1a: shl byte ptr [rbp+0xf], 0x31; rol byte ptr [rbx-0x6bf09f1d], 0xc0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81244c1c: rdtsc; rol byte ptr [rbx-0x6bf09f1d], 0xc0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81244c1e: rol byte ptr [rbx-0x6bf09f1d], 0xc0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81244c1f: and ebx, 0x60; sete al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245019: ret 0x5ef0;
0xffffffff8124503b: ret 0x5d19;
0xffffffff8124530d: adc esi, [rdi+rax+0x48]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81245324: sub eax, 0xee1b6; or dword ptr [rip+0xca21f7], 0x40; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245329: add [rbx-0x35de08f3], al; add [rax+0x48], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8124532a: or dword ptr [rip+0xca21f7], 0x40; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8124532b: or eax, 0xca21f7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8124532d: and edx, ecx; add [rax+0x48], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8124532f: add [rax+0x48], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81245374: sub eax, 0xee166; or byte ptr [rbx+0x614], 8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245379: add [rax+0x6148b], al; add [rax], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8124537a: or byte ptr [rbx+0x614], 8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8124537f: add [rax], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812453c4: adc [rbp+0x27], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245454: adc [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812454c9: ret 0x4ff;
0xffffffff812454dd: ret 0x51c;
0xffffffff81245507: ret 0x4fa;
0xffffffff8124551b: ret 0x517;
0xffffffff8124552f: ret 0x534;
0xffffffff81245543: ret 0x551;
0xffffffff81245655: sub eax, 0xede85; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812456c5: sub eax, 0xede15; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812456c7: adc eax, 0x48000ede; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81245735: sub eax, 0xedda5; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81245755: sub eax, 0xedd85; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81245875: shr eax, 8; mov [rbx+0x44], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81245878: mov [rbx+0x44], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81245944: sub eax, 0xedb96; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812459ba: sub eax, 0xedb20; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812459fb: or [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245a90: ret 0x75c0;
0xffffffff81245ac8: ret 0x74c0;
0xffffffff81245b38: dec dword ptr [rax-0x77]; add eax, 0xca2248; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245b39: mov [rip+0xca2248], rax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245b3a: mov [rip+0xca2248], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245b3b: add eax, 0xca2248; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245c9c: hlt; add [rax+0x7740571], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245c9d: add [rax+0x7740571], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245d1f: mov [0x10d0840f0000], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245d24: rcl byte ptr [rax], 1; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245d3d: sub eax, 0xed61d; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81245d3f: sbb eax, 0x48000ed6; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81245f10: ret 0x3d66;
0xffffffff81245f19: ret 0x2f75;
0xffffffff81246010: add al, ch; sbb al, [rdx-0x3fce0002]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81246012: sbb al, [rdx-0x3fce0002]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8124623a: ret 0x9bed;
0xffffffff8124684a: ret 0xdfd2;
0xffffffff8124691a: ret 0xecb;
0xffffffff812469f5: sub eax, 0xffffd485; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81246b88: ret 0x4be0;
0xffffffff81246cbb: ret 0xa285;
0xffffffff81246d4a: ret 0xfea5;
0xffffffff81246e43: pop rsp; shr al, 3; and eax, 1; pop rbx; pop rbp; ret;
0xffffffff81246e5b: or [rax-0x77], cl; in eax, 0xe8; pop rsp; add bh, bh; call far fword ptr [rbp-0x3d];
0xffffffff81246e5e: in eax, 0xe8; pop rsp; add bh, bh; call far fword ptr [rbp-0x3d];
0xffffffff81246e60: pop rsp; add bh, bh; call far fword ptr [rbp-0x3d];
0xffffffff81246f69: ret 0x3175;
0xffffffff81246fd5: xchg [rax], al; add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x8148;
0xffffffff81246fd7: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x8148;
0xffffffff81246fd9: add cl, [rdi]; xchg esp, eax; ret 0x8148;
0xffffffff81247053: mov eax, [rax*4-0x7e5d7060]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81247055: test [rax+0x4881a28f], esp; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81247058: mov [0xc35d5b08c4834881], al; add rsp, 8; mov eax, 5; pop rbx; pop rbp; ret;
0xffffffff81247061: add rsp, 8; mov eax, 5; pop rbx; pop rbp; ret;
0xffffffff81247062: add esp, 8; mov eax, 5; pop rbx; pop rbp; ret;
0xffffffff8124762b: xor eax, 0x415bc031; pop rsp; pop r13; pop rbp; ret;
0xffffffff812477fd: test byte ptr [rcx+rcx*4-0x19], 0xe8; sub ch, al; ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81247800: out 0xe8, eax; sub ch, al; ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81247802: sub ch, al; ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8124783b: xor [rbx+1], ecx; add [rbp+0x480675c0], al; mov eax, [rbp-8]; leave; ret;
0xffffffff81247873: ret 0x6e50;
0xffffffff8124789a: ret 0x6e70;
0xffffffff812479e5: push rbx; in al, 0xff; leave; ret;
0xffffffff812479e6: in al, 0xff; leave; ret;
0xffffffff81247e7e: ret 0x4188;
0xffffffff81247edd: ret 0x5188;
0xffffffff81248046: add rbx, [r11+0x41]; pop rsp; pop rbp; ret;
0xffffffff812480cc: ret 0x38b;
0xffffffff81248159: add rbx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81248284: add rbx, [r11+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812488eb: ret 0xa2e;
0xffffffff81248914: ret 0xa43;
0xffffffff8124893d: ret 0xa58;
0xffffffff812489a4: ret 0xaa9;
0xffffffff812489c8: ret 0xac7;
0xffffffff81248a30: ret 0xb03;
0xffffffff81248a4b: ret 0xb19;
0xffffffff81248a97: ret 0x9fb;
0xffffffff81248abf: ret 0xa0b;
0xffffffff81248afd: ret 0xf88;
0xffffffff81248b2c: ret 0x8f6;
0xffffffff81248b51: ret 0x90a;
0xffffffff81248b76: ret 0x91d;
0xffffffff81248b9b: ret 0x932;
0xffffffff81248bd3: ret 0x94a;
0xffffffff81248bfd: ret 0x961;
0xffffffff81248c20: ret 0x96e;
0xffffffff81248c45: ret 0x98c;
0xffffffff81248c6a: ret 0x9a8;
0xffffffff81248c86: ret 0x9b6;
0xffffffff81248cb5: ret 0xf38;
0xffffffff81248cdc: ret 0x9ca;
0xffffffff81248cf2: ret 0x9e5;
0xffffffff81248d16: ret 0xf58;
0xffffffff81248d63: ret 0xa1c;
0xffffffff81248da4: xchg esp, eax; mov [0xc748fffffda3e981], al; ret 0xfe0;
0xffffffff81248dae: ret 0xfe0;
0xffffffff81248df5: ret 0xae0;
0xffffffff81248f13: sahf; out dx, al; leave; add bl, al; nop [rax+rax]; ret;
0xffffffff81248f14: out dx, al; leave; add bl, al; nop [rax+rax]; ret;
0xffffffff81248f15: leave; add bl, al; nop [rax+rax]; ret;
0xffffffff812490e2: leave; add eax, [rax]; add [rax-0x7d], cl; ret;
0xffffffff812493de: add [rcx-0x608240fb], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812493e3: lahf; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81249df1: leave; add [rax], al; add [rax], al; add bl, al; ret;
0xffffffff8124a287: ret 0xc001;
0xffffffff8124a28b: ret 0x2901;
0xffffffff8124a852: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x43e8;
0xffffffff8124a854: add [rdi], cl; xchg esp, eax; ret 0x43e8;
0xffffffff8124a856: xchg esp, eax; ret 0x43e8;
0xffffffff8124a90b: cmp ch, dl; leave; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff8124ad13: xor cl, dl; leave; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff8124ad44: leave; add [rax-0x7b], cl; ror byte ptr [rdi], cl; test al, cl; add eax, 0x82880000; ret 3;
0xffffffff8124ad7e: ret 0x9d;
0xffffffff8124adca: ret 0x9dc1;
0xffffffff8124b0d5: leave; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff8124b17d: add [rax+rcx*4+0x2d], al; sub ah, cl; leave; add [rdi], cl; mov bh, 0x15; ret 0xa24e;
0xffffffff8124b181: sub ah, cl; leave; add [rdi], cl; mov bh, 0x15; ret 0xa24e;
0xffffffff8124b182: int3; leave; add [rdi], cl; mov bh, 0x15; ret 0xa24e;
0xffffffff8124b183: leave; add [rdi], cl; mov bh, 0x15; ret 0xa24e;
0xffffffff8124b188: ret 0xa24e;
0xffffffff8124b712: mov [rsi+0xc], edx; add rsp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff8124b714: or al, 0x48; add esp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff8124b76b: mov rax, rbx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8124b76c: mov eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8124b862: add [rdi], ecx; ror dword ptr [rcx+0xd493], 1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8124b865: ror dword ptr [rcx+0xd493], 1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8124b9af: add rsp, 0x18; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124ba22: mov dword ptr [rbx+0x338], 1; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8124ba45: add al, ch; xor eax, 0x48fffffb; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8124ba47: xor eax, 0x48fffffb; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8124c31a: ret 0x36a9;
0xffffffff8124ce50: ret 0x6ae8;
0xffffffff8124d556: ret 0x4275;
0xffffffff8124d5a7: ret 0xaf72;
0xffffffff8124d717: ret 0x5772;
0xffffffff8124d7ae: ret 0x350;
0xffffffff8124d7e1: ret 0x320;
0xffffffff8124d80e: ret 0x2c0;
0xffffffff8124dad4: ret 0x98a0;
0xffffffff8124e042: ret 0x13a1;
0xffffffff8124e0d5: ret 0x13a8;
0xffffffff8124e0d9: sub eax, 0x3614a1; leave; ret;
0xffffffff8124e388: cmovne rax, rcx; add rsp, 0xa0; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124e389: cmovne eax, ecx; add rsp, 0xa0; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124e38c: add rsp, 0xa0; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124e38d: add esp, 0xa0; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124ebdd: ret 0x2974;
0xffffffff8124ec8b: add rsp, 0xa0; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124ec8c: add esp, 0xa0; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8124ec8e: mov al, [0x415bd88948000000]; pop rsp; pop rbp; ret;
0xffffffff8124f0de: inc dword ptr [rbx-0x72c4fe19]; push 0xfffffff; xchg esp, eax; ret 0x840;
0xffffffff8124f0e4: push 0xfffffff; xchg esp, eax; ret 0x840;
0xffffffff8124f0e7: dec dword ptr [rdi]; xchg esp, eax; ret 0x840;
0xffffffff8124f0f5: dec dword ptr [rdi]; xchg esp, eax; ret 0x9584;
0xffffffff8124f0f7: xchg esp, eax; ret 0x9584;
0xffffffff8124f0f8: ret 0x9584;
0xffffffff8124f6ad: shl byte ptr [rax+rbp*8+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8124f7e3: lea edi, [rdi+rdi*8-1]; dec dword ptr [rdi]; xchg esp, eax; ret 0x4589;
0xffffffff8124f7e7: dec dword ptr [rdi]; xchg esp, eax; ret 0x4589;
0xffffffff8124f7e9: xchg esp, eax; ret 0x4589;
0xffffffff8124fd00: ret 0x14df;
0xffffffff8124fd3d: ret 0x14b0;
0xffffffff8124fd95: ret 0x14fc;
0xffffffff8124fdb9: ret 0x1d1c;
0xffffffff8124fe02: ret 0x70c6;
0xffffffff8124fe23: ret 0xb9e0;
0xffffffff8124fe49: ret 0xbfb1;
0xffffffff81250236: pop rsp; and al, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125037b: and al, 0xfa; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8125037c: cli; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81250a37: ret 0x1ff;
0xffffffff81250af7: pop rsp; pop r13; mov eax, edx; pop r14; pop rbp; ret;
0xffffffff81250e42: sbb [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff81250e9c: ret 0x7ec0;
0xffffffff812511ba: ret 0x360f;
0xffffffff812513cf: xchg esp, eax; and al, 0x94; add [rax], eax; add [rbp-0x7c], al; test byte ptr [rdi], 0x84; ret 0xfffe;
0xffffffff812513d1: xchg esp, eax; add [rax], eax; add [rbp-0x7c], al; test byte ptr [rdi], 0x84; ret 0xfffe;
0xffffffff81252eb7: movsd [rdi], [rsi]; push rax; leave; add [rax+0x29], cl; ror dword ptr [rax-0x77], 0xc8; ret;
0xffffffff81252eb8: push rax; leave; add [rax+0x29], cl; ror dword ptr [rax-0x77], 0xc8; ret;
0xffffffff81252eb9: leave; add [rax+0x29], cl; ror dword ptr [rax-0x77], 0xc8; ret;
0xffffffff81252f76: ret 0x9f74;
0xffffffff8125338c: mov al, 0x4b; leave; add [rax+0x39], cl; ret;
0xffffffff812533c8: xchg esp, eax; leave; add [rax+0x39], cl; ret;
0xffffffff812533ca: leave; add [rax+0x39], cl; ret;
0xffffffff812533d8: leave; add [rax+0x29], cl; ret 0x148;
0xffffffff812533da: leave; add [rax+0x29], cl; ret 0x148;
0xffffffff8125341c: leave; add [rdi+rcx-0x51], al; ret 0x149;
0xffffffff8125486f: ret 0x4850;
0xffffffff812559a4: leave; add [rbp+0x480474c0], al; mov eax, ecx; ret;
0xffffffff81255a4d: leave; add [rbp+0x5b0574db], al; pop r12; pop rbp; ret;
0xffffffff81255aaa: rcr byte ptr [rdx+0x415b0035], cl; pop rsp; cdqe; pop rbp; ret;
0xffffffff81256023: sub [rdi], ebx; leave; add [rdi+rcx-0x51], al; ret 0x34c;
0xffffffff81256025: leave; add [rdi+rcx-0x51], al; ret 0x34c;
0xffffffff8125602a: ret 0x34c;
0xffffffff81256ee4: and al, 0xbc; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8125779c: pop rsp; push rbx; add cl, [rcx-0x937b]; dec dword ptr [rax-0x7d]; ret;
0xffffffff8125867e: ret 0x8441;
0xffffffff812588ae: ret 0x4940;
0xffffffff812588b2: ret 0xb275;
0xffffffff8125895f: ret 0xebc1;
0xffffffff812594bf: ret 0x40b8;
0xffffffff81259a35: ret 0xf7e9;
0xffffffff81259ae6: ret 0x428d;
0xffffffff81259c55: pop rsp; xor [rsi], rdi; pop r13; pop r14; pop rbp; ret;
0xffffffff81259c82: ret 0x11e9;
0xffffffff8125a501: ret 0x314c;
0xffffffff8125a937: ret 0xd304;
0xffffffff8125ab6d: ret 0xffe5;
0xffffffff8125afa5: ret 0x205d;
0xffffffff8125afe5: ret 0x2050;
0xffffffff8125b066: mov ecx, 0x72e881c3; mov esp, 0x89480035; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8125b06b: mov esp, 0x89480035; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8125b12a: ret 0x908c;
0xffffffff8125b2fd: or [rcx+0x688ecfa], ecx; xor eax, eax; leave; ret;
0xffffffff8125b2fe: mov edx, edi; in al, dx; mov [rsi], al; xor eax, eax; leave; ret;
0xffffffff8125b2ff: cli; in al, dx; mov [rsi], al; xor eax, eax; leave; ret;
0xffffffff8125b300: in al, dx; mov [rsi], al; xor eax, eax; leave; ret;
0xffffffff8125b301: mov [rsi], al; xor eax, eax; leave; ret;
0xffffffff8125b30b: or ecx, [rcx+0x66ed66fa]; mov [rsi], eax; xor eax, eax; leave; ret;
0xffffffff8125b30c: mov edx, edi; in ax, dx; mov [rsi], ax; xor eax, eax; leave; ret;
0xffffffff8125b30d: cli; in ax, dx; mov [rsi], ax; xor eax, eax; leave; ret;
0xffffffff8125b30e: in ax, dx; mov [rsi], ax; xor eax, eax; leave; ret;
0xffffffff8125b30f: in eax, dx; mov [rsi], ax; xor eax, eax; leave; ret;
0xffffffff8125b310: mov [rsi], ax; xor eax, eax; leave; ret;
0xffffffff8125b31b: or [rcx+0x689edfa], ecx; xor eax, eax; leave; ret;
0xffffffff8125b31c: mov edx, edi; in eax, dx; mov [rsi], eax; xor eax, eax; leave; ret;
0xffffffff8125b31d: cli; in eax, dx; mov [rsi], eax; xor eax, eax; leave; ret;
0xffffffff8125b31e: in eax, dx; mov [rsi], eax; xor eax, eax; leave; ret;
0xffffffff8125b31f: mov [rsi], eax; xor eax, eax; leave; ret;
0xffffffff8125b426: ret 0x1d76;
0xffffffff8125b432: xor dword ptr [rbp-0x1e], 0xc0c7c748; mov ecx, 0x9fe881c3; mov eax, 0x415b0035; pop rsp; pop rbp; ret;
0xffffffff8125b437: mov eax, 0xe881c3b9; lahf; mov eax, 0x415b0035; pop rsp; pop rbp; ret;
0xffffffff8125b439: mov ecx, 0x9fe881c3; mov eax, 0x415b0035; pop rsp; pop rbp; ret;
0xffffffff8125b43d: lahf; mov eax, 0x415b0035; pop rsp; pop rbp; ret;
0xffffffff8125b43e: mov eax, 0x415b0035; pop rsp; pop rbp; ret;
0xffffffff8125b584: add al, [rax]; pop rdx; leave; ret;
0xffffffff8125b836: xor rax, rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125b883: mov [rdx-0x3fce0022], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125b90f: xor eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8125b9c1: ret 0xc9e8;
0xffffffff8125bade: add [rbx+0x41], bl; pop rsp; mov eax, edx; pop r13; pop rbp; ret;
0xffffffff8125bb17: mov esp, edx; push rbx; mov ebx, esi; call qword ptr [0xffffffff81c27000];
0xffffffff8125bb93: ret 0xf75;
0xffffffff8125c243: leave; mov [rbp-0x30], rdx; mov [rbp-0x3c], r8d; call qword ptr [0xffffffff81c27000];
0xffffffff8125c3a4: mov rdx, [rbp-0x18]; mov [rbx], rdx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8125c3a5: mov edx, [rbp-0x18]; mov [rbx], rdx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8125c3a8: mov [rbx], rdx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8125c3a9: mov [rbx], edx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8125c3b2: add rsp, 0x28; mov eax, 0x1004; pop rbx; pop rbp; ret;
0xffffffff8125c3b3: add esp, 0x28; mov eax, 0x1004; pop rbx; pop rbp; ret;
0xffffffff8125c556: ret 0x3a83;
0xffffffff8125c761: sub rsp, 0xffffffffffffff80; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c762: sub esp, 0xffffff80; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c784: dec dword ptr [rcx+rcx*4-0x20]; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c785: mov rax, r12; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c786: mov eax, esp; sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c788: sub rsp, 0xffffffffffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c789: sub esp, 0xffffff80; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c798: sub rsp, 0xffffffffffffff80; pop rbx; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff8125c799: sub esp, 0xffffff80; pop rbx; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff8125c7ce: add al, fs:[rax]; leave; test eax, eax; sete al; ret;
0xffffffff8125c7cf: add al, [rax]; leave; test eax, eax; sete al; ret;
0xffffffff8125c8ad: mov rax, [rbp-0x68]; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c8ae: mov eax, [rbp-0x68]; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c8b0: cwde; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c926: setne al; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125c9c9: fmul st, qword ptr [rcx+0x39]; fcomp st, qword ptr [rbx+0x41]; pop rsp; sete al; pop rbp; ret;
0xffffffff8125c9cc: fcomp st, qword ptr [rbx+0x41]; pop rsp; sete al; pop rbp; ret;
0xffffffff8125cb91: xor [rbp+0x480775c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125cba4: ret 0x28e6;
0xffffffff8125cbb2: sub eax, 0xfffffa78; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8125cbc7: ret 0x28ca;
0xffffffff8125cbd2: or dword ptr [rcx+0x55e8f445], 0x8bfffffa; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8125cd0a: add rsp, 0x68; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125cd0b: add esp, 0x68; pop rbx; pop r12; pop rbp; ret;
0xffffffff8125cd1a: ret 0x28aa;
0xffffffff8125ce84: shl byte ptr [rbp+rbx*8+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8125d389: sldt [rax]; add al, ch; cmp [rsi], ecx; add al, [rax]; leave; ret;
0xffffffff8125d38a: add [rax], al; add al, ch; cmp [rsi], ecx; add al, [rax]; leave; ret;
0xffffffff8125d38c: add al, ch; cmp [rsi], ecx; add al, [rax]; leave; ret;
0xffffffff8125d38e: cmp [rsi], ecx; add al, [rax]; leave; ret;
0xffffffff8125d45e: rol bl, 0x55; mov rbp, rsp; push rbx; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d460: push rbp; mov rbp, rsp; push rbx; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d461: mov rbp, rsp; push rbx; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d462: mov ebp, esp; push rbx; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d463: in eax, 0x53; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d464: push rbx; sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d465: sub rsp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d466: sub esp, 8; mov ebx, [rip+0xc8ce41]; call qword ptr [0xffffffff81c26f88];
0xffffffff8125d511: add [rax], al; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8125d597: push rbp; add [r8], al; xor eax, eax; leave; ret;
0xffffffff8125d598: add [r8], al; xor eax, eax; leave; ret;
0xffffffff8125da1b: ret 0x2cc8;
0xffffffff8125dbd2: cmp qword ptr [rip+0xc8cd0a], 0; setne dl; leave; mov eax, edx; and eax, 1; ret;
0xffffffff8125dbd3: cmp dword ptr [rip+0xc8cd0a], 0; setne dl; leave; mov eax, edx; and eax, 1; ret;
0xffffffff8125dbd8: add [rax], al; setne dl; leave; mov eax, edx; and eax, 1; ret;
0xffffffff8125dbda: setne dl; leave; mov eax, edx; and eax, 1; ret;
0xffffffff8125dbdd: leave; mov eax, edx; and eax, 1; ret;
0xffffffff8125dcd4: ret 0x46e8;
0xffffffff8125dda6: add [rbp+0x480974c0], al; add esp, 0x10; cdqe; pop rbx; pop rbp; ret;
0xffffffff8125ddab: add rsp, 0x10; cdqe; pop rbx; pop rbp; ret;
0xffffffff8125ddac: add esp, 0x10; cdqe; pop rbx; pop rbp; ret;
0xffffffff8125ddd2: movsxd rax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8125ddd3: movsxd eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8125dee7: or al, 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8125df33: or dword ptr [rax-0x77], 0x16e4e8df; xor eax, 0x48984800; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125df38: in al, 0x16; xor eax, 0x48984800; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125df83: or dword ptr [rax-0x77], 0x1694e8df; xor eax, 0x48984800; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125dfd3: or dword ptr [rax-0x77], 0x1644e8df; xor eax, 0x48984800; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125dfda: xor eax, 0x48984800; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125dfdb: add [rax-0x68], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8125e050: ret 0xcae8;
0xffffffff8125e242: ret 0xbf70;
0xffffffff8125e38c: ret 0x2da1;
0xffffffff8125e9c9: or dword ptr [rcx+rcx*4-0x19], 0xd30cee8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8125ec5b: movzx edx, byte ptr [rax+0x6c]; shr dl, 3; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec5e: insb [rdi], dx; shr dl, 3; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec5f: shr dl, 3; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec87: mov rax, [rbp-8]; movzx edx, byte ptr [rax+0x1b8]; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec88: mov eax, [rbp-8]; movzx edx, byte ptr [rax+0x1b8]; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec8a: clc; movzx edx, byte ptr [rax+0x1b8]; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec8b: movzx edx, byte ptr [rax+0x1b8]; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec90: add [rax], al; and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ec92: and edx, 1; leave; mov eax, edx; ret;
0xffffffff8125ee0b: in al, 0xf; xchg esp, eax; ret 0xd108;
0xffffffff8125f045: test dword ptr [rcx-0xec173a], 0x415bffff; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8125f13c: add [rsi], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8125f4ca: ret 0x1853;
0xffffffff8125f52d: fsubp st(0), st; sbb eax, 0x48fffffd; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125f52f: sbb eax, 0x48fffffd; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125f9b2: ret 0xf0c0;
0xffffffff8125fb22: and al, 0x31; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8125fd72: sub [rax], al; add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8125fdeb: ret 0xf570;
0xffffffff812607d5: ret 0x155;
0xffffffff81260896: adc bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812608bf: mov ebx, 0x415bffff; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812608e1: ret 0x2fc8;
0xffffffff812608fc: ret 0x3008;
0xffffffff81260960: mov ecx, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff812609c5: mov dword ptr [rbx+0x68], 0xf; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812609c7: push 0xf; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81260a16: mov [rbx+0x68], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81260a27: mov dword ptr [rbx+0x68], 0; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81260a29: push 0; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81260a88: fsubp st(0), st; adc dh, [rbx+0x415b0034]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81260a8a: adc dh, [rbx+0x415b0034]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81260a9c: add [rbx+0x415b0034], dh; pop rsp; pop r13; pop rbp; ret;
0xffffffff81260a9d: mov bl, 0x34; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81260b9b: ret 0xbe40;
0xffffffff81260e26: pop rsp; xor eax, 0x838b4800; or [rip-0x72b80000], al; xchg ebx, eax; or [rip+0x39480000], al; ret 0x1b74;
0xffffffff812610a2: xchg esp, eax; rol byte ptr [rbx-0x7cb7fe40], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812610a3: rol byte ptr [rbx-0x7cb7fe40], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812610a4: add eax, 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812610a5: rol byte ptr [rcx], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812610de: cmove eax, edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81261349: ret 0x328f;
0xffffffff812614e6: ret 0x32bb;
0xffffffff8126169a: ret 0xb1;
0xffffffff81261cec: ret 0xb233;
0xffffffff81261d1a: shl byte ptr [rbp+0x46], 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff81261d83: add al, [rax]; mov rax, [rbp-0x10]; pop rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81261d85: mov rax, [rbp-0x10]; pop rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81261d86: mov eax, [rbp-0x10]; pop rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81261d89: pop rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81261dea: and al, 8; add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff812624f4: sbb [rip-0x1c180000], al; xor eax, 0x48c03100; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812624f5: add eax, 0xe3e80000; xor eax, 0x48c03100; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812624fb: xor eax, 0x48c03100; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81262582: ret 0x4575;
0xffffffff8126278e: add [rcx-0x3b7cb728], cl; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812627e1: add al, ch; fiadd st, dword ptr [rbx]; add al, [rax]; mov rax, [rbp-8]; leave; ret;
0xffffffff812627e3: fiadd st, dword ptr [rbx]; add al, [rax]; mov rax, [rbp-8]; leave; ret;
0xffffffff812627e4: add eax, [rdx]; add [rax-0x75], cl; clc; leave; ret;
0xffffffff812627e5: add al, [rax]; mov rax, [rbp-8]; leave; ret;
0xffffffff81262855: ret 0xa2e0;
0xffffffff81262b13: ret 0x340e;
0xffffffff81262eee: ret 0x3658;
0xffffffff81263012: ret 0xc65f;
0xffffffff812632ab: ret 0x18d0;
0xffffffff81263b2f: ret 0x36e0;
0xffffffff81263b67: ret 0x3720;
0xffffffff81263d99: ret 0x1e00;
0xffffffff81263dcf: ret 0x3760;
0xffffffff81263e2b: push qword ptr [rcx+rsi-0x18]; cmp eax, 0x31ffffe2; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81263e2d: xor eax, ebp; cmp eax, 0x31ffffe2; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81263e2f: cmp eax, 0x31ffffe2; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff8126425e: ret 0x3798;
0xffffffff8126427c: ret 0x37c0;
0xffffffff8126436c: shl byte ptr [rbx+rcx+0x48], 0x89; fucomip st, st(0); leave; fsubp st(2), st; call far fword ptr [rbx+0x5d];
0xffffffff8126436e: or ecx, [rax-0x77]; fucomip st, st(0); leave; fsubp st(2), st; call far fword ptr [rbx+0x5d];
0xffffffff81264371: fucomip st, st(0); leave; fsubp st(2), st; call far fword ptr [rbx+0x5d];
0xffffffff81264373: leave; fsubp st(2), st; call far fword ptr [rbx+0x5d];
0xffffffff81264966: mov edx, eax; add rsp, 0x40; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81264968: add rsp, 0x40; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81264969: add esp, 0x40; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81264b2d: ret 0xdd40;
0xffffffff81264b45: ret 0xa97a;
0xffffffff81264cb6: ret 0x4e40;
0xffffffff81264e2c: ret 0x4f70;
0xffffffff81264f5d: ret 0x4812;
0xffffffff81264f99: inc dword ptr [rax+rax*8-0x3fcef48c]; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81264f9b: shl byte ptr [rbx+rcx+0x31], 0xc0; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff8126500f: add al, ch; mov ss, sp; add [rax], eax; mov rax, [rbp-8]; leave; ret;
0xffffffff81265011: mov ss, sp; add [rax], eax; mov rax, [rbp-8]; leave; ret;
0xffffffff81265013: add [rax], eax; mov rax, [rbp-8]; leave; ret;
0xffffffff812651c3: ret 0x58b;
0xffffffff812657c8: ret 0xec74;
0xffffffff812657e7: ret 0xa310;
0xffffffff81265ac5: adc [rbx+0x41], bl; pop rsp; mov eax, r13d; pop r13; pop rbp; ret;
0xffffffff81265af6: add eax, 0x415b0974; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81265b8c: ret 0xbbb;
0xffffffff81265f10: out 0xe8, eax; sbb dh, [rip+0x415b0035]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81265f12: sbb dh, [rip+0x415b0035]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81265f13: xor eax, 0x415b0035; pop rsp; pop r13; pop rbp; ret;
0xffffffff81265f6a: ret 0x3534;
0xffffffff81265f6b: xor al, 0x35; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812661df: ret 0x69c0;
0xffffffff812662cf: ret 0xa330;
0xffffffff81266953: sub dh, [rip-0x3b7cb800]; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81266954: xor eax, 0xc4834800; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81266d33: mov [rbx], dl; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8126700b: ret 0x3b08;
0xffffffff81267032: ret 0x3dd0;
0xffffffff8126766a: ret 0x351d;
0xffffffff812676e7: ret 0x6980;
0xffffffff81267800: ret 0x6df0;
0xffffffff8126797e: ret 0x1e9a;
0xffffffff81267993: ret 0x3d08;
0xffffffff812679fc: ret 0x203f;
0xffffffff81267c5a: ret 0xc826;
0xffffffff81267cb3: imul esp, [rsi], 0x854800c8; shl byte ptr [rcx+rcx-0x80], 0x3d; leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267cb4: enter 0x4800, 0x85; shl byte ptr [rcx+rcx-0x80], 0x3d; leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267cb5: enter 0x4800, 0x85; shl byte ptr [rcx+rcx-0x80], 0x3d; leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267cb6: add [rax-0x7b], cl; shl byte ptr [rcx+rcx-0x80], 0x3d; leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267cb9: shl byte ptr [rcx+rcx-0x80], 0x3d; leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267cbe: leave; xchg [rax+0x1740000], ah; ret;
0xffffffff81267e80: mov [0xd231ffff8f59e881], al; test eax, eax; sete dl; leave; mov eax, edx; ret;
0xffffffff81267e86: push qword ptr [rcx]; rol byte ptr [rbp-0x3d6bf040], cl; leave; mov eax, edx; ret;
0xffffffff81267e87: xor edx, edx; test eax, eax; sete dl; leave; mov eax, edx; ret;
0xffffffff81267e88: rol byte ptr [rbp-0x3d6bf040], cl; leave; mov eax, edx; ret;
0xffffffff81267e89: test eax, eax; sete dl; leave; mov eax, edx; ret;
0xffffffff81267ec4: inc dword ptr [rbp+0x480d75c0]; mov eax, [rbp-8]; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ec6: shl byte ptr [rbp+0xd], 0x48; mov eax, [rbp-8]; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ec8: or eax, 0xf8458b48; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ec9: mov rax, [rbp-8]; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267eca: mov eax, [rbp-8]; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ecc: clc; mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ecd: mov rax, [rax+0x248]; leave; ret;
0xffffffff81267ece: mov eax, [rax+0x248]; leave; ret;
0xffffffff8126826e: inc dword ptr [rbp+0x480774c0]; add esp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8126828b: mov eax, [rbp-0x3c]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8126842e: dec dword ptr [rax-0x77]; fucomip st, st(0); or [rsi+0x415bffea], ebx; pop rsp; pop rbp; ret;
0xffffffff81268431: fucomip st, st(0); or [rsi+0x415bffea], ebx; pop rsp; pop rbp; ret;
0xffffffff81268433: or [rsi+0x415bffea], ebx; pop rsp; pop rbp; ret;
0xffffffff81268464: mov esp, 0x48097402; add esp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81268465: add dh, [rcx+rcx+0x48]; add esp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8126847d: mov [rbx+8], rax; add rsp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8126847e: mov [rbx+8], eax; add rsp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81268858: ret 0x7e40;
0xffffffff812689a2: ret 0xd2dc;
0xffffffff81268b3b: ret 0x3fae;
0xffffffff81268d3c: ret 0x20f;
0xffffffff81268d53: ret 0x87e8;
0xffffffff81268f30: ret 0xd477;
0xffffffff81268fa0: ret 0xd377;
0xffffffff81269165: ret 0x12be;
0xffffffff812692f0: ret 0x68be;
0xffffffff8126968d: sub eax, 0x34d64d; mov eax, [rbx+0x18]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81269691: xor al, 0; mov eax, [rbx+0x18]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81269693: mov eax, [rbx+0x18]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8126a43a: xor dword ptr [rdi+rdx+0x55], 0xc6c748; leave; mov [0xff6993e8e5894881], al; call far fword ptr [rbp-0x7b];
0xffffffff8126a442: leave; mov [0xff6993e8e5894881], al; call far fword ptr [rbp-0x7b];
0xffffffff8126a537: ret 0x260;
0xffffffff8126a5cb: and al, [rdi-0x3fceffff]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff8126a5ce: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8126a929: ret 0xeaa0;
0xffffffff8126aa94: add eax, 0xc0310b75; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8126b009: ret 0xa350;
0xffffffff8126b449: ret 0x7d83;
0xffffffff8126b971: add al, ch; leave; push 0x5d5bffea; ret;
0xffffffff8126b973: leave; push 0x5d5bffea; ret;
0xffffffff8126bbb1: test [rsi+0x4800000a], ebx; mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8126c044: ret 0x8905;
0xffffffff8126c62f: fucomip st, st(0); mov ecx, [rdi+0x415b0033]; pop rsp; pop rbp; ret;
0xffffffff8126c631: mov ecx, [rdi+0x415b0033]; pop rsp; pop rbp; ret;
0xffffffff8126d123: ret 0xc989;
0xffffffff8126d196: sar byte ptr [rdx], cl; cmovne rax, rdx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8126d197: mov edx, 0; cmovne rax, rdx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8126d19a: add [rax], al; cmovne rax, rdx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8126d19c: cmovne rax, rdx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8126d19d: cmovne eax, edx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8126d1da: add rsp, 0x50; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8126d1db: add esp, 0x50; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8126d25f: add rsp, 8; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8126d260: add esp, 8; mov eax, 1; pop rbx; pop r12; pop rbp; ret;
0xffffffff8126d64f: inc dword ptr [rbp+0x480a75c0]; mov eax, [rbp-8]; leave; add rax, 0x10; ret;
0xffffffff8126d651: shl byte ptr [rbp+0xa], 0x48; mov eax, [rbp-8]; leave; add rax, 0x10; ret;
0xffffffff8126d653: or cl, [rax-0x75]; clc; leave; add rax, 0x10; ret;
0xffffffff8126d654: mov rax, [rbp-8]; leave; add rax, 0x10; ret;
0xffffffff8126d655: mov eax, [rbp-8]; leave; add rax, 0x10; ret;
0xffffffff8126d657: clc; leave; add rax, 0x10; ret;
0xffffffff8126d658: leave; add rax, 0x10; ret;
0xffffffff8126d65b: rcl byte ptr [rax], 0xc3; leave; xor eax, eax; ret;
0xffffffff8126d65c: adc bl, al; leave; xor eax, eax; ret;
0xffffffff8126db07: ret 0x4b70;
0xffffffff8126dd4c: ret 0xdd70;
0xffffffff8126e1a0: ret 0x4c38;
0xffffffff8126e391: ret 0xc829;
0xffffffff8126e5d7: ret 0xc7;
0xffffffff8126e5e6: ret 0x4c8a;
0xffffffff8126e6db: mov dword ptr [rax], 0x48038948; add esp, 8; mov eax, r9d; pop rbx; pop rbp; ret;
0xffffffff8126e6dd: mov [rbx], rax; add rsp, 8; mov eax, r9d; pop rbx; pop rbp; ret;
0xffffffff8126e6de: mov [rbx], eax; add rsp, 8; mov eax, r9d; pop rbx; pop rbp; ret;
0xffffffff8126e6e0: add rsp, 8; mov eax, r9d; pop rbx; pop rbp; ret;
0xffffffff8126e6e1: add esp, 8; mov eax, r9d; pop rbx; pop rbp; ret;
0xffffffff8126e76f: xor al, 0; add rsp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff8126e9da: mov dh, 0x7b; or eax, 0x1a4ebe8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8126e9dc: or eax, 0x1a4ebe8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8126ea05: ret 0x4cdb;
0xffffffff8126ea51: ret 0x4d11;
0xffffffff8126eaca: mov dh, 0x7b; or eax, 0x1a3fbe8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8126eacc: or eax, 0x1a3fbe8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8126ec46: ret 0x21b8;
0xffffffff8126ed7c: ret 0x4d60;
0xffffffff8126edb9: or [rax], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8126ee3c: ret 0x4d82;
0xffffffff8126ef9c: ret 0x4db3;
0xffffffff8126f06f: ret 0x4e08;
0xffffffff8126f689: ret 0xc1be;
0xffffffff8126f81c: ret 0xd3;
0xffffffff8126f879: ret 0x4e82;
0xffffffff8126f938: ret 0x4eb0;
0xffffffff8126fb62: ret 0x4efd;
0xffffffff8126fe25: ret 0x4f67;
0xffffffff8126fe50: ret 0x4f8a;
0xffffffff8126fe88: ret 0x4fab;
0xffffffff8126ff2b: ret 0x4fbe;
0xffffffff8126ffac: ret 0x4fdd;
0xffffffff8126ffce: ret 0x4ffe;
0xffffffff812701cc: ret 0x501b;
0xffffffff812703d5: ret 0x504e;
0xffffffff81270408: ret 0x506b;
0xffffffff812704d1: ret 0x50ff;
0xffffffff812704e3: ret 0x1c9;
0xffffffff812706cc: ret 0x511d;
0xffffffff81270710: ret 0x5150;
0xffffffff812707a3: ret 0x5174;
0xffffffff812707fc: ret 0x519a;
0xffffffff81270874: ret 0x51bf;
0xffffffff812709ab: add [rcx-0x75], cl; xchg esp, eax; and al, 0xe0; add al, [rax]; add [rsi-0x7f], ah; call qword ptr [rbx];
0xffffffff812709ae: xchg esp, eax; and al, 0xe0; add al, [rax]; add [rsi-0x7f], ah; call qword ptr [rbx];
0xffffffff81270b56: ret 0x5231;
0xffffffff81270c15: ret 0x5268;
0xffffffff81270ebd: ret 0x52d2;
0xffffffff8127110b: ret 0x5327;
0xffffffff812714c4: and al, 0xa; adc ebx, [rbx+0xf]; xchg esp, eax; ret 0xc283;
0xffffffff812714c6: adc ebx, [rbx+0xf]; xchg esp, eax; ret 0xc283;
0xffffffff812715ee: ret 0x64be;
0xffffffff81271807: add dh, [rcx]; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff812718c3: ret 0x53fa;
0xffffffff81271900: ret 0x541b;
0xffffffff81271ac8: ret 0x5458;
0xffffffff81271dd6: ret 0x548e;
0xffffffff81271e08: ret 0x54aa;
0xffffffff81271fc9: ret 0x17d;
0xffffffff812724f3: ret 0x5530;
0xffffffff81272558: ret 0x54e7;
0xffffffff812729cf: ret 0x5586;
0xffffffff81272a05: ret 0x559b;
0xffffffff81272aa0: ret 0x55b5;
0xffffffff81272aae: ret 0x55f1;
0xffffffff81272abe: ret 0x55d0;
0xffffffff81272afb: ret 0x5611;
0xffffffff81272b36: ret 0x563d;
0xffffffff81272b83: ret 0x565c;
0xffffffff81272bf1: ret 0x5698;
0xffffffff81272c10: ret 0x56ba;
0xffffffff81272c2e: ret 0x56db;
0xffffffff81272c57: ret 0x56fd;
0xffffffff81272c9d: ret 0x5721;
0xffffffff81272cf3: ret 0x5750;
0xffffffff81272dc3: mov esp, esi; push rbx; mov rbx, rcx; push r8; call qword ptr [0xffffffff81c27000];
0xffffffff81272f45: add bl, ch; fistp word ptr [rbx+0x41], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff81272f6b: ret 0x5782;
0xffffffff81272f92: ret 0x579f;
0xffffffff81273078: ret 0x36be;
0xffffffff812730f2: ret 0x6abe;
0xffffffff81273103: add [rbx+0x7ebfc45], cl; mov byte ptr [rip+0xc77458], 1; leave; ret;
0xffffffff81273109: mov byte ptr [rip+0xc77458], 1; leave; ret;
0xffffffff8127310e: add [rcx], al; leave; ret;
0xffffffff81273259: add eax, 0x5388c209; sbb ecx, [rdx+0x43881b43]; sbb eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8127325d: push rbx; sbb ecx, [rdx+0x43881b43]; sbb eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8127325e: sbb ecx, [rdx+0x43881b43]; sbb eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81273264: sbb eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8127359c: ret 0xbe;
0xffffffff812735d8: ret 0xebe;
0xffffffff8127365f: ret 0x3dbe;
0xffffffff81273a49: ret 0x5963;
0xffffffff81273aa5: ret 0x5990;
0xffffffff81273b7e: ret 0xe91e;
0xffffffff81273d50: ret 0xccbe;
0xffffffff81273e76: ret 0x59fc;
0xffffffff81273f2f: ret 0x6dbe;
0xffffffff81273f87: ret 0x5a50;
0xffffffff81273fc7: ret 0x98be;
0xffffffff8127406f: ret 0xf0be;
0xffffffff8127418d: mov esp, edi; push rbx; push rcx; call qword ptr [0xffffffff81c27000];
0xffffffff812743be: ret 0x5b28;
0xffffffff81274427: ret 0x5b4f;
0xffffffff812744f5: ret 0x440f;
0xffffffff812745ad: ret 0x5b85;
0xffffffff81274b46: ret 0x5be4;
0xffffffff81274b6e: ret 0x5c09;
0xffffffff81274ba6: ret 0x5c26;
0xffffffff81274bb3: mov dl, 8; mov [0x415b00018365e881], eax; pop rsp; pop rbp; ret;
0xffffffff81274bb5: mov [0x415b00018365e881], eax; pop rsp; pop rbp; ret;
0xffffffff81274c2f: ret 0x5c39;
0xffffffff81274c72: ret 0x150;
0xffffffff81274c7b: ret 0x5c61;
0xffffffff81274ddb: ret 0x5cc5;
0xffffffff81275113: ret 0x5d30;
0xffffffff81275e2e: ret 0x5d99;
0xffffffff81275ed0: ret 0x5dc0;
0xffffffff81275f0e: sub rsp, 0x18; mov [rbp-0x2c], esi; mov [rbp-0x30], ecx; mov [rbp-0x40], r8; mov [rbp-0x38], r9; call qword ptr [0xffffffff81c27000];
0xffffffff81275f0f: sub esp, 0x18; mov [rbp-0x2c], esi; mov [rbp-0x30], ecx; mov [rbp-0x40], r8; mov [rbp-0x38], r9; call qword ptr [0xffffffff81c27000];
0xffffffff812762d6: ret 0x5e07;
0xffffffff812762e6: or dword ptr [rcx-0x451703bb], 0x8b00016b; cld; leave; ret;
0xffffffff812762eb: mov edx, 0x8b00016b; cld; leave; ret;
0xffffffff812762ec: imul eax, [rcx], 0; mov eax, [rbp-4]; leave; ret;
0xffffffff8127633e: ret 0x5e2f;
0xffffffff81276369: ret 0x5e51;
0xffffffff81276399: ret 0x5e7e;
0xffffffff812764e5: ret 0x5e9f;
0xffffffff8127656c: ret 0x5eb9;
0xffffffff812769f3: ret 0x5ed5;
0xffffffff81276a1c: dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81276ace: dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81276b1a: mov dword ptr [rax], 0xe8e6894c; mov [rcx-2], ss; dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop rbp; ret;
0xffffffff81276b1e: out 0xe8, al; mov [rcx-2], ss; dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop rbp; ret;
0xffffffff81276b20: mov [rcx-2], ss; dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop rbp; ret;
0xffffffff81276b23: dec dword ptr [rcx+0x415b5ad8]; pop rsp; pop rbp; ret;
0xffffffff81276b7f: mov [rbx], rax; mov eax, [rbp-0x18]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81276b80: mov [rbx], eax; mov eax, [rbp-0x18]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81276b82: mov eax, [rbp-0x18]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81276f4f: add [rax-0x7d], cl; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81277288: or eax, 0x62894404; cmp [rax-0x77], cl; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8127728d: cmp [rax-0x77], cl; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812772ea: ret 0x5ef1;
0xffffffff812778b4: ret 0xd349;
0xffffffff81277b7a: ret 0x5f57;
0xffffffff81277ba1: ret 0x5f84;
0xffffffff81277c02: or [rax-0x77], cl; adc [rdi], ecx; xchg esp, eax; rol byte ptr [rbx+0x418815c0], 9; xor eax, eax; ret;
0xffffffff81277c05: adc [rdi], ecx; xchg esp, eax; rol byte ptr [rbx+0x418815c0], 9; xor eax, eax; ret;
0xffffffff81277c07: xchg esp, eax; rol byte ptr [rbx+0x418815c0], 9; xor eax, eax; ret;
0xffffffff8127855a: add al, 0xf; xchg esp, eax; ret 0x93c;
0xffffffff8127855c: xchg esp, eax; ret 0x93c;
0xffffffff8127855d: ret 0x93c;
0xffffffff81278581: ret 0x6181;
0xffffffff812785f5: ret 0x61c2;
0xffffffff812785f6: ret 0xb261;
0xffffffff8127872f: ret 0x6212;
0xffffffff812787c4: ret 0x5fbb;
0xffffffff81278894: ret 0x626a;
0xffffffff812788e2: ret 0x62b9;
0xffffffff81278952: ret 0x630e;
0xffffffff8127897e: ret 0x6330;
0xffffffff81278cda: ret 0x6351;
0xffffffff81278d84: ret 0x6373;
0xffffffff81278de9: ret 0x6392;
0xffffffff81278ffb: ret 0x63e4;
0xffffffff81279040: ret 0x63c4;
0xffffffff8127915b: ret 0xeeb;
0xffffffff81279175: ret 0x6401;
0xffffffff812791c9: ret 0x6424;
0xffffffff812792b3: ret 0x6451;
0xffffffff812793ff: ret 0x646f;
0xffffffff8127943b: ret 0x649e;
0xffffffff812794b6: pop rcx; sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81279557: ret 0x64e0;
0xffffffff81279591: ret 0x650b;
0xffffffff812795d6: ret 0x653a;
0xffffffff812797bc: ret 0x65d8;
0xffffffff812799d4: ret 0x6616;
0xffffffff81279e15: ret 0x6643;
0xffffffff81279ed4: ret 0x666b;
0xffffffff8127a089: adc dword ptr [rax+0x31000003], 0xffffffc0; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8127a08d: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8127a29a: ret 0x66c0;
0xffffffff8127a468: ret 0x66fe;
0xffffffff8127a58d: ret 0x675c;
0xffffffff8127a5cb: mov [0x1b8000128d7e881], eax; xor [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8127a5d4: xor [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8127a94f: ret 0x677f;
0xffffffff8127ab71: mov [0x415b595a00000390], eax; pop rsp; pop rbp; ret;
0xffffffff8127ab92: add [rsi-0x7f], ah; stc; xor bl, [rbx+0xf]; test [rdi+0x49000000], edx; mov esp, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8127ab95: stc; xor bl, [rbx+0xf]; test [rdi+0x49000000], edx; mov esp, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8127ab96: xor bl, [rbx+0xf]; test [rdi+0x49000000], edx; mov esp, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8127ab99: test [rdi+0x49000000], edx; mov esp, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8127ab9f: mov esp, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8127ac1b: ret 0x67cf;
0xffffffff8127ae14: ret 0x93bf;
0xffffffff8127ae57: ret 0x94bf;
0xffffffff8127ae76: ret 0x95bf;
0xffffffff8127ae7e: mov al, [rbp-1]; leave; ret;
0xffffffff8127aed4: ret 0x67e4;
0xffffffff8127af19: ret 0x6800;
0xffffffff8127b05a: ret 0x682f;
0xffffffff8127b0b7: ret 0x684e;
0xffffffff8127b0ee: ret 0x6246;
0xffffffff8127b2a2: ret 0x685e;
0xffffffff8127b35a: ret 0x6882;
0xffffffff8127b60d: ret 0x68ce;
0xffffffff8127b6b5: ret 0x68f4;
0xffffffff8127b6db: ret 0x6912;
0xffffffff8127b730: ret 0x692f;
0xffffffff8127b74f: ret 0x694c;
0xffffffff8127b777: ret 0x696a;
0xffffffff8127b7c8: ret 0x69b0;
0xffffffff8127b8b5: ret 0x6a5f;
0xffffffff8127b903: ret 0x6a2a;
0xffffffff8127b9f0: ret 0x69d3;
0xffffffff8127bab5: ret 0x6a81;
0xffffffff8127bb6a: ret 0x6aad;
0xffffffff8127bcac: ret 0x6aea;
0xffffffff8127bd1c: ret 0x662b;
0xffffffff8127bdac: ret 0x6b0a;
0xffffffff8127bdeb: ret 0x6b21;
0xffffffff8127be25: ret 0x6b40;
0xffffffff8127be57: ret 0x6b66;
0xffffffff8127c0aa: ret 0x6b81;
0xffffffff8127c0d2: ret 0x6baf;
0xffffffff8127c117: ret 0x6be7;
0xffffffff8127c147: ret 0x6c15;
0xffffffff8127c198: ret 0x6c3b;
0xffffffff8127c1b6: ret 0x6c78;
0xffffffff8127c2c1: ret 0x6cad;
0xffffffff8127c2ee: ret 0x6cec;
0xffffffff8127c3bd: ret 0x6d31;
0xffffffff8127c56a: ret 0x6d77;
0xffffffff8127c5cd: ret 0x6aca;
0xffffffff8127c695: ret 0x6ddb;
0xffffffff8127c6b7: ret 0x6e16;
0xffffffff8127c7a0: ret 0x6e3c;
0xffffffff8127c9dc: ret 0x6e61;
0xffffffff8127ca99: adc [rdx-0x77], bl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8127cb71: mov ds, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8127cbf3: ret 0x6e82;
0xffffffff8127cc19: ret 0x6eaa;
0xffffffff8127cc68: ret 0x6ef6;
0xffffffff8127ccba: ret 0xc6d9;
0xffffffff8127cce0: ret 0xbcbe;
0xffffffff8127cd17: ret 0xe3be;
0xffffffff8127cd25: leave; add eax, [rcx]; add [rbp-0x3d], bl; ret;
0xffffffff8127cd4b: ret 0x6f5a;
0xffffffff8127cd9e: ret 0x4140;
0xffffffff8127ced7: add [rax+0x415b0543], cl; pop rsp; pop rbp; ret;
0xffffffff8127cf0b: ret 0x6f9b;
0xffffffff8127cf3e: ret 0x6fc6;
0xffffffff8127cf7d: ret 0x5ebe;
0xffffffff8127cf89: adc dh, [rax-0x4e]; or dword ptr [rax-0x39], 0xa30a10c7; sub eax, 0x10159; mov eax, [rbp-4]; leave; ret;
0xffffffff8127cf8c: or dword ptr [rax-0x39], 0xa30a10c7; sub eax, 0x10159; mov eax, [rbp-4]; leave; ret;
0xffffffff8127cf90: adc [rdx], cl; mov [0x458b00010159e881], eax; cld; leave; ret;
0xffffffff8127cf91: or ah, [rbx+0x159e881]; add [rax], eax; mov eax, [rbp-4]; leave; ret;
0xffffffff8127cf92: mov [0x458b00010159e881], eax; cld; leave; ret;
0xffffffff8127cf93: sub eax, 0x10159; mov eax, [rbp-4]; leave; ret;
0xffffffff8127cf97: add [rax], eax; mov eax, [rbp-4]; leave; ret;
0xffffffff8127cfd0: add [rbp+rax-0x46], dh; add [rax], eax; add [rax], al; leave; mov eax, edx; ret;
0xffffffff8127d031: ret 0x30be;
0xffffffff8127d03b: or ah, [rbx+0xafe881]; add [rax], eax; leave; ret;
0xffffffff8127d03d: sub eax, 0x100af; leave; ret;
0xffffffff8127d2e7: ret 0x705d;
0xffffffff8127d31d: add [rcx+0x415b5ad0], cl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8127d70d: ret 0x7074;
0xffffffff8127d730: ret 0x7094;
0xffffffff8127d777: ret 0x70bc;
0xffffffff8127d789: xchg esp, eax; test dword ptr [rax], 0xfb800; add [rax], al; pop rbx; pop rbp; ret;
0xffffffff8127da2c: ret 0x70fd;
0xffffffff8127dbd3: ret 0xa748;
0xffffffff8127dc0a: ret 0xa898;
0xffffffff8127dc6a: ret 0x711a;
0xffffffff8127df8e: ret 0x7134;
0xffffffff8127dfd1: ret 0x7152;
0xffffffff8127e370: ret 0x71c6;
0xffffffff8127e528: ret 0xc6;
0xffffffff8127e610: ret 0x7242;
0xffffffff8127e6b8: ret 0x726b;
0xffffffff8127e78b: ret 0x5b8;
0xffffffff8127e7a7: ret 0x728b;
0xffffffff8127ea97: ret 0x7318;
0xffffffff8127eb98: ret 0xa678;
0xffffffff8127ebc3: ret 0x733e;
0xffffffff8127f047: ret 0xb273;
0xffffffff8127f0c5: fmul st, dword ptr [rbx]; mov [0x48580000b448e881], eax; mov ebx, [rbp-8]; leave; ret;
0xffffffff8127f0c6: or esp, [rbx-0x4bb7177f]; add [rax], al; pop rax; mov rbx, [rbp-8]; leave; ret;
0xffffffff8127f0c7: mov [0x48580000b448e881], eax; mov ebx, [rbp-8]; leave; ret;
0xffffffff8127f0c8: sub eax, 0xb448; pop rax; mov rbx, [rbp-8]; leave; ret;
0xffffffff8127f0ca: mov spl, 0; add [rax+0x48], bl; mov ebx, [rbp-8]; leave; ret;
0xffffffff8127f0cb: mov ah, 0; add [rax+0x48], bl; mov ebx, [rbp-8]; leave; ret;
0xffffffff8127f0cc: add [rax], al; pop rax; mov rbx, [rbp-8]; leave; ret;
0xffffffff8127f0cd: add [rax+0x48], bl; mov ebx, [rbp-8]; leave; ret;
0xffffffff8127f1a1: or esp, [rbx-0x4d08177f]; add [rax], al; pop rax; leave; ret;
0xffffffff8127f1a3: sub eax, 0xb2f7; pop rax; leave; ret;
0xffffffff8127f6fb: ret 0x75fc;
0xffffffff8127f726: ret 0x7642;
0xffffffff8127fac9: ret 0x46be;
0xffffffff8127fad2: stc; or esp, [rbx-0x29e8177f]; add [rax], al; leave; xor eax, eax; ret;
0xffffffff8127fad3: or esp, [rbx-0x29e8177f]; add [rax], al; leave; xor eax, eax; ret;
0xffffffff8127fad5: sub eax, 0xd617; leave; xor eax, eax; ret;
0xffffffff8127fad9: add [rax], al; leave; xor eax, eax; ret;
0xffffffff8127fc55: ret 0xefbe;
0xffffffff8127fca9: ret 0xdad;
0xffffffff8127ff0d: ret 0x876;
0xffffffff8127ff46: ret 0x776;
0xffffffff8127ff4b: ret 0x8846;
0xffffffff8127ffb5: ret 0x4c6;
0xffffffff8127ffd1: ret 0x76ee;
0xffffffff8127ffe3: ret 0xce;
0xffffffff812800ca: ret 0x772b;
0xffffffff81280184: leave; push qword ptr [rcx]; shl dl, 0xae; mov edi, r12d; sub rdi, rcx; call qword ptr [0xffffffff81c27000];
0xffffffff8128028f: ret 0xc1ff;
0xffffffff81280386: ret 0x7747;
0xffffffff812803a6: ret 0x775c;
0xffffffff812803d3: ret 0x7784;
0xffffffff8128045e: mov edi, 0x415be9eb; pop rsp; pop r13; pop rbp; ret;
0xffffffff81280477: ret 0x779b;
0xffffffff81280d2c: ret 0x78b9;
0xffffffff8128126c: and al, 0x83; add rbx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128126f: add rbx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81281270: add ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81281332: ret 0x12b8;
0xffffffff81281463: ret 0x99be;
0xffffffff812815f6: xchg esp, eax; ret 0x8d4e;
0xffffffff812815f7: ret 0x8d4e;
0xffffffff81281b30: sbb [rax-0x75], cl; pop rbp; adc [rbp+0x458944ff], al; ror byte ptr [rdi], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b33: pop rbp; adc [rbp+0x458944ff], al; ror byte ptr [rdi], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b34: adc [rbp+0x458944ff], al; ror byte ptr [rdi], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b36: inc dword ptr [rcx+rcx*4+0x45]; ror byte ptr [rdi], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b39: ror byte ptr [r15], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b3a: ror byte ptr [rdi], 1; xchg esp, eax; ret 0x7d89;
0xffffffff81281b3c: xchg esp, eax; ret 0x7d89;
0xffffffff81281b62: ret 0x7b96;
0xffffffff81281d3f: ret 0x7bd2;
0xffffffff81281f77: adc [rax], al; add bl, al; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81281f79: add bl, al; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff8128227a: pop rsp; pop r13; pop rbp; lea rsp, [r10-8]; ret;
0xffffffff8128248d: ret 0x2eb;
0xffffffff81282527: mov r13, rcx; push r12; push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff81282528: mov ebp, ecx; push r12; push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff81282529: int 0x41; push rsp; push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff8128252a: push r12; push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff8128252b: push rsp; push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff8128252c: push rbx; sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff8128252d: sub rsp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff8128252e: sub esp, 0x10; mov [rbp-0x38], rdi; call qword ptr [0xffffffff81c27000];
0xffffffff81282818: ret 0x7c15;
0xffffffff8128285e: ret 0x7c32;
0xffffffff81282d43: ret 0xb1e8;
0xffffffff81283024: mov r12b, 0xf; xchg esp, eax; ret 0xf883;
0xffffffff81283025: mov ah, 0xf; xchg esp, eax; ret 0xf883;
0xffffffff812834be: ret 0x275;
0xffffffff812835e4: ret 0x7c70;
0xffffffff8128375c: ret 0x7c99;
0xffffffff8128377e: pop rbp; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81283be0: ret 0x7cae;
0xffffffff81283eb7: ret 0x7cfe;
0xffffffff812840af: ret 0x7d15;
0xffffffff812842c4: ret 0x7d76;
0xffffffff812843ce: ret 0xddbe;
0xffffffff812844d4: ret 0x7da5;
0xffffffff81284650: ret 0xf2e8;
0xffffffff81284896: ret 0x7ddc;
0xffffffff81284d3d: cmove esp, eax; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81284e63: ret 0x7e28;
0xffffffff81285040: ror byte ptr [rax-0x77], 0x53; cmp [rcx+rcx*4+0x63], cl; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81285043: push rbx; cmp [rcx+rcx*4+0x63], cl; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81285044: cmp [rcx+rcx*4+0x63], cl; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812851ca: ret 0x7e46;
0xffffffff8128537f: pop rsp; pop rdi; pop rdi; pop rdi; pop rbp; ret;
0xffffffff812857ad: ret 0xcd20;
0xffffffff812857ce: ret 0xcd00;
0xffffffff81285f0d: ret 0x7e62;
0xffffffff81285f50: ret 0x7e96;
0xffffffff81285f84: ret 0x7ebf;
0xffffffff81285fd8: ret 0x7ee4;
0xffffffff8128606a: ret 0x7f1b;
0xffffffff812860a0: ret 0x7f4e;
0xffffffff8128614e: ret 0x7f7b;
0xffffffff81286228: ret 0x7ffb;
0xffffffff81286250: ret 0x802b;
0xffffffff8128635f: ret 0x808a;
0xffffffff8128659e: ret 0x4301;
0xffffffff81286a73: ret 0x80c7;
0xffffffff81286a8e: ret 0x80e5;
0xffffffff81286c5e: add [rbp-0x76fefca4], ecx; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81286dc2: mov r13, rdi; push r12; mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc3: mov ebp, edi; push r12; mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc4: std; push r12; mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc5: push r12; mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc6: push rsp; mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc7: mov r12, rsi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc8: mov esp, esi; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dc9: hlt; push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dca: push rbx; sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dcb: sub rsp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff81286dcc: sub esp, 0x28; call qword ptr [0xffffffff81c27000];
0xffffffff8128727c: add bl, al; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff812872a0: ret 0x715a;
0xffffffff812872c4: adc [rax], al; add bl, al; leave; ret;
0xffffffff812872c6: add bl, al; leave; ret;
0xffffffff812873e9: push qword ptr [rcx]; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff812874be: ret 0x810e;
0xffffffff8128767c: ret 0x81a0;
0xffffffff812876ad: add al, 0x49; mov esp, edi; shl rdi, 5; call qword ptr [0xffffffff81c27000];
0xffffffff812876af: mov esp, edi; shl rdi, 5; call qword ptr [0xffffffff81c27000];
0xffffffff812877d4: add [rax-0x77], cl; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81287a2d: cmp al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81287b83: ret 0x820c;
0xffffffff81287c51: ret 0x8254;
0xffffffff81287cd6: ret 0x5220;
0xffffffff81287cdb: ret 0x82a3;
0xffffffff81287d93: ret 0x82f2;
0xffffffff81287dbc: ret 0x831b;
0xffffffff81287e89: ret 0x83d2;
0xffffffff8128831b: pop rax; mov rbx, [rbp-8]; leave; ret;
0xffffffff812883db: ret 0x8506;
0xffffffff8128864d: ret 0x85e8;
0xffffffff812886ca: add [rax], al; mov rax, [rbp-8]; mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886cb: add [rax-0x75], cl; clc; mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886cc: mov rax, [rbp-8]; mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886cd: mov eax, [rbp-8]; mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886cf: clc; mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886d0: mov [rip+0xc620a1], rax; leave; xor eax, eax; ret;
0xffffffff812886d1: mov [rip+0xc620a1], eax; leave; xor eax, eax; ret;
0xffffffff812886d2: add eax, 0xc620a1; leave; xor eax, eax; ret;
0xffffffff812886fb: ret 0x8629;
0xffffffff81288732: ret 0x866a;
0xffffffff812887ab: ret 0x86e2;
0xffffffff8128884c: ret 0x876e;
0xffffffff81288890: ret 0x8794;
0xffffffff81288dea: ret 0x888a;
0xffffffff81288ee7: mov esp, edx; mov r13, rsi; mov ebx, edi; call qword ptr [0xffffffff81c27000];
0xffffffff8128907c: ret 0x893f;
0xffffffff81289300: and [rdi], ecx; xchg esp, eax; rol byte ptr [rbx-0x6bf0fc02], 0xc2; and eax, edx; ret;
0xffffffff81289302: xchg esp, eax; rol byte ptr [rbx-0x6bf0fc02], 0xc2; and eax, edx; ret;
0xffffffff81289306: add ecx, [rdi]; xchg esp, eax; ret 0xd021;
0xffffffff81289308: xchg esp, eax; ret 0xd021;
0xffffffff8128974d: add [r9], r14b; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128974e: add [rcx], dh; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81289750: rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128984b: ret 0x8a1b;
0xffffffff8128993e: ret 0x986c;
0xffffffff81289966: dec dword ptr [rax-0x7d]; add ebx, [rax]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81289967: add qword ptr [rbx], 0x18; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81289968: add dword ptr [rbx], 0x18; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81289969: add ebx, [rax]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81289a43: ret 0x8a5a;
0xffffffff81289bfd: ret 0x8a99;
0xffffffff81289d14: ret 0x8ac8;
0xffffffff81289f5f: ret 0x9563;
0xffffffff81289f9c: ret 0x9596;
0xffffffff8128a16c: ret 0x95d1;
0xffffffff8128a1f1: ret 0x9603;
0xffffffff8128a221: ret 0x9629;
0xffffffff8128a713: mov esp, esi; push rbx; push r8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff8128a7c3: ret 0x979f;
0xffffffff8128a823: ret 0x97bb;
0xffffffff8128a858: ret 0x97db;
0xffffffff8128a9af: add [rax], al; mov rax, [rbp-8]; and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b0: add [rax-0x75], cl; clc; and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b1: mov rax, [rbp-8]; and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b2: mov eax, [rbp-8]; and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b4: clc; and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b5: and eax, 0xf; mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128a9b8: mov al, [rax-0x7e5cd5d0]; leave; ret;
0xffffffff8128ac27: leave; mov ecx, r12d; shl ecx, 4; lea edi, [rax+rcx+8]; mov [rbp-0x38], edi; call qword ptr [0xffffffff81c27000];
0xffffffff8128ada2: inc dword ptr [rcx+0x6000c0c6]; add [rcx+0x8000ce], al; add al, ch; pop rsp; push 0xffffffff8948ffe8; ret;
0xffffffff8128ada5: rol byte ptr [rax], 0x60; add [rcx+0x8000ce], al; add al, ch; pop rsp; push 0xffffffff8948ffe8; ret;
0xffffffff8128ada8: add [rcx+0x8000ce], al; add al, ch; pop rsp; push 0xffffffff8948ffe8; ret;
0xffffffff8128adae: add al, ch; pop rsp; push 0xffffffff8948ffe8; ret;
0xffffffff8128adb0: pop rsp; push 0xffffffff8948ffe8; ret;
0xffffffff8128ae12: ret 0xa6a0;
0xffffffff8128b03b: ret 0x98ad;
0xffffffff8128b2a0: ret 0x98d2;
0xffffffff8128b37e: add [rcx], dh; leave; mov eax, ecx; pop rbx; pop rbp; ret;
0xffffffff8128b380: leave; mov eax, ecx; pop rbx; pop rbp; ret;
0xffffffff8128b4d9: ret 0xe8e9;
0xffffffff8128b5a6: ret 0xa648;
0xffffffff8128b707: ret 0x991f;
0xffffffff8128b7ec: ret 0x9951;
0xffffffff8128b82d: ret 0xeb19;
0xffffffff8128b894: ret 0x9997;
0xffffffff8128b8b9: ret 0x99ee;
0xffffffff8128b8e2: ret 0x4807;
0xffffffff8128b94c: mov esp, esi; push rbx; mov rbx, rdi; push rcx; mov rdi, [rip+0xc5ecae]; call qword ptr [0xffffffff81c27000];
0xffffffff8128b98a: ret 0x9a3a;
0xffffffff8128b9c6: ret 0x9a62;
0xffffffff8128baed: sbb [r8-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128bc2b: ret 0x65bd;
0xffffffff8128bc4f: adc [r9+r9*4+0x63], al; sbb [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128bc50: adc [rcx+rcx*4+0x63], al; sbb [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128bc54: sbb [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128bc7e: ret 0xb8f1;
0xffffffff8128bd82: ret 0xc5e8;
0xffffffff8128bde4: leave; push qword ptr [rcx]; shl dl, 0xae; not rcx; mov rdi, rcx; call qword ptr [0xffffffff81c27000];
0xffffffff8128c067: ret 0x9bbb;
0xffffffff8128c10d: ret 0x9bdd;
0xffffffff8128c152: ret 0x9c19;
0xffffffff8128c1a7: ret 0x9c32;
0xffffffff8128c272: sti; add eax, 0x415bda75; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128c273: add eax, 0x415bda75; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128c275: ficomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128c32f: ret 0x9c8e;
0xffffffff8128c359: ret 0x7f9a;
0xffffffff8128c381: ret 0x9cd1;
0xffffffff8128c565: ret 0x9d25;
0xffffffff8128c574: mov [0x92ae8f845894881], eax; add [rax], al; mov rax, [rbp-8]; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c57b: sub cl, [rcx]; add [rax], al; mov rax, [rbp-8]; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c57c: or [rax], eax; add [rax-0x75], cl; clc; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c57d: add [rax], al; mov rax, [rbp-8]; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c57e: add [rax-0x75], cl; clc; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c57f: mov rax, [rbp-8]; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c580: mov eax, [rbp-8]; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c582: clc; mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c583: mov qword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c584: mov dword ptr [rax+0x20], 1; leave; ret;
0xffffffff8128c5aa: adc [rsi-0x77], ah; pop rax; or bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128c5ad: pop rax; or bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128c5ae: or bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8128c79b: ret 0x9d81;
0xffffffff8128c84c: rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8128cb93: mov esp, edi; push rbx; mov rbx, rsi; call qword ptr [0xffffffff81c27000];
0xffffffff8128cbdf: ret 0x6188;
0xffffffff8128cff5: sub eax, 0xfffcef75; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8128d1c4: ret 0x9b8;
0xffffffff8128d38c: xor [rdx+0x415b0031], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff8128d6ce: xor eax, eax; cmp qword ptr [rbp-8], 0; leave; setne al; ret;
0xffffffff8128d6d0: cmp qword ptr [rbp-8], 0; leave; setne al; ret;
0xffffffff8128d6d1: cmp dword ptr [rbp-8], 0; leave; setne al; ret;
0xffffffff8128da5a: ret 0x1a22;
0xffffffff8128db11: ret 0x5fb2;
0xffffffff8128db2a: sub eax, 0xffeae5d0; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8128db3b: ret 0xa6ae;
0xffffffff8128dea1: ret 0x24be;
0xffffffff8128decb: ret 0x9fae;
0xffffffff8128e037: ret 0x9f6b;
0xffffffff8128e5a6: ret 0xa;
0xffffffff8128ebac: ret 0x3a60;
0xffffffff8128ebf8: ret 0xa0f1;
0xffffffff8128f75e: ret 0xa4d9;
0xffffffff8128fc1e: ret 0x4f7e;
0xffffffff8128fd61: ret 0xa4fc;
0xffffffff8128fe9a: ret 0x3296;
0xffffffff8128feba: ret 0x4674;
0xffffffff81290617: add dword ptr [rip+0xc5a322], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81290619: and ah, [rbx+0x480100c5]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812906a8: ret 0x9cbe;
0xffffffff8129071a: ret 0xb970;
0xffffffff812908a9: leave; xor r8d, r8d; call qword ptr [0xffffffff81c27010];
0xffffffff81290975: mov [rbx+0x1c], eax; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81290a91: xor dword ptr [rcx], 0xa38944c0; add byte ptr [rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81290a93: rol byte ptr [rcx+rcx*4-0x5d], 0x80; add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81290ae3: mov [0x415bc03100000280], eax; pop rsp; pop rbp; ret;
0xffffffff81291518: ret 0x2fbe;
0xffffffff8129179b: ret 0xb3be;
0xffffffff812917bf: ret 0x58be;
0xffffffff81291a33: sbb [rax+rax], ebx; leave; test eax, eax; sete al; movzx eax, al; ret;
0xffffffff81291a34: sbb al, 0; leave; test eax, eax; sete al; movzx eax, al; ret;
0xffffffff81291a36: leave; test eax, eax; sete al; movzx eax, al; ret;
0xffffffff81291e82: mov [rbx+0x18], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81291f13: leave; xor r8b, [r8]; pop rbx; pop rbp; ret;
0xffffffff81291fef: add rsp, 0x30; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81291ff0: add esp, 0x30; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff812922fe: ret 0xb908;
0xffffffff81292376: movsb [rdi], [rsi]; cld; inc dword ptr [rax+rax*8+0x415b0575]; pop rsp; pop rbp; ret;
0xffffffff81292377: cld; inc dword ptr [rax+rax*8+0x415b0575]; pop rsp; pop rbp; ret;
0xffffffff8129287a: ret 0xe6be;
0xffffffff8129289b: ret 0x4abe;
0xffffffff812930cd: mov [r11], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81293100: mov dword ptr [r11], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81293101: mov dword ptr [rbx], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812932aa: mov [rbx+0x10], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812932ab: mov [rbx+0x10], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81293aa7: add [rax], al; add [rcx-0x77], cl; xchg esp, eax; iretd;
0xffffffff81293aa9: add [rcx-0x77], cl; xchg esp, eax; iretd;
0xffffffff81294440: ret 0xaac9;
0xffffffff81294969: ret 0xae2c;
0xffffffff81294b32: ret 0x46e0;
0xffffffff81294bce: ret 0xae11;
0xffffffff81294c12: ret 0xadf6;
0xffffffff81294c97: leave; cmp eax, 1; sbb eax, eax; not eax; and eax, 0xffffffed; ret;
0xffffffff81294f1a: sbb eax, 0x415b0032; pop rsp; pop r13; pop rbp; ret;
0xffffffff812952d9: ret 0x14d;
0xffffffff81295642: ret 0x3f40;
0xffffffff81295755: ret 0x3e10;
0xffffffff8129576b: ret 0x3e00;
0xffffffff81295a4c: ret 0x1c7e;
0xffffffff81295d02: ret 0xa980;
0xffffffff81296359: mov dword ptr [rax-0x1a], 0x7de881c3; or [rdx], esi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81296360: or [rdx], esi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81296393: ret 0xdf06;
0xffffffff812963ed: ret 0xb988;
0xffffffff812965ca: ret 0x30b4;
0xffffffff81296642: ret 0xb980;
0xffffffff8129674d: mov edx, 0x415bffe7; pop rsp; pop rbp; ret;
0xffffffff8129757b: xor byte ptr [rcx], 0; add rsp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff812976fa: ret 0x317e;
0xffffffff812976fc: xor [rax], eax; add rsp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff812976fe: add rsp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff812976ff: add esp, 0x18; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297a03: mov ecx, 0x4800317b; add esp, 0x20; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297ac1: ret 0xb264;
0xffffffff81297ac5: sub eax, 0x317af5; add rsp, 0x20; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297ac9: xor [rax], eax; add rsp, 0x20; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297acb: add rsp, 0x20; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297acc: add esp, 0x20; cdqe; pop rbx; pop rbp; ret;
0xffffffff81297fa7: add [rbp+0x481175c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81297fa9: shl byte ptr [rbp+0x11], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812983d8: ret 0xb3fc;
0xffffffff812988e3: ret 0x8460;
0xffffffff81298924: ret 0x8490;
0xffffffff812989b8: xor dword ptr [rbp-0x29], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff812990f8: push rsi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812992de: shl byte ptr [rax+rbp*8+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812994a2: or [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812996d8: or [rax-0x77], cl; add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812999bd: ret 0xeba0;
0xffffffff81299bbd: ret 0xeb60;
0xffffffff81299ec9: ret 0xb488;
0xffffffff81299f3f: ret 0xb453;
0xffffffff8129a2a1: mov [rax+0x48], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129a2a2: mov [rax+0x48], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129a2a3: push rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129a88c: ror dword ptr [rip+0x40004000], 0x81; leave; add [rax], al; add [rax-0xa], al; ret 0xf01;
0xffffffff8129a890: add [rax-0x7f], al; leave; add [rax], al; add [rax-0xa], al; ret 0xf01;
0xffffffff8129a893: leave; add [rax], al; add [rax-0xa], al; ret 0xf01;
0xffffffff8129aa21: ret 0xb701;
0xffffffff8129aa67: ret 0xb6ef;
0xffffffff8129ab57: ret 0xb772;
0xffffffff8129ab78: ret 0xb658;
0xffffffff8129ab9b: ret 0xb568;
0xffffffff8129ac00: ret 0xb680;
0xffffffff8129ac52: ret 0xb598;
0xffffffff8129ac78: ret 0xb6a8;
0xffffffff8129ac9a: ret 0xb628;
0xffffffff8129ad0e: ret 0xb745;
0xffffffff8129ad2c: ret 0xb714;
0xffffffff8129ad76: ret 0xb727;
0xffffffff8129adcf: fucomip st, st(0); or eax, [rdi-0x3fcefff7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129add1: or eax, [rdi-0x3fcefff7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129adef: ret 0xb78c;
0xffffffff8129ae75: or [rax], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129ae9a: ret 0xb7c7;
0xffffffff8129af17: sub eax, 0x31bdc3; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129af1a: mov ebp, 0x458b0031; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129af1b: xor [rax], eax; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129afa1: inc dword ptr [rbp+0x31e575c0]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129afa3: shl byte ptr [rbp-0x1b], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129afa5: in eax, 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129b10a: ret 0xffe3;
0xffffffff8129b1d1: ret 0x2e8f;
0xffffffff8129b1e8: ret 0x19c4;
0xffffffff8129b1fd: ret 0x5dfc;
0xffffffff8129b29e: ret 0xb843;
0xffffffff8129b2bd: ret 0xb829;
0xffffffff8129b355: ret 0xb860;
0xffffffff8129b3a7: ret 0x5a24;
0xffffffff8129b450: ret 0xb8d8;
0xffffffff8129b4f5: ret 0xe7c9;
0xffffffff8129b56b: ret 0xb8aa;
0xffffffff8129b58d: ret 0xb890;
0xffffffff8129b614: ret 0xb910;
0xffffffff8129b62d: ret 0xb888;
0xffffffff8129b670: ret 0xb89c;
0xffffffff8129b6d5: pop rsp; sub rax, r13; pop r13; pop r14; pop rbp; ret;
0xffffffff8129b713: add [rdi+rax+0x48], dh; add esp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8129b761: add [rbx+8], rcx; mov [rbx+0x10], rdx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8129b762: add [rbx+8], ecx; mov [rbx+0x10], rdx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8129b765: mov [rbx+0x10], rdx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8129b766: mov [rbx+0x10], edx; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8129b770: mov dword ptr [rbx+0x20], 1; add rsp, 0x48; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8129b775: add [rax], al; add rsp, 0x48; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8129b777: add rsp, 0x48; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8129b778: add esp, 0x48; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8129bb3d: ret 0xb96b;
0xffffffff8129bb4b: ret 0xb971;
0xffffffff8129bb8b: ret 0xb98c;
0xffffffff8129bb96: ret 0xb985;
0xffffffff8129bba3: ret 0xb97e;
0xffffffff8129ca3c: push 9; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129ca5a: add ch, [rcx+9]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129cbb7: ret 0xbdcc;
0xffffffff8129cd3e: and eax, 0x415bfffc; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129cdd5: test dword ptr [rcx+0x2473e8c6], 0x415bfffc; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8129cf17: ret 0xbde4;
0xffffffff8129cfd2: ret 0xbe0e;
0xffffffff8129d122: mov [r8], bl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129d123: mov [rax], bl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129d44d: ret 0xd180;
0xffffffff8129d467: shl byte ptr [rbp+0x23], 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129d469: and esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129d47a: ret 0xbebe;
0xffffffff8129d4b3: ret 0xcff0;
0xffffffff8129d56d: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129d6a2: ret 0xbf9a;
0xffffffff8129d741: ret 0xc1c8;
0xffffffff8129d859: ret 0xc218;
0xffffffff8129d955: ret 0xbf59;
0xffffffff8129d9af: ret 0xbf6c;
0xffffffff8129d9d4: ret 0xbf44;
0xffffffff8129d9f9: ret 0xc1e8;
0xffffffff8129da28: ret 0xbf7f;
0xffffffff8129db6e: ret 0xbfb6;
0xffffffff8129dc1a: ret 0xc160;
0xffffffff8129dcc0: ret 0xc190;
0xffffffff8129e239: ret 0x81b2;
0xffffffff8129e496: outsb dx, [rsi]; xor [rax], eax; leave; ret;
0xffffffff8129e500: add rsp, 0x48; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129e501: add esp, 0x48; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8129e5da: add rsp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff8129e5db: add esp, 0x48; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff8129e69a: pop rsp; cmp rax, 1; pop rbp; sbb eax, eax; and eax, 0xfffffff4; ret;
0xffffffff8129e767: test [rcx], esi; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129e863: leave; stosd [rdi]; xor [rax], eax; pop rbp; ret;
0xffffffff8129ec56: add [rax], al; add [rdx], al; add [rax], al; add [rax-0x77], cl; mov esp, [rax+rax+0x5d5b0000]; ret;
0xffffffff8129ec58: add [rdx], al; add [rax], al; add [rax-0x77], cl; mov esp, [rax+rax+0x5d5b0000]; ret;
0xffffffff8129ec5a: add [rax], al; add [rax-0x77], cl; mov esp, [rax+rax+0x5d5b0000]; ret;
0xffffffff8129ec5c: add [rax-0x77], cl; mov esp, [rax+rax+0x5d5b0000]; ret;
0xffffffff8129ec5f: mov esp, [rax+rax+0x5d5b0000]; ret;
0xffffffff8129edc2: push qword ptr [rdx+rcx-0x42]; add eax, 0xe8000000; mov eax, [0x415be08944000a25]; pop rsp; pop rbp; ret;
0xffffffff8129edc6: add eax, 0xe8000000; mov eax, [0x415be08944000a25]; pop rsp; pop rbp; ret;
0xffffffff8129edc7: add [rax], al; add al, ch; mov eax, [0x415be08944000a25]; pop rsp; pop rbp; ret;
0xffffffff8129edc9: add al, ch; mov eax, [0x415be08944000a25]; pop rsp; pop rbp; ret;
0xffffffff8129edcb: mov eax, [0x415be08944000a25]; pop rsp; pop rbp; ret;
0xffffffff8129f1ef: shl byte ptr [rdi+rcx-0x7d], 0xc0; add [rcx-0x3fce83bd], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129f1f4: add [rcx-0x3fce83bd], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129f1f5: mov [rbx+0x7c], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8129f60c: enter 0x8348, 0xc4; sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129fab5: sbb [rdx], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8129fc79: fstp qword ptr [rbx+0x41], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129fcf8: mov eax, 0x75000000; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8129fd19: xor byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8129fd5e: xchg esp, eax; rol bl, 0x31; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff8129fe2f: dec dword ptr [rax-0x7b]; shl byte ptr [rax+rbx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8129fe32: shl byte ptr [rax+rbx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8129fe45: adc [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff8129fe6c: dec dword ptr [rax-0x7b]; shl byte ptr [rcx+rbx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8129fe6f: shl byte ptr [rcx+rbx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8129fe71: fstp dword ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff8129fea2: add [r8-0x7b], r9b; shl byte ptr [rdx+rcx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129fea3: add [rax-0x7b], cl; shl byte ptr [rdx+rcx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8129fea6: shl byte ptr [rdx+rcx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a01a1: push qword ptr [rcx]; rol byte ptr [rbp+0x480475c0], cl; mov edx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a01a3: rol byte ptr [rbp+0x480475c0], cl; mov edx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a01a5: shl byte ptr [rbp+4], 0x48; mov edx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a01a7: add al, 0x48; mov edx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a01a8: mov rdx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a01a9: mov edx, [rbp-0x28]; leave; mov rax, rdx; ret;
0xffffffff812a02ea: mov [0x890774db85ffffef], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812a02ed: inc dword ptr [rbp-0x76f88b25]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812a03b6: cmp bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812a08ee: mov rax, [rbp-0x38]; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff812a08ef: mov eax, [rbp-0x38]; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff812a08f1: enter 0x8348, 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812a0ee6: ret 0xee70;
0xffffffff812a22f1: ret 0xeabe;
0xffffffff812a2613: sub esp, edi; out 0xff, al; pop rbx; pop r12; pop rbp; ret;
0xffffffff812a2a58: ret 0x8b08;
0xffffffff812a2ccb: dec dword ptr [rcx+rcx*4-0x30]; div rcx; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2ccc: mov rax, r10; div rcx; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2ccd: mov eax, edx; div rcx; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2cce: ror byte ptr [rax-9], 1; int1; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2ccf: div rcx; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2cd0: div ecx; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2cd1: int1; mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2cd2: mov r10, rax; leave; mov rax, r10; ret;
0xffffffff812a2cd3: mov edx, eax; leave; mov rax, r10; ret;
0xffffffff812a2cd4: ret 0x4cc9;
0xffffffff812a2cd5: leave; mov rax, r10; ret;
0xffffffff812a2da9: sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; imul rax, rdx; ret;
0xffffffff812a2dac: pop rsp; pop r13; pop rbp; imul rax, rdx; ret;
0xffffffff812a30f4: cmp [rbx+0x31], ah; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a30f5: movsxd esi, [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a3339: ret 0xe8d3;
0xffffffff812a3552: ret 0x6be9;
0xffffffff812a3746: pop rsp; pop r13; pop rbp; mov eax, edx; ret;
0xffffffff812a4250: xor [rax], eax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff812a443b: adc [rbx+0x41], bl; pop rsp; div rcx; pop r13; pop rbp; ret;
0xffffffff812a443e: pop rsp; div rcx; pop r13; pop rbp; ret;
0xffffffff812a4674: push qword ptr [rdi+4]; mov rax, [rax+8]; leave; ret;
0xffffffff812a4676: add al, 0x48; mov eax, [rax+8]; leave; ret;
0xffffffff812a4677: mov rax, [rax+8]; leave; ret;
0xffffffff812a4678: mov eax, [rax+8]; leave; ret;
0xffffffff812a4764: ret 0x4ce0;
0xffffffff812a4859: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff812a485b: add [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff812a496b: fistp dword ptr [rbx+0x41], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a4c2c: ret 0xc7c4;
0xffffffff812a4edc: xor [r8], r8d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812a4edd: xor [rax], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812a4fcf: push rbp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a503a: ret 0x55cf;
0xffffffff812a50a7: mov ch, 0xcf; push rbp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812a50a9: push rbp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812a5121: ret 0xc383;
0xffffffff812a5d77: ret 0xb2c8;
0xffffffff812a5f99: ret 0x5241;
0xffffffff812a61a1: mov [r12], rcx; add rsp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a61a2: mov [rsp], ecx; add rsp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a61a3: or al, 0x24; add rsp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a61a4: and al, 0x48; add esp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a6205: add rsp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a6206: add esp, 0x18; pop r12; pop r13; pop rbp; ret;
0xffffffff812a74bd: ret 0xc90b;
0xffffffff812a9113: ret 0xcd89;
0xffffffff812a94df: out 0xe8, eax; mov edi, [rsi+0x415bfff8]; pop rsp; pop rbp; ret;
0xffffffff812a94e1: mov edi, [rsi+0x415bfff8]; pop rsp; pop rbp; ret;
0xffffffff812a94e2: mov esi, 0x415bfff8; pop rsp; pop rbp; ret;
0xffffffff812a95d8: ret 0x4858;
0xffffffff812a97e6: xchg [rax], ecx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812a998d: fcomp st, qword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812aa4c4: ret 0xce0f;
0xffffffff812aa928: shl rdx, 0xc; mov [rbx+0x524], rdx; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa929: shl edx, 0xc; mov [rbx+0x524], rdx; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa92b: or al, 0x48; mov [rbx+0x524], edx; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa92c: mov [rbx+0x524], rdx; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa92d: mov [rbx+0x524], edx; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa92f: and al, 5; add [rax], al; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa931: add [rax], al; add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa933: add rsp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aa934: add esp, 0x260; pop rbx; pop rbp; ret;
0xffffffff812aaa53: ret 0x5818;
0xffffffff812aabea: ret 0xf69a;
0xffffffff812aaf54: pop rsp; mov eax, [rax]; sar rsi, 6; mov [rdi], esi; ret;
0xffffffff812ab818: movzx eax, byte ptr [rbp-0x11]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ab81b: out dx, eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ab881: mov [rbx+0xd0], rdx; mov rdx, [rbp-0x20]; mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab882: mov [rbx+0xd0], edx; mov rdx, [rbp-0x20]; mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab886: add [rax], al; mov rdx, [rbp-0x20]; mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab888: mov rdx, [rbp-0x20]; mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab889: mov edx, [rbp-0x20]; mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab88c: mov [rbx+0xd8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab88d: mov [rbx+0xd8], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab88e: xchg ebx, eax; fadd st, dword ptr [rax]; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab88f: fadd st, dword ptr [rax]; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff812ab9e4: pop rax; push 0x415bffe6; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ab9e5: push 0x415bffe6; pop rsp; pop r13; pop rbp; ret;
0xffffffff812abfde: ret 0xcec9;
0xffffffff812ac79b: add dword ptr [rbx+0x1c8], 1; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812ac7a0: add [rcx], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812ac99c: push rax; and [rbx+0x13893], cl; add [rcx+0x415b2850], cl; pop rsp; pop rbp; ret;
0xffffffff812ac99d: and [rbx+0x13893], cl; add [rcx+0x415b2850], cl; pop rsp; pop rbp; ret;
0xffffffff812ac9a1: add [rax], eax; add [rcx+0x415b2850], cl; pop rsp; pop rbp; ret;
0xffffffff812ac9a3: add [rcx+0x415b2850], cl; pop rsp; pop rbp; ret;
0xffffffff812ac9a5: push rax; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812acc9f: add [rcx+0x13883], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812ad260: ret 0xcf1d;
0xffffffff812ad2ca: ret 0x30;
0xffffffff812ad306: pop rsp; mov eax, edx; pop r13; pop r14; pop rbp; ret;
0xffffffff812ad3a3: ret 0xcf28;
0xffffffff812ad567: ret 0xcf3a;
0xffffffff812ada40: mov esp, 0x48005545; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ae0f3: ret 0x5880;
0xffffffff812ae7c2: ret 0xcf74;
0xffffffff812aef3c: ret 0x17e8;
0xffffffff812af10a: out 0xe8, eax; and [rbx+0x415b0030], ah; pop rsp; pop r13; pop rbp; ret;
0xffffffff812af10c: and [rbx+0x415b0030], ah; pop rsp; pop r13; pop rbp; ret;
0xffffffff812af1af: ret 0xc5d0;
0xffffffff812af41b: ret 0x5fe8;
0xffffffff812b06a5: ret 0xc2f7;
0xffffffff812b0b2f: rol byte ptr [rcx+0xf], cl; mov dh, 0x81; and eax, 0x38000001; add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b32: mov dh, 0x81; and eax, 0x38000001; add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b34: and eax, 0x38000001; add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b35: add [rax], eax; add [rax], bh; add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b37: add [rax], bh; add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b39: add [rcx+0xf], eax; xchg esp, eax; ret 0x8beb;
0xffffffff812b0b3c: xchg esp, eax; ret 0x8beb;
0xffffffff812b0bfa: ret 0xdcf4;
0xffffffff812b0dd3: ret 0xab79;
0xffffffff812b12ed: ret 0xb374;
0xffffffff812b14c9: ret 0xaf75;
0xffffffff812b3100: ret 0x748b;
0xffffffff812b3189: pop rsp; add [rbp+1], dh; ret;
0xffffffff812b3337: mov esp, ds; dec dword ptr [rax+0x63]; ret;
0xffffffff812b3dc7: dec dword ptr [rcx-0x3b7cb728]; xor [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b4209: mov esi, 0x415bffdc; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b42c2: sbb bh, [rsi-0x3fce0024]; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b42c3: mov esi, 0xc031ffdc; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b42c5: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812b4392: add rsp, 0x30; mov eax, 0xfffffff2; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b4393: add esp, 0x30; mov eax, 0xfffffff2; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b4ea8: test [rbp+0x30], al; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812b4fa9: sub al, ch; shl dword ptr [rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812b4fab: shl dword ptr [rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812b4fac: and al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812b5113: or bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b5131: sbb [rcx+rcx*4+0x68], cl; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b51e1: add [rbp-0xff78b40], al; and byte ptr [rbx+0x1c1], 0xf7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b51e5: or al, dh; and byte ptr [rbx+0x1c1], 0xf7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b51e7: and byte ptr [rbx+0x1c1], 0xf7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b51e9: rol dword ptr [rcx], 0; add bh, dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b51ea: add [rax], eax; add bh, dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b51ec: add bh, dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b5c: and [rbp+0x48077fc0], eax; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b5e: sar byte ptr [rdi+7], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b70: ret 0xe870;
0xffffffff812b5b74: idiv r15b; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b75: idiv bh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b80: fucomip st, st(0); mov edx, 0x48ffe5c6; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b82: mov edx, 0x48ffe5c6; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812b5b84: in eax, 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812b600c: xchg esp, eax; ret 0x5441;
0xffffffff812b62b7: xor [rax], esi; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812b63f6: ret 0xb494;
0xffffffff812b642a: pop rsp; mov [0x10000015483c781], eax; add [rax], al; add [rbx+0x5d], bl; ret;
0xffffffff812b671c: add eax, 0x415b0030; pop rsp; pop rbp; ret;
0xffffffff812b6c4a: and byte ptr [rbx+0xf0], 0xfb; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b6c4b: mov [0xc48348fb000000f0], eax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812b6c4f: add bl, bh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b6c50: sti; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b717a: ret 0xf174;
0xffffffff812b71bb: and dh, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b7749: ret 0x4f72;
0xffffffff812b7ace: xchg esp, eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812b8d7c: xor eax, 0x415bffdc; pop rsp; pop rbp; ret;
0xffffffff812b92ee: add rsp, 0x1f8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff812b92ef: add esp, 0x1f8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff812b934f: sub eax, 0xffdc326b; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b9353: fdiv st(7), st; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff812b93c2: dec dword ptr [rax-0x7b]; shl byte ptr [rbp+0x19], 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff812b93c5: shl byte ptr [rbp+0x19], 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff812b93c7: sbb [rax-0x75], ecx; pop rbp; clc; leave; ret;
0xffffffff812ba2d2: add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x13e8;
0xffffffff812ba2d4: add [rdi], cl; xchg esp, eax; ret 0x13e8;
0xffffffff812ba2d6: xchg esp, eax; ret 0x13e8;
0xffffffff812ba2d7: ret 0x13e8;
0xffffffff812baaba: cmp [rcx+0x18aee8df], cl; out 0xff, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812baac0: out 0xff, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812bab93: pop rsp; mov rax, [rax*8-0x7e114720]; pop rbp; ret;
0xffffffff812bac23: leave; cmovne eax, edx; pop rbx; pop rbp; ret;
0xffffffff812bb93a: ret 0x9849;
0xffffffff812bb982: mov rdx, [rsp+8]; mov [rip+0x984962], rax; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb983: mov edx, [rsp+8]; mov [rip+0x984962], rax; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb985: and al, 8; mov [rip+0x984962], rax; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb986: or [rax-0x77], cl; add eax, 0x984962; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb987: mov [rip+0x984962], rax; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb988: mov [rip+0x984962], eax; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb989: add eax, 0x984962; xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb98e: xor eax, eax; mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb990: mov [rip+0x984961], rdx; leave; ret;
0xffffffff812bb991: mov [rip+0x984961], edx; leave; ret;
0xffffffff812bb992: adc eax, 0x984961; leave; ret;
0xffffffff812bb999: leave; mov eax, 0xfffffff2; ret;
0xffffffff812bbd02: ret 0xb900;
0xffffffff812bbe92: ret 0x6c72;
0xffffffff812bc098: ret 0x7d00;
0xffffffff812bc21a: ret 0x171c;
0xffffffff812bc25c: ret 0xf00;
0xffffffff812bc283: ret 0xc2b0;
0xffffffff812bc285: ret 0x812b;
0xffffffff812bc292: or dword ptr [rcx+0x45e8f45d], 0x8900171c; sbb eax, 0x984107; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812bc29b: mov [rip+0x984107], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812bc29c: sbb eax, 0x984107; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812bc603: leave; bnd ret 0x4800;
0xffffffff812bc604: bnd ret 0x4800;
0xffffffff812bc697: bnd ret 0x4100;
0xffffffff812bc726: ret 0xbf00;
0xffffffff812bcd09: ret 0x8400;
0xffffffff812bcd75: cmp al, 0xc5; mov al, [0x415b05740081c426]; pop rsp; pop rbp; ret;
0xffffffff812bcd77: mov al, [0x415b05740081c426]; pop rsp; pop rbp; ret;
0xffffffff812bcd7a: add dword ptr [rax], 0x415b0574; pop rsp; pop rbp; ret;
0xffffffff812bcd84: add [rbx+0x41], rbx; pop rsp; pop rbp; ret;
0xffffffff812bcda1: ret 0xd230;
0xffffffff812bcdf8: inc byte ptr [rax]; sub [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff812bcdfa: sub [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff812bce35: fadd st, dword ptr [rbx+0xa75fffe]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812bce38: push qword ptr [rbp+0xa]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812bd1d9: ret 0x4100;
0xffffffff812bda80: ret 0xb00;
0xffffffff812bdade: adc eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff812bdb22: ret 0xeb00;
0xffffffff812bdc13: ret 0xc380;
0xffffffff812bdc46: mov [rbx], rax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff812bdc47: mov [rbx], eax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff812bdcda: mov bh, 0x2f; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812bdd5b: shl dword ptr [rsi+0x415b002f], 1; pop rsp; pop rbp; ret;
0xffffffff812bddbd: mov dh, 0x2f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812beb14: ret 0x4400;
0xffffffff812becd7: ret 0xff88;
0xffffffff812bed5c: shr eax, 1; xor eax, 0x415b002f; pop rsp; pop r13; pop rbp; ret;
0xffffffff812bed5e: xor eax, 0x415b002f; pop rsp; pop r13; pop rbp; ret;
0xffffffff812bed5f: xor eax, 0x415b002f; pop rsp; pop r13; pop rbp; ret;
0xffffffff812bedb3: xor al, 0x2f; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812bef1e: mov sil, 0xee; or dword ptr [rcx+rcx*4-0x1a], 0x2fa506e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812bef1f: mov dh, 0xee; or dword ptr [rcx+rcx*4-0x1a], 0x2fa506e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812bef20: out dx, al; or dword ptr [rcx+rcx*4-0x1a], 0x2fa506e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812bef21: or dword ptr [rcx+rcx*4-0x1a], 0x2fa506e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812bf619: add rsp, 0x200; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812bf61a: add esp, 0x200; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812bf665: sub esp, ebp; call far fword ptr [rbx+0x5d];
0xffffffff812bfb18: fdiv st(7), st; xor eax, eax; add rsp, 0x300; pop rbx; pop rbp; ret;
0xffffffff812bfb1a: xor eax, eax; add rsp, 0x300; pop rbx; pop rbp; ret;
0xffffffff812bfb1c: add rsp, 0x300; pop rbx; pop rbp; ret;
0xffffffff812bfb1d: add esp, 0x300; pop rbx; pop rbp; ret;
0xffffffff812bfb7a: fdiv st(7), st; xor eax, eax; add rsp, 0x200; pop rbx; pop rbp; ret;
0xffffffff812bfb7c: xor eax, eax; add rsp, 0x200; pop rbx; pop rbp; ret;
0xffffffff812bfb7e: add rsp, 0x200; pop rbx; pop rbp; ret;
0xffffffff812bfb7f: add esp, 0x200; pop rbx; pop rbp; ret;
0xffffffff812bff9c: add rsp, 0x100; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812bff9d: add esp, 0x100; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812c0083: ret 0xa0eb;
0xffffffff812c03a7: ret 0x848b;
0xffffffff812c041b: ret 0xf389;
0xffffffff812c0467: ret 0xd155;
0xffffffff812c0513: xchg esp, edx; add [rax], eax; add [rcx], al; sete al; shl eax, 0xf; ret;
0xffffffff812c0617: ret 0x8b00;
0xffffffff812c073c: ret 0x707f;
0xffffffff812c0d96: push 0xffffffff89000001; sub dword ptr [rax+0x5b000001], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c0d99: add [rcx+0x1a883], cl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c0d9b: sub dword ptr [rax+0x5b000001], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c12e2: ret 0xdd69;
0xffffffff812c1302: ret 0x2a85;
0xffffffff812c1374: pop rsp; movsd [rdi], [rsi]; ret 0x4800;
0xffffffff812c13bf: adc [rbp-0x3f7cff3e], esp; add [rcx-0x3d5af3fb], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812c13c5: add [rcx-0x3d5af3fb], ecx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812c13ca: ret 0x5b00;
0xffffffff812c141d: push rsp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812c147b: ret 0x8d00;
0xffffffff812c1592: shr al, 0x88; or edx, [rax+rax+0x5a]; leave; ret;
0xffffffff812c1595: or edx, [rax+rax+0x5a]; leave; ret;
0xffffffff812c15e0: cmp dword ptr [rdi+0x1d8], 0xaf750100; leave; add eax, eax; ret;
0xffffffff812c15e3: add [rax], eax; add [rax], al; add [rbp-0x51], esi; leave; add eax, eax; ret;
0xffffffff812c15e5: add [rax], al; add [rbp-0x51], esi; leave; add eax, eax; ret;
0xffffffff812c15e7: add [rbp-0x51], esi; leave; add eax, eax; ret;
0xffffffff812c15e9: scasd [rdi]; leave; add eax, eax; ret;
0xffffffff812c15ea: leave; add eax, eax; ret;
0xffffffff812c1623: ret 0x84c3;
0xffffffff812c16d6: mov [rbx+0x1f8], ax; pop rax; mov rbx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16d7: mov [rbx+0x1f8], eax; pop rax; mov rbx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16da: add [rax], eax; add [rax+0x48], bl; mov ebx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16db: add [rax], al; pop rax; mov rbx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16dc: add [rax+0x48], bl; mov ebx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16dd: pop rax; mov rbx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16de: mov rbx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16df: mov ebx, [rbp-8]; pop rdx; leave; ret;
0xffffffff812c16e0: pop rbp; clc; pop rdx; leave; ret;
0xffffffff812c16e1: clc; pop rdx; leave; ret;
0xffffffff812c1a72: ret 0xc2c8;
0xffffffff812c1b03: ret 0x8328;
0xffffffff812c1b25: ret 0x1160;
0xffffffff812c1ba8: ret 0x7400;
0xffffffff812c1d7f: or al, [rcx+0xf]; xchg esp, eax; ret;
0xffffffff812c2dcd: ret 0xfd24;
0xffffffff812c2dce: ret 0xfd24;
0xffffffff812c2dd7: xchg esp, eax; ret 0x4900;
0xffffffff812c2dd8: ret 0x4900;
0xffffffff812c2df4: ret 0xc5c0;
0xffffffff812c2e01: xchg esp, eax; ret 0x4800;
0xffffffff812c2e0a: ret 0xc5b8;
0xffffffff812c2e15: ret 0x224;
0xffffffff812c3491: adc esp, eax; or dword ptr [rax-0x77], 0xefe4e8e5; fcos; pop rbp; ret;
0xffffffff812c4166: adc esp, eax; sub eax, 0xffd9e312; pop rbp; ret;
0xffffffff812c4176: ret 0x8321;
0xffffffff812c4232: ret 0x1180;
0xffffffff812c425f: ret 0x5d00;
0xffffffff812c4606: ret 0x3900;
0xffffffff812c4674: fdiv st(7), st; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c4780: ret 0x4103;
0xffffffff812c48ac: add rsp, 0x30; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812c48ad: add esp, 0x30; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff812c48e9: ret 0x8803;
0xffffffff812c4d9a: ret 0xf59a;
0xffffffff812c512a: ret 0x270;
0xffffffff812c53c5: ret 0x83f6;
0xffffffff812c5e83: ret 0xe900;
0xffffffff812c5ee2: ret 0xf701;
0xffffffff812c681e: ret 0x5474;
0xffffffff812c695a: ret 0x3fb8;
0xffffffff812c6b5c: add [rdi+rax-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812c6d7d: ret 0x3120;
0xffffffff812c6f25: dec dword ptr [rcx-0x3b7cb728]; cmp [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c7129: ret 0xda23;
0xffffffff812c7601: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c7621: xchg esp, eax; rol dword ptr [rcx+rcx-0x3f], 0x39; ret 0xf41;
0xffffffff812c7735: ret 0x5e8;
0xffffffff812c7b2b: ret 0x8500;
0xffffffff812c7c26: add [rax-0x77], cl; fucomip st, st(0); shl dword ptr [rbx+0x415b0053], 1; pop rsp; pop rbp; ret;
0xffffffff812c7c29: fucomip st, st(0); shl dword ptr [rbx+0x415b0053], 1; pop rsp; pop rbp; ret;
0xffffffff812c7c2b: shl dword ptr [rbx+0x415b0053], 1; pop rsp; pop rbp; ret;
0xffffffff812c7d1c: ret 0x4500;
0xffffffff812c7eae: ret 0xc700;
0xffffffff812c82ae: ret 0xe900;
0xffffffff812c83b3: mov [rdx+0x415bfffe], edi; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812c83b4: mov edx, 0x415bfffe; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812c8bfe: fsubrp st(0), st; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c8dcf: ret 0xc874;
0xffffffff812c913e: add [rax], eax; add [rsi+rdi-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812c9140: add [rsi+rdi-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812c921b: add [rax], eax; add [rbx+rdi-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812c921d: add [rbx+rdi-0x77], dh; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812c92f9: add [rax+rbx+0x48], dh; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c9329: mov dword ptr [rax-0x17ffffff], 0xffdb2fbd; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c932f: mov ebp, 0x48ffdb2f; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c95aa: add al, ch; sub eax, 0x415bffdb; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c95ad: sub eax, 0x415bffdb; pop rsp; pop r13; pop rbp; ret;
0xffffffff812c9629: mov esp, eax; mov byte ptr [rbx], 0; call qword ptr [0xffffffff81c27018];
0xffffffff812c9867: add [rbx], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812c9971: add rsp, 0x30; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c9972: add esp, 0x30; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c9991: add rsp, 0x30; mov eax, 0xfffffffb; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c9992: add esp, 0x30; mov eax, 0xfffffffb; pop rbx; pop r12; pop rbp; ret;
0xffffffff812c9c04: sbb bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ca1c0: mov esp, 0x48002e53; add esp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca27d: sub eax, 0x2e52fd; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca2c0: mov esp, 0x48002e52; add esp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca37d: sub eax, 0x2e51fd; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca3b9: ret 0x1d0a;
0xffffffff812ca3bd: sub eax, 0x2e51bd; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca3bf: mov ebp, 0x48002e51; add esp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca3fd: sub eax, 0x2e517d; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca48d: sub eax, 0x2e50ed; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca4cd: sub eax, 0x2e50ad; add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff812ca941: enter 0x8904, 3; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ca943: mov [rbx], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812cad86: ret 0xeb02;
0xffffffff812cafb3: sub [rbp+0x415b002e], edi; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812cafb4: mov ebp, 0x415b002e; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812cb292: ret 0x1fb8;
0xffffffff812cb33b: ret 0x8630;
0xffffffff812cb4ba: ret 0xf081;
0xffffffff812cbb3a: ret 0x5364;
0xffffffff812ccbaf: leave; add [rbx+0xb0ab], al; add [rcx], al; mov byte ptr [rbx+0xa8], 0; call qword ptr [0xffffffff81c27018];
0xffffffff812ccc78: ret 0xc900;
0xffffffff812ccebc: ret 0xde09;
0xffffffff812ccf51: ret 0xdde9;
0xffffffff812cd11e: ret 0xaba1;
0xffffffff812cd28a: push rbx; add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff812cd2ab: movsb [rdi], [rsi]; add rsp, 0x18; mov eax, 0xffffffed; pop rbx; pop rbp; ret;
0xffffffff812cd2ac: add rsp, 0x18; mov eax, 0xffffffed; pop rbx; pop rbp; ret;
0xffffffff812cd2ad: add esp, 0x18; mov eax, 0xffffffed; pop rbx; pop rbp; ret;
0xffffffff812cd345: leave; out dx, al; sub eax, 0x50b3; pop rbp; ret;
0xffffffff812cd3bd: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x7400187b; and bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812cd3c0: or dword ptr [rax-0x7d], 0x7400187b; and bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812cd3c7: and bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812cd4bc: and [rax+0x415b002e], bl; pop rsp; pop rbp; ret;
0xffffffff812cd4bd: cwde; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812cdd16: ret 0x280;
0xffffffff812cdd38: ret 0x968b;
0xffffffff812cddc1: ret 0xffdc;
0xffffffff812cdf25: ret 0x9008;
0xffffffff812cdf3a: lea ebp, [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812cdf3b: add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ce80e: ret 0xec01;
0xffffffff812ce80f: add esp, ebp; movzx eax, al; pop rbp; ret;
0xffffffff812cf03a: ret 0xffb6;
0xffffffff812cf124: fsubr st, dword ptr [rsi]; push rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812cf125: push rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812cf59e: shr al, cl; pop rsp; sub dl, [rbx]; pop rbx; pop rbp; ret;
0xffffffff812cf5a0: pop rsp; sub dl, [rbx]; pop rbx; pop rbp; ret;
0xffffffff812cfafa: pop rsp; pop r13; sete al; pop rbp; ret;
0xffffffff812cfbee: and [rbx+0x415b10e3], al; pop rsp; cmovne edx, eax; pop rbp; mov eax, edx; ret;
0xffffffff812cfbf1: adc [rbx+0x41], bl; pop rsp; cmovne edx, eax; pop rbp; mov eax, edx; ret;
0xffffffff812cfbf4: pop rsp; cmovne edx, eax; pop rbp; mov eax, edx; ret;
0xffffffff812cfd23: fldenv [rdx]; push rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812cfd25: push rbx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812cffe4: ret 0x7c75;
0xffffffff812d0513: push rbx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812d123a: ret 0x530d;
0xffffffff812d15f8: xor al, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d1605: ror byte ptr [rax-0x39], cl; mov dword ptr [rax-0x177e3d6b], 0xffd822be; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d1608: mov dword ptr [rax-0x177e3d6b], 0xffd822be; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d1609: adc byte ptr [rbp-0x41177e3e], 0x22; fdivr st, st(7); add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d160c: sub eax, 0xffd822be; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d160e: mov esi, 0x48ffd822; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d164b: sub eax, 0xffd8227f; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d183a: ret 0x5307;
0xffffffff812d244a: mov esp, eax; mov [rbp-0x68], rax; call qword ptr [0xffffffff81c27010];
0xffffffff812d29cc: adc dword ptr [rax-0x18], 0x6098d; pop rax; pop rdx; leave; ret;
0xffffffff812d29d0: or [rsi], eax; add [rax+0x5a], bl; leave; ret;
0xffffffff812d29d2: add [rax+0x5a], bl; leave; ret;
0xffffffff812d2f6a: or eax, 0x407f8166; fmul st, dword ptr [r15]; xchg esp, eax; ret;
0xffffffff812d2f6f: fmul st, dword ptr [r15]; xchg esp, eax; ret;
0xffffffff812d2f70: fmul st, dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff812d3008: xchg esp, eax; or dh, dh; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rdi+0x48], 0x89; ret;
0xffffffff812d30ba: adc cl, [rax]; fdivr st, st(7); leave; ret;
0xffffffff812d30bc: fdivr st, st(7); leave; ret;
0xffffffff812d30fa: ret 0xd805;
0xffffffff812d3573: mov edx, ebp; push rdx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d3603: push rdx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d3806: leave; or [rcx], dh; rol byte ptr [rcx+rcx*4+0xe], 0x44; mov [rdx], edx; ret;
0xffffffff812d3b4b: clc; add cl, [rdi]; xchg esp, eax; ret 0x8b44;
0xffffffff812d3b4c: add cl, [rdi]; xchg esp, eax; ret 0x8b44;
0xffffffff812d3b4e: xchg esp, eax; ret 0x8b44;
0xffffffff812d405b: ret 0x88ec;
0xffffffff812d40dd: ret 0x44ec;
0xffffffff812d4102: ret 0xa8ec;
0xffffffff812d41ba: ret 0x41ec;
0xffffffff812d41cf: ret 0x44ee;
0xffffffff812d46eb: mov eax, [0xc48348c031ffffe2]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d4af6: push rdx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812d4ff7: ret 0x81a3;
0xffffffff812d5087: ret 0x5dee;
0xffffffff812d5690: shl byte ptr [rax+rcx+0x48], 0x89; fucomip st, st(0); leave; push rdx; add [rbx+0x5d], bl; ret;
0xffffffff812d5692: or [rax-0x77], cl; fucomip st, st(0); leave; push rdx; add [rbx+0x5d], bl; ret;
0xffffffff812d5695: fucomip st, st(0); leave; push rdx; add [rbx+0x5d], bl; ret;
0xffffffff812d5697: leave; push rdx; add [rbx+0x5d], bl; ret;
0xffffffff812d5698: leave; push rdx; add [rbx+0x5d], bl; ret;
0xffffffff812d5d34: ret 0x4372;
0xffffffff812d5dc4: ret 0x5972;
0xffffffff812d64e6: add eax, 0x1040d; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d6903: ret 0xba00;
0xffffffff812d696c: mov esp, edi; push rbx; call qword ptr [0xffffffff81c27000];
0xffffffff812d6a05: mov r10, 0x41d0895b00000001; pop rsp; pop r13; pop rbp; ret;
0xffffffff812d6a45: rcr byte ptr [rbx+0x41], cl; pop rsp; mov eax, edx; pop r13; pop rbp; ret;
0xffffffff812d6a48: pop rsp; mov eax, edx; pop r13; pop rbp; ret;
0xffffffff812d6d14: add [rbp+0x6e850fc0], al; sbb [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d6d19: outsb dx, [rsi]; sbb [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d6d1a: sbb [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d6d7b: sub eax, 0xffda583f; xor eax, eax; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff812d6d81: xor eax, eax; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff812d72a7: ret 0x83e8;
0xffffffff812d72bb: ret 0x8fe8;
0xffffffff812d75b3: ret 0x77e8;
0xffffffff812d78f0: ret 0x5840;
0xffffffff812d7b19: ret 0x890e;
0xffffffff812d7b5a: mov [0x480975c085002e18], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d7b5c: add [rbp+0x480975c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d7b5d: add [rbp+0x480975c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d7bbf: mov al, [0xfffffb88e881c458]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d7bc2: sub eax, 0xfffffb88; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d7ce5: fist dword ptr [rsi], st; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d7fb2: adc al, 0x2e; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d7fb3: add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d820e: ret 0xd590;
0xffffffff812d82e5: ret 0x7407;
0xffffffff812d8323: ret 0xd5a8;
0xffffffff812d84eb: shl byte ptr [rbp-0x13], cl; leave; ret;
0xffffffff812d84ed: in eax, dx; leave; ret;
0xffffffff812d8518: inc ebx; leave; mov rax, 0xfffffffffffffff5; ret;
0xffffffff812d851a: leave; mov rax, 0xfffffffffffffff5; ret;
0xffffffff812d8581: add esp, edx; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d8883: mov dword ptr [rax+0x5a], 0x53e881c4; in al, 0x2d; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d8889: push rbx; in al, 0x2d; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d888a: in al, 0x2d; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812d8c7d: add rsp, 0x20; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d8c7e: add esp, 0x20; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff812d8d6a: cwde; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff812d8d6b: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff812d8d6d: add [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff812d8e11: ret 0x4d03;
0xffffffff812d8fa3: ret 0xbf30;
0xffffffff812d8faf: xchg esp, eax; fdivr st, st(7); pop rbp; ret;
0xffffffff812d91c6: or bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812d9200: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812d9319: mov [rax+0x10], rdx; add [rbx+0x48], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d931a: mov [rax+0x10], edx; add [rbx+0x48], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d931c: adc [rax+1], cl; push rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d931d: add [rbx+0x48], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d931e: add [rbx+0x48], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d931f: push rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9919: add ebx, [rbx+0x415b0005]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812d9961: dec dword ptr [rax-0x7b]; shl byte ptr [rbp-0x19], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9964: shl byte ptr [rbp-0x19], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9966: out 0x48, eax; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9a32: or cl, [rax-0x74b6001d]; mov esp, 0x9824; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a35: dec dword ptr [rcx-0x75]; mov esp, 0x9824; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a38: mov esp, 0x9824; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a39: and al, 0x98; add [rax], al; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a3a: cwde; add [rax], al; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a3b: add [rax], al; add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a3d: add al, ch; std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a3f: std; xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a40: xchg ebx, esp; call far fword ptr [rbx+0x41];
0xffffffff812d9a79: dec dword ptr [rax-0x7b]; shl byte ptr [rbp-0x21], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812d9a7c: shl byte ptr [rbp-0x21], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812da32d: add [rcx+rcx*4+0x6b], cl; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812da43a: ret 0x527b;
0xffffffff812da555: xchg esp, eax; and al, 0x90; add [rax], al; add [rcx+rcx*4+0x60], cl; adc [rax-0x77], cl; ret;
0xffffffff812db4f0: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812db581: inc dword ptr [rax+rax*8+0x415be174]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812db583: shl byte ptr [rcx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff812db6b3: mov r12b, 2; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812db6b4: mov ah, 2; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812db841: sub esi, [rbx+0x415b0002]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812dc417: ret 0x3074;
0xffffffff812dcf68: sar byte ptr [rax+7], cl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dcf72: or qword ptr [rbx+0x10], 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dcf73: or dword ptr [rbx+0x10], 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dcf74: adc [r9], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dcf75: adc [rcx], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd2b8: ret 0xb2f1;
0xffffffff812dd374: ret 0xf169;
0xffffffff812dd6c7: add [rbp-0x42], dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812dd7e3: xor eax, eax; mov qword ptr [rbx+0x3d0], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd7e5: mov qword ptr [rbx+0x3d0], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd7e6: mov dword ptr [rbx+0x3d0], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd872: ret 0x88a6;
0xffffffff812dd909: ret 0xf21c;
0xffffffff812dd9c3: add [rax], al; add [rbp-0x3db0f040], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd9c5: add [rbp-0x3db0f040], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd9c6: test eax, eax; cmovg eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dd9c8: cmovg eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812dddd8: add [rbp-0x3db0f040], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ddddb: cmovg eax, edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812dde57: test eax, 0xd231002d; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff812dde58: sub eax, 0x48d23100; add esp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff812dde5a: xor edx, edx; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff812ddf30: add [rcx-0x3b7cb728], cl; cmp [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ddf93: sbb [rax+0xf812ddf], ah; xchg esp, eax; ret 0xd089;
0xffffffff812de320: cmp eax, 0x415b0052; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff812deb93: ret 0xda7e;
0xffffffff812dece4: add rsp, 0x2c8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff812dece5: add esp, 0x2c8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff812df3e8: ret 0xf8d3;
0xffffffff812df6c3: sub esp, ebx; call far fword ptr [rbx+0x5d];
0xffffffff812df6e6: in eax, 0xe8; push rsp; sub esp, ebx; call far fword ptr [rbp-0x3d];
0xffffffff812df6e8: push rsp; sub esp, ebx; call far fword ptr [rbp-0x3d];
0xffffffff812df6e9: sub esp, ebx; call far fword ptr [rbp-0x3d];
0xffffffff812df75a: ret 0x2d73;
0xffffffff812dfdd0: mov byte ptr [rbx+0x158], 1; xor eax, eax; add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff812dfdd5: add [rcx], al; xor eax, eax; add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff812dfdd7: xor eax, eax; add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff812dfdd9: add rsp, 0x78; pop rbx; pop rbp; ret;
0xffffffff812dfdda: add esp, 0x78; pop rbx; pop rbp; ret;
0xffffffff812dfeac: xchg esp, eax; ret 0xf980;
0xffffffff812e00d0: ret 0x1200;
0xffffffff812e0455: dec dword ptr [rdi]; xchg esp, eax; ret 0xc975;
0xffffffff812e0457: xchg esp, eax; ret 0xc975;
0xffffffff812e0596: fdivr st, st(7); add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e0e19: add al, [rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e10b7: ret 0xd630;
0xffffffff812e11ab: sar dword ptr [rax], 0; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812e11ac: cmp [rax], al; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812e13cf: add [rax], al; add al, ch; sbb [rdi+0x415bffd9], ebp; pop rsp; pop rbp; ret;
0xffffffff812e13d1: add al, ch; sbb [rdi+0x415bffd9], ebp; pop rsp; pop rbp; ret;
0xffffffff812e13d3: sbb [rdi+0x415bffd9], ebp; pop rsp; pop rbp; ret;
0xffffffff812e144e: mov ds, [rax+0x2d]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812e14b1: sub ebx, [rax+0x2d]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812e1bb8: ret 0xef7f;
0xffffffff812e1f34: mov byte ptr [rcx+rcx*4-0x18], 0xf; xchg esp, eax; ret;
0xffffffff812e20d4: ret 0x36e8;
0xffffffff812e2c2f: mov [rax+0x28], rbx; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff812e2c30: mov [rax+0x28], ebx; add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff812e3f63: sub [rax-0x3fce0001], edi; leave; ret;
0xffffffff812e3f64: mov eax, 0xc031ffff; leave; ret;
0xffffffff812e4109: sub ebp, [rip+0x48d88900]; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e410a: sub eax, 0x48d88900; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e410b: add [rcx-0x3b7cb728], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812e410c: mov eax, ebx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e4417: ret 0xf77d;
0xffffffff812e44bf: ret 0xbaff;
0xffffffff812e45ac: and byte ptr [rax], 0xe8; pop rsp; shl dl, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff812e45ae: add al, ch; pop rsp; shl dl, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff812e45b0: pop rsp; shl dl, 1; dec dword ptr [rax-0x77]; ret;
0xffffffff812e47be: and eax, 0x415b002d; pop rsp; pop r13; pop rbp; ret;
0xffffffff812e520a: ret 0x1d1;
0xffffffff812e59ba: ret 0x1d6;
0xffffffff812e5b17: or [r9], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812e5b18: or [rcx], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812e5f7a: ret 0x1ef;
0xffffffff812e7053: or [rdi+0x14], eax; mov [rsi+0x10], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e7055: adc al, 0x48; mov [rsi+0x10], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e7056: mov [rsi+0x10], rdx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e7057: mov [rsi+0x10], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e7615: ret 0x5874;
0xffffffff812e8429: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc084;
0xffffffff812e8d3c: mov rax, rbx; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e8d3d: mov eax, ebx; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff812e8dcb: pushfq; add [rax], eax; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff812e8dcc: add [rax], eax; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff812e8e3a: mov qword ptr [rbx+0x30], 0; mov qword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e8e3b: mov dword ptr [rbx+0x30], 0; mov qword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e8e40: add [rax], al; mov qword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e8e42: mov qword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e8e43: mov dword ptr [rbx+0x38], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812e98bd: ret 0x59e;
0xffffffff812e9924: cmp dword ptr [rdi+4], 0x24ee1e8; add [rax+1], bh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff812e992c: add r8b, [rax]; mov eax, 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff812e992d: add al, [rax]; mov eax, 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff812e992e: add [rax+1], bh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff812e99f4: add [rcx-0x7a3fce3e], cl; ror byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b02c0], al; ret;
0xffffffff812e99f8: rol byte ptr [rbp-0x3f6bf02e], 0x48; add esp, 0x18; add eax, 2; pop rbx; pop rbp; ret;
0xffffffff812e99fa: ror byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b02c0], al; ret;
0xffffffff812e99fb: sete al; add rsp, 0x18; add eax, 2; pop rbx; pop rbp; ret;
0xffffffff812e99fc: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x5d5b02c0], al; ret;
0xffffffff812e99fe: add rsp, 0x18; add eax, 2; pop rbx; pop rbp; ret;
0xffffffff812e99ff: add esp, 0x18; add eax, 2; pop rbx; pop rbp; ret;
0xffffffff812e9a58: push rax; inc dword ptr [rax+0xb77fdfa]; leave; imul eax, 0x1388; sar eax, 1; ret;
0xffffffff812e9a59: inc dword ptr [rax+0xb77fdfa]; leave; imul eax, 0x1388; sar eax, 1; ret;
0xffffffff812e9a5f: leave; imul eax, 0x1388; sar eax, 1; ret;
0xffffffff812e9a70: cmp dword ptr [rdi+4], 0x24d95e8; add [rax+0x28488], bh; leave; ret;
0xffffffff812e9a75: add al, ch; xchg ebp, eax; add r8b, [r8]; mov eax, 0x28488; leave; ret;
0xffffffff812e9a77: xchg ebp, eax; add r8b, [r8]; mov eax, 0x28488; leave; ret;
0xffffffff812e9a78: add r8b, [r8]; mov eax, 0x28488; leave; ret;
0xffffffff812e9a79: add al, [rax]; mov eax, 0x28488; leave; ret;
0xffffffff812e9a7a: add [rax+0x28488], bh; leave; ret;
0xffffffff812e9a7b: mov eax, 0x28488; leave; ret;
0xffffffff812e9ac7: rol byte ptr [rbx+0x38801e0], 1; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e9aca: add [rax+0x48c03103], ecx; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e9acb: mov [rbx], al; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812e9b16: leave; add eax, 0xff8381b3; add eax, 0xc7481574; ret;
0xffffffff812e9ced: ret 0x98aa;
0xffffffff812e9f8a: ret 0xd860;
0xffffffff812ea092: push rcx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ea162: adc al, 0x25; sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop rbp; ret;
0xffffffff812ea163: and eax, 0x81c27018; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ea164: sbb [rax-0x3e], dh; or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop rbp; ret;
0xffffffff812ea167: or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop rbp; ret;
0xffffffff812ea1dd: adc [rcx+0x8883], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812ea1df: or dword ptr [rax+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff812ea312: mov esp, eax; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff812ea402: leave; cmp eax, 2; mov rdx, 0xffffffffffffffb9; mov eax, 0; cmovne rax, rdx; ret;
0xffffffff812ea415: ret 0xc9c3;
0xffffffff812ea4ef: movzx eax, byte ptr [rbp-1]; leave; and eax, 1; ret;
0xffffffff812ea4f3: leave; and eax, 1; ret;
0xffffffff812ea508: add al, [r8]; xor eax, eax; leave; ret;
0xffffffff812ea509: add al, [rax]; xor eax, eax; leave; ret;
0xffffffff812ea628: add [rax+1], bh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ea629: mov eax, 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812ea76a: add [rax-0x77], cl; xchg esp, eax; ret;
0xffffffff812ea7ad: ret 0x940;
0xffffffff812ead28: mov [0x89480001be71e881], eax; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812ead2c: mov esi, 0x89480001; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812eaf1a: xor dword ptr [rbp-0x7c], 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff812eb243: or al, 1; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812eb26f: or al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812eb27d: or al, 2; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812eb28b: or al, 3; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812ecfbb: add eax, 0x19f5fe8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812ed34c: xor [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff812edb88: ret 0x3f74;
0xffffffff812edf86: ret 0x4e8;
0xffffffff812ee27f: ret 0x8be8;
0xffffffff812ee45d: ret 0x88;
0xffffffff812ee796: add [rdi], cl; mov dh, 0x92; or [rax+rax], eax; add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812ee798: mov dh, 0x92; or [rax+rax], eax; add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812ee799: xchg edx, eax; or [rax+rax], eax; add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812ee79a: or [rax+rax], eax; add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812ee79b: add al, 0; add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812ee79d: add [rcx+0xf], al; xchg esp, eax; ret 0xea83;
0xffffffff812eea17: ret 0xd60;
0xffffffff812eea39: ret 0xd90;
0xffffffff812eea58: ret 0xa99;
0xffffffff812eecfd: ret 0xda00;
0xffffffff812eed78: ret 0xac1;
0xffffffff812eed9f: or eax, 0x89ffffff; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff812eefa4: push rcx; add [rbp+0x480775c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812eefa5: add [rbp+0x480775c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff812ef35a: ret 0x2c77;
0xffffffff812ef7da: add dh, [rbp+0x2c]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812f05ed: mov rdx, [rdx+0x28]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812f05ee: mov edx, [rdx+0x28]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812f0667: mov [rbx+0x18], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812f0668: mov [rbx+0x18], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812f084f: ret 0xa75;
0xffffffff812f0d4a: ret 0x1da;
0xffffffff812f14aa: enter 0xae0f, 0xf0; leave; ret;
0xffffffff812f14ab: mfence; leave; ret;
0xffffffff812f18a2: mov dword ptr [rbx], 1; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812f1a5e: mov [0x415b0574000001b0], eax; pop rsp; pop rbp; ret;
0xffffffff812f300f: add dh, al; push r8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812f3011: push r8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812f3012: push rax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff812f366a: ret 0xd8ac;
0xffffffff812f3b79: in al, 0x50; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff812f3f5e: xor r8, r8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812f538c: push qword ptr [rcx]; rcr byte ptr [rbx+0x41], cl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff812f53d2: ret 0xee80;
0xffffffff812f541f: pop rsp; pop rbp; and eax, 0xfffffff4; ret;
0xffffffff812f589f: ret 0xd8b4;
0xffffffff812f657a: ret 0xe1bc;
0xffffffff812f6c1a: ret 0x2c00;
0xffffffff812f6d09: ret 0x2b27;
0xffffffff812f6ec3: xchg esp, eax; ret 0x96eb;
0xffffffff812f6ec4: ret 0x96eb;
0xffffffff812f6f73: sbb eax, esp; sub al, [rax]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f6fc3: ret 0xd8f8;
0xffffffff812f6fe9: push qword ptr [rsi+2]; leave; ret;
0xffffffff812f6ffe: add [rbp+0x481175c0], al; mov edx, [rip+0xbf68e6]; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f7000: shl byte ptr [rbp+0x11], 0x48; mov edx, [rip+0xbf68e6]; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f7002: adc [rax-0x75], ecx; adc eax, 0xbf68e6; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f7003: mov rdx, [rip+0xbf68e6]; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f7004: mov edx, [rip+0xbf68e6]; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f7005: adc eax, 0xbf68e6; mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f700a: mov qword ptr [rdx+0x30], 0xffffffff812f6b70; leave; ret;
0xffffffff812f700b: mov dword ptr [rdx+0x30], 0x812f6b70; leave; ret;
0xffffffff812f700f: imul ebp, [rdi], 0xffffff81; leave; ret;
0xffffffff812f701a: add [rcx-0x221703bb], cl; adc [rax+rax], eax; mov eax, [rbp-4]; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f701f: fst qword ptr [rcx], st; add al, 0; mov eax, [rbp-4]; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7020: adc [rax+rax], eax; mov eax, [rbp-4]; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7021: add al, 0; mov eax, [rbp-4]; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7022: add [rbx-0x38b703bb], cl; add eax, 0xbf68bf; add [rax], al; add [rax], al; leave; ret;
0xffffffff812f7023: mov eax, [rbp-4]; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7025: cld; mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7026: mov qword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7027: mov dword ptr [rip+0xbf68bf], 0; leave; ret;
0xffffffff812f7028: add eax, 0xbf68bf; add [rax], al; add [rax], al; leave; ret;
0xffffffff812f702a: push 0xbf; add [rax], al; leave; ret;
0xffffffff812f716a: leave; add eax, [rax]; mov qword ptr [rbx+8], 0; pop rbx; pop rbp; ret;
0xffffffff812f71c5: sub al, [rax]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f77ec: mov eax, 1; mov [rbx+0x38], rdi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f77ef: add [rax], al; mov [rbx+0x38], rdi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f77f1: mov [rbx+0x38], rdi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f77f2: mov [rbx+0x38], edi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff812f7904: and [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff812f7b53: cmp [rcx-0x77], cl; or [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff812f7b56: or [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff812f7ef9: ret 0x75e0;
0xffffffff812f88d6: ret 0x22b9;
0xffffffff812f8e99: ret 0xe3c1;
0xffffffff812f9a0b: ret 0xfa89;
0xffffffff812f9a45: ret 0x3fb9;
0xffffffff812f9a66: ret 0x232b;
0xffffffff812f9a77: pop rbx; sub eax, [rax]; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812f9a78: sub eax, [rax]; mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff812f9e83: pop rsp; add [rax], al; add [rcx-0xa], al; ret;
0xffffffff812f9f8c: pop rsp; mov [rdi+0x9c], r10d; pop r13; pop r14; pop rbp; ret;
0xffffffff812f9fc1: pop rsp; add [rax], al; add bl, ch; xchg ebp, eax; ret;
0xffffffff812fa0ca: add [rax], al; add al, ch; add [r8], r8d; add rsp, 0x50; leave; ret;
0xffffffff812fa0cc: add al, ch; add [r8], r8d; add rsp, 0x50; leave; ret;
0xffffffff812fa0ce: add [r8], r8d; add rsp, 0x50; leave; ret;
0xffffffff812fa0cf: add [r8], r8d; add rsp, 0x50; leave; ret;
0xffffffff812fa0d0: add [rax], eax; add rsp, 0x50; leave; ret;
0xffffffff812fa0d2: add rsp, 0x50; leave; ret;
0xffffffff812fa0d3: add esp, 0x50; leave; ret;
0xffffffff812fa0d5: push rax; leave; ret;
0xffffffff812fa1aa: mov [rsi+8], rax; mov [rax], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fa1ab: mov [rsi+8], eax; mov [rax], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fa1ae: mov [rax], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fa1af: mov [rax], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fa1f2: ret 0x2453;
0xffffffff812fa3e7: ret 0x4703;
0xffffffff812fa457: ret 0x20b8;
0xffffffff812fa46b: ret 0xd129;
0xffffffff812fa593: ret 0x8d45;
0xffffffff812fa752: ret 0x808d;
0xffffffff812fa931: inc dword ptr [rax+rax*8+0x415b0574]; pop rsp; pop rbp; ret;
0xffffffff812fa956: ret 0xb0d0;
0xffffffff812faf8b: shl byte ptr [rbp+5], 0x31; leave; mov eax, ecx; ret;
0xffffffff812faf8f: leave; mov eax, ecx; ret;
0xffffffff812fb47d: sub eax, [rax]; mov byte ptr [rbx+0x43], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fb47f: mov byte ptr [rbx+0x43], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff812fb65b: ret 0x8b83;
0xffffffff812fb910: add ecx, [rdi]; xchg esp, eax; ret 0x8348;
0xffffffff812fbb34: ret 0x324;
0xffffffff812fbb88: leave; test eax, eax; sete al; ret;
0xffffffff812fbbe6: ret 0x3a7e;
0xffffffff812fbfcf: out 0x48, al; add esp, 8; mov eax, 0xd; pop rbx; pop rbp; ret;
0xffffffff812fbfd0: add rsp, 8; mov eax, 0xd; pop rbx; pop rbp; ret;
0xffffffff812fbfd1: add esp, 8; mov eax, 0xd; pop rbx; pop rbp; ret;
0xffffffff812fc093: inc dword ptr [rax+rax*8+0x415bd675]; pop rsp; pop rbp; ret;
0xffffffff812fc15a: ret 0x372;
0xffffffff812fca56: mov [r12+0x30], r8d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812fca57: mov [rsp+0x30], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812fca59: and al, 0x30; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff812fce60: add [rdi], cl; xchg esp, eax; ret 0x8141;
0xffffffff812fce62: xchg esp, eax; ret 0x8141;
0xffffffff812fd55b: ret 0x4bf;
0xffffffff812fd797: sar dword ptr [rax+rcx*8+0x31], 0xc0; leave; ret;
0xffffffff812fdc46: add rsp, 8; and eax, 0xfffffff1; pop rbx; pop rbp; add eax, 3; ret;
0xffffffff812fdc47: add esp, 8; and eax, 0xfffffff1; pop rbx; pop rbp; add eax, 3; ret;
0xffffffff812fe063: ret 0x2c7e;
0xffffffff812fe2ab: ret 0x904;
0xffffffff812fe371: ret 0x5b9;
0xffffffff812fe8b2: pop rsp; pop rax; add eax, 0x1740000; ret;
0xffffffff812febce: ret 0xd139;
0xffffffff812ff7bb: ret 0xabba;
0xffffffff812ffcda: ret 0x4814;
0xffffffff81300f1e: out 0xe8, eax; mov [rbx+0x415bffda], gs; pop rsp; pop rbp; ret;
0xffffffff81300f20: mov [rbx+0x415bffda], gs; pop rsp; pop rbp; ret;
0xffffffff813010bf: ret 0xd900;
0xffffffff81301115: ret 0xd920;
0xffffffff8130124b: or eax, 0x415b0050; pop rsp; pop r13; pop rbp; ret;
0xffffffff8130124c: push rax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813019fb: adc [rax-0x77], ecx; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81301bd7: mov rax, [rbp-0x48]; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81301bd8: mov eax, [rbp-0x48]; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff81301c64: fadd st, dword ptr [rip+0x415bffe1]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81301c65: add eax, 0x415bffe1; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81301e06: leave; test ecx, ecx; setg al; ret;
0xffffffff81301e08: leave; setg al; ret;
0xffffffff81301e69: ret 0x789;
0xffffffff81301eb4: ret 0xc229;
0xffffffff81301f2b: ret 0x512b;
0xffffffff81301f9b: ret 0x8d4a;
0xffffffff8130206f: ret 0x4f2b;
0xffffffff81302449: add [rax], al; add rsp, 0x28; leave; ret;
0xffffffff813026ba: ret 0x2a54;
0xffffffff813029f1: fucomip st, st(0); or esi, esi; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813029f3: or esi, esi; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff81302bc4: sub [rax], bh; xchg esp, eax; add [rax-0x39], cl; ret 0x63e8;
0xffffffff81302bc6: xchg esp, eax; add [rax-0x39], cl; ret 0x63e8;
0xffffffff81302bca: ret 0x63e8;
0xffffffff8130382a: mov ebx, 0x415bc031; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81303c6a: mov [r12+0xa], dl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81303c6b: mov [rsp+0xa], dl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81303c6d: and al, 0xa; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81304180: ret 0xc0ba;
0xffffffff813043c1: ret 0xf239;
0xffffffff8130498e: sub al, bpl; imul edx, esi, 0x4f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8130498f: sub al, ch; imul edx, esi, 0x4f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81304991: imul edx, esi, 0x4f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813049e1: sub al, bpl; sbb dh, dl; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813049e2: sub al, ch; sbb dh, dl; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813049e4: sbb dh, dl; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff81304d19: ret 0xc969;
0xffffffff81304daf: ret 0xcbe8;
0xffffffff81304dca: ret 0xb0e8;
0xffffffff81304f00: sub [rdi-0x2c], bh; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81304f60: mov esp, eax; mov rax, r12; pop rbx; pop r12; pop rbp; ret;
0xffffffff81304fda: or ch, al; and al, dl; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff81304fdc: and al, dl; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130526c: rol al, 0xf; test [rbx+0x48000000], bl; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130526f: test [rbx+0x48000000], bl; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130558e: mov [rdx], rax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8130558f: mov [rdx], eax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8130580d: ret 0xeb28;
0xffffffff81305daf: ret 0x9375;
0xffffffff81306e07: cmc; mov cl, 0x4f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81306e08: mov cl, 0x4f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813072a2: xchg esp, eax; ret 0xf083;
0xffffffff813072a3: ret 0xf083;
0xffffffff813073c3: add [rax], al; mov eax, 0xffffffe4; add rsp, 0x30; leave; ret;
0xffffffff813073c4: add [rax-0x1c], bh; add rsp, 0x30; leave; ret;
0xffffffff813073c5: mov eax, 0xffffffe4; add rsp, 0x30; leave; ret;
0xffffffff813073ca: add rsp, 0x30; leave; ret;
0xffffffff813073cb: add esp, 0x30; leave; ret;
0xffffffff8130746f: ret 0x438b;
0xffffffff81307831: ret 0xd9e8;
0xffffffff8130797a: add rsp, 0x68; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8130797b: add esp, 0x68; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81307ccb: inc dword ptr [rbp-0x7b]; dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff81307cce: dec dword ptr [rdi]; xchg esp, eax; ret 0x8548;
0xffffffff81307cd9: ret 0x1a74;
0xffffffff81307eb8: ret 0x4474;
0xffffffff81307efb: and dword ptr [rdx-0x7cb7002b], 0x415b30c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81307efc: mov [0x415b30c48348ffd5], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff8130820b: int1; popfq; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130820c: popfq; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130868a: push rdx; out 0x2a, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8130868b: out 0x2a, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81308800: or al, 0x2b; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81308892: ret 0x3da9;
0xffffffff813088c0: mov [0x415bc031000002e8], eax; pop rsp; pop rbp; ret;
0xffffffff813089f9: xor [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81308a52: ret 0x3dc9;
0xffffffff81308bf1: sbb al, ch; or [rax+0x415bffff], esp; pop rsp; pop r13; pop rbp; ret;
0xffffffff81308bf3: or [rax+0x415bffff], esp; pop rsp; pop r13; pop rbp; ret;
0xffffffff81308c6c: ret 0x3de1;
0xffffffff813090b0: xchg esp, eax; xchg [rbx+rax], ebp; add [rax], al; xor eax, eax; pop rbp; ret;
0xffffffff813091bd: leave; movsb [rdi], [rsi]; or dword ptr [rax-0x77], 0x51883; add [rax-0x39], cl; ret 0x3dfa;
0xffffffff8130920f: ret 0x3dbc;
0xffffffff8130924f: ret 0x3e07;
0xffffffff81309292: ret 0x3e14;
0xffffffff81309342: ret 0x3e21;
0xffffffff8130936c: ret 0x3e2d;
0xffffffff813093c7: ret 0x3df3;
0xffffffff813093fe: ret 0x3dfa;
0xffffffff8130942c: ret 0x3e39;
0xffffffff81309455: ret 0x3e45;
0xffffffff8130947e: ret 0x3e52;
0xffffffff813094a7: ret 0x3e5d;
0xffffffff813094ce: ret 0x5e4c;
0xffffffff8130952a: ret 0x3e6b;
0xffffffff8130957c: ret 0x3e7f;
0xffffffff813095a1: ret 0x3e91;
0xffffffff813095c6: ret 0x4c47;
0xffffffff813095eb: ret 0x3e9a;
0xffffffff8130980f: ret 0x3eb1;
0xffffffff81309873: ret 0x3ec5;
0xffffffff8130990b: ret 0x3ee6;
0xffffffff81309965: ret 0x3eec;
0xffffffff8130999c: ret 0x3ef1;
0xffffffff813099c5: ret 0x3ef6;
0xffffffff813099e7: ret 0x3efb;
0xffffffff81309a0e: ret 0x3f00;
0xffffffff81309a29: ret 0x3f0c;
0xffffffff8130a04d: ret 0x4088;
0xffffffff8130a133: ret 0x408e;
0xffffffff8130a1c5: ret 0xf0f;
0xffffffff8130a21a: ret 0x40af;
0xffffffff8130a7a3: shl byte ptr [rdx+rbx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8130a7a5: ficomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8130aa08: out dx, al; mov eax, 0xffffffea; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130aa09: mov eax, 0xffffffea; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130aa18: mov [rcx+r8*8+0xc8], rdx; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8130aa19: mov [rcx+rax*8+0xc8], edx; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8130aa1c: enter 0, 0; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8130aafd: fucomip st, st(0); sub eax, 0x48ffffff; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130aaff: sub eax, 0x48ffffff; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8130ab4a: ret 0x3c;
0xffffffff8130abe7: xchg esp, eax; ror eax, 0; add [rax], al; mov rax, [rdi+8]; add dword ptr [rax], 1; ret;
0xffffffff8130ad05: xlat [rbx]; mov edi, 0x415b002a; pop rsp; pop r13; pop rbp; ret;
0xffffffff8130ad5f: mov edi, 0x415b002a; pop rsp; pop r13; pop rbp; ret;
0xffffffff8130ad84: rol al, 0xf; xchg esp, eax; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff8130b045: ret 0x8d10;
0xffffffff8130b04d: ret 0xceb;
0xffffffff8130b448: xchg ebp, eax; shl edi, 0xc6; sar bh, 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8130b449: shl edi, 0xc6; sar bh, 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8130b44c: sar bh, 0; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8130b44d: inc dword ptr [rax]; add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8130b481: and byte ptr [rax], 0xe8; xchg [rcx-0x20], esp; dec dword ptr [rax-0x77]; ret;
0xffffffff8130b483: add al, ch; xchg [rcx-0x20], esp; dec dword ptr [rax-0x77]; ret;
0xffffffff8130b485: xchg [rcx-0x20], esp; dec dword ptr [rax-0x77]; ret;
0xffffffff8130cac6: shl byte ptr [rdi+rdx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8130e1db: ret 0x44a1;
0xffffffff8130e26a: ret 0x44d5;
0xffffffff8130e699: ret 0x7a76;
0xffffffff8130e6ff: ret 0x4552;
0xffffffff8130e7cd: cmp [rdi], cl; leave; ret;
0xffffffff8130e935: xor [rbp-0x4d], al; or dword ptr [rax-0x77], 0x48afe8c7; add al, [rax]; leave; ret;
0xffffffff8130e938: or dword ptr [rax-0x77], 0x48afe8c7; add al, [rax]; leave; ret;
0xffffffff8130e93d: scasd [rdi]; add al, [rax]; leave; ret;
0xffffffff8130e953: sub eax, 0xffd78100; leave; ret;
0xffffffff8130e97c: add [rbp+2], dh; leave; ret;
0xffffffff8130e9bb: ret 0x4530;
0xffffffff8130e9bc: xor [rbp-0x4d], al; or dword ptr [rax-0x39], 0xaf70c8c7; sub eax, 0x24824; leave; ret;
0xffffffff8130e9bf: or dword ptr [rax-0x39], 0xaf70c8c7; sub eax, 0x24824; leave; ret;
0xffffffff8130e9c5: scasd [rdi]; sub eax, 0x24824; leave; ret;
0xffffffff8130e9c6: sub eax, 0x24824; leave; ret;
0xffffffff8130e9c8: and al, 0x48; add al, [rax]; leave; ret;
0xffffffff8130e9db: sub eax, 0xffd78078; leave; ret;
0xffffffff8130e9de: adc bh, 0xff; leave; ret;
0xffffffff8130ecbb: ret 0xd990;
0xffffffff8130ee5d: ret 0xa82d;
0xffffffff8130ee85: ret 0x45d0;
0xffffffff8130eeb1: ret 0x45d6;
0xffffffff8130eedd: ret 0x45dc;
0xffffffff8130ef09: ret 0x45e2;
0xffffffff8130ef35: ret 0x45e8;
0xffffffff8130ef66: ret 0x45ef;
0xffffffff8130ef97: ret 0x45f6;
0xffffffff8130efc3: ret 0x45fd;
0xffffffff8130efec: ret 0x50aa;
0xffffffff8130f018: ret 0x4604;
0xffffffff8130f045: ret 0x50d2;
0xffffffff8130f073: ret 0x4610;
0xffffffff8130f08f: ret 0x4618;
0xffffffff8130f0bd: ret 0x461f;
0xffffffff8130f0e3: ret 0x4627;
0xffffffff8130f10f: ret 0x4633;
0xffffffff8130f135: ret 0x4644;
0xffffffff8130f187: ret 0x4635;
0xffffffff8130f1ad: ret 0x4648;
0xffffffff8130f843: mov [rbx], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130f876: out 0xe8, eax; test [rdi], ah; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130f878: test [rdi], ah; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130f8a8: mov ah, 0x27; add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8130f9e7: add [rax], al; mov [rbx+0x68], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130f9e9: mov [rbx+0x68], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130ff82: sub rdx, rcx; mov [rbx+0x10], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130ff83: sub edx, ecx; mov [rbx+0x10], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130ff85: mov [rbx+0x10], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8130ff86: mov [rbx+0x10], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813100df: sbb eax, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81310137: add rsi, rax; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff81310138: add esi, eax; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff813108d7: sub [rax-0x77], cl; xor [r8-0x77], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813108da: xor [r8-0x77], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813108db: xor [rax-0x77], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81310bec: xchg esp, eax; ret 0xc775;
0xffffffff81310bed: ret 0xc775;
0xffffffff81311247: ret 0xe383;
0xffffffff81311378: ret 0x7675;
0xffffffff813117b9: ret 0x3128;
0xffffffff81311d8a: or [rcx-0x3a], al; and al, 0x20; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81311d8e: and al, 0x20; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81311eb4: add esp, eax; call far fword ptr [rbx+0x5d];
0xffffffff81312ded: ret 0x2410;
0xffffffff81312fff: ret 0x2be8;
0xffffffff813130cd: add [rcx-0x73], cl; xchg esp, eax; and al, 0xa0; add [rax], al; add [rax+0x39], cl; ret 0x1174;
0xffffffff813130d0: xchg esp, eax; and al, 0xa0; add [rax], al; add [rax+0x39], cl; ret 0x1174;
0xffffffff81314138: ret 0xce40;
0xffffffff813141e9: ret 0x50e0;
0xffffffff8131423a: ret 0x50a0;
0xffffffff8131426b: ret 0x50b0;
0xffffffff813142aa: ret 0x50c8;
0xffffffff8131490a: mov [0x41e889445bffd971], al; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81314a8d: ret 0x5160;
0xffffffff81315360: add al, ch; sbb ah, [rdx+0x415b0029]; pop rsp; cdqe; pop rbp; ret;
0xffffffff81315362: sbb ah, [rdx+0x415b0029]; pop rsp; cdqe; pop rbp; ret;
0xffffffff813153da: ret 0xf5b0;
0xffffffff813153e6: add al, ch; xchg esp, eax; mov eax, [0x4198485c415b0029]; pop rbp; pop rbp; ret;
0xffffffff813153e8: xchg esp, eax; mov eax, [0x4198485c415b0029]; pop rbp; pop rbp; ret;
0xffffffff813153eb: add [rbx+0x41], bl; pop rsp; cdqe; pop r13; pop rbp; ret;
0xffffffff81315f28: cmp al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813160b3: add [rcx+0xb], al; xchg esp, eax; and al, 0x84; add [rax], al; add al, ch; iretd;
0xffffffff813160b6: xchg esp, eax; and al, 0x84; add [rax], al; add al, ch; iretd;
0xffffffff81316854: leave; sub [rax], eax; pop rbp; ret;
0xffffffff81316cdb: ret 0xb354;
0xffffffff81316db4: add [rbp+0x481875c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81316db6: shl byte ptr [rbp+0x18], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81316f9b: leave; add [rax], al; add al, [rax]; and edx, 0x20000; cmovne eax, ecx; ret;
0xffffffff813179f2: ret 0x28e8;
0xffffffff81318168: ret 0x5d74;
0xffffffff81318a9d: add rsp, 0x70; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81318a9e: add esp, 0x70; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81318b4d: ret 0x6a40;
0xffffffff813192c8: inc dword ptr [rbp+0x48ef74c0]; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff813192cc: out dx, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8131931d: mov edi, 0x890029d9; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81319493: ret 0xd6d5;
0xffffffff8131991c: ret 0xd998;
0xffffffff8131b3dd: ret 0xade8;
0xffffffff8131b8b8: leave; mov rax, rdi; ret;
0xffffffff8131b8e0: sub [rax], eax; leave; mov rax, rdi; ret;
0xffffffff8131b8e7: xor edi, edi; leave; mov rax, rdi; ret;
0xffffffff8131b8e9: leave; mov rax, rdi; ret;
0xffffffff8131b930: or al, [rbp+0x482c74d2]; lea eax, [rdi-0x10]; leave; ret;
0xffffffff8131b932: shl byte ptr [rsp+rbp+0x48], cl; lea eax, [rdi-0x10]; leave; ret;
0xffffffff8131b934: sub al, 0x48; lea eax, [rdi-0x10]; leave; ret;
0xffffffff8131b935: lea rax, [rdi-0x10]; leave; ret;
0xffffffff8131b936: lea eax, [rdi-0x10]; leave; ret;
0xffffffff8131b9a0: sub [rbp+0x480c74c0], al; add esp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8131c4a3: ret 0xd99c;
0xffffffff8131c85c: add rsp, 0x28; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8131c85d: add esp, 0x28; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8131c8fe: ror byte ptr [rdi], cl; xchg esp, eax; rol dh, 0x43; push 0x5c415b00; pop rbp; ret;
0xffffffff8131c900: xchg esp, eax; rol dh, 0x43; push 0x5c415b00; pop rbp; ret;
0xffffffff8131cabc: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8131cabd: xor eax, eax; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8131cabe: ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8131cb21: push 0xffffffffc4834800; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8131d07e: ret 0xd340;
0xffffffff8131d78a: dec dword ptr [rcx+0xfc085c3]; test [rbp-0x76fffff4], esp; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8131d790: test [rbp-0x76fffff4], esp; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8131d8ed: ret 0xa95e;
0xffffffff8131e6cd: ret 0x4312;
0xffffffff8131e7ae: add [rbx+0x41], bl; pop rsp; mov qword ptr [rip+0xbd01eb], 0; pop rbp; ret;
0xffffffff8131e7b1: pop rsp; mov qword ptr [rip+0xbd01eb], 0; pop rbp; ret;
0xffffffff8131e7e6: sub eax, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8131e934: ret 0x2775;
0xffffffff8131f1dd: ret 0x3b49;
0xffffffff81320004: ret 0xe9c4;
0xffffffff81320141: add [rbx+0x41], bl; pop rsp; mov qword ptr [rip+0xbcf890], 0; pop r13; pop rbp; ret;
0xffffffff81320144: pop rsp; mov qword ptr [rip+0xbcf890], 0; pop r13; pop rbp; ret;
0xffffffff81320a2d: ret 0xf9ec;
0xffffffff813213d6: ret 0xcb83;
0xffffffff813217e6: ret 0x40c6;
0xffffffff8132192a: ret 0xb983;
0xffffffff813219d2: and al, [rax]; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff81322562: add [rax], al; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81322c0c: adc [r9], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81322c0d: adc [rcx], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81322d0e: out dx, al; or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81322eab: ret 0x7040;
0xffffffff81323571: sub ebp, [rax]; add [rax], al; xor eax, eax; leave; ret;
0xffffffff813235f4: test al, 0x27; add [rax], al; xor eax, eax; leave; ret;
0xffffffff81323f41: ret 0xf175;
0xffffffff81324146: adc al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813245d9: xchg esp, eax; ret 0xc375;
0xffffffff81324f0e: push qword ptr [rdx+rbp*8+0x48]; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81324f4a: ret 0x4817;
0xffffffff81325539: xor dword ptr [rax], 0x12; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8132553a: xor [rdx], dl; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81325651: ret 0x49e8;
0xffffffff81325772: adc eax, 0x415b0029; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81325793: ret 0xd612;
0xffffffff81326486: ret 0x14e8;
0xffffffff81326616: ret 0x84e8;
0xffffffff813268a4: rol byte ptr [rbx-0x4711fc3e], 1; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813268a6: ret 0xee03;
0xffffffff8132698e: ret 0xfa90;
0xffffffff81326c38: mov edx, [rbp-0x2c]; mov [rbx+0x10], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81326c3b: mov [rbx+0x10], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81326c3c: push rbx; adc [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff81326c3d: adc [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff8132721a: ret 0xb4c;
0xffffffff813273a3: and [rbx+0x5389ec55], ecx; add al, 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff813273a4: mov edx, [rbp-0x14]; mov [rbx+4], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff813273a5: push rbp; in al, dx; mov [rbx+4], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff813273a6: in al, dx; mov [rbx+4], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff813273a7: mov [rbx+4], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff813273a8: push rbx; add al, 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff813273a9: add al, 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff813277de: mov [rax-0x77], cs; fucomip st, st(0); sbb [rdx+0x415b0002], eax; pop rsp; pop rbp; ret;
0xffffffff813277e1: fucomip st, st(0); sbb [rdx+0x415b0002], eax; pop rsp; pop rbp; ret;
0xffffffff813277e3: sbb [rdx+0x415b0002], eax; pop rsp; pop rbp; ret;
0xffffffff81327bec: ret 0xfee8;
0xffffffff81327d6a: ret 0x80e8;
0xffffffff81327db2: ret 0x38e8;
0xffffffff81328283: ret 0x7320;
0xffffffff8132860f: mov byte ptr [rbx+0x1140], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813287a1: mov [r12], rdx; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff813287a2: mov [rsp], edx; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff813287a3: adc al, 0x24; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff813287a4: and al, 0x48; add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff813288e4: mov eax, [rbp-0x24]; leave; ret;
0xffffffff81328916: ret 0x9f8;
0xffffffff81328ae7: inc dword ptr [rbp+0x480974c0]; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81328b1b: mov [r12+0x10], edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81328b1c: mov [rsp+0x10], edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81328b1e: and al, 0x10; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81328bca: ret 0xed70;
0xffffffff8132912d: ret 0xef60;
0xffffffff81329185: ret 0xee60;
0xffffffff813296c8: inc esi; and dword ptr [rbx+rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813296ca: and dword ptr [rbx+rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81329867: ret 0x6aed;
0xffffffff813299fa: mov ecx, 0x415bfff0; pop rsp; pop rbp; ret;
0xffffffff81329e3d: ret 0xa480;
0xffffffff81329f0d: or byte ptr [rbp], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8132a080: ret 0xfa94;
0xffffffff8132a2d6: ret 0xc0bf;
0xffffffff8132a914: ret 0x6fcc;
0xffffffff8132aa17: xor r8b, [r8]; add [rbp+0x480675c0], al; mov eax, [rbp-8]; leave; ret;
0xffffffff8132aa18: xor al, [rax]; add [rbp+0x480675c0], al; mov eax, [rbp-8]; leave; ret;
0xffffffff8132aa1a: add [rbp+0x480675c0], al; mov eax, [rbp-8]; leave; ret;
0xffffffff8132aa1c: shl byte ptr [rbp+6], 0x48; mov eax, [rbp-8]; leave; ret;
0xffffffff8132ad5f: mov edi, 0x415b0028; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8132ae03: ret 0x5541;
0xffffffff8132b6e4: ret 0x1d7c;
0xffffffff8132b817: in eax, 0x6a; add al, ch; sldt [r8]; pop rax; leave; ret;
0xffffffff8132b819: add al, ch; sldt [r8]; pop rax; leave; ret;
0xffffffff8132b81b: sldt [r8]; pop rax; leave; ret;
0xffffffff8132b8b8: fld st, tbyte ptr [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8132b8eb: ret 0xf3c0;
0xffffffff8132bb13: ret 0xf220;
0xffffffff8132bb2d: ret 0xf200;
0xffffffff8132c1c0: pop rsp; mov rax, r9; pop r13; pop r14; pop rbp; ret;
0xffffffff8132c249: or dword ptr [rax], 0xffffffa4; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8132c24a: or [rax+rax+0x415b0000], ah; pop rsp; pop rbp; ret;
0xffffffff8132c24b: movsb [rdi], [rsi]; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8132c281: ret 0xa378;
0xffffffff8132c2b1: ret 0xa3c0;
0xffffffff8132d7de: ret 0xe878;
0xffffffff8132d8a0: ret 0x7a20;
0xffffffff8132da20: ret 0x6755;
0xffffffff8132de7a: ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8132e5de: ret 0xf660;
0xffffffff8132e607: ret 0xf5a0;
0xffffffff8132e6b0: leave; cmp rax, 1; sbb eax, eax; not eax; and eax, 0xfffffff2; ret;
0xffffffff8132e86b: in al, 0xf; xchg esp, eax; ret 0xcc75;
0xffffffff8132e86d: xchg esp, eax; ret 0xcc75;
0xffffffff8132e86e: ret 0xcc75;
0xffffffff813305b4: sar byte ptr [rcx+0x5bffffff], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813306d9: ret 0x41e8;
0xffffffff813309aa: ret 0x8978;
0xffffffff81330c5c: shr al, cl; ficom st, word ptr [rip+0x415bffde]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81330c5e: ficom st, word ptr [rip+0x415bffde]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81330c5f: adc eax, 0x415bffde; pop rsp; pop r13; pop rbp; ret;
0xffffffff81330ce2: and ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81331090: ret 0x4a01;
0xffffffff813315fd: ret 0x7880;
0xffffffff813317b7: mov [0x415be0894c000036], al; pop rsp; pop rbp; ret;
0xffffffff8133182f: ret 0xb80c;
0xffffffff813322fa: mov [rbx+0x238], rsi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81332324: mov [rbx+0x238], rsi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81332325: mov [rbx+0x238], esi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81332376: ret 0x16f0;
0xffffffff813323d9: add esp, esp; in al, 0xff; pop rbx; pop r12; pop rbp; ret;
0xffffffff81332492: ret 0x2480;
0xffffffff81332b5d: ret 0x1f80;
0xffffffff81332f48: ret 0x77c3;
0xffffffff81332f96: ret 0x77d0;
0xffffffff81333029: ret 0x77ea;
0xffffffff813330d3: ret 0x77df;
0xffffffff813331b2: ret 0x77f8;
0xffffffff813335a8: ret 0x1f40;
0xffffffff81333697: add esp, 0x3641e881; sub [rax], al; pop rbx; pop rbp; ret;
0xffffffff8133371b: add [rcx-0x43177e3c], al; xor eax, 0x415b0028; pop rsp; pop rbp; ret;
0xffffffff8133371c: add esp, 0x35bce881; sub [rax], al; pop rbx; pop r12; pop rbp; ret;
0xffffffff81333721: xor eax, 0x415b0028; pop rsp; pop rbp; ret;
0xffffffff81333de0: add esp, 0x2ef8e881; sub [rax], al; pop rbx; pop rbp; ret;
0xffffffff813340ee: ret 0x40d0;
0xffffffff81334a98: ret 0x2510;
0xffffffff8133501d: add [rax], al; add [rcx], dh; ror byte ptr [rax-0x7f], 0x7e; sub al, ah; add esp, 0xc0940f81; ret;
0xffffffff8133501f: add [rcx], dh; ror byte ptr [rax-0x7f], 0x7e; sub al, ah; add esp, 0xc0940f81; ret;
0xffffffff81335021: ror byte ptr [rax-0x7f], 0x7e; sub al, ah; add esp, 0xc0940f81; ret;
0xffffffff81335025: sub al, ah; add esp, 0xc0940f81; ret;
0xffffffff81335027: add esp, 0xc0940f81; ret;
0xffffffff81335278: xchg esp, eax; out dx, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81335279: out dx, al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813352bc: mov al, 0xe3; add [rcx+rcx*4+0x63], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813354a7: fsubr st, st(0); adc esp, esp; add [rax-0x77], cl; ret;
0xffffffff813354a9: adc esp, esp; add [rax-0x77], cl; ret;
0xffffffff81335562: ret 0xe868;
0xffffffff81335c13: mov edx, 0xa0; add [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81335c16: add [rax], al; add [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81335d9b: ret 0xfaf0;
0xffffffff81335e4a: ret 0x26e3;
0xffffffff81335ebc: ret 0x5bb0;
0xffffffff81336255: ret 0x7791;
0xffffffff8133636e: or [rax], ebp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81336487: test esp, ebx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81336488: fsub st, qword ptr [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81336834: add al, 0x28; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813368a6: ret 0xea10;
0xffffffff813368ce: scasb [rdi]; mov [0xc48348ec458bffe4], eax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813368cf: mov [0xc48348ec458bffe4], eax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133695a: sar r15d, cl; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133695b: sar edi, cl; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff81336a17: add eax, 0x48ffffb5; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81336ab7: ret 0x3874;
0xffffffff81336b0c: ret 0x8300;
0xffffffff81336b7b: ret 0x82a0;
0xffffffff81336c0f: vaddsubpd ymm3, ymm1, [r11+0x41]; pop rsp; pop rbp; ret;
0xffffffff813377e5: mov cl, 0xc6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813379a8: mov [0x41e089445be43145], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff81337be0: fsub st(0), st; mov rsi, 0xc48348dc458b0026; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81337be2: mov rsi, 0xc48348dc458b0026; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81337ca1: mov esp, esp; call far fword ptr [rbp-0x3d];
0xffffffff813380dd: mov eax, [0xc48348e4458bffdd]; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81338248: add al, ch; and dh, [rsi+0x63894c00]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133824a: and dh, [rsi+0x63894c00]; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133824b: mov ah, 0x26; add [rcx+rcx*4+0x63], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133824c: add [rcx+rcx*4+0x63], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133824d: add [rcx+rcx*4+0x63], cl; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8133828d: shl byte ptr [rbp-0x26], 0x31; leave; mov rax, rcx; pop rbx; pop rbp; ret;
0xffffffff8133828f: fidiv st, dword ptr [rcx]; leave; mov rax, rcx; pop rbx; pop rbp; ret;
0xffffffff81338291: leave; mov rax, rcx; pop rbx; pop rbp; ret;
0xffffffff813384a8: add ecx, [rax-0x7b]; shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133853d: xchg esp, esp; call far fword ptr [rbx+0x44];
0xffffffff813386c3: imul esi, [rbx-0x72b7ffda], 0x8948e865; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81338936: adc [rcx+8], al; add cl, [rax-0x75]; add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133893a: add [rax], al; add cl, [rax-0x75]; add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133893c: add cl, [rax-0x75]; add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81338b1d: rol byte ptr [rdx], 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813392e6: ret 0x7d2a;
0xffffffff81339327: xchg esp, eax; ror byte ptr [rdi], 0xb6; rcr byte ptr [rbx+0x41], 0x5c; pop r13; pop rbp; ret;
0xffffffff813393cd: ret 0x7d42;
0xffffffff813396e9: ret 0xf8a0;
0xffffffff813399e8: ret 0x2872;
0xffffffff81339a01: mov ebx, 0x4800275b; add esp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81339aa9: ret 0x7f0b;
0xffffffff8133a5cb: ret 0xa174;
0xffffffff8133a82d: xor eax, [rcx-0x11318]; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133a8a9: leave; mov rax, rcx; ret;
0xffffffff8133ab40: xor [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133aca3: ret 0x3574;
0xffffffff8133acd8: ret 0xcb75;
0xffffffff8133ad22: ret 0xe074;
0xffffffff8133b042: ret 0xa450;
0xffffffff8133b076: ret 0xa490;
0xffffffff8133b0a3: ret 0xa4a0;
0xffffffff8133b0e6: ret 0xa4b0;
0xffffffff8133b36c: mov rax, [rbp-0x20]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8133b3ba: ret 0x4c6d;
0xffffffff8133b4ae: mov eax, 0x415b0027; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133b8a9: ret 0xb800;
0xffffffff8133ba29: pop rsp; in al, 0xff; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133ba4f: or dword ptr [rax-0x73], 0x37e81078; pop rsp; in al, 0xff; xor eax, eax; pop rbp; ret;
0xffffffff8133ba56: pop rsp; in al, 0xff; xor eax, eax; pop rbp; ret;
0xffffffff8133baa7: ret 0xf030;
0xffffffff8133bab8: xchg esp, eax; sub ebp, 0x98485dff; ret;
0xffffffff8133bb07: ret 0xf028;
0xffffffff8133be75: add [rbx+0x41], r11b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8133c21f: cmp eax, 0x48004c5e; mov eax, [rbp-0x10]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8133c48a: pop rbx; add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133c48b: add [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133c4d5: dec dword ptr [rax-0x7b]; shl byte ptr [rbp-0x13], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133c4d8: shl byte ptr [rbp-0x13], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8133c8bb: push qword ptr [rsi+0x63]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133c8f6: add rsp, 8; mov eax, 0xfffffffa; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133c8f7: add esp, 8; mov eax, 0xfffffffa; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133ca9d: pop rdi; push rbp; add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8133ca9e: push rbp; add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff8133cc32: dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133d10d: add [rax], al; add [rbp-0x7b], al; leave; cmove eax, edx; ret;
0xffffffff8133d10f: add [rbp-0x7b], al; leave; cmove eax, edx; ret;
0xffffffff8133d9b5: ret 0xbd10;
0xffffffff8133da05: ret 0x8da0;
0xffffffff8133da21: ret 0x8d80;
0xffffffff8133dcd4: dec dword ptr [rax-0x7b]; shl byte ptr [rbx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133dcd7: shl byte ptr [rbx+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133e202: dec dword ptr [rbx-0x3b7cb7fd]; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8133e281: ret 0xbb18;
0xffffffff8133e3d8: mov al, [0xd0458bffdd3e62e8]; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8133e4a5: mov al, [0xd0458bffdd3d95e8]; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8133e4ab: mov eax, [rbp-0x30]; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8133e4dd: ret 0x8214;
0xffffffff8133e5f1: ret 0xfd68;
0xffffffff8133e674: ret 0xfd83;
0xffffffff8133ea60: cmovs rax, rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133ea61: cmovs eax, edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8133ebea: or ah, [rdi]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8133ec7a: or [rdi], esp; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8133edde: or [rdi], ah; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8133eddf: or [rdi], ah; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8133f17f: and eax, 0x415bffe4; pop rsp; pop rbp; ret;
0xffffffff8133f3c6: in eax, 0xe8; xchg esp, eax; sub al, 0x4c; add [rbp-0x3d], bl; ret;
0xffffffff8133f3c8: xchg esp, eax; sub al, 0x4c; add [rbp-0x3d], bl; ret;
0xffffffff8133f5cd: add [rax], al; add [rax-0x75], cl; xchg eax, esp; add [rax], eax; add [rax-0x39], cl; ret 0xffef;
0xffffffff8133f5cf: add [rax-0x75], cl; xchg eax, esp; add [rax], eax; add [rax-0x39], cl; ret 0xffef;
0xffffffff8133f5d2: xchg eax, esp; add [rax], eax; add [rax-0x39], cl; ret 0xffef;
0xffffffff8133f7cf: fmul st, qword ptr [rdi]; xchg esp, eax; ret;
0xffffffff8134001a: ret 0x276c;
0xffffffff81340148: xchg esp, eax; imul esp, [rdi], 0; pop rbx; pop rbp; ret;
0xffffffff813407f5: out 0xe8, eax; xor eax, 0x8900278c; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813407f7: xor eax, 0x8900278c; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81340895: ret 0x780;
0xffffffff81340ad5: ret 0x7507;
0xffffffff81340ae9: mov [r15], esp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81340aea: mov [rdi], esp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81340af6: ret 0xfdf0;
0xffffffff8134154c: sub [rcx-0x3a], al; xchg esp, edx; add [rax], al; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff81341589: xchg esp, edx; add [rax], al; add [rax], al; call qword ptr [0xffffffff81c27018];
0xffffffff813423bd: ret 0x2578;
0xffffffff8134260b: mov dword ptr [rbx+0x19c], 2; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81342613: add [rax], al; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134275f: ret 0xfb60;
0xffffffff81342996: xchg esp, eax; add [rax], eax; add [rcx], al; mov byte ptr [rbx+0xd4], 0; call qword ptr [0xffffffff81c27018];
0xffffffff81342cd6: ret 0x2d60;
0xffffffff81342e10: ret 0x7403;
0xffffffff8134333c: add [rdi], cl; xchg esp, eax; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff8134333e: xchg esp, eax; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff81343443: ret 0x3380;
0xffffffff81343b4f: mov ebx, 0x19c; add cl, [rdi]; xchg esp, eax; ret 0x2044;
0xffffffff81343b52: add [rax], al; add cl, [rdi]; xchg esp, eax; ret 0x2044;
0xffffffff81343b54: add cl, [rdi]; xchg esp, eax; ret 0x2044;
0xffffffff81343b56: xchg esp, eax; ret 0x2044;
0xffffffff81343b57: ret 0x2044;
0xffffffff813442c0: sub ah, [rdi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813442d3: ret 0xfbf4;
0xffffffff81344447: xchg eax, esp; add [rax], al; add [rax-0x77], cl; adc bl, al; and byte ptr [rdi+0xcc], 0xaf; ret;
0xffffffff8134462b: leave; xchg r8, rax; add [rcx+rcx*4+0x3d], cl; ret 0x904d;
0xffffffff81344828: ret 0x8736;
0xffffffff81344d0a: ret 0x17;
0xffffffff81344ee5: or dword ptr [rcx-0x3d170bbb], 0x8bfffff7; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134580b: ret 0x48e8;
0xffffffff8134588b: ret 0x870d;
0xffffffff813458c2: ret 0x872f;
0xffffffff8134593d: ret 0x873d;
0xffffffff81345c4b: and ecx, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81345d6f: mov ebp, 0x48002736; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81345f3c: xor al, 0x27; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813461fc: xor ah, [rdi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813463b5: mov esp, [rbx+0x108]; mov qword ptr [rbx+0x108], 0; mov byte ptr [rbx+0xd4], 0; call qword ptr [0xffffffff81c27018];
0xffffffff813463e5: out 0xe8, eax; xor eax, 0x89fffffa; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813463e7: xor eax, 0x89fffffa; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81346498: dec dword ptr [rcx+rcx*4+0x63]; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81346d4d: ret 0xfe80;
0xffffffff81346d9d: or dword ptr [rcx-0x45170bbb], 0x8bfffec5; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81346da2: mov edx, 0x8bfffec5; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81346dee: shl byte ptr [rbp+0x1f], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81347022: adc [r8-0x7b], cl; shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81347023: adc [rax-0x7b], cl; shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8134708c: ret 0x26;
0xffffffff81347090: or al, [rcx-0x3a]; add al, 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81347093: add al, 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81347291: ret 0x6ed0;
0xffffffff81347308: ret 0x98b0;
0xffffffff813475b5: ret 0xfd50;
0xffffffff8134794a: ret 0xfc20;
0xffffffff81347c6b: ret 0xfea0;
0xffffffff81347d82: fucomip st, st(0); mov eax, 0x48ffdca4; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81347d84: mov eax, 0x48ffdca4; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81347d94: test al, 0xa4; fdiv st(7), st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81347d95: movsb [rdi], [rsi]; fdiv st(7), st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81347e5d: ret 0x6f10;
0xffffffff81347f28: fdiv st(7), st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81347f65: ret 0xb4b1;
0xffffffff813482f1: xchg esp, esi; add [rax], al; add [rdx-0x16], bh; test eax, eax; cmove eax, edx; ret;
0xffffffff81348427: movsd [rdi], [rsi]; cmp al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81348428: cmp al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813495d9: ret 0xfdc0;
0xffffffff81349b34: sete al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81349b35: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81349d4c: mov [rbx], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81349daf: mov ebx, 0x188; add [rbx+0xf], bl; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81349db0: mov [rcx], al; add [rax], al; add [rbx+0xf], bl; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81349db2: add [rax], al; add [rbx+0xf], bl; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81349db4: add [rbx+0xf], bl; xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81349db7: xchg esp, eax; rol byte ptr [rcx+0x5c], 0x5d; ret;
0xffffffff81349e28: inc dword ptr [rax+rax*8+0x415bd175]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81349e2c: rcr dword ptr [rbx+0x41], 1; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81349f3a: ret 0x4b80;
0xffffffff81349f3c: add [r11+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8134bc02: mov [0x4b63f4e8000001a4], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8134bc62: mov [0x4b6394e8000001a5], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8134bc68: xchg esp, eax; movsxd ecx, [rbx]; pop rbx; pop r12; pop rbp; ret;
0xffffffff8134bd6b: sbb [rax-0x7b], cl; shl byte ptr [rax+rcx+0x48], 0x89; fucomip st, st(0); xchg [rdx+0x4b], esp; add [rbx+0x5d], bl; ret;
0xffffffff8134bd6e: shl byte ptr [rax+rcx+0x48], 0x89; fucomip st, st(0); xchg [rdx+0x4b], esp; add [rbx+0x5d], bl; ret;
0xffffffff8134bd70: or [rax-0x77], cl; fucomip st, st(0); xchg [rdx+0x4b], esp; add [rbx+0x5d], bl; ret;
0xffffffff8134bd73: fucomip st, st(0); xchg [rdx+0x4b], esp; add [rbx+0x5d], bl; ret;
0xffffffff8134bd75: xchg [rdx+0x4b], esp; add [rbx+0x5d], bl; ret;
0xffffffff8134bde4: sbb [rdx+0x4b], ah; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8134c2d6: shl byte ptr [rsp+rdx*2-0x75], 0x8b; xchg esp, eax; add [rax], eax; add [rax-0x77], cl; ret 0xf631;
0xffffffff8134c2db: xchg esp, eax; add [rax], eax; add [rax-0x77], cl; ret 0xf631;
0xffffffff8134c43d: sub rax, [rbx+0x1a8]; sar rax, 3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134c43e: sub eax, [rbx+0x1a8]; sar rax, 3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134c442: add [rax], al; sar rax, 3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134c444: sar rax, 3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134c445: sar eax, 3; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134cb5b: ret 0xde73;
0xffffffff8134cdaa: ret 0xcb39;
0xffffffff8134cfee: ret 0x5274;
0xffffffff8134d148: xchg esp, eax; and al, 0xa8; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff8134d4df: movzx eax, byte ptr [rbp-9]; add rsp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff8134de67: ret 0x35e9;
0xffffffff8134e7b4: ret 0xff40;
0xffffffff8134eac0: sbb al, 0x82; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8134eac2: add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8134ec57: cmpsd [rsi], [rdi]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8134eefb: ret 0xec20;
0xffffffff8134f32e: ret 0x9b48;
0xffffffff8134f695: dec dword ptr [rax-0x68]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134f696: cdqe; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134f697: cwde; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8134fd2f: xchg esi, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8135035b: add [rax-0x7d], cl; in al, dx; or [rcx-0x67172bb3], cl; adc esp, ebx; dec dword ptr [rax-0x77]; ret;
0xffffffff8135035e: in al, dx; or [rcx-0x67172bb3], cl; adc esp, ebx; dec dword ptr [rax-0x77]; ret;
0xffffffff8135035f: or [rcx-0x67172bb3], cl; adc esp, ebx; dec dword ptr [rax-0x77]; ret;
0xffffffff81350364: cwde; adc esp, ebx; dec dword ptr [rax-0x77]; ret;
0xffffffff81350365: adc esp, ebx; dec dword ptr [rax-0x77]; ret;
0xffffffff81350697: ret 0xee9;
0xffffffff81350a1e: ret 0x90eb;
0xffffffff81350bd2: ret 0x2627;
0xffffffff81350f3a: ret 0x4b10;
0xffffffff81350ff2: ret 0x10e9;
0xffffffff8135124f: ret 0xefc1;
0xffffffff81351570: or eax, 0xe8e7894c; xchg [rdx], ecx; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81351573: out 0xe8, eax; xchg [rdx], ecx; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81351575: xchg [rdx], ecx; add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81351791: ret 0x17c0;
0xffffffff81351821: add [rcx-0x7d], al; add al, 0x24; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81351822: add [rcx-0x7d], al; add al, 0x24; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81351825: add al, 0x24; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81351d4a: ret 0xdf89;
0xffffffff813522ed: sub esp, edx; call far fword ptr [rbx+0x41];
0xffffffff813527b5: ret 0x2074;
0xffffffff81352e04: ret 0x8ef0;
0xffffffff81352e9b: ret 0x8f68;
0xffffffff81352f77: ret 0xfe20;
0xffffffff813532dd: ret 0x8f3e;
0xffffffff81353499: dec dword ptr [rcx+rcx*4-0x20]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8135354a: ret 0x9048;
0xffffffff813537c4: cld; add [rdi], ecx; xchg esp, eax; ret 0xd189;
0xffffffff813537c5: add [rdi], ecx; xchg esp, eax; ret 0xd189;
0xffffffff813537da: mov [rbx+0x11c], dl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81354120: rol byte ptr [rbx-0x6af0fb06], 0xc0; add rsp, 0x28; and eax, ecx; pop rbx; pop rbp; ret;
0xffffffff81354124: setne al; add rsp, 0x28; and eax, ecx; pop rbx; pop rbp; ret;
0xffffffff81354127: add rsp, 0x28; and eax, ecx; pop rbx; pop rbp; ret;
0xffffffff81354128: add esp, 0x28; and eax, ecx; pop rbx; pop rbp; ret;
0xffffffff8135470b: ret 0x3f20;
0xffffffff81355451: add [rax], al; add bl, ch; mov edx, 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff81355453: add bl, ch; mov edx, 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff81355455: mov edx, 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff8135549a: add [rax], al; add [rdi], cl; sahf; sar dword ptr [rip+0x2001], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff8135549c: add [rdi], cl; sahf; sar dword ptr [rip+0x2001], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff8135549e: sahf; sar dword ptr [rip+0x2001], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff8135549f: sar dword ptr [rip+0x2001], 0xf; xchg esp, eax; ret 0xd184;
0xffffffff813554a2: and [rax], al; add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff813554a4: add [rdi], cl; xchg esp, eax; ret 0xd184;
0xffffffff813554a6: xchg esp, eax; ret 0xd184;
0xffffffff813554b0: add [rbx+0x41], bl; pop rsp; setne al; pop rbp; movzx eax, al; ret;
0xffffffff813554b3: pop rsp; setne al; pop rbp; movzx eax, al; ret;
0xffffffff81355fef: out 0xe8, al; cmp esi, [rsi]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81355ff1: cmp esi, [rsi]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81355ff2: xor al, 0x26; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81356e86: xchg [rcx+rax], esp; add [rax], al; pop rbp; ret;
0xffffffff8135739f: ret 0xfad1;
0xffffffff81357535: add byte ptr [rcx], 0; add [rax+0x75], al; rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff81357536: add [rax], eax; add [rax+0x75], al; rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff81357538: add [rax+0x75], al; rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff81357c21: add al, ch; imul esp, 0x415bffe9; pop rsp; pop r13; pop rbp; ret;
0xffffffff81357c23: imul esp, 0x415bffe9; pop rsp; pop r13; pop rbp; ret;
0xffffffff81358170: ret 0x274;
0xffffffff81358182: ret 0x7374;
0xffffffff81358314: mov al, 0x35; sub eax, 0xffffa3d4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81358316: sub eax, 0xffffa3d4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8135832c: ret 0x8fc0;
0xffffffff81358330: sub eax, 0xfffd9cea; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81358350: push r12; mov r12, rdx; push rbx; sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358351: push rsp; mov r12, rdx; push rbx; sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358352: mov r12, rdx; push rbx; sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358353: mov esp, edx; push rbx; sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358355: push rbx; sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358356: sub rsp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff81358357: sub esp, 8; mov [rbp-0x30], rcx; call qword ptr [0xffffffff81c27000];
0xffffffff813584e9: ret 0x7530;
0xffffffff813586a0: ret 0x93ca;
0xffffffff8135875d: ret 0x93fd;
0xffffffff813587a3: ret 0x93f3;
0xffffffff813587e9: ret 0x93d3;
0xffffffff81358875: ret 0x93dd;
0xffffffff81358954: ret 0x2072;
0xffffffff81358974: ret 0x2573;
0xffffffff81358999: ret 0xdb72;
0xffffffff81358a2b: ret 0xb948;
0xffffffff81358c20: add [rbx+0x41], bl; pop rsp; mov eax, r13d; pop r13; pop rbp; ret;
0xffffffff81358ddf: or byte ptr [rax-0x18000000], 0x17; xchg edx, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81358de6: xchg edx, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81358ed0: add [rdi], ecx; xchg esp, eax; rol byte ptr [rcx], 0xc0; pop rbp; ret;
0xffffffff81358ed2: xchg esp, eax; rol byte ptr [rcx], 0xc0; pop rbp; ret;
0xffffffff81358f81: mov edi, [rbx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81358fe6: ret 0xb0f0;
0xffffffff81359017: ret 0x8a70;
0xffffffff8135902b: ret 0x8f90;
0xffffffff8135906f: sub eax, 0x25dc6b; mov eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81359071: imul ebx, esp, 0x25; add [rcx+0x5d8b48d8], cl; clc; leave; ret;
0xffffffff81359072: fsub st, qword ptr [rip+0x48d88900]; mov ebx, [rbp-8]; leave; ret;
0xffffffff81359073: and eax, 0x48d88900; mov ebx, [rbp-8]; leave; ret;
0xffffffff81359074: add [rcx+0x5d8b48d8], cl; clc; leave; ret;
0xffffffff81359120: xor [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813597ac: ret 0x9468;
0xffffffff81359edc: ret 0x947d;
0xffffffff8135a14f: ret 0xbbe8;
0xffffffff8135ac31: mov cl, 0xe9; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135ac42: movsxd rbp, ecx; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135ac43: movsxd ebp, ecx; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135b11e: mov ebx, 0x415b0025; pop rsp; pop r13; pop rbp; ret;
0xffffffff8135b654: ret 0x9850;
0xffffffff8135b9fd: mov dl, 0x25; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8135bbd3: ret 0x578d;
0xffffffff8135c472: ret 0x9928;
0xffffffff8135cb7a: ret 0xff5a;
0xffffffff8135ce72: ret 0x9d44;
0xffffffff8135d1b7: shl byte ptr [rbp+rdx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8135d224: add [rax+rax*8+0x415b0975], al; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8135d2a6: ret 0xfe40;
0xffffffff8135d4e3: ret 0x982f;
0xffffffff8135d54e: fidivr st, word ptr [rsi+0x415b0025]; pop rsp; pop rbp; ret;
0xffffffff8135d54f: mov esi, 0x415b0025; pop rsp; pop rbp; ret;
0xffffffff8135d892: ret 0x6f35;
0xffffffff8135d8f2: ret 0x22ab;
0xffffffff8135db33: ret 0x9ab0;
0xffffffff8135dbab: ret 0xb39a;
0xffffffff8135dd82: ret 0x9ad8;
0xffffffff8135ddb2: ret 0x9ade;
0xffffffff8135dde2: ret 0x9ae5;
0xffffffff8135e02c: add [rsi-0x77], esp; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135e126: inc dword ptr [rdx+rdx*8+0x415ba875]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8135e460: fdivp st(7), st; leave; ret;
0xffffffff8135e464: leave; mov rax, 0xffffffffffffffea; ret;
0xffffffff8135e4e2: mov edx, 0x48ffde17; cwde; leave; ret;
0xffffffff8135e4e4: fdivp st(7), st; cdqe; leave; ret;
0xffffffff8135e560: and al, 0xb0; fisttp word ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135e561: and al, 0xb0; fisttp word ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135e563: fisttp word ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8135eb36: shl byte ptr [rbp+0xe], 0x48; mov dword ptr [rbx], 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8135eb39: mov qword ptr [rbx], 0xffffffffffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8135eb3a: mov dword ptr [rbx], 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8135eb5f: setne al; add rsp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff8135ec1d: add rsp, 0x50; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8135ec1e: add esp, 0x50; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8135ed77: or dword ptr [rcx+0x30e8fc45], 0x8bfffd72; cld; leave; ret;
0xffffffff8135f488: shl byte ptr [rdi+rdx*8+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8135f6a8: ret 0x3475;
0xffffffff8135ffc6: test byte ptr [rax], 0xb9; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813607ea: test [rdx+0x48000000], dh; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813609bd: ret 0xaae2;
0xffffffff813609ee: ret 0xab1d;
0xffffffff81360a0b: ret 0xab13;
0xffffffff81360ac3: ret 0x2a1b;
0xffffffff81360c09: ret 0x7cb5;
0xffffffff81360c42: ret 0xab29;
0xffffffff81360d1c: ret 0xab31;
0xffffffff81360e51: ret 0xab37;
0xffffffff81360f8e: ret 0x96e0;
0xffffffff81360fbc: ret 0xab43;
0xffffffff81360fe1: ret 0xab77;
0xffffffff8136100d: ret 0xab66;
0xffffffff81361036: ret 0xab54;
0xffffffff813610e5: ret 0xab97;
0xffffffff81361107: ret 0xabc1;
0xffffffff81361125: ret 0xab80;
0xffffffff813611ee: ret 0xabbd;
0xffffffff81361219: ret 0xabc7;
0xffffffff81361261: ret 0xaba4;
0xffffffff813612ae: ret 0xabb2;
0xffffffff8136190e: ret 0x9b70;
0xffffffff8136218f: out 0xe8, eax; imul edi, esi, 0x49; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81362191: imul edi, esi, 0x49; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8136229a: ret 0xad70;
0xffffffff81362367: ret 0x2080;
0xffffffff813623a7: ret 0x3350;
0xffffffff813623d7: ret 0x2400;
0xffffffff81362e2a: ret 0x2566;
0xffffffff81362fe7: pop rsp; cmovne eax, edx; pop r13; pop r14; pop rbp; ret;
0xffffffff8136332d: ret 0xdc8;
0xffffffff81363466: ret 0xadaf;
0xffffffff81363cc9: xchg esp, eax; add [rax], al; add [rbx+0x2f487], cl; add [rdi], cl; scasd [rdi]; ret 0x8389;
0xffffffff81363cce: xchg esp, esi; add al, [rax]; add [rdi], cl; scasd [rdi]; ret 0x8389;
0xffffffff81364034: ret 0x143c;
0xffffffff81364307: ret 0xb320;
0xffffffff81364610: ret 0x5674;
0xffffffff81364630: ret 0x890c;
0xffffffff81364936: ret 0x7f;
0xffffffff81364e60: ret 0x880a;
0xffffffff813652cc: ret 0xaf2e;
0xffffffff81365353: ret 0x944;
0xffffffff81365645: ret 0xb388;
0xffffffff813658f5: mov [rbx+2], ax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff813658f6: mov [rbx+2], eax; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81365ae5: ret 0xaf61;
0xffffffff81365b3c: scasd [rdi]; sub eax, 0xffffafcd; pop rdx; leave; ret;
0xffffffff81365b3d: sub eax, 0xffffafcd; pop rdx; leave; ret;
0xffffffff81365b58: scasd [rdi]; sub eax, 0xffffafb1; pop rax; leave; ret;
0xffffffff81365b59: sub eax, 0xffffafb1; pop rax; leave; ret;
0xffffffff81365ced: ret 0xaf6b;
0xffffffff81365dd2: ret 0xaf84;
0xffffffff81365f38: ret 0xafa1;
0xffffffff813666ca: ret 0xf29;
0xffffffff813669b0: ret 0xaffb;
0xffffffff81366b96: ret 0x36e9;
0xffffffff81366c0c: ret 0x1a72;
0xffffffff81366c1f: ret 0xb052;
0xffffffff81366ec5: ret 0x1b73;
0xffffffff813673d5: ret 0x6d73;
0xffffffff81367956: ret 0xb2be;
0xffffffff813679d8: ret 0xb0be;
0xffffffff81367a67: ret 0xb1be;
0xffffffff81367b2b: add [rax], al; add [rdi], cl; xchg esp, eax; rol byte ptr [rcx+0xf], 0x95; ret;
0xffffffff81367b2d: add [rdi], cl; xchg esp, eax; rol byte ptr [rcx+0xf], 0x95; ret;
0xffffffff81367b2f: xchg esp, eax; rol byte ptr [rcx+0xf], 0x95; ret;
0xffffffff813681ab: ret 0xfae9;
0xffffffff81368b5d: ret 0x291a;
0xffffffff81368cda: ret 0x9b90;
0xffffffff813690bb: xchg esp, eax; ror byte ptr [rbp-0x473c3ffc], 7; add [rax], al; add bl, al; mov eax, 3; ret;
0xffffffff81369763: add [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81369867: add [rax], al; add [rbp-0x3dbbf040], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81369869: add [rbp-0x3dbbf040], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8136986a: test eax, eax; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813699b2: add [rax], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81369a09: test [rcx], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81369a15: add rsp, 8; mov eax, 0xffffffa1; pop rbx; pop r12; pop rbp; ret;
0xffffffff81369a16: add esp, 8; mov eax, 0xffffffa1; pop rbx; pop r12; pop rbp; ret;
0xffffffff81369f7d: inc dword ptr [rbx+0x317401fa]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81369f7f: cli; add [rcx+rsi+0x48], esi; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81369f80: add [rcx+rsi+0x48], esi; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81369fa7: sete al; add rsp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff81369faa: add rsp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff81369fab: add esp, 8; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff8136a3bb: ret 0xc700;
0xffffffff8136a446: ret 0x8bd;
0xffffffff8136a530: xchg [rdx+0x66000003], esp; shr eax, 0xb; and eax, 1; ret;
0xffffffff8136a5f7: add dh, al; add eax, 0xb85b11; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8136a5f9: add eax, 0xb85b11; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8136a5fb: pop rbx; mov eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8136a5fc: mov eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8136a6f6: sbb esp, ebp; inc dword ptr [rax+rax*8-0x7cb7ea8b]; ret;
0xffffffff8136a706: push qword ptr [rbp-0x2f]; add rsp, 0x38; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8136a70e: rcr byte ptr [rbx+0x5d], 0xc3; mov rax, [rbx+0x10]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8136a712: mov rax, [rbx+0x10]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8136a713: mov eax, [rbx+0x10]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8136a85d: cmp ecx, esi; dec dword ptr [rdi]; or ecx, [rax-0x75]; clc; leave; ret;
0xffffffff8136a85f: dec dword ptr [rdi]; or ecx, [rax-0x75]; clc; leave; ret;
0xffffffff8136a861: or ecx, [rax-0x75]; clc; leave; ret;
0xffffffff8136aa31: ret 0xfa39;
0xffffffff8136ad3a: ret 0x4972;
0xffffffff8136b017: ret 0xcf77;
0xffffffff8136b116: ret 0x4788;
0xffffffff8136b2d8: add [rax-0x16], bh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8136b2d9: mov eax, 0xffffffea; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8136b789: push 0x415b0049; pop rsp; pop r13; pop rbp; ret;
0xffffffff8136c94c: ret 0x7bb6;
0xffffffff8136cd5f: ret 0xcaf0;
0xffffffff8136d1ff: ret 0xbafc;
0xffffffff8136d36b: ret 0xbb12;
0xffffffff8136d641: ret 0xd098;
0xffffffff8136d654: ret 0xd0e0;
0xffffffff8136d7e7: ret 0xbb99;
0xffffffff8136d928: ret 0x4172;
0xffffffff8136d98c: ret 0xbab3;
0xffffffff8136dae1: ret 0xbb23;
0xffffffff8136e0a8: sbb [rbx+0x41], bl; pop rsp; mov eax, r9d; pop r13; pop rbp; ret;
0xffffffff8136e0ab: pop rsp; mov eax, r9d; pop r13; pop rbp; ret;
0xffffffff8136e485: ret 0x1ea0;
0xffffffff8136e4a8: pop rsp; add eax, 0x83480000; ret 0x8b0c;
0xffffffff8136e646: ret 0xd2a8;
0xffffffff8136e6f1: ret 0x20;
0xffffffff8136e713: inc dword ptr [rcx-0x75]; xchg esp, eax; and al, 0x74; add eax, [rax]; add [rcx-0x77], al; ret;
0xffffffff8136e716: xchg esp, eax; and al, 0x74; add eax, [rax]; add [rcx-0x77], al; ret;
0xffffffff8136e9e9: ret 0xd278;
0xffffffff8136eaec: and eax, 0xf; cmp eax, 3; sete dl; leave; mov eax, edx; ret;
0xffffffff8136eaef: cmp eax, 3; sete dl; leave; mov eax, edx; ret;
0xffffffff8136eaf0: clc; add ecx, [rdi]; xchg esp, eax; ret 0x89c9;
0xffffffff8136eaf1: add ecx, [rdi]; xchg esp, eax; ret 0x89c9;
0xffffffff8136ebcc: and eax, 0xf; cmp eax, 3; setne dl; leave; mov eax, edx; ret;
0xffffffff8136ebcf: cmp eax, 3; setne dl; leave; mov eax, edx; ret;
0xffffffff8136ebd2: setne dl; leave; mov eax, edx; ret;
0xffffffff8136ebf8: ret 0x87f6;
0xffffffff8136ec43: ret 0xd378;
0xffffffff8136ed52: ret 0xd3a8;
0xffffffff8136f02d: cmp byte ptr [rbp-1], 0; mov edx, 0xfffffff5; leave; cmovne eax, edx; ret;
0xffffffff8136f02f: inc dword ptr [rax]; mov edx, 0xfffffff5; leave; cmovne eax, edx; ret;
0xffffffff8136f030: add [rdx-0xb], bh; leave; cmovne eax, edx; ret;
0xffffffff8136f031: mov edx, 0xfffffff5; leave; cmovne eax, edx; ret;
0xffffffff8136f036: leave; cmovne eax, edx; ret;
0xffffffff8136f23d: mov [0x415bc03100003440], eax; pop rsp; pop rbp; ret;
0xffffffff8136f39e: ret 0x4789;
0xffffffff8136f593: ret 0xbc7e;
0xffffffff8136f7e9: adc [rcx], al; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8136f881: ret 0x114;
0xffffffff8136fa08: out 0xe8, al; and bl, [rdx+0x415b0024]; pop rsp; pop rbp; ret;
0xffffffff8136fa0a: and bl, [rdx+0x415b0024]; pop rsp; pop rbp; ret;
0xffffffff8136fa88: add al, ch; push rdx; push 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8136fa8a: push rdx; push 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8136fa8b: push 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff8136fb34: outsd dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fbad: mov ecx, 0xa4e881b3; outsb dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fbaf: sub eax, 0xffd16ea4; leave; ret;
0xffffffff8136fbb1: movsb [rdi], [rsi]; outsb dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fbbe: ret 0xc6d8;
0xffffffff8136fc2c: or [rax-0x75], cl; add [rbx+0x21e82450], cl; outsb dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fc2f: add [rbx+0x21e82450], cl; outsb dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fc35: outsb dx, [rsi]; sar edi, 1; leave; ret;
0xffffffff8136fc36: sar edi, 1; leave; ret;
0xffffffff8136fc6e: ret 0xc728;
0xffffffff8136fc89: ret 0xb974;
0xffffffff8136fcae: ret 0xb9cc;
0xffffffff8136fcc9: ret 0xc868;
0xffffffff8136fce9: ret 0xd989;
0xffffffff8136fcf2: ret 0x3974;
0xffffffff8136fd13: ret 0xc890;
0xffffffff8136fdfe: ret 0xc8b0;
0xffffffff8136fe24: ret 0xba0f;
0xffffffff8136fe69: ret 0xc8e0;
0xffffffff8136fe8b: ret 0xc930;
0xffffffff8136fec4: ret 0xc960;
0xffffffff8136fee4: ret 0xc980;
0xffffffff8136ff0e: ret 0xca58;
0xffffffff8136ff62: ret 0xc9e0;
0xffffffff8136ffaa: ret 0xc9b8;
0xffffffff8136ffca: ret 0xca28;
0xffffffff8137004b: ret 0xcb20;
0xffffffff81370066: ret 0xcb58;
0xffffffff8137009d: ret 0xcb88;
0xffffffff813700d0: ret 0xcc00;
0xffffffff813700e8: ret 0xcbc8;
0xffffffff81370111: ret 0xcab8;
0xffffffff8137013c: ret 0xccc8;
0xffffffff8137016e: ret 0xcc98;
0xffffffff8137018f: ret 0xcc50;
0xffffffff813701cb: ret 0xd050;
0xffffffff81370212: ret 0xce48;
0xffffffff81370234: ret 0xcc70;
0xffffffff81370260: ret 0xce78;
0xffffffff8137027f: ret 0xcdf8;
0xffffffff813702af: ret 0xcdc8;
0xffffffff813702fa: ret 0xbbb1;
0xffffffff8137031b: ret 0xbb67;
0xffffffff81370360: ret 0xcd40;
0xffffffff8137037d: ret 0xcf18;
0xffffffff813703df: ret 0xcea0;
0xffffffff81370411: ret 0xbb7c;
0xffffffff81370447: ret 0xcfe0;
0xffffffff81370469: ret 0xcf50;
0xffffffff81370497: ret 0xbb37;
0xffffffff813704d1: ret 0xcec0;
0xffffffff81370509: ret 0xce18;
0xffffffff81370524: ret 0xcda0;
0xffffffff81370555: ret 0xccf0;
0xffffffff813705ac: ret 0xbabc;
0xffffffff81370626: ret 0xcf80;
0xffffffff81370644: ret 0xcfb0;
0xffffffff81370664: ret 0xcd78;
0xffffffff8137069d: ret 0xbb4b;
0xffffffff81370728: ret 0xd1f0;
0xffffffff81370749: ret 0xbbc0;
0xffffffff8137076d: ret 0xd150;
0xffffffff813707bc: ret 0xd2f0;
0xffffffff813707dd: ret 0xd210;
0xffffffff81370842: ret 0xbc25;
0xffffffff8137086d: ret 0xbc35;
0xffffffff81370914: ret 0xd318;
0xffffffff8137097a: ret 0xbc4a;
0xffffffff813709e2: ret 0xd3e0;
0xffffffff81370a22: ret 0xd400;
0xffffffff81370a50: ret 0xbc77;
0xffffffff81370b01: ret 0xbc66;
0xffffffff81370c02: add r9b, [r11+0xf480a47]; leave; bswap eax; mov [rsi], rcx; mov [rdx], eax; ret;
0xffffffff81370c03: add cl, [rbx+0xf480a47]; leave; bswap eax; mov [rsi], rcx; mov [rdx], eax; ret;
0xffffffff81370c05: or r9b, [r8+0xf]; leave; bswap eax; mov [rsi], rcx; mov [rdx], eax; ret;
0xffffffff81370c06: or cl, [rax+0xf]; leave; bswap eax; mov [rsi], rcx; mov [rdx], eax; ret;
0xffffffff81370c09: leave; bswap eax; mov [rsi], rcx; mov [rdx], eax; ret;
0xffffffff81370c49: ret 0x4c72;
0xffffffff81370f87: add [rcx], dh; rol byte ptr [rax+0x64748ffa], 0x80; cli; mov [rdi], cl; xchg esp, eax; ret 0x148d;
0xffffffff81370f89: rol byte ptr [rax+0x64748ffa], 0x80; cli; mov [rdi], cl; xchg esp, eax; ret 0x148d;
0xffffffff81370f90: cli; mov [rdi], cl; xchg esp, eax; ret 0x148d;
0xffffffff81370f91: mov [rdi], cl; xchg esp, eax; ret 0x148d;
0xffffffff8137101e: fbstp tbyte ptr [rcx], st; rol byte ptr [rax-0x3289f406], 0x80; cli; adc cl, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff81371020: rol byte ptr [rax-0x3289f406], 0x80; cli; adc cl, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff81371025: int 0x80; cli; adc cl, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff81371027: cli; adc cl, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff81371028: adc cl, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff8137107a: cli; add ecx, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff8137107b: add ecx, [rdi]; xchg esp, eax; ret 0x148d;
0xffffffff81371096: xchg esp, eax; ret 0x148d;
0xffffffff81371097: ret 0x148d;
0xffffffff813710ae: ret 0xd47f;
0xffffffff81371332: ret 0xd49a;
0xffffffff8137152c: ret 0xd720;
0xffffffff8137164d: push rbx; add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8137168a: ret 0x8808;
0xffffffff81371a78: ret 0x3841;
0xffffffff813720ce: mov es, [rax]; add [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813720d0: add [r11+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81372324: mov [r8+0x2c], dl; mov [r8+0x2d], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81372325: mov [rax+0x2c], dl; mov [r8+0x2d], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81372327: sub al, 0x41; mov [rax+0x2d], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81372328: mov [r8+0x2d], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81372329: mov [rax+0x2d], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8137252c: ret 0xd7d0;
0xffffffff8137258d: ret 0xd4ea;
0xffffffff813725a2: ret 0xd4cf;
0xffffffff8137262e: ret 0xd4b8;
0xffffffff81372699: mov eax, 1; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8137269a: add [rax], eax; add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff813726c9: mov dword ptr [r9+0x188], 0; add rsp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff813726ca: mov dword ptr [rcx+0x188], 0; add rsp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff813726cb: or dword ptr [rax+1], 0x48000000; add esp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff813726d2: add [rax], al; add rsp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff813726d4: add rsp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff813726d5: add esp, 0x18; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8137282a: mov eax, [rbp-0x1c]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8137282c: in al, 0x48; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81372c92: ret 0x872;
0xffffffff81372e85: xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0x8d48;
0xffffffff81373060: add [rbx-0x57f101e], eax; sub [rdi], ecx; xchg esp, eax; ret 0x8040;
0xffffffff81373065: cli; sub [rdi], ecx; xchg esp, eax; ret 0x8040;
0xffffffff81373066: sub [rdi], ecx; xchg esp, eax; ret 0x8040;
0xffffffff81373068: xchg esp, eax; ret 0x8040;
0xffffffff81373069: ret 0x8040;
0xffffffff813730a7: ret 0xd7f8;
0xffffffff813730db: push qword ptr [rcx]; rol byte ptr [rcx-0x80], cl; cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0x548d;
0xffffffff813730dd: rol byte ptr [rcx-0x80], cl; cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0x548d;
0xffffffff813730e0: cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0x548d;
0xffffffff813730e2: test [rdi], ecx; xchg esp, eax; ret 0x548d;
0xffffffff8137322b: ret 0x333c;
0xffffffff813732d6: push qword ptr [rcx]; rol byte ptr [rcx-0x80], cl; cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff813732d8: rol byte ptr [rcx-0x80], cl; cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff813732db: cmp al, 0x24; test [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff813732dd: test [rdi], ecx; xchg esp, eax; ret 0xc283;
0xffffffff8137375f: ret 0xd51f;
0xffffffff81373870: movsq [rdi], [rsi]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81373871: movsd [rdi], [rsi]; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81373904: ret 0xd53a;
0xffffffff81373a24: add [rax-0x77], cl; push rax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81373a27: push rax; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81373f3d: pop rsp; cdqe; pop r13; pop r14; pop rbp; ret;
0xffffffff8137438d: add [rax], al; add [rcx+0xf], al; xchg esp, eax; ret;
0xffffffff813745a3: or [rbx-0x76b3fe07], al; out 0xf, al; xchg esp, eax; ret 0x8844;
0xffffffff813745a9: out 0xf, al; xchg esp, eax; ret 0x8844;
0xffffffff813745ab: xchg esp, eax; ret 0x8844;
0xffffffff81374a40: ret 0xe6eb;
0xffffffff81374bf4: xchg esp, eax; rcl byte ptr [rax-0x18], 0xe4; int 0xff; call far fword ptr [rax+0x4d];
0xffffffff81374c68: ret 0xd818;
0xffffffff81374db1: ret 0xb572;
0xffffffff81374f27: ret 0x60be;
0xffffffff813751a0: ret 0x14e9;
0xffffffff813755ab: ret 0xdae9;
0xffffffff813759f8: ret 0x2ee9;
0xffffffff81375c70: pop rsp; fcos; call far fword ptr [rbp-0x3d];
0xffffffff81375de0: ret 0x48;
0xffffffff81375f06: ret 0x23f0;
0xffffffff81375f60: ret 0x1850;
0xffffffff81376046: xor eax, [rax-0x7bf0ea07]; leave; add [rax], al; add [rax-0x39], cl; ret 0x2160;
0xffffffff8137604c: leave; add [rax], al; add [rax-0x39], cl; ret 0x2160;
0xffffffff81376103: ret 0x2230;
0xffffffff8137610f: ret 0x3320;
0xffffffff8137611b: ret 0x4630;
0xffffffff81376155: ret 0x28b0;
0xffffffff81376161: ret 0x2e60;
0xffffffff8137617a: ret 0xbd0;
0xffffffff81376186: ret 0x32f0;
0xffffffff81376456: ret 0xd850;
0xffffffff8137648d: ret 0xffce;
0xffffffff81376893: ret 0xd101;
0xffffffff81376bad: mov [rax+8], esi; mov [rax+0x10], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81376bb0: mov [rax+0x10], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81376bb1: mov [rax+0x10], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813770ee: ret 0xd8dd;
0xffffffff81377169: ret 0x2c0d;
0xffffffff81377378: and dword ptr [rbx], 0x74430100; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff81377379: and eax, [rax]; add [rbx+0x74], eax; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff8137737b: add [rbx+0x74], eax; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff813773f1: and dword ptr [rbx], 0x74430100; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff813773f4: add [rbx+0x74], eax; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81377497: add [rbx+0x2394], eax; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff8137749b: add [rax], al; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff81377590: xchg esp, eax; sbb dword ptr [rax+3], 0x8b480000; sub dword ptr [rax+0x4881a52b], 0xc3d0048b; mov eax, 0x1388; pop rbp; ret;
0xffffffff8137776a: sbb al, 0x24; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813778aa: out 0xe8, al; sbb byte ptr [rbx], 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813778ac: sbb byte ptr [rbx], 0x24; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8137794e: add [rax+1], dil; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8137794f: add [rax+1], bh; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81377950: mov eax, 1; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81377964: add esi, [rbx+rcx+0x31]; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81377966: or esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81377ab3: ret 0x4273;
0xffffffff81377afb: ret 0xbe2e;
0xffffffff81377e7b: movzx edx, byte ptr [rbp-0x19]; shr dl, 4; mov [rbx], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff81377e7f: shr dl, 4; mov [rbx], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff81377e81: add al, 0x88; adc ecx, [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff81377e82: mov [rbx], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff81378063: ret 0x38;
0xffffffff813780d4: ret 0xe218;
0xffffffff813781b6: ret 0xe1c8;
0xffffffff81378376: ret 0x7421;
0xffffffff81378464: xchg esp, eax; add [rax-0x7f], ecx; ret;
0xffffffff81378633: ret 0x7441;
0xffffffff81378946: ret 0x64e8;
0xffffffff813789d5: ret 0xe2b8;
0xffffffff81378c9e: ret 0xe268;
0xffffffff81378cc6: ret 0xe240;
0xffffffff81378cff: ret 0xe288;
0xffffffff81378f55: ret 0xd90d;
0xffffffff8137909f: ret 0xc1f7;
0xffffffff813790e9: ret 0xd97a;
0xffffffff81379104: ret 0xd95e;
0xffffffff8137916c: ret 0xe320;
0xffffffff81379294: ret 0xda96;
0xffffffff813792f6: ret 0xda16;
0xffffffff8137930f: ret 0xda25;
0xffffffff8137931a: ret 0xe420;
0xffffffff81379325: ret 0xda33;
0xffffffff81379330: ret 0xd9c5;
0xffffffff8137933b: ret 0xd9d4;
0xffffffff81379346: ret 0xd9e0;
0xffffffff81379351: ret 0xd9f1;
0xffffffff81379372: ret 0xda41;
0xffffffff81379390: ret 0xe350;
0xffffffff81379470: ret 0xda5e;
0xffffffff813794ad: ret 0xdab2;
0xffffffff813794e3: ret 0xda7a;
0xffffffff81379524: ret 0xdac9;
0xffffffff813795e1: ret 0xd8a7;
0xffffffff81379603: ret 0xd8b8;
0xffffffff81379614: ret 0xdadf;
0xffffffff81379632: ret 0xdaa0;
0xffffffff8137964a: ret 0xda91;
0xffffffff81379673: ret 0xe2e0;
0xffffffff81379873: ret 0xdb0c;
0xffffffff81379da1: ret 0xe490;
0xffffffff81379dca: ret 0xe468;
0xffffffff81379e4a: ret 0xe4f0;
0xffffffff81379ec6: ret 0xe570;
0xffffffff8137a11d: ret 0xdb3b;
0xffffffff8137a135: ret 0xe438;
0xffffffff8137a175: ret 0xe528;
0xffffffff8137a208: ret 0xdaf3;
0xffffffff8137a2f0: ret 0xe3f8;
0xffffffff8137a3aa: ret 0xfef1;
0xffffffff8137a3c6: ret 0x8a8b;
0xffffffff8137a4cc: dec dword ptr [rax-0x7b]; shl byte ptr [rbp-0x15], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8137a4cf: shl byte ptr [rbp-0x15], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8137a68c: ret 0x1373;
0xffffffff8137b015: ret 0xe620;
0xffffffff8137b193: add [rdi], cl; xchg esp, eax; ret 0xc221;
0xffffffff8137b2ea: ret 0xdb50;
0xffffffff8137b3bb: ret 0xdb82;
0xffffffff8137b52e: ret 0xe668;
0xffffffff8137b59c: ret 0xe5c8;
0xffffffff8137b5e9: ret 0xe5a0;
0xffffffff8137b603: ret 0xdb69;
0xffffffff8137be9f: ret 0xe690;
0xffffffff8137bf4c: ret 0xdb9d;
0xffffffff8137c0aa: ret 0xfed4;
0xffffffff8137c2a9: ret 0x3a8;
0xffffffff8137c2e6: pop rsp; sti; call far fword ptr [rbx+0x5d];
0xffffffff8137c325: ret 0x2472;
0xffffffff8137c525: ret 0x5287;
0xffffffff8137c59a: mov al, 0xff; dec dword ptr [rax+0x63]; clc; leave; ret;
0xffffffff8137c59c: dec dword ptr [rax+0x63]; clc; leave; ret;
0xffffffff8137c59d: movsxd rax, [rbp-8]; leave; ret;
0xffffffff8137c59e: movsxd eax, [rbp-8]; leave; ret;
0xffffffff8137c71b: ret 0x869f;
0xffffffff8137c862: ret 0xb8e8;
0xffffffff8137c89b: ret 0x7fe8;
0xffffffff8137cd83: ret 0x8137;
0xffffffff8137d524: ret 0xe9a0;
0xffffffff8137d5ad: ret 0xe9e0;
0xffffffff8137d86b: xchg esp, eax; ret 0xaa3c;
0xffffffff8137d86c: ret 0xaa3c;
0xffffffff8137d871: xchg esp, eax; ror byte ptr [rdi], 0xb6; shl byte ptr [rcx], 0xd0; ret;
0xffffffff8137db51: test [rcx+rbp*4], ah; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8137db52: and al, 0xa9; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8137de59: ret 0x5789;
0xffffffff8137e313: ret 0xecac;
0xffffffff8137e42a: add [rax], al; add [rax+0xa983], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8137e42c: add [rax+0xa983], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8137e42e: sub dword ptr [rcx+0x5b000000], 0x41; pop rsp; pop rbp; ret;
0xffffffff8137e621: ret 0xe6d3;
0xffffffff8137e6ae: ret 0x4907;
0xffffffff8137f135: ret 0x960f;
0xffffffff8137f13d: cli; sub [rdi], ecx; xchg esp, eax; ret 0xd108;
0xffffffff8137f13e: sub [rdi], ecx; xchg esp, eax; ret 0xd108;
0xffffffff8137f267: shl byte ptr [rbp+rcx+0x48], 0x89; fucomip st, st(0); mov gs, [rip+0x415b0048]; pop rsp; pop rbp; ret;
0xffffffff8137f269: or eax, 0xe8df8948; mov gs, [rip+0x415b0048]; pop rsp; pop rbp; ret;
0xffffffff8137f26c: fucomip st, st(0); mov gs, [rip+0x415b0048]; pop rsp; pop rbp; ret;
0xffffffff8137f26e: mov gs, [rip+0x415b0048]; pop rsp; pop rbp; ret;
0xffffffff8137f26f: sub eax, 0x415b0048; pop rsp; pop rbp; ret;
0xffffffff8137f3ab: ret 0x80f6;
0xffffffff8137f95c: ret 0x10d;
0xffffffff8137ff21: ret 0x4855;
0xffffffff8137ff97: ret 0xed95;
0xffffffff813802dc: ret 0xd2c0;
0xffffffff813802f9: ret 0xec18;
0xffffffff813803f9: ret 0xec48;
0xffffffff8138050d: rcr byte ptr [rbx+0x41], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8138051f: ret 0xec68;
0xffffffff813808b1: adc esp, 0x37; add [rax], al; and [rbp+3], dh; pop rbx; pop rbp; ret;
0xffffffff813808c8: ret 0xedc3;
0xffffffff813809a2: push 3; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813809b6: ret 0xedd8;
0xffffffff813809f3: ret 0xf31b;
0xffffffff81380abe: mov [rbx], esp; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81380bb6: add eax, 0x89e8558b; adc ecx, [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff81380bb7: mov edx, [rbp-0x18]; mov [rbx], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81380bba: mov [rbx], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81380bbb: adc ecx, [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff81380c2d: ret 0xee10;
0xffffffff81380db5: ret 0xee98;
0xffffffff81380ddd: ret 0xef48;
0xffffffff81380e17: ret 0xeee0;
0xffffffff8138102a: ret 0x973;
0xffffffff8138121a: ret 0xff92;
0xffffffff8138126d: ret 0xf108;
0xffffffff81381300: ret 0xf038;
0xffffffff8138143d: ret 0xf37e;
0xffffffff813814c0: ret 0xefa0;
0xffffffff813815e6: ret 0xf0d8;
0xffffffff8138165a: ret 0xf160;
0xffffffff8138174d: ret 0xf190;
0xffffffff81381764: ret 0xf1c8;
0xffffffff813817a8: ret 0xf1f8;
0xffffffff813817cf: ret 0xf0a0;
0xffffffff813817fc: ret 0xf130;
0xffffffff813818f6: or eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8138190c: ret 0xf258;
0xffffffff8138197c: ret 0xf2f8;
0xffffffff81381cac: ret 0xf2d8;
0xffffffff81381d2b: ret 0xf2a8;
0xffffffff81381d4c: ret 0xf280;
0xffffffff813820d3: ret 0xf418;
0xffffffff813821a5: ret 0xf4a0;
0xffffffff813821cb: ret 0xf470;
0xffffffff813821e9: ret 0xf448;
0xffffffff81382347: ret 0xf3a2;
0xffffffff81382363: and al, [rax]; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81382513: ret 0xf3c5;
0xffffffff81382549: ret 0xf550;
0xffffffff81382589: ret 0xf4c8;
0xffffffff813825a2: ret 0xf3af;
0xffffffff813825ba: ret 0xf528;
0xffffffff813825d3: ret 0xf4f0;
0xffffffff813827bb: ret 0xf5d8;
0xffffffff81382879: ret 0xf5a8;
0xffffffff813828c2: ret 0xf578;
0xffffffff81382e28: ret 0x3103;
0xffffffff81383164: ret 0xf3fa;
0xffffffff813831e0: ret 0xf3e2;
0xffffffff81383264: ret 0xf638;
0xffffffff813833b6: and eax, 0xe8e7894c; mov eax, [0xc48348c031fffe60]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813833b9: out 0xe8, eax; mov eax, [0xc48348c031fffe60]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813833bb: mov eax, [0xc48348c031fffe60]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813833ce: inc dword ptr [rbp+0x48e474c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813833d2: in al, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8138382a: ret 0xeaa9;
0xffffffff81383867: ret 0x5522;
0xffffffff81383ea8: ret 0xf7b9;
0xffffffff81383fac: ret 0xf7b0;
0xffffffff81384081: ret 0x3966;
0xffffffff81384245: ret 0xf791;
0xffffffff81384268: ret 0xf795;
0xffffffff81384687: ret 0xc109;
0xffffffff8138524a: ret 0x1677;
0xffffffff813856e5: mov [r12+0x160], rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813856e6: mov [rsp+0x160], ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8138572d: sahf; mov esp, cs; call qword ptr [rax-0x6f6f6f70];
0xffffffff8138572e: mov esp, cs; call qword ptr [rax-0x6f6f6f70];
0xffffffff81385975: add [rcx-0x49f0fbba], cl; xchg [rax-0x39fffff8], esp; or edi, r15d; mov [rsi+8], al; xor eax, eax; ret;
0xffffffff8138597b: xchg [rax-0x39fffff8], esp; or edi, r15d; mov [rsi+8], al; xor eax, eax; ret;
0xffffffff81385a1e: dec byte ptr [rax+0x13]; add [rax+rax*8+0x415b0575], al; pop rsp; pop rbp; ret;
0xffffffff81385a21: add [rax+rax*8+0x415b0575], al; pop rsp; pop rbp; ret;
0xffffffff81385a78: inc dword ptr [rax+rax*8+0x415b1a75]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81385a7c: sbb bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81385c9e: dec dword ptr [rbx+0x43890453]; adc [rcx+0x43891453], cl; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385ca1: add al, 0x89; adc [r9+0x43891453], cl; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385ca3: adc [r9+0x43891453], cl; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385ca4: adc [rcx+0x43891453], cl; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385ca6: push rbx; adc al, 0x89; and [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385ca7: adc al, 0x89; and [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81385e7a: ret 0x22bf;
0xffffffff813864d1: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813864d2: xor eax, eax; add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff813864d3: ror byte ptr [rax-0x7d], 0xc4; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81386a49: sete dl; add rsp, 0x90; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81386a4c: add rsp, 0x90; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81386a4d: add esp, 0x90; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff81386aed: ret 0xf9dc;
0xffffffff81386cd1: ret 0xc377;
0xffffffff813872a5: mov al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138739d: push qword ptr [rdi+rax+0x48]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813873a7: mov [rbx+0xe0], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813873a8: and eax, 0; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8138888f: ret 0xb841;
0xffffffff81388d6b: ret 0xaba0;
0xffffffff81388dd7: ret 0x5ab0;
0xffffffff81389072: ret 0xeeba;
0xffffffff81389a02: inc dword ptr [rax+rax*8-0x3fcef68c]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81389a04: shl byte ptr [rcx+rcx+0x31], 0xc0; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81389d67: ret 0x834b;
0xffffffff81389e92: ret 0xd739;
0xffffffff8138a45a: ret 0x11ca;
0xffffffff8138a474: add [rcx-0x75], al; xchg esp, eax; and al, 0xd0; add [rax], eax; add [rax-0x77], cl; ret;
0xffffffff8138a477: xchg esp, eax; and al, 0xd0; add [rax], eax; add [rax-0x77], cl; ret;
0xffffffff8138a4ca: ret 0x5ee;
0xffffffff8138a67e: xor al, 0xf; xchg esp, eax; ret 0xf883;
0xffffffff8138a680: xchg esp, eax; ret 0xf883;
0xffffffff8138b15c: or [rax-0x7d], cl; mov [0x48c031f7000002e8], eax; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b15d: and qword ptr [rbx+0x2e8], 0xfffffffffffffff7; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b15e: and dword ptr [rbx+0x2e8], 0xfffffff7; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b15f: mov [0x48c031f7000002e8], eax; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b163: add bh, dh; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b1df: ret 0xfaf6;
0xffffffff8138b207: ret 0xfaae;
0xffffffff8138b212: sub eax, 0xfffa8148; mov eax, 0xffffffea; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8138b231: ret 0xfac3;
0xffffffff8138b259: ret 0xfada;
0xffffffff8138b29b: ret 0xfb06;
0xffffffff8138b2bc: ret 0x6d40;
0xffffffff8138b42b: or [rdx], esp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138b5c3: ret 0xeb07;
0xffffffff8138b65d: ret 0x83ee;
0xffffffff8138b69f: or [rax], cl; add [rax], al; fistp word ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff8138b6a1: add [rax], al; fistp word ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff8138b6a3: fistp word ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff8138b905: ret 0x48ee;
0xffffffff8138bbfb: add [rax-0x77], cl; fucomip st, st(0); fsubr st, qword ptr [rsi+0x415bffea]; pop rsp; pop rbp; ret;
0xffffffff8138bbfe: fucomip st, st(0); fsubr st, qword ptr [rsi+0x415bffea]; pop rsp; pop rbp; ret;
0xffffffff8138bc00: fsubr st, qword ptr [rsi+0x415bffea]; pop rsp; pop rbp; ret;
0xffffffff8138bc3d: ret 0xb8ee;
0xffffffff8138bc63: ret 0x41ee;
0xffffffff8138c21d: psrld mm4, [rdx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8138c21e: shl byte ptr [rdx], cl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8138c9c5: xlat [rbx]; xor dl, [rbx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138ca65: xor dl, [rbx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138d2e1: ret 0xf9e8;
0xffffffff8138d49b: or [rax-0x77], cl; in eax, 0xe8; pop rsp; add [r13+0xf], r11b; mov bh, 0xc0; ret;
0xffffffff8138d49e: in eax, 0xe8; pop rsp; add [r13+0xf], r11b; mov bh, 0xc0; ret;
0xffffffff8138d4a0: pop rsp; add [r13+0xf], r11b; mov bh, 0xc0; ret;
0xffffffff8138d4f2: pop rsp; mov [rsi+8], eax; xor eax, eax; ret;
0xffffffff8138d7c4: mov esp, 0x415b0022; pop rsp; pop r13; pop rbp; ret;
0xffffffff8138d86e: ret 0x1a9;
0xffffffff8138dcd8: and al, 0x94; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138dcd9: xchg esp, eax; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8138dea2: ret 0x1bc;
0xffffffff8138ded8: ret 0x1ca;
0xffffffff8138defe: ret 0x1d8;
0xffffffff8138e573: ret 0xe99e;
0xffffffff8138e589: ret 0x390;
0xffffffff8138e8af: ret 0x1f5;
0xffffffff8138ea78: ret 0x1e6;
0xffffffff8138ed01: ret 0xd950;
0xffffffff8138ed21: ret 0x206;
0xffffffff8138ed56: ret 0x375;
0xffffffff8138ee61: ret 0xfb40;
0xffffffff8138eee2: ret 0x221;
0xffffffff8138ef0b: ret 0x448;
0xffffffff8138ef2a: ret 0x236;
0xffffffff8138f806: mov esp, [rax+0xf000000]; ret 0x938b;
0xffffffff8138fa1b: ret 0x24c;
0xffffffff8138fa3f: ret 0xf00;
0xffffffff8138fa58: ret 0x25d;
0xffffffff8138fdbe: ret 0xd4e0;
0xffffffff8138febd: mov esi, 0x415b0021; pop rsp; pop rbp; ret;
0xffffffff8138ffb5: and [rax], al; add [rbp+0x45], dh; leave; ret;
0xffffffff8138ffb7: add [rbp+0x45], dh; leave; ret;
0xffffffff8138ffe8: ret 0x520;
0xffffffff8138ffec: or dword ptr [rax-0x39], 0xaf70c8c7; sub eax, 0x12e557; pop rax; mov eax, [rbp-4]; leave; ret;
0xffffffff8138fff2: scasd [rdi]; sub eax, 0x12e557; pop rax; mov eax, [rbp-4]; leave; ret;
0xffffffff8138fff3: sub eax, 0x12e557; pop rax; mov eax, [rbp-4]; leave; ret;
0xffffffff8138fff5: push rdi; in eax, 0x12; add [rax-0x75], bl; cld; leave; ret;
0xffffffff8138fff6: in eax, 0x12; add [rax-0x75], bl; cld; leave; ret;
0xffffffff8138fff7: adc al, [rax]; pop rax; mov eax, [rbp-4]; leave; ret;
0xffffffff8138fff8: add [rax-0x75], bl; cld; leave; ret;
0xffffffff8138fff9: pop rax; mov eax, [rbp-4]; leave; ret;
0xffffffff813900a0: ret 0xbab8;
0xffffffff813901a5: ret 0x1440;
0xffffffff813908fa: ret 0x12dd;
0xffffffff813909b0: shl byte ptr [rsi+rbp+0x31], 0xc0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813909b2: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81390b51: ret 0xdcf0;
0xffffffff81390c2d: ret 0xd8c0;
0xffffffff81390f76: fld st, tbyte ptr [rax-0x76ec8aff]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81391135: add [rax], al; and [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81391137: and [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139114e: or dword ptr [rcx+0x69e8f445], 0x8b0012d5; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81391153: imul edx, ebp, 0x458b0012; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813911fd: fucomip st, st(0); or eax, 0x48ffea55; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813911ff: or eax, 0x48ffea55; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81391699: ret 0x362;
0xffffffff813919a6: ret 0x371;
0xffffffff81391cf5: add [rax], al; add al, ch; pop rsp; iretq;
0xffffffff81391cf7: add al, ch; pop rsp; iretq;
0xffffffff81391dd1: ret 0xf641;
0xffffffff81391fee: xchg [rax+4], esp; add [rax], al; or ecx, 2; mov [rax+0x100], ecx; pop rbp; ret;
0xffffffff813926ba: ret 0x21fa;
0xffffffff81392e89: or dword ptr [rcx+0x2ee8f445], 0x8b0012b8; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81392e8e: mov eax, 0x458b0012; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81392e8f: mov eax, 0x458b0012; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81392e90: adc al, [rax]; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81392fc6: ret 0xae75;
0xffffffff81393321: add [rax-0x75], cl; and dword ptr [rax+4], 0; add [rbx+0x415b0840], cl; pop rsp; pop rbp; ret;
0xffffffff81393324: and dword ptr [rax+4], 0; add [rbx+0x415b0840], cl; pop rsp; pop rbp; ret;
0xffffffff81393326: add al, 0; add [rbx+0x415b0840], cl; pop rsp; pop rbp; ret;
0xffffffff81393328: add [rbx+0x415b0840], cl; pop rsp; pop rbp; ret;
0xffffffff813934cc: add [rbx+0x582080], cl; add [rax+0x48087401], ch; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813934cf: and [rax], bl; add [rax+0x48087401], ch; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813934d2: add [rax+0x48087401], ch; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813934d4: add [rax+rcx+0x48], esi; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813940ce: xchg [rax], esp; add al, 0; add [rcx], al; ret;
0xffffffff81394882: mov [0x415bd27c0000041c], eax; pop rsp; pop rbp; ret;
0xffffffff8139519c: ret 0x572b;
0xffffffff8139530f: ret 0xe82a;
0xffffffff813955e4: ret 0x4502;
0xffffffff8139572d: ret 0x1098;
0xffffffff81395751: ret 0x8189;
0xffffffff813959d0: ret 0xf97;
0xffffffff81395b6a: ret 0x21;
0xffffffff81395db6: shl byte ptr [rdi+rax+0x48], cl; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81395dea: pop rdx; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81396064: ret 0x83c7;
0xffffffff81396c26: ret 0xf32d;
0xffffffff81397239: xchg esp, eax; and al, 0x18; add al, 0; add [rbp+0x312a7ed2], al; fisttp dword ptr [rax+0x63], st; ret;
0xffffffff8139729a: ret 0xa0e8;
0xffffffff8139741e: ret 0xfce8;
0xffffffff81397f05: ret 0x15e8;
0xffffffff81397f14: rcr dword ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff8139897c: ret 0x59b9;
0xffffffff81398ba8: xchg ebp, eax; add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813990f8: cmp cl, [rbp+0x7740400]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139917c: dec dword ptr [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81399464: mov [0x415bb27f0000041c], eax; pop rsp; pop rbp; ret;
0xffffffff81399da8: add al, 0; add [rcx+0xde8fc45], cl; adc al, [r8]; mov eax, [rbp-4]; leave; ret;
0xffffffff81399daa: add [rcx+0xde8fc45], cl; adc al, [r8]; mov eax, [rbp-4]; leave; ret;
0xffffffff81399daf: or eax, 0x8b001249; cld; leave; ret;
0xffffffff81399db0: adc al, [r8]; mov eax, [rbp-4]; leave; ret;
0xffffffff81399db1: adc al, [rax]; mov eax, [rbp-4]; leave; ret;
0xffffffff8139a8e9: ret 0x3876;
0xffffffff8139a91f: ret 0x80a8;
0xffffffff8139a92f: rol byte ptr [rbx+0x287401f9], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139a932: add [rax+rbp+0x48], esi; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139aa8b: and al, 0x89; pop rax; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8139aa8d: pop rax; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8139b66d: add [rbp+0x15], dh; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139b7b9: rol byte ptr [rbx+0x317401fa], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139b7bc: add [rcx+rsi+0x48], esi; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139b97b: inc dword ptr [rbx+0xf0d187b]; test [rbx+0x48000000], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8139b97e: sbb [rip+0xb3840f], cl; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139b97f: or eax, 0xb3840f; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139b981: test [rbx+0x48000000], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8139b982: mov bl, 0; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139bac5: ret 0xeb80;
0xffffffff8139c6fd: add rsp, 8; mov eax, 0xfffffffd; pop rbx; pop rbp; ret;
0xffffffff8139c6fe: add esp, 8; mov eax, 0xfffffffd; pop rbx; pop rbp; ret;
0xffffffff8139c80a: out 0xff, eax; inc dword ptr [rbp+0x480774c0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c80c: inc dword ptr [rbp+0x480774c0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c863: inc dword ptr [rbp+0x31a975c0]; rol byte ptr [rbx+0x74011c7b], 0xd8; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c865: shl byte ptr [rbp-0x57], 0x31; rol byte ptr [rbx+0x74011c7b], 0xd8; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c869: rol byte ptr [rbx+0x74011c7b], 0xd8; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c86d: add [rax+rbx*8+0x48], esi; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8139c8c2: inc dword ptr [rbp+0x480974c0]; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139c930: ret 0xf8d1;
0xffffffff8139ce4b: ret 0xf000;
0xffffffff8139cee1: ret 0x4800;
0xffffffff8139d224: ret 0x7b83;
0xffffffff8139dad4: ret 0x8902;
0xffffffff8139dc67: ret 0x33e9;
0xffffffff8139dcb3: add fs:[rax], al; add al, ch; xchg esp, eax; int3; iretd;
0xffffffff8139dcb4: add [rax], al; add al, ch; xchg esp, eax; int3; iretd;
0xffffffff8139dcb6: add al, ch; xchg esp, eax; int3; iretd;
0xffffffff8139dcb8: xchg esp, eax; int3; iretd;
0xffffffff8139df74: mov [rdi+0x50], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139df75: mov [rdi+0x50], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139df76: push r8; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139df77: push rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc0: inc dword ptr [rbx-0x1d2cf93f]; mov [rbx+0x54], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc4: shl edx, cl; mov [rbx+0x54], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc6: mov [rbx+0x54], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc7: mov [rbx+0x54], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc8: push rbx; push rsp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139dfc9: push rsp; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8139e28a: ret 0xcfc6;
0xffffffff8139e462: add rsp, 8; sar eax, 0x1f; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139e463: add esp, 8; sar eax, 0x1f; pop rbx; pop r12; pop rbp; ret;
0xffffffff8139ea4a: add [rax], al; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8139ebbe: mov [rcx+0x18], edx; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff8139efd8: xchg esp, ebx; add [rax], al; add [rcx], dh; ror byte ptr [rcx+0x45882], 0; pop rbp; ret;
0xffffffff8139f059: ret 0x8906;
0xffffffff8139f8e2: shr al, cl; push 0x48ffffbf; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8139f8e4: push 0x48ffffbf; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813a083d: mov ch, 0x20; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813a0e0c: ret 0xc10d;
0xffffffff813a176f: ret 0x2804;
0xffffffff813a1808: ret 0x2818;
0xffffffff813a183b: ret 0x2168;
0xffffffff813a18b0: ret 0x3804;
0xffffffff813a18e3: ret 0x3808;
0xffffffff813a1a28: ret 0x3820;
0xffffffff813a24a3: ret 0x2800;
0xffffffff813a24f7: ret 0x3800;
0xffffffff813a2c1a: ret 0xf908;
0xffffffff813a3592: test word ptr [rbp-2], 0x6000; leave; setne al; ret;
0xffffffff813a3772: ret 0xe3c;
0xffffffff813a3834: cmovs ecx, [rcx-0x56fc1721]; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4aa1: or dword ptr [rcx+0x36e8f445], 0x8b002122; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4aa8: and [rax], eax; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4ad6: mov ebx, 0xdc; add dh, [rbp+7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4ad9: add [rax], al; add dh, [rbp+7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4adb: add dh, [rbp+7]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4b0c: add [rax], eax; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4c3a: ret 0x83;
0xffffffff813a4c57: add [rax], al; add al, ch; int1; pop rsp; iretd;
0xffffffff813a4c59: add al, ch; int1; pop rsp; iretd;
0xffffffff813a4c5b: int1; pop rsp; iretd;
0xffffffff813a4dc5: push qword ptr [rcx+rcx+0x48]; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff813a4df1: cmp ax, 0xff; sete al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4df3: inc dword ptr [rax]; sete al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4df4: add [rdi], cl; xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret;
0xffffffff813a4df5: sete al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4df6: xchg esp, eax; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret;
0xffffffff813a4ebe: ret 0xd001;
0xffffffff813a4f14: rol byte ptr [rbp], 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a4f8b: rol byte ptr [rbp], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813a5106: inc byte ptr [rsi*2-0x3b7cb768]; or [rbx+0x41], bl; pop rsp; pop r14; pop rbp; ret;
0xffffffff813a5578: ret 0x8b8b;
0xffffffff813a5c9b: nop; add eax, [rax]; add al, ch; pop rsp; ret;
0xffffffff813a5c9c: add eax, [rax]; add al, ch; pop rsp; ret;
0xffffffff813a5c9e: add al, ch; pop rsp; ret;
0xffffffff813a5dc2: cmp al, dl; add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff813a5de2: sbb al, dl; add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff813a5de3: ret 0x45;
0xffffffff813a5de4: add [r11+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff813a615e: mov [rax], eax; add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813a6225: xchg edx, eax; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813a6fad: pop rsp; pop r13; setne al; pop rbp; neg eax; ret;
0xffffffff813a7d10: ret 0x6604;
0xffffffff813a8dec: ret 0x18be;
0xffffffff813a8ec8: ret 0x8be;
0xffffffff813a9512: sub eax, 0x836615a2; clc; add [rdi], ecx; xchg [rip+0xf000001], esp; mov dh, 0x45; iretd;
0xffffffff813a9517: clc; add [rdi], ecx; xchg [rip+0xf000001], esp; mov dh, 0x45; iretd;
0xffffffff813a9518: add [rdi], ecx; xchg [rip+0xf000001], esp; mov dh, 0x45; iretd;
0xffffffff813a951a: xchg [rip+0xf000001], esp; mov dh, 0x45; iretd;
0xffffffff813a9a98: ret 0x5de9;
0xffffffff813a9e1d: ret 0xde8;
0xffffffff813aa3fc: adc al, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813aa470: pcmpgtd mm0, [rbx+0x97403f8]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813aabd1: ret 0x4805;
0xffffffff813aac6d: and eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813ab51f: cmp eax, 0x4800000c; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813ab594: ret 0x40be;
0xffffffff813ab663: cdq; imul eax, [rbp], 0x774c085; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813ab664: imul eax, [rbp], 0x774c085; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813abbd7: add [rbx+0x41], bl; mov esp, eax; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff813abc3e: idiv bh; inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813ac439: or [rbx+0x415b0840], cl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ac7b3: pop r8; add [r13+0x480774c0], r8b; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813ac7b4: pop rax; add [r13+0x480774c0], r8b; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813ac7ec: ret 0xbe00;
0xffffffff813aca3f: add [rbx+0x97403f8], al; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813acbe6: add [rbp+0xe], dh; mov byte ptr [rbx+0x310], 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813acbe9: mov byte ptr [rbx+0x310], 1; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813acbec: add eax, [rax]; add [rcx], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813acbee: add [rcx], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813acd72: sar byte ptr [rax+0x43], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813ad13c: ret 0x248;
0xffffffff813ad153: add rsp, 8; pop rbx; pop r12; pop r14; pop rbp; ret;
0xffffffff813ad154: add esp, 8; pop rbx; pop r12; pop r14; pop rbp; ret;
0xffffffff813ad156: or [rbx+0x41], bl; pop rsp; pop r14; pop rbp; ret;
0xffffffff813ad282: ret 0xd3eb;
0xffffffff813ad47a: add [rsi-0x77], ah; xchg esp, edi; add [rax], al; add al, ch; test eax, 0x5d0000e9; ret;
0xffffffff813ad47d: xchg esp, edi; add [rax], al; add al, ch; test eax, 0x5d0000e9; ret;
0xffffffff813ad5fd: adc dword ptr [rbx], 3; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff813ad5fe: adc eax, [rbx]; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff813ad85d: sub [rbx-0x77cfc20], al; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff813ad862: clc; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff813ad876: clc; add al, 0xf; xchg esp, eax; ret;
0xffffffff813ad877: add al, 0xf; xchg esp, eax; ret;
0xffffffff813ad8bd: and eax, 0x3d666000; add [rax+0xf], al; xchg esp, eax; ret;
0xffffffff813ad8c2: add [rax+0xf], al; xchg esp, eax; ret;
0xffffffff813ada45: push rdi; sub [rax], esp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813ada46: sub [rax], esp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813adb0b: ret 0x1fe8;
0xffffffff813ae1f4: add [r13+0x48cd74c0], r8b; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813ae1f5: add [r13+0x48cd74c0], r8b; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813ae26a: ret 0xdb;
0xffffffff813ae53a: ret 0x453a;
0xffffffff813aeb52: xor al, 0x45; add [rbp+0x481074c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813aeb53: add [r13+0x481074c0], r8b; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813aeb54: add [rbp+0x481074c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813aee46: add [r13+0x480774c0], r8b; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813af02f: std; int 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813af030: int 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813af20c: setne [rbx+0x41e]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813af33e: mov [rbx+0x3f4], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813af9ea: adc ah, [rsi]; add [r13+0x480774c0], r8b; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813af9eb: add [r13+0x480774c0], r8b; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813afb21: sar ecx, 1; mov [rbx+0x414], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813afb22: stc; mov [rbx+0x414], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813afb23: mov [rbx+0x414], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813afb24: mov [rbx+0x414], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813afb25: mov edx, [rsp+rax]; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813aff85: add [rdx+0xff], bh; mov [rbx+0x414], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813aff86: mov edx, 0xff; mov [rbx+0x414], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813aff89: add [rax], al; mov [rbx+0x414], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813afff9: and [rax], al; mov eax, [rbp-0x14]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813b003c: fucomip st, st(0); mov esi, 0x8500451f; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff813b003e: mov esi, 0x8500451f; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff813b00b6: add [r11+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813b0d80: adc al, [rbp]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0de0: and [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0ef6: mul byte ptr [r14+0x3d]; add [rsp+rsi*2+0x48c03109], cl; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0ef7: mul byte ptr [rsi+0x3d]; add [rsp+rsi*2+0x48c03109], cl; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0ef9: cmp eax, 0x9748c00; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0efa: add [rsp+rsi*2+0x48c03109], cl; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0f7c: and edx, 1; mov [rbx+0x3f4], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0f7f: mov [rbx+0x3f4], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b0fac: add [r13+0x480774c0], r8b; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813b10db: mov [rbx+0x414], dx; mov [rbx+0x3e4], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b10dc: mov [rbx+0x414], edx; mov [rbx+0x3e4], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b10e0: add [rax], al; mov [rbx+0x3e4], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b10e2: mov [rbx+0x3e4], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b10e3: mov [rbx+0x3e4], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b10e5: in al, 3; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b1180: cmp edx, 0xe7400ff; mov [rbx+0x414], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b1183: add [rsi+rcx+0x66], dh; mov [rbx+0x414], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b1186: mov [rbx+0x414], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b1187: mov [rbx+0x414], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b1189: adc al, 4; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813b147a: mov [rbx+0x2e4c], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813b147b: or dword ptr [rsi+rbp], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813b147d: add [rax], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813b1564: ret 0x89;
0xffffffff813b17a1: ret 0x2020;
0xffffffff813b1841: xchg esp, ebx; xor eax, 0x66c30000; nop [rax+rax]; mov [rdi+0x35dc], esi; ret;
0xffffffff813b1e9f: ret 0x7580;
0xffffffff813b229b: ret 0xffd7;
0xffffffff813b2411: add rsp, 0xc0; pop rbx; pop r12; pop rbp; ret;
0xffffffff813b2412: add esp, 0xc0; pop rbx; pop r12; pop rbp; ret;
0xffffffff813b2414: rol byte ptr [rax], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813b244f: ret 0x5641;
0xffffffff813b2518: ret 0x5aba;
0xffffffff813b5c97: adc [r8], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813b5e7a: ret 0x44c2;
0xffffffff813b5e7b: ret 0x44;
0xffffffff813b5ee4: or [rcx], dh; imul al; xchg esp, eax; ret 0x1f;
0xffffffff813b5ee6: imul al; xchg esp, eax; ret 0x1f;
0xffffffff813b5ee8: xchg esp, eax; ret 0x1f;
0xffffffff813b605f: xchg [rax], esp; sub eax, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff813b6060: and [rip+0x415b0000], ch; pop rsp; pop r13; pop rbp; ret;
0xffffffff813b6061: sub eax, 0x415b0000; pop rsp; pop r13; pop rbp; ret;
0xffffffff813b69b3: and eax, 0x31; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813b734b: ret 0xb5eb;
0xffffffff813b7499: add [rcx+3], cl; xchg esp, eax; and al, 0xb8; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff813b749c: xchg esp, eax; and al, 0xb8; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff813b833a: ret 0x449c;
0xffffffff813b8684: ret 0xd120;
0xffffffff813b898f: ret 0x2a72;
0xffffffff813b8a27: ret 0x2378;
0xffffffff813b934a: ret 0xe644;
0xffffffff813b989c: ret 0x7f8b;
0xffffffff813b9f5f: ret 0x532b;
0xffffffff813ba8d9: shl byte ptr [rcx+rcx+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ba932: ret 0x8b51;
0xffffffff813bb684: add dword ptr [rax-0x74fffffb], 0x40; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813bb686: add eax, 0x408b0000; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813bb688: add [rbx+0x415b0840], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813bc145: ret 0x2ae6;
0xffffffff813bc1c7: ret 0x2af1;
0xffffffff813bc259: add byte ptr [rip-0x76bc0000], 0x60; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813bc2f9: add byte ptr [rip-0x76bc0000], 0x60; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813bc2fc: add [rcx+rcx*4+0x60], al; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813bc34d: mov [0x41c0315b00000880], eax; pop rsp; pop rbp; ret;
0xffffffff813bc7fc: ret 0xde75;
0xffffffff813bcfa4: ret 0x10f;
0xffffffff813bd016: ret 0xe4e8;
0xffffffff813bd4b2: add [rdi-0x1b], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813bd4b4: in eax, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813bd4cc: mov rax, [rbx+0x580]; mov [rax+0xc4], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813bd4cd: mov eax, [rbx+0x580]; mov [rax+0xc4], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813bd4d1: add [rax], al; mov [rax+0xc4], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813bd4d3: mov [rax+0xc4], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813be6b8: pop rsp; mov eax, r8d; pop r13; pop r14; pop rbp; ret;
0xffffffff813be882: add ecx, [rcx+0x48c03106]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813be99e: out 0xe8, eax; pop rsp; add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813be9a0: pop rsp; add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813be9a1: add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813be9a2: add [rbx+0x41], r11b; pop rsp; pop rbp; ret;
0xffffffff813bf549: ret 0x2ba0;
0xffffffff813bf5fc: ret 0x2bcf;
0xffffffff813bf60b: ret 0x2b8f;
0xffffffff813bf61a: ret 0x2baf;
0xffffffff813bf62b: ret 0x2bbc;
0xffffffff813bf857: ret 0xdfcc;
0xffffffff813bf865: inc dword ptr [rcx-0x77]; mov dword ptr [rbp+0x483275c0], 0x5be8df89; mov esp, edi; dec dword ptr [rax-0x77]; fucomip st, st(0); ret;
0xffffffff813bf868: mov dword ptr [rbp+0x483275c0], 0x5be8df89; mov esp, edi; dec dword ptr [rax-0x77]; fucomip st, st(0); ret;
0xffffffff813bf86f: fucomip st, st(0); pop rbx; mov esp, edi; dec dword ptr [rax-0x77]; fucomip st, st(0); ret;
0xffffffff813bf871: pop rbx; mov esp, edi; dec dword ptr [rax-0x77]; fucomip st, st(0); ret;
0xffffffff813bf872: mov esp, edi; dec dword ptr [rax-0x77]; fucomip st, st(0); ret;
0xffffffff813bfb50: ret 0xe5b0;
0xffffffff813bfb76: ret 0x1e;
0xffffffff813bfb77: ret 0x1e;
0xffffffff813c04e2: ret 0x2c14;
0xffffffff813c050f: ret 0x2c26;
0xffffffff813c0724: add [rax], al; add [rbp+7], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813c0726: add [rbp+7], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813c073b: cmp edi, 0x458bffff; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813c081a: mov ecx, 0x415bffff; pop rsp; pop rbp; ret;
0xffffffff813c0bb3: cmp bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813c1293: ret 0xcc57;
0xffffffff813c1db7: cmp esi, [rcx+rax*4+0xfca21e8]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813c1dbb: and edx, ecx; ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813c1e84: mov eax, 0xe881b43b; push rbx; leave; ltr [rbx+0x5d]; ret;
0xffffffff813c1e89: push rbx; leave; ltr [rbx+0x5d]; ret;
0xffffffff813c1e8a: leave; ltr [rbx+0x5d]; ret;
0xffffffff813c21e3: stosd [rdi]; mov [0x415bc031000007c0], eax; pop rsp; pop rbp; ret;
0xffffffff813c21e4: mov [0x415bc031000007c0], eax; pop rsp; pop rbp; ret;
0xffffffff813c229a: ret 0xd5eb;
0xffffffff813c24b5: and al, 0x11; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813c28fc: ret 0xb03d;
0xffffffff813c291c: ret 0xfe81;
0xffffffff813c2927: ret 0xf283;
0xffffffff813c29c4: add [rbp+7], esi; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813c3037: add [rbx+0x274fff8], al; leave; ret;
0xffffffff813c3040: div byte ptr [rsi+rcx-0x75]; adc al, [rbx+0x774fffa]; leave; mov eax, 0xffffffff; ret;
0xffffffff813c3044: adc al, [rbx+0x774fffa]; leave; mov eax, 0xffffffff; ret;
0xffffffff813c3890: ret 0x33b0;
0xffffffff813c3e91: ret 0xf;
0xffffffff813c3f95: test [rdi+rdi*8-1], dl; dec dword ptr [rcx+0xd090]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813c3f99: dec dword ptr [rcx+0xd090]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813c421c: add [rax], al; add [rsp+rdx-0x15], dh; cmp cl, [rax-0x75]; xchg esp, eax; ret;
0xffffffff813c421e: add [rsp+rdx-0x15], dh; cmp cl, [rax-0x75]; xchg esp, eax; ret;
0xffffffff813c4220: adc al, 0xeb; cmp cl, [rax-0x75]; xchg esp, eax; ret;
0xffffffff813c4222: cmp cl, [rax-0x75]; xchg esp, eax; ret;
0xffffffff813c43cf: ret 0x8008;
0xffffffff813c4b83: ret 0xd348;
0xffffffff813c5cb4: ret 0x4075;
0xffffffff813c6129: pop rsp; setne dl; pop r13; pop rbp; mov eax, edx; ret;
0xffffffff813c62f8: ret 0xf109;
0xffffffff813c632c: ret 0x8844;
0xffffffff813c6521: ret 0x9189;
0xffffffff813c6614: ret 0xe480;
0xffffffff813c6d57: add eax, 0x89fff6c6; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813c6e4b: ret 0x3c5d;
0xffffffff813c6e95: ret 0x3c4e;
0xffffffff813c6ed7: ret 0x3c43;
0xffffffff813c704b: ret 0xe170;
0xffffffff813c7cbe: ret 0xb43c;
0xffffffff813c7d22: ret 0xa128;
0xffffffff813c8608: add [rax+rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813c8609: add al, 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813c86cf: ret 0x3810;
0xffffffff813c8775: sub ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813c87c0: ret 0xe010;
0xffffffff813c8aa2: ret 0x2810;
0xffffffff813c8af8: ret 0x403;
0xffffffff813c8b39: ret 0xc00c;
0xffffffff813c8c61: ret 0x280c;
0xffffffff813c8cb2: ret 0xc010;
0xffffffff813c90e9: ret 0x510;
0xffffffff813c96ba: ret 0xff98;
0xffffffff813caa3a: ret 0x83a5;
0xffffffff813caf45: mov [0x415be17f00000300], eax; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813cb259: sbb [rdx+0x7740400], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813cb25a: sbb [rdx+0x7740400], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813cb27c: mov al, 0xb3; out 0xff, al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813cb27e: out 0xff, al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813cb92a: ret 0xdec;
0xffffffff813cde4e: adc ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ce164: ret 0x298f;
0xffffffff813ce243: ret 0x299b;
0xffffffff813ce34d: ret 0x680;
0xffffffff813ce4fd: clc; add cl, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff813ce4fe: add cl, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff813ce524: stc; add cl, [rdi]; xchg esp, eax; ret 0x841;
0xffffffff813ce525: add cl, [rdi]; xchg esp, eax; ret 0x841;
0xffffffff813ce527: xchg esp, eax; ret 0x841;
0xffffffff813ce5ff: ret 0x85eb;
0xffffffff813cebb4: ret 0xe964;
0xffffffff813cfdb5: leave; and dh, dh; ret 0xf04;
0xffffffff813d0159: mov [rbx+4], rcx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d015a: mov [rbx+4], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d0433: mov [0x415b077500001724], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff813d04ac: add [rcx+0x415b2043], cl; pop rsp; pop rbp; ret;
0xffffffff813d04ae: and [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d05b9: ret 0x4c28;
0xffffffff813d0796: pop rsp; mov qword ptr [r14], 1; pop r13; pop r14; pop rbp; ret;
0xffffffff813d0b7b: sbb cl, [rcx-0x75]; mov esp, ss; or al, [rax]; add [rax-0x7d], cl; ret 0x6601;
0xffffffff813d0b7e: mov esp, ss; or al, [rax]; add [rax-0x7d], cl; ret 0x6601;
0xffffffff813d106b: add [rcx], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d111d: ret 0x4689;
0xffffffff813d150a: ret 0x68ca;
0xffffffff813d1b50: ret 0x188c;
0xffffffff813d23d1: ret 0xe9e9;
0xffffffff813d24eb: ret 0x188e;
0xffffffff813d3035: ret 0xff0f;
0xffffffff813d30e7: ret 0xd;
0xffffffff813d3ce0: ret 0xe938;
0xffffffff813d4155: xor [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d4976: xchg dh, dl; add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d49a1: mov ebx, 0x8b0042d6; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d4c5a: ret 0xfee3;
0xffffffff813d4da6: out 0x21, al; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d5114: ret 0x43d0;
0xffffffff813d5122: ret 0x6550;
0xffffffff813d5446: ret 0x4200;
0xffffffff813d5462: ret 0x3d90;
0xffffffff813d55ca: ret 0x33;
0xffffffff813d5892: ret 0x5c50;
0xffffffff813d613b: add [rip+0x415b0000], dh; pop rsp; pop rbp; ret;
0xffffffff813d613c: xor eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff813d61e6: fucomip st, st(0); adc al, 0xbe; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d61e8: adc al, 0xbe; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d61e9: mov esi, 0x415b0042; pop rsp; pop rbp; ret;
0xffffffff813d6465: test word ptr [rbp-0xa], 0xc00; setne [rbx]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d6467: test byte ptr [r8], 0xc; setne [rbx]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d6468: test byte ptr [rax], 0xc; setne [rbx]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d646b: setne [rbx]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d64c6: mov [rbx+0x418], ax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff813d64c7: mov [rbx+0x418], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff813d68f6: mov eax, [rbp-0x24]; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d6de2: ret 0x8900;
0xffffffff813d6e36: or eax, 0x2168b289; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d6e37: mov [rdx+0x2168], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d6e39: push 0x48000021; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d70d7: sub [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d7287: add [rbp+0x310875c0], al; rol byte ptr [rax+0x7500f77d], 7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d7289: shl byte ptr [rbp+8], 0x31; rol byte ptr [rax+0x7500f77d], 7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d728b: or [rcx], dh; rol byte ptr [rax+0x7500f77d], 7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d728d: rol byte ptr [rax+0x7500f77d], 7; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d7291: add [rbp+7], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d759b: xor eax, eax; add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff813d760f: add rsp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff813d7610: add esp, 8; pop rbx; pop r14; pop rbp; ret;
0xffffffff813d7796: xchg [rdx+0x1000003], esp; mov eax, 0xfffffffd; ret;
0xffffffff813d7854: clc; add [rdi], ecx; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop rbp; ret;
0xffffffff813d7855: add [rdi], ecx; xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop rbp; ret;
0xffffffff813d7857: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop rbp; ret;
0xffffffff813d7c2b: mov [rdx+0x10], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d7f98: rol byte ptr [rbx], 0; add [rax-0x77], cl; fucomip st, st(0); pop rsp; mov al, [0x870fe63945660042]; iretd;
0xffffffff813d7f99: add eax, [rax]; add [rax-0x77], cl; fucomip st, st(0); pop rsp; mov al, [0x870fe63945660042]; iretd;
0xffffffff813d7f9b: add [rax-0x77], cl; fucomip st, st(0); pop rsp; mov al, [0x870fe63945660042]; iretd;
0xffffffff813d7f9e: fucomip st, st(0); pop rsp; mov al, [0x870fe63945660042]; iretd;
0xffffffff813d7fa0: pop rsp; mov al, [0x870fe63945660042]; iretd;
0xffffffff813d8336: add [rbp+0x48cd74c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d833a: int 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d84ba: mov [r12], eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d84bb: mov [rsp], eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d84bc: add al, 0x24; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d84bd: and al, 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d8682: shl byte ptr [rbx+rax+0x44], 0x89; and [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813d8712: cwde; add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8762: and ecx, 0xfff0; or [rbx+0x380], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8766: add [rax], al; or [rbx+0x380], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8767: add [rcx], cl; mov eax, [rax+0x48000003]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8768: or [rbx+0x380], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8769: mov eax, [rax+0x48000003]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8871: pop rsp; sar eax, 0x1f; pop rbp; and eax, 0xfffffffe; ret;
0xffffffff813d88f5: pop rsp; mov [r13], ax; xor eax, eax; pop r13; pop rbp; ret;
0xffffffff813d8977: pop rsp; and eax, 0xfffffffe; pop rbp; ret;
0xffffffff813d8a82: inc dword ptr [rbp-0x14458b40]; leave; xor eax, eax; ret;
0xffffffff813d8b03: inc dword ptr [rbp-0x14468b40]; leave; xor eax, eax; ret;
0xffffffff813d8c22: xchg ebx, eax; add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8c24: add [rbp+0x480774c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813d8ecf: add dh, [rcx+rcx*2+0x31]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813d8ed1: xor r8, rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d8fdc: setne [rbx+0x3a7]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d900e: xchg [rdi+3], esp; xor eax, eax; ret;
0xffffffff813d904b: and edx, 1; mov [rbx+0x374], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d904e: mov [rbx+0x374], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d9208: ret 0x2366;
0xffffffff813d95a1: sar ecx, 1; mov [rbx+0x394], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d95a2: stc; mov [rbx+0x394], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d95a3: mov [rbx+0x394], cx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d95a4: mov [rbx+0x394], ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d9978: ret 0x660f;
0xffffffff813d9c0a: mov [rbx+0x364], rdi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d9c0b: mov [rbx+0x364], edi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d9c0c: mov ebx, 0x364; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813d9ccc: and byte ptr [rsi+0x1d], 0; mov eax, [rbp-0x14]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813d9ccd: sbb ax, 0x8b00; in al, dx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813d9cce: sbb eax, 0xec458b00; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813d9de7: ret 0x5ae9;
0xffffffff813d9ea7: push rbp; add dword ptr [rdx], 0x874c085; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d9ea8: add dword ptr [rdx], 0x874c085; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813d9eaa: add [rbp+0x480874c0], al; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff813da09f: add [r15], ecx; xchg esp, eax; ret 0x903d;
0xffffffff813da0a0: add [rdi], ecx; xchg esp, eax; ret 0x903d;
0xffffffff813da0a2: xchg esp, eax; ret 0x903d;
0xffffffff813da0a3: ret 0x903d;
0xffffffff813da7f9: add [rcx-0x51170bbb], cl; fistp word ptr [rip-0xbba7500], st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813da7fe: scasb [rdi]; fistp word ptr [rip-0xbba7500], st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813da7ff: fistp word ptr [rip-0xbba7500], st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813daa28: add [rcx+0x7fe8f445], cl; fstp qword ptr [rip-0xbba7500], st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813daa2e: fstp qword ptr [rip-0xbba7500], st; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813daa2f: sbb eax, 0xf4458b00; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dab0d: add [rbp+0x480774c0], al; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813dac8e: mov [rbx+0x394], dx; mov [rbx+0x364], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dac8f: mov [rbx+0x394], edx; mov [rbx+0x364], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dac93: add [rax], al; mov [rbx+0x364], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dac95: mov [rbx+0x364], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dac96: mov [rbx+0x364], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dad39: mov [rbx+0x394], dx; cmove eax, ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dad3a: mov [rbx+0x394], edx; cmove eax, ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dad3c: xchg esp, eax; add eax, [rax]; add [rdi], cl; ror dword ptr [rax-0x7d], 0xc4; or [rbx+0x5d], bl; ret;
0xffffffff813dad3e: add [rax], al; cmove eax, ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dad40: cmove eax, ecx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813dadfe: or [r8-0x7b], cl; shl byte ptr [rsi+rcx+0x44], 0x89; mov al, [0x415bc03100000c80]; pop rsp; pop rbp; ret;
0xffffffff813dadff: or [rax-0x7b], cl; shl byte ptr [rsi+rcx+0x44], 0x89; mov al, [0x415bc03100000c80]; pop rsp; pop rbp; ret;
0xffffffff813dae02: shl byte ptr [rsi+rcx+0x44], 0x89; mov al, [0x415bc03100000c80]; pop rsp; pop rbp; ret;
0xffffffff813dae07: mov al, [0x415bc03100000c80]; pop rsp; pop rbp; ret;
0xffffffff813db15b: pop rsp; mov eax, r14d; pop r13; pop r14; pop rbp; ret;
0xffffffff813db4ad: cmp ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813db584: xchg [rdx+0x66000004], esp; mov [rcx], eax; xor eax, eax; ret;
0xffffffff813dbe50: add rsp, 0x100; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff813dbe51: add esp, 0x100; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff813dc3e3: cli; add ecx, [rdi]; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff813dc3e4: add ecx, [rdi]; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff813dc46e: fcomp st, dword ptr [rbx+0x41]; pop rsp; shl rdx, 0x20; pop rbp; or rax, rdx; ret;
0xffffffff813dc471: pop rsp; shl rdx, 0x20; pop rbp; or rax, rdx; ret;
0xffffffff813dc830: add al, ch; mov edx, 0x48ffc85e; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813dc832: mov edx, 0x48ffc85e; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813dcb70: sbb [rcx+0xf], al; xchg esp, eax; ror dword ptr [rdi], 0x94; ret 0x48d;
0xffffffff813dcb73: xchg esp, eax; ror dword ptr [rdi], 0x94; ret 0x48d;
0xffffffff813dcb76: xchg esp, eax; ret 0x48d;
0xffffffff813dcca1: ret 0x7c83;
0xffffffff813dd37f: ret 0x2de9;
0xffffffff813dd46d: add [rax-0x77], cl; sbb dword ptr [rax+0x5b000010], 0x41; pop rsp; pop rbp; ret;
0xffffffff813dd470: sbb dword ptr [rax+0x5b000010], 0x41; pop rsp; pop rbp; ret;
0xffffffff813dd471: cwde; adc [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813dd472: adc [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813dd5af: cmp dword ptr [rax+0x48000000], 0x29; push rax; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813dd5b3: add [rax+0x29], cl; push rax; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813dd5b6: push rax; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813dd689: and dword ptr [rax+0x5b000010], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813dd6e9: add esp, esp; call far fword ptr [rbp+0x48];
0xffffffff813dd9bb: enter 0x5bff, 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ddd11: ret 0x3b83;
0xffffffff813ddd56: ret 0x813d;
0xffffffff813dde5e: ret 0x4daa;
0xffffffff813ddf05: ret 0x4dc4;
0xffffffff813ddf20: ret 0x4db7;
0xffffffff813ddf3a: ret 0x4dcf;
0xffffffff813de392: mov edx, 0xfffffffb; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de420: mov byte ptr [rbx+0xac], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de423: add [rax], al; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de434: add [rbp-0x53], dh; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de436: lodsd [rsi]; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de50e: xchg [rdx+0x66000000], esp; mov [rdi+0x9c], eax; xor eax, eax; ret;
0xffffffff813de5da: mov eax, 0xfffffffb; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff813de68f: movzx eax, word ptr [rbx+0xa2]; mov [rbx+0x9c], ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813de692: mov [0x9c838966000000], al; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813de694: add [rax], al; mov [rbx+0x9c], ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813de696: mov [rbx+0x9c], ax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813de697: mov [rbx+0x9c], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff813de737: cmp [rdx], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff813de780: xchg esp, edi; add [rax], al; add [rcx], al; pop rbp; ret;
0xffffffff813deab6: add [rcx+0xc4091], cl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813deaba: or al, 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813dec24: ret 0x8964;
0xffffffff813dec81: xchg esp, eax; adc [rax], al; add bl, al; nop [rax+rax]; mov [rdi+0x10c4], esi; ret;
0xffffffff813defc1: mov ecx, 0x415bffcb; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813e0b54: ret 0x24a0;
0xffffffff813e10f7: ret 0xb44e;
0xffffffff813e1a3d: ret 0x4d01;
0xffffffff813e1f36: ret 0x300;
0xffffffff813e22c1: add [rax-0x75], cl; xchg [rax+3], esp; add [rax], al; mov eax, [rax+8]; pop rbp; ret;
0xffffffff813e22c4: xchg [rax+3], esp; add [rax], al; mov eax, [rax+8]; pop rbp; ret;
0xffffffff813e295e: ret 0x7572;
0xffffffff813e3261: pop rsp; mov eax, r13d; pop r13; pop r14; pop rbp; ret;
0xffffffff813e36af: add al, ch; pop rbx; mov ebp, 0x415bffff; pop rsp; pop rbp; ret;
0xffffffff813e36b1: pop rbx; mov ebp, 0x415bffff; pop rsp; pop rbp; ret;
0xffffffff813e36b2: mov ebp, 0x415bffff; pop rsp; pop rbp; ret;
0xffffffff813e37ea: inc dword ptr [rbp+0x480974c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813e400f: cmp eax, 0xf418129; xchg esp, eax; ret;
0xffffffff813e404a: ret 0x8802;
0xffffffff813e452b: out 0xe8, eax; outsd dx, [rsi]; mov ebx, 0x415b000d; pop rsp; pop rbp; ret;
0xffffffff813e452d: outsd dx, [rsi]; mov ebx, 0x415b000d; pop rsp; pop rbp; ret;
0xffffffff813e452e: mov ebx, 0x415b000d; pop rsp; pop rbp; ret;
0xffffffff813e4a80: cmp eax, 0xa74a888; add rsp, 8; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff813e4a85: add rsp, 8; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff813e4a86: add esp, 8; mov rax, rdx; pop rbx; pop rbp; ret;
0xffffffff813e4abf: add rsp, 8; and rdx, rax; pop rbx; pop rbp; mov rax, rdx; ret;
0xffffffff813e4ac0: add esp, 8; and rdx, rax; pop rbx; pop rbp; mov rax, rdx; ret;
0xffffffff813e4e68: ret 0xc78;
0xffffffff813e5e2f: xor eax, 0x415b001d; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e5f4f: xor al, 0x1d; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e6234: ret 0x4f80;
0xffffffff813e66dc: adc ecx, [rax-0x74b7afbe]; add ecx, [rdx+0x415b5040]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e66e2: add ecx, [rdx+0x415b5040]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e6faa: ret 0x83de;
0xffffffff813e77b6: inc dword ptr [rax-0x1702009b]; add byte ptr [rdx+0xd], 0; leave; ret;
0xffffffff813e77bc: add byte ptr [rdx+0xd], 0; leave; ret;
0xffffffff813e7d3b: ret 0x5451;
0xffffffff813e7deb: ret 0x7e37;
0xffffffff813e7eef: ret 0x8b7e;
0xffffffff813e8053: ret 0x7e;
0xffffffff813e805f: ret 0x417e;
0xffffffff813e8503: ret 0x12eb;
0xffffffff813e862f: cmovne rbx, rax; add rsp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff813e8630: cmovne ebx, eax; add rsp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff813e8633: add rsp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff813e8634: add esp, 0x10; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff813e894b: ret 0x7cfb;
0xffffffff813e8ee0: or dword ptr [rdi], 0xc08303be; add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e8ee3: add eax, [rbx+0x415b01c0]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e8f8f: add [rbp+5], dh; mov [rdx], r9; leave; ret;
0xffffffff813e8f92: mov [rdx], r9; leave; ret;
0xffffffff813e8f93: mov [rdx], ecx; leave; ret;
0xffffffff813e8f97: leave; mov eax, 0xfffffff0; ret;
0xffffffff813e8fbe: or dh, [rbp+9]; mov qword ptr [rdx], 0; leave; ret;
0xffffffff813e8fc1: mov qword ptr [rdx], 0; leave; ret;
0xffffffff813e8fc2: mov dword ptr [rdx], 0; leave; ret;
0xffffffff813e8fc4: add [rax], al; add [rax], al; leave; ret;
0xffffffff813e8fca: leave; mov eax, 0xfffffffe; ret;
0xffffffff813e94a9: mov [0x415bc0310000051c], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e94b9: mov [0x415bc0310000050c], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e94d2: ret 0x5564;
0xffffffff813e9583: ret 0x5567;
0xffffffff813e9597: ret 0x556f;
0xffffffff813e9675: leave; cmc; call far fword ptr [rbx+0x41];
0xffffffff813e9819: ret 0xfe50;
0xffffffff813e9839: ret 0xb3eb;
0xffffffff813e9900: ret 0xfe00;
0xffffffff813e993c: mov esp, eax; add al, 0; add [rdx], al; pop rbx; pop rbp; ret;
0xffffffff813e9bcd: add al, ch; cmp eax, 0x480000a8; add esp, 0x18; leave; ret;
0xffffffff813e9bcf: cmp eax, 0x480000a8; add esp, 0x18; leave; ret;
0xffffffff813e9c80: cmpsd [rsi], [rdi]; add [rax], al; add rsp, 0x18; leave; ret;
0xffffffff813e9d0e: cmpsb [rsi], [rdi]; add [rax], al; add rsp, 0x18; leave; ret;
0xffffffff813e9d5a: xchg edi, eax; inc dword ptr [rax+rax*8+0x415b0774]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e9d5c: inc dword ptr [rax+rax*8+0x415b0774]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813e9fd7: neg dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ea4d4: enter 0x1c, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813ea574: sub eax, 0xfff48f66; mov eax, [rbp-4]; leave; ret;
0xffffffff813ea596: movzx eax, byte ptr [rcx+0x48c]; leave; shr al, 6; and eax, 1; ret;
0xffffffff813ea59b: add [rax], al; leave; shr al, 6; and eax, 1; ret;
0xffffffff813ea59d: leave; shr al, 6; and eax, 1; ret;
0xffffffff813ea5b3: sub eax, 0xfff48f27; mov eax, [rbp-4]; leave; ret;
0xffffffff813ea5c8: mov [rdx-0x4c], bl; or dword ptr [rcx+0xce8fc45], 0x8bfff48f; cld; leave; ret;
0xffffffff813ea5cb: or dword ptr [rcx+0xce8fc45], 0x8bfff48f; cld; leave; ret;
0xffffffff813ea5ea: ret 0x23b9;
0xffffffff813ea60d: sahf; add [rax], al; leave; ret;
0xffffffff813eb0a5: ret 0x481c;
0xffffffff813eb0d3: ret 0x55df;
0xffffffff813eb980: ret 0x5627;
0xffffffff813eb99d: ret 0xdd27;
0xffffffff813ec6d4: ret 0xfe30;
0xffffffff813ec9da: pop rsp; and al, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff813ecda8: fisttp dword ptr [rcx-0x75], st; xchg esp, eax; and al, 0xe0; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff813ecdab: xchg esp, eax; and al, 0xe0; add [rax], eax; add [rax+0x63], cl; ret;
0xffffffff813ed18e: mov edi, 0x415bffff; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813ed3a5: ret 0xe4c2;
0xffffffff813ed3e6: ret 0xe631;
0xffffffff813eda1f: ret 0xf0f8;
0xffffffff813edd79: ret 0x19ba;
0xffffffff813ee58a: ret 0xcac3;
0xffffffff813ee982: xchg esp, eax; ret 0x8b48;
0xffffffff813eef82: ret 0x48f8;
0xffffffff813ef01a: ret 0x1c7c;
0xffffffff813ef777: ret 0x1278;
0xffffffff813ef982: ret 0x96ba;
0xffffffff813efda2: ret 0x58c9;
0xffffffff813efddc: ret 0x58ad;
0xffffffff813eff22: ret 0x57da;
0xffffffff813eff5e: ret 0xc0f9;
0xffffffff813f009d: ret 0x3e74;
0xffffffff813f02a7: add eax, 0xb00fef; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f02a8: out dx, eax; cmpxchg [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f02a9: cmpxchg [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f02aa: mov al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f0590: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol bl, 0xb8; add [rax], eax; add [rax], al; ret;
0xffffffff813f05e9: add [r11-0xda9bbd], cl; dec edi; dec dword ptr [rcx+0x415b6443]; pop rsp; pop rbp; ret;
0xffffffff813f05ea: add [rbx-0xda9bbd], cl; dec edi; dec dword ptr [rcx+0x415b6443]; pop rsp; pop rbp; ret;
0xffffffff813f0646: dec edi; dec dword ptr [rcx+0x415b6443]; pop rsp; pop rbp; ret;
0xffffffff813f0648: dec dword ptr [rcx+0x415b6443]; pop rsp; pop rbp; ret;
0xffffffff813f06c3: dec dword ptr [rcx+0x415b6443]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813f0989: or dword ptr [rax-0x7d], 0x415b10c4; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813f0e4d: fild st, word ptr [rbp+0x415b001c]; pop rsp; pop rbp; ret;
0xffffffff813f1078: ret 0x60d6;
0xffffffff813f113a: ret 0x1298;
0xffffffff813f11f2: movsxd rax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f11f3: movsxd eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f1dc7: xchg esp, eax; add [rax], al; add [rbx+rcx*4+0x43], al; adc [rax-0x75], cl; or [rax-0x39], cl; ret 0x61cf;
0xffffffff813f1f17: adc eax, 0x80001c76; mov esp, [rax]; add [rax], eax; add [rcx], al; mov byte ptr [rip+0xaff377], 0; call qword ptr [0xffffffff81c27018];
0xffffffff813f1f1c: mov esp, [rax]; add [rax], eax; add [rcx], al; mov byte ptr [rip+0xaff377], 0; call qword ptr [0xffffffff81c27018];
0xffffffff813f1fc8: ret 0x6192;
0xffffffff813f21a4: mov qword ptr [rbx+0x118], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f21a5: mov dword ptr [rbx+0x118], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f2778: ret 0x8ce9;
0xffffffff813f2b62: ret 0x4c8b;
0xffffffff813f3723: or [rbp+0x1c], ebx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f3da9: dec dword ptr [rcx-0x3b7cb728]; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813f3e92: or eax, 0x144bfff0; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f3e94: dec dword ptr [rbx+0x14]; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f3e96: adc al, 0x48; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f3fb4: adc [r13+0x480975c0], al; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f3fb5: adc [rbp+0x480975c0], al; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f3ffe: sub eax, 0xffc885bc; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f4000: mov esp, 0x48ffc885; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff813f42a2: mov dl, [rcx+0x1c]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff813f450e: ret 0x5590;
0xffffffff813f4684: ret 0x8002;
0xffffffff813f4d1c: ret 0xaee8;
0xffffffff813f577a: ret 0xd1ca;
0xffffffff813f5880: out 0xe8, eax; fisubr st, dword ptr [rip+0x415bffff]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813f5882: fisubr st, dword ptr [rip+0x415bffff]; pop rsp; pop r13; pop rbp; ret;
0xffffffff813f5883: sub eax, 0x415bffff; pop rsp; pop r13; pop rbp; ret;
0xffffffff813f5b47: sub byte ptr [rdx], 0x6a; add al, ch; mov edi, 0x48ffffe8; add esp, 0x18; leave; ret;
0xffffffff813f5b4b: add al, ch; mov edi, 0x48ffffe8; add esp, 0x18; leave; ret;
0xffffffff813f5b4d: mov edi, 0x48ffffe8; add esp, 0x18; leave; ret;
0xffffffff813f5f03: fistp dword ptr [rbx+0x41], st; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff813f601a: ret 0x1c0c;
0xffffffff813f60b7: ret 0x1ba;
0xffffffff813f61c8: ret 0x180;
0xffffffff813f64b3: ret 0x160;
0xffffffff813f6f48: xchg eax, esp; add al, 0; add [rbx-0x2ff60120], al; mov [rdi+0x4e0], al; xor eax, eax; ret;
0xffffffff813f7120: ret 0xee75;
0xffffffff813f71fa: ret 0x6663;
0xffffffff813f7230: ret 0x6673;
0xffffffff813f76a5: ret 0x669d;
0xffffffff813f7971: xchg ebx, eax; add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff813f7cdc: ret 0x5ee8;
0xffffffff813f7d46: fistp dword ptr [rbx+0x41], st; pop rsp; mov rax, r11; pop r13; pop rbp; ret;
0xffffffff813f7d49: pop rsp; mov rax, r11; pop r13; pop rbp; ret;
0xffffffff813f7d9a: ret 0x1c17;
0xffffffff813f7e4d: leave; setne al; ret;
0xffffffff813f82b5: add al, ch; xor eax, 0x89ffffff; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813f82b7: xor eax, 0x89ffffff; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff813f857b: shl byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff813f8685: ret 0x6c75;
0xffffffff813f875d: ret 0x1c0;
0xffffffff813f935e: ret 0x4001;
0xffffffff813f9a60: ret 0xf50;
0xffffffff813f9c7b: ret 0xbd0f;
0xffffffff813f9ca6: ret 0x10ba;
0xffffffff813f9e0b: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x1b8;
0xffffffff813f9e0d: add [rdi], cl; xchg esp, eax; ret 0x1b8;
0xffffffff813f9e0f: xchg esp, eax; ret 0x1b8;
0xffffffff813fa1a0: ret 0x68a4;
0xffffffff813fa2b0: ret 0xc587;
0xffffffff813fa31b: ret 0x68a0;
0xffffffff813fa366: ret 0x3a54;
0xffffffff813fa8e3: ret 0xc2eb;
0xffffffff813faa3f: ret 0x1b;
0xffffffff813fab81: ret 0x12c0;
0xffffffff813fadf6: ret 0x7602;
0xffffffff813fb1fc: ret 0xbd6d;
0xffffffff813fb20e: ret 0x760c;
0xffffffff813fb286: in eax, 0xe8; xchg esp, eax; sbb eax, [r8]; pop rbp; cdqe; ret;
0xffffffff813fb288: xchg esp, eax; sbb eax, [r8]; pop rbp; cdqe; ret;
0xffffffff813fb7e8: adc dword ptr [rax-0x18], 0x1b3e31; mov eax, 0x32; leave; ret;
0xffffffff813fb7eb: xor [rsi], edi; sbb eax, [rax]; mov eax, 0x32; leave; ret;
0xffffffff813fb7ec: sbb eax, [rax]; mov eax, 0x32; leave; ret;
0xffffffff813fb7ed: sbb eax, [rax]; mov eax, 0x32; leave; ret;
0xffffffff813fb7ee: add [rax+0x32], bh; leave; ret;
0xffffffff813fb7ef: mov eax, 0x32; leave; ret;
0xffffffff813fb7f0: xor al, [rax]; add [rax], al; leave; ret;
0xffffffff813fbd48: ret 0xcb8e;
0xffffffff813fc064: cmovns rax, rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fc065: cmovns eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fc0a2: ret 0xf5c4;
0xffffffff813fc379: ret 0xa1e8;
0xffffffff813fc46d: ret 0xe7c1;
0xffffffff813fc48a: ret 0xccc2;
0xffffffff813fc5c4: ret 0x458;
0xffffffff813fc5e9: xor [rbx], bl; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff813fc690: xor dword ptr [rdx+rcx+0x5b], 0x41e08944; pop rsp; pop r13; pop rbp; ret;
0xffffffff813fc6af: ret 0xfd88;
0xffffffff813fc82a: ret 0x7969;
0xffffffff813fc83e: ret 0xd3ed;
0xffffffff813fcce4: pop rsp; cmove eax, edx; pop rbp; ret;
0xffffffff813fd92b: ret 0x850c;
0xffffffff813fe0cb: ret 0x4c0;
0xffffffff813fe340: add esp, edx; call far fword ptr [rax+0x5a];
0xffffffff813fe382: ret 0x58e8;
0xffffffff813fe708: shl byte ptr [rbp+0xc], 0x48; add esp, 0x108; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fe70a: or al, 0x48; add esp, 0x108; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fe70b: add rsp, 0x108; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fe70c: add esp, 0x108; pop rbx; pop r12; pop rbp; ret;
0xffffffff813fe8db: ret 0xcc7f;
0xffffffff813fec47: ret 0x7e3f;
0xffffffff813ff46f: ret 0xbd80;
0xffffffff813ff9d6: ret 0x7bb8;
0xffffffff813ffae4: ret 0x7e1c;
0xffffffff813ffea4: ret 0x76e8;
0xffffffff814002c7: ret 0x7cf0;
0xffffffff81400ce7: ret 0xbfe9;
0xffffffff81401060: mov dh, 0x53; add eax, 0x41d0895b; pop rsp; pop r13; pop rbp; ret;
0xffffffff81401061: push rbx; add eax, 0x41d0895b; pop rsp; pop r13; pop rbp; ret;
0xffffffff81401062: add eax, 0x41d0895b; pop rsp; pop r13; pop rbp; ret;
0xffffffff8140147f: add [rcx+rcx*4-0x20], al; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81401653: inc dword ptr [rbp+0x90674c0]; add esp, 4; add [rax], al; pop rbx; pop rbp; ret;
0xffffffff81401659: add esp, 4; add [rax], al; pop rbx; pop rbp; ret;
0xffffffff81401cfa: or [rax+0x39], cl; or [r15], cl; xchg esp, eax; ret 0x8d4b;
0xffffffff81401cfd: or [r15], cl; xchg esp, eax; ret 0x8d4b;
0xffffffff81401cfe: or [rdi], cl; xchg esp, eax; ret 0x8d4b;
0xffffffff81401d00: xchg esp, eax; ret 0x8d4b;
0xffffffff81401d01: ret 0x8d4b;
0xffffffff81401d81: ret 0x572a;
0xffffffff81401de0: ret 0xc040;
0xffffffff81401e62: ret 0x9e0f;
0xffffffff814023a1: ret 0xf375;
0xffffffff8140262a: ret 0xfe7e;
0xffffffff814027f2: ret 0x7ff6;
0xffffffff81402819: ret 0x7ff9;
0xffffffff81402a19: ret 0xdce1;
0xffffffff81402b7e: pop rsp; mov eax, r13d; pop r13; pop rbp; ret;
0xffffffff81402c9b: ret 0x1c10;
0xffffffff81403420: ret 0x3020;
0xffffffff8140347a: ret 0x39f0;
0xffffffff81403545: fucomip st, st(0); xchg ebp, eax; xor eax, 0x415bffe3; pop rsp; pop rbp; ret;
0xffffffff81403547: xchg ebp, eax; xor eax, 0x415bffe3; pop rsp; pop rbp; ret;
0xffffffff81403548: xor eax, 0x415bffe3; pop rsp; pop rbp; ret;
0xffffffff81403557: ret 0x3040;
0xffffffff814036e8: ret 0x3740;
0xffffffff8140380c: add [rcx-0x75], cl; xchg esp, eax; and al, 0x18; add [rax], eax; add dh, dh; ret 0x7540;
0xffffffff8140380f: xchg esp, eax; and al, 0x18; add [rax], eax; add dh, dh; ret 0x7540;
0xffffffff81403ae9: add ch, al; and [rdx+0x415bffe5], edi; pop rsp; pop r13; pop rbp; ret;
0xffffffff81403aeb: and [rdx+0x415bffe5], edi; pop rsp; pop r13; pop rbp; ret;
0xffffffff81403aec: mov edx, 0x415bffe5; pop rsp; pop r13; pop rbp; ret;
0xffffffff81403ea2: mov dl, [rbp+0x1b]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81403fc7: mov ebx, [rip+0xaedc97]; add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81403fc8: sbb eax, 0xaedc97; add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81403fcd: add rsp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81403fce: add esp, 0x28; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8140409e: sbb eax, [rax]; mov eax, ebx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff814040a0: mov eax, ebx; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81404893: add rsp, 8; mov eax, ecx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81404894: add esp, 8; mov eax, ecx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814048c2: add dh, [rbp+2]; xor eax, eax; leave; ret;
0xffffffff814049ed: mov eax, 0xfffffffb; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81404a10: ret 0x1a00;
0xffffffff81404a21: mov eax, 0xffffff92; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81404da2: ret 0x822f;
0xffffffff81405144: ret 0xb481;
0xffffffff8140531e: ret 0x8140;
0xffffffff814056f4: ret 0x4974;
0xffffffff81405704: ret 0xd341;
0xffffffff81405980: fucomip st, st(0); sbb dh, [rax+0x415bfffe]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81405982: sbb dh, [rax+0x415bfffe]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81405f8c: push rdx; leave; call far fword ptr [rbx+0x5d];
0xffffffff814060f5: xchg esp, eax; sbb al, [rax]; pop rbp; cdqe; ret;
0xffffffff814063c8: mov edi, 0xc031fff2; mov rbx, [rbp-8]; leave; ret;
0xffffffff814063ca: push qword ptr [rcx]; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81406fd9: ret 0xfc0;
0xffffffff814072c6: ret 0x4b0d;
0xffffffff814076be: ret 0x128b;
0xffffffff81407d93: xchg esp, eax; add [rax], eax; add [rcx], al; ret 0xff85;
0xffffffff81408068: xchg esp, eax; adc eax, edx; add al, [rax]; add [rcx], bh; ret 0x870f;
0xffffffff814082a9: ret 0x4d76;
0xffffffff814082d9: ret 0x677;
0xffffffff814082fb: ret 0x8174;
0xffffffff8140893d: ret 0xcf75;
0xffffffff81408f1f: add [rbx+0x415b0440], cl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8140934e: shl byte ptr [rdi+rax+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff814094ca: ret 0xf07;
0xffffffff814098f6: sbb dword ptr [rax], 1; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff814098f7: sbb [rcx], al; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81409987: mov dword ptr [rdx+8], 0x40; mov [rdx+0x40], rax; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff8140998b: add [rax], al; add [rax-0x77], cl; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff8140998c: add [rax], al; mov [rdx+0x40], rax; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff8140998d: add [rax-0x77], cl; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff8140998e: mov [rdx+0x40], rax; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff8140998f: mov [rdx+0x40], eax; mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff81409992: mov [rdx+0x48], rax; leave; mov rax, rdx; ret;
0xffffffff81409993: mov [rdx+0x48], eax; leave; mov rax, rdx; ret;
0xffffffff8140a112: ret 0xa990;
0xffffffff8140a12e: ret 0x3ec;
0xffffffff8140aabb: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0xe083;
0xffffffff8140aabd: add [rdi], cl; xchg esp, eax; ret 0xe083;
0xffffffff8140aaea: ret 0xd0f7;
0xffffffff8140adc4: ret 0x1977;
0xffffffff8140aea3: ret 0x8d43;
0xffffffff8140af2b: ret 0xf983;
0xffffffff8140b5b1: add [rax], al; add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff8140b85d: ret 0xf7c;
0xffffffff8140bc3d: ret 0x8683;
0xffffffff8140c9f3: ret 0xa8b;
0xffffffff8140caaf: add al, [rax]; add al, ch; leave; iretd;
0xffffffff8140cc8b: mov esp, [rax+rax+0x39450000]; iretd;
0xffffffff8140d251: ret 0x1a;
0xffffffff8140d76a: ret 0x1abc;
0xffffffff8140e047: mov bl, 0x1a; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8140e0ac: ret 0x41c3;
0xffffffff8140e4a9: ret 0x2c74;
0xffffffff8140e574: ret 0x2d74;
0xffffffff8140e767: add [rax], al; add al, ch; sbb ebx, 0x415bffc6; pop rsp; pop rbp; ret;
0xffffffff8140e769: add al, ch; sbb ebx, 0x415bffc6; pop rsp; pop rbp; ret;
0xffffffff8140e76b: sbb ebx, 0x415bffc6; pop rsp; pop rbp; ret;
0xffffffff8140eb0a: movsb [rdi], [rsi]; xchg [rax+0x415b0574], al; pop rsp; pop rbp; ret;
0xffffffff8140eb0b: xchg [rax+0x415b0574], al; pop rsp; pop rbp; ret;
0xffffffff8140eb0c: xor byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8140ed04: ret 0x5623;
0xffffffff8140ed21: ret 0x9974;
0xffffffff8140ed5e: ret 0x4fe9;
0xffffffff8140ee32: or eax, 2; mov [rdx-0x10], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140ee35: mov [rdx-0x10], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140ee53: mov [rsi+0x18], rdx; mov [rdx], rdi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140ee54: mov [rsi+0x18], edx; mov [rdx], rdi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140ee57: mov [rdx], rdi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140ee58: mov [rdx], edi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8140f0b7: push rbx; sbb [rax-0x77], cl; xor bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8140f0b8: sbb [rax-0x77], cl; xor bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8140f0bb: xor bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8140f251: ret 0x5723;
0xffffffff8140f390: ret 0x3b75;
0xffffffff8140f3e5: ret 0xb075;
0xffffffff8140f4d9: ret 0xf602;
0xffffffff8140f8d0: ret 0xd166;
0xffffffff814106b7: ret 0xce83;
0xffffffff81410d52: mov [rax+0x20], rdx; lea rdx, [rax+0x30]; mov [rax+0x30], rdx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d53: mov [rax+0x20], edx; lea rdx, [rax+0x30]; mov [rax+0x30], rdx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d56: lea rdx, [rax+0x30]; mov [rax+0x30], rdx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d57: lea edx, [rax+0x30]; mov [rax+0x30], rdx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d5a: mov [rax+0x30], rdx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d5b: mov [rax+0x30], edx; mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d5e: mov [rax+0x38], rdx; leave; ret;
0xffffffff81410d5f: mov [rax+0x38], edx; leave; ret;
0xffffffff81410e5b: clc; add [rdi], ecx; xchg esp, eax; ret 0xeec1;
0xffffffff81410e5c: add [rdi], ecx; xchg esp, eax; ret 0xeec1;
0xffffffff81410f28: ret 0x1c78;
0xffffffff81411c01: ret 0x8025;
0xffffffff814120c2: ret 0xed66;
0xffffffff814120d5: ret 0xa802;
0xffffffff81412572: ret 0x8c18;
0xffffffff8141258a: and [rcx+0x415b1c58], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814125f2: ret 0x8c48;
0xffffffff81412637: ret 0x9ffb;
0xffffffff81412670: ret 0x8ca8;
0xffffffff81412693: ret 0x9ff2;
0xffffffff814126ea: ret 0x1994;
0xffffffff81412752: ret 0x8c78;
0xffffffff814127ea: ret 0x8cf8;
0xffffffff81412a77: adc ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81412ae7: ret 0x468b;
0xffffffff81412d36: ret 0x8d20;
0xffffffff81412db8: ret 0x2650;
0xffffffff81412e83: ret 0x3e7;
0xffffffff81412ee2: ret 0x28f5;
0xffffffff81412eee: ret 0x4863;
0xffffffff81412faa: ret 0x548;
0xffffffff8141306d: ret 0x25f0;
0xffffffff8141357a: ret 0x1b75;
0xffffffff81413626: ret 0x8de0;
0xffffffff81413727: ret 0x8e00;
0xffffffff8141382d: ret 0x4e2;
0xffffffff814138e2: ror byte ptr [rdi], cl; xchg esp, eax; ret 0x8548;
0xffffffff814138e4: xchg esp, eax; ret 0x8548;
0xffffffff814138ed: ret 0x1f75;
0xffffffff81413a8d: ret 0x2590;
0xffffffff81413c63: ret 0x25b0;
0xffffffff81414333: ret 0xa0ce;
0xffffffff8141438c: or dword ptr [rbx+0x9c0], 2; mov dword ptr [rbx+0x90], 4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81414391: add [rdx], al; mov dword ptr [rbx+0x90], 4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81414393: mov dword ptr [rbx+0x90], 4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81414394: adc dword ptr [rax+0x4000000], 0; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81414398: add [rax+rax], al; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81414399: add al, 0; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814143eb: ret 0xa0f3;
0xffffffff81414428: mov dword ptr [rbx+0x9c0], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814144b8: ret 0xa10e;
0xffffffff8141455d: ret 0xa117;
0xffffffff8141456d: ret 0xa12e;
0xffffffff814145f2: ret 0xa14b;
0xffffffff8141460c: ret 0x8ff8;
0xffffffff81414661: ret 0x9028;
0xffffffff8141469b: ret 0x9050;
0xffffffff8141470b: ret 0x9098;
0xffffffff8141478c: ret 0x8fa8;
0xffffffff8141481a: ret 0x61cf;
0xffffffff814148e7: ret 0x9118;
0xffffffff81414a0e: ret 0x9150;
0xffffffff81414a1f: or al, [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81414c30: pop rsp; enter 0x48ff, 0xc7; ret 0x91c8;
0xffffffff81414c35: ret 0x91c8;
0xffffffff81414fe9: ret 0x1c88;
0xffffffff8141547c: ret 0x9250;
0xffffffff814154c3: ret 0xa186;
0xffffffff814154eb: ret 0x9278;
0xffffffff8141552f: ret 0x8f10;
0xffffffff81415883: ret 0x92a0;
0xffffffff814158d3: ret 0x9300;
0xffffffff81415bc2: ret 0x9358;
0xffffffff81415cd9: ret 0x817d;
0xffffffff81415d58: ret 0x2670;
0xffffffff81415f3b: ret 0x95a8;
0xffffffff81415fa6: ret 0x9788;
0xffffffff81416110: ret 0x9420;
0xffffffff814161b6: ret 0x9760;
0xffffffff8141627d: ret 0x9448;
0xffffffff814162f7: ret 0x93a0;
0xffffffff81416351: ret 0x2690;
0xffffffff81416426: ret 0x97b8;
0xffffffff814164b2: ret 0x26b0;
0xffffffff81416923: ret 0xcf39;
0xffffffff81416f1e: ret 0x5ce8;
0xffffffff81416fdf: ret 0x25d0;
0xffffffff8141736a: ret 0x2570;
0xffffffff814179c0: ret 0x2550;
0xffffffff81417b55: ret 0xf28;
0xffffffff81417ca1: ret 0x9aa8;
0xffffffff81417cbe: ret 0x9ad0;
0xffffffff81417cdb: ret 0x9af8;
0xffffffff81417cf7: ret 0x9b18;
0xffffffff81417e9e: ret 0x2530;
0xffffffff81417f1b: ret 0x9bb8;
0xffffffff81417f89: ret 0x9be0;
0xffffffff81418057: ret 0xa1af;
0xffffffff814180c0: ret 0x26d0;
0xffffffff81418142: ret 0x9c78;
0xffffffff81418390: mov esp, [rax]; or al, 0; add [rax-0x39], cl; ret 0x9d50;
0xffffffff81418397: ret 0x9d50;
0xffffffff81418815: ret 0xba9e;
0xffffffff81418ab4: ret 0x9e80;
0xffffffff81418b71: ret 0xa1d9;
0xffffffff81418b9e: ret 0xa1f5;
0xffffffff81418bdc: ret 0x9f68;
0xffffffff81418bef: ret 0x9f90;
0xffffffff81418c0a: ret 0xa212;
0xffffffff81418c62: ret 0x2610;
0xffffffff814191e2: pop rsp; pop r13; pop r14; pop rbp; lea rsp, [r10-8]; ret;
0xffffffff8141968a: ret 0x18d7;
0xffffffff8141983b: add [rdx+0x415bffcf], ecx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81419ab3: ret 0xa2f8;
0xffffffff81419d28: ret 0xa328;
0xffffffff8141a0fa: ret 0x578b;
0xffffffff8141a12e: push rbx; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8141a38a: ret 0x4918;
0xffffffff8141a98e: add cl, [rdi]; xchg esp, eax; ret 0x548d;
0xffffffff8141a990: xchg esp, eax; ret 0x548d;
0xffffffff8141a991: ret 0x548d;
0xffffffff8141a9bf: adc [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8141b3ba: add [rax], al; add [rax-0x75], cl; xchg esp, eax; ret;
0xffffffff8141b3bc: add [rax-0x75], cl; xchg esp, eax; ret;
0xffffffff8141b642: ret 0xa92c;
0xffffffff8141b68f: ret 0xa93d;
0xffffffff8141b703: ret 0xe075;
0xffffffff8141b753: ret 0xa950;
0xffffffff8141b780: ret 0xa963;
0xffffffff8141b7ad: ret 0xa97d;
0xffffffff8141ba7a: ret 0xcf67;
0xffffffff8141bbe9: ret 0xa408;
0xffffffff8141bc30: ret 0xa99b;
0xffffffff8141bd70: ret 0xa488;
0xffffffff8141be88: ret 0xa9fd;
0xffffffff8141bea2: ret 0xaa1a;
0xffffffff8141beee: ret 0xa4e8;
0xffffffff8141bf43: ret 0xa518;
0xffffffff8141bf6e: ret 0xaa36;
0xffffffff8141bff9: ret 0xa560;
0xffffffff8141c01e: ret 0xa5a0;
0xffffffff8141c03b: ret 0xa5d0;
0xffffffff8141c0a7: ret 0xa638;
0xffffffff8141c0d9: ret 0xa670;
0xffffffff8141c173: ret 0xa690;
0xffffffff8141c41f: ret 0xf075;
0xffffffff8141c445: ret 0xaa6a;
0xffffffff8141c81b: ret 0xa738;
0xffffffff8141c8e8: ret 0x3904;
0xffffffff8141ca6e: ret 0xa858;
0xffffffff8141cb61: ret 0xa778;
0xffffffff8141cb9c: ret 0xa7a0;
0xffffffff8141cbd7: ret 0xa7c8;
0xffffffff8141cc48: ret 0xa8b0;
0xffffffff8141cc72: ret 0xa888;
0xffffffff8141cf9a: ret 0xaaa3;
0xffffffff8141d283: add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8141d31e: ret 0x19;
0xffffffff8141d69a: ret 0xf15c;
0xffffffff8141d7d9: ret 0xc8eb;
0xffffffff8141dd5a: ret 0xba8d;
0xffffffff8141df0e: ret 0xbaa6;
0xffffffff8141df2a: ret 0xae58;
0xffffffff8141e11c: ret 0xaee0;
0xffffffff8141e1ed: ret 0xaf18;
0xffffffff8141e2fd: ret 0xbab9;
0xffffffff8141e6f1: ret 0xa9e8;
0xffffffff8141e8bf: ret 0xda89;
0xffffffff8141ee3d: ret 0x2770;
0xffffffff8141f65c: ret 0x7539;
0xffffffff8141f6cb: ret 0x2ae9;
0xffffffff8141f880: rol byte ptr [rcx+0xf], cl; xchg esp, eax; ret 0xd6e9;
0xffffffff8141f883: xchg esp, eax; ret 0xd6e9;
0xffffffff8141f884: ret 0xd6e9;
0xffffffff8141fdba: ret 0x945;
0xffffffff814200a1: ret 0xbb0c;
0xffffffff81420376: ret 0xb298;
0xffffffff81420551: ret 0xb310;
0xffffffff8142069f: ret 0xb588;
0xffffffff814206d5: ret 0x6083;
0xffffffff81420703: ret 0xb5b0;
0xffffffff814209ba: ret 0xe0e8;
0xffffffff81420a40: ret 0xb440;
0xffffffff814212e1: ret 0x970f;
0xffffffff81422385: ret 0x3e41;
0xffffffff81422d91: ret 0x9e0;
0xffffffff81422fe5: ret 0x3908;
0xffffffff81423118: ret 0x1640;
0xffffffff81423379: ret 0x4402;
0xffffffff814233a3: ret 0x200;
0xffffffff8142361b: add [rax], al; or [rdi], cl; xchg esp, eax; ret 0x3145;
0xffffffff8142361d: or [rdi], cl; xchg esp, eax; ret 0x3145;
0xffffffff81423628: ret 0xc609;
0xffffffff81423dda: ret 0xe925;
0xffffffff81424719: ret 0xbca0;
0xffffffff8142472f: ret 0xbcc8;
0xffffffff81424856: ret 0x3840;
0xffffffff81424986: ret 0x694d;
0xffffffff8142556b: mov [rax], al; add [rbx+0x883c80], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8142556d: add [rbx+0x883c80], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8142556f: cmp byte ptr [rax+rcx*4], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81425571: mov [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814259b3: ret 0xbe5b;
0xffffffff81425ab8: xchg esp, eax; ret 0x8166;
0xffffffff81425b32: ret 0xbf10;
0xffffffff81425d28: ret 0xbe78;
0xffffffff81425d61: ret 0xbec8;
0xffffffff81426163: add rsp, 8; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81426164: add esp, 8; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81426166: or [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff81426187: mov al, [0x8de8e58948000005]; xchg esp, eax; sbb [rax], al; pop rbp; cdqe; ret;
0xffffffff81426190: xchg esp, eax; sbb [rax], al; pop rbp; cdqe; ret;
0xffffffff81426ba7: fcomp st, dword ptr [rbx+0x41]; pop rsp; shr eax, 0x1f; pop rbp; add eax, 0x2002; ret;
0xffffffff81426baa: pop rsp; shr eax, 0x1f; pop rbp; add eax, 0x2002; ret;
0xffffffff81426f72: sub edx, eax; mov [rbx+0x114], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81426f74: mov [rbx+0x114], edx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81426f76: adc al, 1; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8142708f: ret 0x1c94;
0xffffffff81427581: ret 0xb858;
0xffffffff8142762e: sub r8d, [rbp-0xc]; mov [rbx+0x114], r8d; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8142762f: sub eax, [rbp-0xc]; mov [rbx+0x114], r8d; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81427631: hlt; mov [rbx+0x114], r8d; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81427632: mov [rbx+0x114], r8d; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81427633: mov [rbx+0x114], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81427635: adc al, 1; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81427a6b: mov [r12], ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81427d18: ret 0x380;
0xffffffff81427f0c: adc [rax+0x8770ffa], al; mov eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81427f0e: cli; emms; or [rcx+0x5d8b48d0], cl; clc; leave; ret;
0xffffffff81427f0f: emms; or [rcx+0x5d8b48d0], cl; clc; leave; ret;
0xffffffff81427f11: or [rcx+0x5d8b48d0], cl; clc; leave; ret;
0xffffffff81427f2e: xor edx, edx; mov rbx, [rbp-8]; leave; mov eax, edx; ret;
0xffffffff81427f2f: ror byte ptr [rax-0x75], cl; pop rbp; clc; leave; mov eax, edx; ret;
0xffffffff81427f30: mov rbx, [rbp-8]; leave; mov eax, edx; ret;
0xffffffff81427f31: mov ebx, [rbp-8]; leave; mov eax, edx; ret;
0xffffffff81427f32: pop rbp; clc; leave; mov eax, edx; ret;
0xffffffff81427f33: clc; leave; mov eax, edx; ret;
0xffffffff814281c9: add [rdi], ecx; xchg esp, eax; sar dword ptr [rsi+rax], 0xf; xchg esp, eax; ret 0xd108;
0xffffffff814281cb: xchg esp, eax; sar dword ptr [rsi+rax], 0xf; xchg esp, eax; ret 0xd108;
0xffffffff814281cc: sar dword ptr [rsi+rax], 0xf; xchg esp, eax; ret 0xd108;
0xffffffff81428a1a: ret 0x1ca0;
0xffffffff81428e96: ret 0x81b4;
0xffffffff814298ef: ret 0xd5bb;
0xffffffff81429e33: add [rbp-0x27b6f040], al; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81429e36: cmovns ebx, eax; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8142a375: ret 0x1b74;
0xffffffff8142a637: ret 0x6260;
0xffffffff8142a6f5: and eax, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8142a80e: ret 0x1e68;
0xffffffff8142a9be: in eax, 0xe8; pop rsp; sbb [rax], r8b; mov eax, 0x17; pop rbp; ret;
0xffffffff8142a9c0: pop rsp; sbb [rax], r8b; mov eax, 0x17; pop rbp; ret;
0xffffffff8142aaa1: ret 0x9828;
0xffffffff8142ad19: mov eax, [0x415b0574c0850017]; pop rsp; pop rbp; ret;
0xffffffff8142b503: mov [rbx], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8142b59b: add [rdi], cl; xchg esp, eax; shl bh, 0xd8; pop rbx; pop rbp; ret;
0xffffffff8142b59d: xchg esp, eax; shl bh, 0xd8; pop rbx; pop rbp; ret;
0xffffffff8142b880: ret 0xda20;
0xffffffff8142bcdb: ror byte ptr [rdi], 0x85; in eax, 0xb; add [rax], al; leave; ret;
0xffffffff8142bcde: in eax, 0xb; add [rax], al; leave; ret;
0xffffffff8142bd85: out 0xf, eax; xchg esp, eax; ret;
0xffffffff8142c03f: pop rsp; mov qword ptr [rip+0xac5e4d], 0; pop rbp; ret;
0xffffffff8142c4fb: add [rax+rax], al; add [rax-0x77], cl; fucomip st, st(0); leave; iretd;
0xffffffff8142c4fc: add al, 0; add [rax-0x77], cl; fucomip st, st(0); leave; iretd;
0xffffffff8142c4fe: add [rax-0x77], cl; fucomip st, st(0); leave; iretd;
0xffffffff8142c501: fucomip st, st(0); leave; iretd;
0xffffffff8142c6b4: ret 0xe41e;
0xffffffff8142c7d8: ret 0x352b;
0xffffffff8142c7e0: ret 0x73e8;
0xffffffff8142ca98: leave; cmp eax, 1; setne al; movzx eax, al; neg eax; ret;
0xffffffff8142cb03: leave; sbb [rax], al; pop rbx; pop r12; pop rbp; ret;
0xffffffff8142cba5: enter 0x18, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8142cba6: sbb [rax], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8142cd37: ret 0xe52d;
0xffffffff8142d2d5: ret 0xdb85;
0xffffffff8142d4a9: add al, 0xf; xchg esp, eax; ret 0x94c;
0xffffffff8142d4ab: xchg esp, eax; ret 0x94c;
0xffffffff8142d4ac: ret 0x94c;
0xffffffff8142d5c7: add cl, [rdi]; xchg esp, eax; ret 0x948;
0xffffffff8142d5c9: xchg esp, eax; ret 0x948;
0xffffffff8142d88a: ret 0x20ce;
0xffffffff8142d9d6: add eax, 0xe283485b; test dword ptr [rbx-0x76b6fe20], 0x41402454; pop rsp; pop rbp; ret;
0xffffffff8142d9db: test dword ptr [rbx-0x76b6fe20], 0x41402454; pop rsp; pop rbp; ret;
0xffffffff8142da45: ret 0x47c6;
0xffffffff8142dd72: ret 0x1c74;
0xffffffff8142df1d: shl byte ptr [rsp+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8142dfe6: test byte ptr [rax+rbx+0x5bd88900], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8142e174: dec dword ptr [rax-0x77]; fucomip st, st(0); movsxd ecx, [rbx+0x415b0018]; pop rsp; pop rbp; ret;
0xffffffff8142e177: fucomip st, st(0); movsxd ecx, [rbx+0x415b0018]; pop rsp; pop rbp; ret;
0xffffffff8142e179: movsxd ecx, [rbx+0x415b0018]; pop rsp; pop rbp; ret;
0xffffffff8142e17a: mov ebx, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8142e296: mov r11b, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8142e297: mov bl, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8142e5b2: ret 0x20d0;
0xffffffff8142e71a: ret 0xe5af;
0xffffffff8142e78f: ret 0xe5b3;
0xffffffff8142ea22: ret 0x6678;
0xffffffff8142eb76: mov ebx, 0x8948fff0; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8142ee5a: adc eax, 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff8142efd3: sar dword ptr [rbx-0x13], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8142f2a7: add [rbp-0x77d4feb2], cl; pop rsp; add eax, 0x2b80000; add [rax], al; add [rbx-0x76befd07], al; iretd;
0xffffffff8142f2ad: pop rsp; add eax, 0x2b80000; add [rax], al; add [rbx-0x76befd07], al; iretd;
0xffffffff8142f3fa: ret 0x174a;
0xffffffff8142f403: ret 0xe621;
0xffffffff8142f4ea: mov [rbx+0x41], ds; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8142f672: ret 0x32b0;
0xffffffff8142f743: ret 0x32d0;
0xffffffff8143019f: xor eax, 0x415bfff0; pop rsp; pop r13; pop rbp; ret;
0xffffffff814301f9: ret 0x37eb;
0xffffffff81430a46: add [rbx-0x9760b8b], cl; bts [rbx+0x28], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81430a4a: mov esi, esi; bts [rbx+0x28], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81430a4c: bts [rbx+0x28], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81430a4d: bts [rbx+0x28], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81430b0d: ret 0xdeb0;
0xffffffff81430c60: ret 0x483b;
0xffffffff81430d6d: ret 0xb4e6;
0xffffffff81431057: ret 0xc8;
0xffffffff81431315: fcomp st, dword ptr [rbx+0x41]; pop rsp; setg al; pop rbp; and eax, edx; ret;
0xffffffff81431318: pop rsp; setg al; pop rbp; and eax, edx; ret;
0xffffffff81431598: ret 0x3b74;
0xffffffff81431db6: ret 0xeaba;
0xffffffff81432390: sbb [rbx+0x53390453], cl; or [rbx+rax-0x7d], dh; enter 0x5b41, 0x41; pop rsp; pop rbp; ret;
0xffffffff81432395: push rbx; or [rbx+rax-0x7d], dh; enter 0x5b41, 0x41; pop rsp; pop rbp; ret;
0xffffffff81432396: or [rbx+rax-0x7d], dh; enter 0x5b41, 0x41; pop rsp; pop rbp; ret;
0xffffffff81432398: add eax, [rbx+0x415b41c8]; pop rsp; pop rbp; ret;
0xffffffff8143239a: enter 0x5b41, 0x41; pop rsp; pop rbp; ret;
0xffffffff814324b5: mov ebp, 0x415bffff; pop rsp; pop r13; pop rbp; ret;
0xffffffff814327c5: ret 0x1389;
0xffffffff814328bf: add [rbp+0x480975c0], al; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff814328c1: shl byte ptr [rbp+9], 0x48; add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff814329b9: add rsp, 0x28; mov eax, 0xfffffff2; pop rbx; pop r12; pop rbp; ret;
0xffffffff814329ba: add esp, 0x28; mov eax, 0xfffffff2; pop rbx; pop r12; pop rbp; ret;
0xffffffff81432be6: ret 0x3981;
0xffffffff8143333f: ret 0x2101;
0xffffffff814333e4: ret 0xbe41;
0xffffffff81434033: mov eax, 2; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143407c: mov eax, 3; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434197: ret 0xedba;
0xffffffff8143421b: ret 0xebba;
0xffffffff81434230: shl bh, 0xd8; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434231: neg eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814344be: in eax, 0xe8; pop rsp; mov cl, 0x17; add [rbp+0x48], bl; cwde; ret;
0xffffffff814344c0: pop rsp; mov cl, 0x17; add [rbp+0x48], bl; cwde; ret;
0xffffffff81434a36: add rsp, 0x40; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434a37: add esp, 0x40; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434aa1: add rsp, 0x40; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434aa2: add esp, 0x40; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81434ace: ret 0x6a2e;
0xffffffff81434b85: and [rax], ebx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81434ff9: ret 0x5551;
0xffffffff8143515f: ret 0x773c;
0xffffffff814359fd: ret 0x400;
0xffffffff81435fb4: ret 0xffcd;
0xffffffff81435fcc: add [rax], al; add al, ch; pop rsp; xor eax, 0x83c60018; syscall;
0xffffffff81435fce: add al, ch; pop rsp; xor eax, 0x83c60018; syscall;
0xffffffff81435fd0: pop rsp; xor eax, 0x83c60018; syscall;
0xffffffff81436195: add [rdi], ecx; xchg esp, eax; ret 0x8348;
0xffffffff814361a0: ret 0xe6;
0xffffffff814361fc: movzx eax, byte ptr [rbp-9]; mov [rbx+0x16c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81436200: mov [rbx+0x16c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81436201: sub dword ptr [rcx+rax], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814363a6: dec dword ptr [rcx-0x3b7cb728]; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81436634: pop rsp; test eax, eax; pop r13; pop rbp; sete al; ret;
0xffffffff814366f3: ret 0xed52;
0xffffffff8143670c: ret 0x44f0;
0xffffffff81436721: ret 0x3928;
0xffffffff81436743: mov eax, [0x178ed4e881b08f]; leave; ret;
0xffffffff81436746: sub eax, 0x178ed4; leave; ret;
0xffffffff8143675d: adc al, 0xc5; test al, 0x44; cmpsb [rsi], [rdi]; sub eax, 0x178eb8; leave; ret;
0xffffffff8143675f: test al, 0x44; cmpsb [rsi], [rdi]; sub eax, 0x178eb8; leave; ret;
0xffffffff81436761: cmpsb [rsi], [rdi]; sub eax, 0x178eb8; leave; ret;
0xffffffff81436762: sub eax, 0x178eb8; leave; ret;
0xffffffff81436d0f: add [rax], al; add [rbp+0x20], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81436d11: add [rbp+0x20], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81436d23: mov byte ptr [r11+0xe1], 0; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81436d24: mov byte ptr [rbx+0xe1], 0; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81436d29: add [rax], al; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8143711b: ret 0xe41f;
0xffffffff81437138: ret 0xffef;
0xffffffff81437469: ret 0xca31;
0xffffffff81437604: cmp byte ptr [rbp-1], 0; mov edx, 0xfffffffb; cmovne eax, edx; leave; ret;
0xffffffff81437606: inc dword ptr [rax]; mov edx, 0xfffffffb; cmovne eax, edx; leave; ret;
0xffffffff81437607: add [rdx-5], bh; cmovne eax, edx; leave; ret;
0xffffffff81437608: mov edx, 0xfffffffb; cmovne eax, edx; leave; ret;
0xffffffff8143858a: ret 0xe9a8;
0xffffffff8143947a: ret 0xd172;
0xffffffff8143970b: ret 0xe809;
0xffffffff814398ae: add rsp, 0xc8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814398af: add esp, 0xc8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81439e2b: mov eax, [rbp-0x4c]; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff81439e2c: mov r12b, 0x48; add esp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff81439e2d: mov ah, 0x48; add esp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143ab1a: ret 0xfff6;
0xffffffff8143afa5: sub edi, 0xffffffff; mov eax, [rbp-0x44]; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b03e: ret 0x15b8;
0xffffffff8143b085: mov r8d, 7; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b086: mov eax, 7; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b089: add [rax], al; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b0b6: inc dword ptr [rbp+0x480c75c0]; add esp, 0x40; mov eax, 0x10; pop rbx; pop rbp; ret;
0xffffffff8143b0b8: shl byte ptr [rbp+0xc], 0x48; add esp, 0x40; mov eax, 0x10; pop rbx; pop rbp; ret;
0xffffffff8143b0ba: or al, 0x48; add esp, 0x40; mov eax, 0x10; pop rbx; pop rbp; ret;
0xffffffff8143b0bb: add rsp, 0x40; mov eax, 0x10; pop rbx; pop rbp; ret;
0xffffffff8143b0bc: add esp, 0x40; mov eax, 0x10; pop rbx; pop rbp; ret;
0xffffffff8143b0d4: add [rax], al; mov eax, [rbp-0x44]; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b0fc: mov eax, [rbp-0x44]; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8143b24a: add rsp, 8; mov eax, 0xfffffffb; pop rbx; pop rbp; ret;
0xffffffff8143b24b: add esp, 8; mov eax, 0xfffffffb; pop rbx; pop rbp; ret;
0xffffffff8143b2de: sub bh, 0xff; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143ba48: add [rbp-0x74bbaffc], cl; xchg esp, edx; add [rax], al; add [rdi], cl; scasd [rdi]; ret;
0xffffffff8143ba4e: xchg esp, edx; add [rax], al; add [rdi], cl; scasd [rdi]; ret;
0xffffffff8143bed5: ret 0x5788;
0xffffffff8143c149: ret 0x8903;
0xffffffff8143c607: ror byte ptr [rdi], 0xb6; shl bh, 0xd8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143c608: movzx eax, al; neg eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143c609: mov dh, 0xc0; neg eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143c60a: shl bh, 0xd8; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143c60b: neg eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143cf7a: sub eax, 0x415bffff; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8143d163: inc dword ptr [rcx-0x75]; xchg esp, eax; and al, 0xc8; add [rax], al; add dh, dh; ret 0xf08;
0xffffffff8143d166: xchg esp, eax; and al, 0xc8; add [rax], al; add dh, dh; ret 0xf08;
0xffffffff8143dcc7: ret 0x9f82;
0xffffffff8143dd6a: ret 0xff12;
0xffffffff8143ddf8: or al, [rax+0xc7488fa]; mov eax, 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143ddfe: mov eax, 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8143de24: setne al; add rsp, 8; neg eax; pop rbx; pop rbp; ret;
0xffffffff8143de27: add rsp, 8; neg eax; pop rbx; pop rbp; ret;
0xffffffff8143de28: add esp, 8; neg eax; pop rbx; pop rbp; ret;
0xffffffff8143e2b7: ret 0x93e8;
0xffffffff8143eb48: leave; test eax, eax; setne al; movzx eax, al; neg eax; ret;
0xffffffff8143ec3f: or eax, 0xee45b60f; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143ec40: movzx eax, byte ptr [rbp-0x12]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143ec43: out dx, al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143edd8: inc dword ptr [rbp-0x76f68a40]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8143edda: shl byte ptr [rbp+9], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8143f2e6: add rsp, 8; mov eax, 0xffffffff; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143f2e7: add esp, 8; mov eax, 0xffffffff; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143f3ca: leave; ret 0;
0xffffffff8143f5e6: inc dword ptr [rbp+0x483d75c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143f5e8: shl byte ptr [rbp+0x3d], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8143f8b5: ret 0xe9c0;
0xffffffff8143f8c0: ret 0x8d06;
0xffffffff8143f998: ret 0x8150;
0xffffffff8143fb23: ret 0x4107;
0xffffffff8143feb3: ret 0x8399;
0xffffffff81440569: and dword ptr [r14-0x7f], 0xbcbb; add [rax], al; add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff8144056a: and dword ptr [rsi-0x7f], 0xbcbb; add [rax], al; add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff8144056d: mov ebx, 0xbc; add [rdi+rcx], al; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff8144056e: mov esp, 0; add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff8144056f: add [rax], al; add [rax], al; add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440570: add [rax], al; add [rdi+rcx], al; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440571: add [rax], al; add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440572: add [rdi+rcx], al; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440573: add al, 0xf; xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440575: xchg esp, eax; ror byte ptr [rdi], 0x94; ret 0xc741;
0xffffffff81440578: xchg esp, eax; ret 0xc741;
0xffffffff81440579: ret 0xc741;
0xffffffff81440707: ret 0xfd6a;
0xffffffff81440bcf: add [rbp+rdi*8-0x4c], dh; or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81440c43: add dh, [rbp-0x2c]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81440ea9: enter 0xfffe, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81440efe: setne [r12+0x17c]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81440eff: setne [rsp+0x17c]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814410cc: ret 0xf708;
0xffffffff814411cc: mov dword ptr [rbx+0x170], 0x320; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814417ca: add eax, [rax]; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8144182f: shl eax, cl; mov [rbx+0x170], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81441831: mov [rbx+0x170], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81441928: imul eax, [rcx], 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81441ce1: ret 0xfd42;
0xffffffff81441de7: xchg esp, eax; ret 0x8148;
0xffffffff81441eda: cmp byte ptr [rbp-1], 0; mov edx, 0xffffffed; cmovne eax, edx; leave; ret;
0xffffffff81441edc: inc dword ptr [rax]; mov edx, 0xffffffed; cmovne eax, edx; leave; ret;
0xffffffff81441edd: add [rdx-0x13], bh; cmovne eax, edx; leave; ret;
0xffffffff81441ede: mov edx, 0xffffffed; cmovne eax, edx; leave; ret;
0xffffffff81441ee3: cmovne eax, edx; leave; ret;
0xffffffff81441ee5: ret 0xc3c9;
0xffffffff81441ee8: leave; mov eax, 0xffffffed; ret;
0xffffffff81441f00: in eax, 0xf; mov dh, 0x14; adc [rbp+rax-0x7c], esi; ror byte ptr [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff81441f02: mov dh, 0x14; adc [rbp+rax-0x7c], esi; ror byte ptr [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff81441f04: adc [rbp+rax-0x7c], esi; ror byte ptr [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff81441f08: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff81441ff6: int 0xff; mov qword ptr [rbx], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81442b1b: ret 0x3fe8;
0xffffffff814433fd: fisttp dword ptr [rdi], st; xchg esp, eax; rol byte ptr [rdx+rdx*8-0x3f7b3d8c], 0x74; ret 0x894c;
0xffffffff814433ff: xchg esp, eax; rol byte ptr [rdx+rdx*8-0x3f7b3d8c], 0x74; ret 0x894c;
0xffffffff81443580: add ecx, [rdi]; xchg esp, eax; ret 0xf41;
0xffffffff81443699: add eax, 0x31000000; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814436ec: mov qword ptr [rbx+0xc8], 0xffffffff81b500dc; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814436ed: mov dword ptr [rbx+0xc8], 0x81b500dc; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814436f2: add ah, bl; add [rbp-0x3b7cb77f], dh; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814436f4: add [rbp-0x3b7cb77f], dh; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814436f5: mov ch, 0x81; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81443d2d: and al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81443f9e: sub eax, 0x415b0017; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81444211: or eax, 0xff83c031; add [rdi], ecx; xchg esp, eax; rol byte ptr [rcx], 0xc1; mov eax, ecx; ret;
0xffffffff81444216: add [rdi], ecx; xchg esp, eax; rol byte ptr [rcx], 0xc1; mov eax, ecx; ret;
0xffffffff81444218: xchg esp, eax; rol byte ptr [rcx], 0xc1; mov eax, ecx; ret;
0xffffffff814442d0: ret 0x5180;
0xffffffff814445e0: mov [rbx+0x20], eax; add rsp, 0x28; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff814445e3: add rsp, 0x28; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff814445e4: add esp, 0x28; mov rax, rbx; pop rbx; pop rbp; ret;
0xffffffff81444f0d: sub eax, 0xffeed10d; leave; ret;
0xffffffff8144503b: rcr byte ptr [rbx+0x41], 1; pop rsp; shr eax, 0x1f; pop rbp; ret;
0xffffffff8144503e: pop rsp; shr eax, 0x1f; pop rbp; ret;
0xffffffff814451b9: add [rax], al; leave; not eax; shr eax, 0x1f; ret;
0xffffffff814451bb: leave; not eax; shr eax, 0x1f; ret;
0xffffffff81445207: ret 0xaf50;
0xffffffff814458ef: ret 0x2de2;
0xffffffff814458fc: and [rbp+0x415b0016], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff81445c9e: ret 0x6ca;
0xffffffff81445e6c: ret 0x5cc0;
0xffffffff81445e83: ret 0xaa;
0xffffffff81445e8a: ret 0xef26;
0xffffffff81446153: ret 0x768;
0xffffffff814461a6: ret 0x726;
0xffffffff81446203: ret 0x77a;
0xffffffff81446223: ret 0x740;
0xffffffff81446255: ret 0x75b;
0xffffffff81446359: cmp eax, 1; cmove eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8144635c: cmove eax, ebx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81446961: ret 0x798;
0xffffffff814469f3: ret 0x2138;
0xffffffff81446a00: pop rsp; xchg ebx, eax; ret;
0xffffffff81446c44: ret 0x3e0;
0xffffffff81446c53: ret 0x7ed;
0xffffffff81446ce6: ret 0x7d4;
0xffffffff81446dea: mov esp, eax; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81446f3a: ret 0x3bb0;
0xffffffff8144713b: ret 0x5910;
0xffffffff8144750e: ret 0xe27d;
0xffffffff8144757e: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x4466;
0xffffffff81447580: add [rdi], cl; xchg esp, eax; ret 0x4466;
0xffffffff81447582: xchg esp, eax; ret 0x4466;
0xffffffff81447583: ret 0x4466;
0xffffffff8144789e: ret 0xdf7f;
0xffffffff81447909: ret 0xe67f;
0xffffffff81447918: ret 0x73b;
0xffffffff81447c43: movzx eax, byte ptr [rbp-0x22]; leave; ret;
0xffffffff81447cb3: movzx eax, word ptr [rbp-0x22]; leave; ret;
0xffffffff8144823f: pop rsp; sete al; pop rbp; ret;
0xffffffff81448514: inc dword ptr [rbp+0x480974c0]; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8144867c: ret 0x8570;
0xffffffff81448d0f: dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81448d12: shl byte ptr [rbp+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81448d3a: and ah, [rsi+0x415bffee]; pop rsp; pop rbp; ret;
0xffffffff81448d64: inc dword ptr [rbp+0x480974c0]; add esp, 0x58; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81448d69: add rsp, 0x58; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81448d6a: add esp, 0x58; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81448e77: add rsp, 0x58; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff81448e78: add esp, 0x58; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff81448ec0: mov eax, 1; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81448ec1: add [rax], eax; add [rax], al; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81448ee1: cmp edx, esp; inc dword ptr [rax+rax*8-0x74b7f98b]; pop rbp; clc; leave; ret;
0xffffffff81448ee3: inc dword ptr [rax+rax*8-0x74b7f98b]; pop rbp; clc; leave; ret;
0xffffffff81448f22: sub eax, 0xffeea4f8; mov rbx, [rbp-8]; leave; ret;
0xffffffff81448f26: out dx, al; dec dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff8144a0d3: mov rax, 0xfffffffffffffff2; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a0d4: mov eax, 0xfffffff2; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a180: add rsp, 0x40; mov rax, 0xffffffffffffffe7; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a181: add esp, 0x40; mov rax, 0xffffffffffffffe7; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a20b: xor eax, eax; add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a20d: add rsp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a20e: add esp, 0x40; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a3d9: shl byte ptr [rbp-0x1e], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144a6a6: ret 0x215c;
0xffffffff8144a82a: ret 0xc31a;
0xffffffff8144abbc: ret 0x587c;
0xffffffff8144abc2: ret 0x527f;
0xffffffff8144abda: xchg esp, eax; and al, 0xb8; add eax, [rax]; add [rcx+0x5c], al; pop rbp; ret;
0xffffffff8144abdc: mov eax, 0x41000003; pop rsp; pop rbp; ret;
0xffffffff8144af02: ret 0x105a;
0xffffffff8144b32a: leave; cmp esi, 3; mov edx, 0xffffffea; cmovne eax, edx; ret;
0xffffffff8144b347: mov ch, 0x6c; cmp eax, [rax]; leave; ret;
0xffffffff8144b348: insb [rdi], dx; cmp eax, [rax]; leave; ret;
0xffffffff8144b351: add [rax], al; add [rcx-0x1e1417ab], cl; leave; xor eax, eax; ret;
0xffffffff8144b353: add [rcx-0x1e1417ab], cl; leave; xor eax, eax; ret;
0xffffffff8144b776: ret 0x22eb;
0xffffffff8144bd0c: leave; cmove eax, edx; ret;
0xffffffff8144bdcb: pop rsp; mov rax, rdx; pop r13; pop rbp; ret;
0xffffffff8144be9e: ret 0xceeb;
0xffffffff8144bf32: add rsp, 0x48; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144bf33: add esp, 0x48; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144c052: ret 0xc759;
0xffffffff8144c1b6: ret 0x118c;
0xffffffff8144c36e: ret 0xc9a6;
0xffffffff8144c449: ret 0x8144;
0xffffffff8144c70d: or [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8144c7b6: shl byte ptr [rsp+rax-0x37], 0x31; rol bl, 0x8b; clc; leave; ret;
0xffffffff8144c7bb: rol bl, 0x8b; clc; leave; ret;
0xffffffff8144c8b0: cmp al, bpl; push r15; cmp eax, [rax]; leave; ret;
0xffffffff8144c8b1: cmp al, ch; push r15; cmp eax, [rax]; leave; ret;
0xffffffff8144c8b3: push r15; cmp eax, [rax]; leave; ret;
0xffffffff8144c8b4: push rdi; cmp eax, [rax]; leave; ret;
0xffffffff8144c8b5: cmp eax, [rax]; leave; ret;
0xffffffff8144c8fa: ret 0xef98;
0xffffffff8144c95c: mov edx, [rbp-8]; leave; test edx, edx; mov edx, 0xffffffed; cmove eax, edx; ret;
0xffffffff8144c95e: clc; leave; test edx, edx; mov edx, 0xffffffed; cmove eax, edx; ret;
0xffffffff8144c95f: leave; test edx, edx; mov edx, 0xffffffed; cmove eax, edx; ret;
0xffffffff8144c998: mov edx, [rbp-4]; leave; test edx, edx; mov edx, 1; cmove eax, edx; ret;
0xffffffff8144c99a: cld; leave; test edx, edx; mov edx, 1; cmove eax, edx; ret;
0xffffffff8144c99b: leave; test edx, edx; mov edx, 1; cmove eax, edx; ret;
0xffffffff8144ca02: push rbp; cmp eax, [rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144ca03: cmp eax, [rax]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144ca0c: mov edx, 0xffffffed; cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144ca11: cmove eax, edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144cabb: ret 0x127a;
0xffffffff8144cdaf: movsxd rdx, [rbp-0x10]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144cdb0: movsxd edx, [rbp-0x10]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144ce10: mov fs:[r12], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144ce11: mov [r12], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144ce12: mov [rsp], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144ce13: adc al, 0x24; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8144ce26: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x415b08e0], al; pop rsp; sub eax, 0x13; pop rbp; ret;
0xffffffff8144ce2a: or [rbx+0x415b08e0], al; pop rsp; sub eax, 0x13; pop rbp; ret;
0xffffffff8144ce2d: or [rbx+0x41], bl; pop rsp; sub eax, 0x13; pop rbp; ret;
0xffffffff8144ce30: pop rsp; sub eax, 0x13; pop rbp; ret;
0xffffffff8144cf9b: add [rbp+0x480974c0], al; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8144cfa5: rcr byte ptr [rbx+0x5d], 0xc3; mov eax, [rbp-0x10]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144d02e: ret 0x5c80;
0xffffffff8144d3c2: ret 0x5ca0;
0xffffffff8144d589: int3; xchg esp, eax; ret;
0xffffffff8144d5a6: scasd [rdi]; xchg esp, eax; ret;
0xffffffff8144d600: ret 0xa4b8;
0xffffffff8144da91: ret 0x2300;
0xffffffff8144de1d: mov ebp, eax; sub eax, 0x15528b; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144de1e: vpsubsb xmm1, xmm15, [rbx+0x48001552]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8144de1f: sub eax, 0x15528b; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8144df22: ret 0x7500;
0xffffffff8144e0e5: ret 0xdd20;
0xffffffff8144e2ad: ret 0x418d;
0xffffffff8144e2f4: sti; add [rdi], ecx; xchg esp, eax; ret 0xc221;
0xffffffff8144e2f5: add [rdi], ecx; xchg esp, eax; ret 0xc221;
0xffffffff8144e2f7: xchg esp, eax; ret 0xc221;
0xffffffff8144e796: ret 0xdc90;
0xffffffff8144f592: dec dword ptr [rax+0x3d]; mov eax, ebp; xor dword ptr [rbp-0x71], 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff8144f596: mov eax, ebp; xor dword ptr [rbp-0x71], 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff8144f597: vpcmpeqw xmm1, xmm15, [rdi+0x41c0315b]; pop rsp; pop rbp; ret;
0xffffffff8144f598: xor dword ptr [rbp-0x71], 0x41c0315b; pop rsp; pop rbp; ret;
0xffffffff8144fc53: ret 0x2524;
0xffffffff8145057d: vpsubsb xmm3, xmm15, [rdi+0x16]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81450664: ret 0xa9ad;
0xffffffff81450694: ret 0x1861;
0xffffffff81450b13: ret 0xe355;
0xffffffff81450b2c: sub eax, 0x15eaee; add rsp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81450d88: or [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff814511ac: xor [rcx+rcx*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8145126c: cmp [rcx+rcx*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814514ac: sub [rcx+rcx*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8145151c: add rsp, 0x18; pop rbx; pop r12; cdqe; pop rbp; ret;
0xffffffff8145151d: add esp, 0x18; pop rbx; pop r12; cdqe; pop rbp; ret;
0xffffffff8145151f: sbb [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff814515aa: in al, dx; or [rax-0x75], cl; cmp al, ch; pop rsp; iretd;
0xffffffff814515ab: or [rax-0x75], cl; cmp al, ch; pop rsp; iretd;
0xffffffff814515ae: cmp al, ch; pop rsp; iretd;
0xffffffff81451820: ret 0x2286;
0xffffffff81451869: ret 0x2273;
0xffffffff8145193b: ret 0x2260;
0xffffffff81451b22: xchg [rax-0x7ffffffe], esp; mov eax, ebp; add ebx, 0x401f0f; ret;
0xffffffff81451c21: add eax, [rax]; add [rsi+7], bh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81451c23: add [rsi+7], bh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81451c30: add rsp, 8; movzx eax, al; pop rbx; pop rbp; add eax, eax; ret;
0xffffffff81451c31: add esp, 8; movzx eax, al; pop rbx; pop rbp; add eax, eax; ret;
0xffffffff81451c3a: rol bl, 0x8b; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81451ea4: ret 0x667e;
0xffffffff81451f0a: ret 0x9a7f;
0xffffffff814520b8: mov rax, rbx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81452282: ret 0x1d63;
0xffffffff814522fe: ret 0x1dd1;
0xffffffff81452943: adc esp, edi; test eax, 0x878d4800; mov eax, 0xf6000000; adc [rax], cl; cmove rax, [rip+0xa9fbde]; ret;
0xffffffff81452d3d: movsxd ecx, esi; add dword ptr [rax], 0x415bdf72; pop rsp; pop r13; pop rbp; ret;
0xffffffff81452d3f: add dword ptr [rax], 0x415bdf72; pop rsp; pop r13; pop rbp; ret;
0xffffffff81452db2: add al, ch; cmp [rbp+0x415bffc2], dl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81452db4: cmp [rbp+0x415bffc2], dl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81452f7f: ret 0xfff4;
0xffffffff81452fe2: ret 0x7071;
0xffffffff8145333b: ror dword ptr [rdx-0x3f7affeb], 0x75; fmul st, qword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8145333c: mov dl, [rip+0x75c08500]; fmul st, qword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8145333d: adc eax, 0x75c08500; fmul st, qword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81453342: fmul st, qword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81453678: ret 0x2345;
0xffffffff81453753: leave; ret 0x49ff;
0xffffffff81453b89: ret 0x80ff;
0xffffffff81453ef6: ror byte ptr [rdi], 0x85; leave; sbb eax, [rax]; add [rbp-0x7c], al; test byte ptr [rdi], 0x85; ret;
0xffffffff81453ef9: leave; sbb eax, [rax]; add [rbp-0x7c], al; test byte ptr [rdi], 0x85; ret;
0xffffffff81454376: sub [rsi], dx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81454377: sub [rsi], edx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814543fa: ret 0x15b1;
0xffffffff814544a3: ret 0x81;
0xffffffff814544c3: mov eax, 0xffffffea; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814544d5: and [rsi-0x7d177e3b], dl; sar r15, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814544d6: xchg esi, eax; vpsubsb xmm0, xmm15, [rdx+0x48ffc14f]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814544d7: vpsubsb xmm0, xmm15, [rdx+0x48ffc14f]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814544d8: sub eax, 0xffc14f82; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814544db: sar r15, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814544dc: sar edi, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8145451b: or dword ptr [rcx-0x43170bbb], 0x8b001627; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81454520: mov esp, 0x8b001627; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81454b49: add [rax], al; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81454bf3: sub [rdx+0x415b0015], ebp; pop rsp; cdqe; pop rbp; ret;
0xffffffff81454ce6: pop rsp; mov byte ptr [rip+0xa9d85a], 1; pop r13; pop rbp; ret;
0xffffffff81454e9b: add [rbp+0x483675c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81454e9d: shl byte ptr [rbp+0x36], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81454e9f: add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81454ec5: add rsp, 8; mov eax, 0xffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff81454ec6: add esp, 8; mov eax, 0xffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff81455126: add rsp, 0x190; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81455127: add esp, 0x190; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8145523f: add rsp, 0x1a0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81455240: add esp, 0x1a0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81455401: add rsp, 0x190; pop rbx; pop r12; pop rbp; ret;
0xffffffff81455402: add esp, 0x190; pop rbx; pop r12; pop rbp; ret;
0xffffffff81455404: nop; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814557dd: ret 0x2540;
0xffffffff814559f9: shl byte ptr [rsi+rcx*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81455a32: ret 0xc3e0;
0xffffffff81455a53: ret 0xc766;
0xffffffff81455b24: pop rsp; and esi, [rbp+0xf2ce881]; ret;
0xffffffff81455bab: ret 0x5fe3;
0xffffffff8145606c: add [rbx+0x41], r11d; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814561d9: ret 0x8b0c;
0xffffffff814563f9: push r14; push r13; push r12; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563fa: push rsi; push r13; push r12; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563fb: push r13; push r12; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563fc: push rbp; push r12; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563fd: push r12; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563fe: push rsp; push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814563ff: push rbx; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff8145682f: mov esp, [rax]; call qword ptr [0xffffffff81c26fa0];
0xffffffff8145687f: ret 0x6664;
0xffffffff81456925: sbb al, 0xf; xchg esp, eax; ret 0x1ae9;
0xffffffff81456927: xchg esp, eax; ret 0x1ae9;
0xffffffff81456928: ret 0x1ae9;
0xffffffff81456964: or eax, [rcx-0x75]; sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x738b;
0xffffffff81456967: sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x738b;
0xffffffff81456968: sub [rcx+0x39], al; sbb al, 0xf; xchg esp, eax; ret 0x738b;
0xffffffff8145696c: sbb al, 0xf; xchg esp, eax; ret 0x738b;
0xffffffff8145696e: xchg esp, eax; ret 0x738b;
0xffffffff8145696f: ret 0x738b;
0xffffffff814569cd: add [rsi-0x70], ah; push rbp; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814569ef: sbb [rax], eax; add [rax+0x63], cl; leave; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f0: add [rax], al; movsxd rcx, ecx; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f1: add [rax+0x63], cl; leave; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f2: movsxd rcx, ecx; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f3: movsxd ecx, ecx; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f4: leave; mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f5: mov eax, [rcx*4-0x7e599a40]; leave; ret;
0xffffffff814569f6: add al, 0x8d; shl byte ptr [rbp-0x5a], 0x81; leave; ret;
0xffffffff814569f8: shl byte ptr [rbp-0x5a], 0x81; leave; ret;
0xffffffff814569f9: cmpsb gs:[rsi], es:[rdi]; or ecx, 0x559066c3; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814569fa: cmpsb [rsi], [rdi]; or ecx, 0x559066c3; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814569fb: or ecx, 0x559066c3; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814569fe: xchg ax, ax; push rbp; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff814569ff: nop; push rbp; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a00: push rbp; mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a01: mov edi, 0xcd; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a02: int 0; add [rax], al; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a03: add [rax], al; add [rax-0x77], cl; in eax, 0x48; sub esp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a04: add [rax], al; mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a05: add [rax-0x77], cl; in eax, 0x48; sub esp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a06: mov rbp, rsp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a07: mov ebp, esp; sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a08: in eax, 0x48; sub esp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a09: sub rsp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a0a: sub esp, 8; call qword ptr [0xffffffff81c26fa0];
0xffffffff81456a1e: sbb gs:[rax], eax; add [rax+0x63], cl; leave; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a1f: sbb [rax], eax; add [rax+0x63], cl; leave; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a20: add [rax], al; movsxd rcx, ecx; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a21: add [rax+0x63], cl; leave; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a22: movsxd rcx, ecx; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a23: movsxd ecx, ecx; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a24: leave; mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a25: mov eax, [rcx*4-0x7e599a60]; leave; ret;
0xffffffff81456a33: ret 0x624c;
0xffffffff81456c39: ret 0x819a;
0xffffffff81456cf8: ret 0x5a28;
0xffffffff81456e1b: ret 0xc6ff;
0xffffffff81456edc: inc dword ptr [rbp+0x480974c0]; add esp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81456ee1: add rsp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81456ee2: add esp, 8; cdqe; pop rbx; pop rbp; ret;
0xffffffff81456f0d: sub eax, 0x15fdcd; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81456f0f: int 0xfd; adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81456fa7: sub eax, 0x15fd33; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81456fa9: xor edi, ebp; adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81456faa: std; adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8145705a: vpsubsb xmm7, xmm15, [rdi-4]; adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8145705b: sub eax, 0x15fc7f; mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8145705e: cld; adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8145705f: adc eax, 0xd8894800; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81457061: mov rax, rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81457062: mov eax, ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81457159: adc eax, 0xe0894c00; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8145715a: add [rcx+rcx*4-0x20], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8145715b: mov rax, r12; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8145736b: pop rsp; mov qword ptr [rip+0x819389], 0; pop r13; pop rbp; ret;
0xffffffff8145745a: ret 0x15f6;
0xffffffff8145768a: shr rax, 0x18; movzx eax, al; leave; ret;
0xffffffff8145768b: shr eax, 0x18; movzx eax, al; leave; ret;
0xffffffff8145768d: sbb [rdi], cl; mov dh, 0xc0; leave; ret;
0xffffffff8145768e: movzx eax, al; leave; ret;
0xffffffff8145768f: mov dh, 0xc0; leave; ret;
0xffffffff814576a7: inc dword ptr [rbp+0xfe575c0]; mov bh, 0x45; clc; leave; and eax, 0xf; ret;
0xffffffff814576a9: shl byte ptr [rbp-0x1b], 0xf; mov bh, 0x45; clc; leave; and eax, 0xf; ret;
0xffffffff814576ab: in eax, 0xf; mov bh, 0x45; clc; leave; and eax, 0xf; ret;
0xffffffff814576ac: movzx eax, word ptr [rbp-8]; leave; and eax, 0xf; ret;
0xffffffff814576ad: mov bh, 0x45; clc; leave; and eax, 0xf; ret;
0xffffffff814576af: clc; leave; and eax, 0xf; ret;
0xffffffff814576b0: leave; and eax, 0xf; ret;
0xffffffff814576d4: shr bl, 0xba; leave; mov eax, 0xfffffffa; ret;
0xffffffff814576d7: leave; mov eax, 0xfffffffa; ret;
0xffffffff81457709: ret 0x2b99;
0xffffffff81457715: ret 0x2b91;
0xffffffff81457726: ret 0x2b83;
0xffffffff81457e05: or eax, [rcx-0x75]; sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff81457e08: sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff81457e09: sub [rcx+0x39], al; sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff81457e0d: sbb al, 0xf; xchg esp, eax; ret 0x8b41;
0xffffffff81457e0f: xchg esp, eax; ret 0x8b41;
0xffffffff814580d3: ret 0x573;
0xffffffff8145820c: ret 0x9ac0;
0xffffffff814582bf: mov esp, [rax+rdx*8]; call qword ptr [0xffffffff81c26fa0];
0xffffffff814582d4: or eax, [rcx-0x75]; sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x1588;
0xffffffff814582d7: sub [r9+0x39], r8b; sbb al, 0xf; xchg esp, eax; ret 0x1588;
0xffffffff814582d8: sub [rcx+0x39], al; sbb al, 0xf; xchg esp, eax; ret 0x1588;
0xffffffff814582dc: sbb al, 0xf; xchg esp, eax; ret 0x1588;
0xffffffff814582de: xchg esp, eax; ret 0x1588;
0xffffffff814582df: ret 0x1588;
0xffffffff81458441: ret 0xc1f0;
0xffffffff814588b0: ret 0xd075;
0xffffffff81458b5e: in eax, 0xe8; pushfq; xchg esp, eax; cmp al, [rax]; pop rbp; ret;
0xffffffff81458b60: pushfq; xchg esp, eax; cmp al, [rax]; pop rbp; ret;
0xffffffff81458ba7: in eax, 0xe8; push rbx; xchg esp, eax; cmp al, [rax]; pop rbp; ret;
0xffffffff81458ba9: push rbx; xchg esp, eax; cmp al, [rax]; pop rbp; ret;
0xffffffff81458baa: xchg esp, eax; cmp al, [rax]; pop rbp; ret;
0xffffffff81458f28: add [rbp+0x14], esi; mov byte ptr [rip+0xa99656], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81458f5f: mov eax, [rbp-0xc]; mov byte ptr [rip+0xa9961f], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81458f61: hlt; mov byte ptr [rip+0xa9961f], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81458f62: mov byte ptr [rip+0xa99656], 0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814592e6: ret 0x39ff;
0xffffffff81459755: add [r11+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81459945: ret 0x49ff;
0xffffffff81459b62: ret 0x25a0;
0xffffffff81459c7c: ret 0xf7d;
0xffffffff8145a062: ret 0xdeb;
0xffffffff8145a0fa: ret 0xc72f;
0xffffffff8145a172: fimul st, dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8145a1b2: xchg esp, eax; rol bl, 0x48; cmp edi, esi; sete al; ret;
0xffffffff8145a36f: fistp word ptr [rbx+0x41], st; pop rsp; pop r13; pop rbp; ret;
0xffffffff8145a499: ret 0x575;
0xffffffff8145a502: shl byte ptr [rdx+rax-0x37], 0xc3; leave; mov eax, 0xffffffde; ret;
0xffffffff8145a507: leave; mov eax, 0xffffffde; ret;
0xffffffff8145a50c: inc ebx; leave; mov eax, 0xffffffc3; ret;
0xffffffff8145a50e: leave; mov eax, 0xffffffc3; ret;
0xffffffff8145a62d: ret 0x2e2c;
0xffffffff8145a6ed: ret 0x9389;
0xffffffff8145a7c9: ret 0x9fa1;
0xffffffff8145ad79: ret 0x7c8d;
0xffffffff8145ae24: enter 0x4530, 0x39; sub [r10+0x12], sil; leave; ret;
0xffffffff8145ae25: xor [rbp+0x39], al; sub [r10+0x12], sil; leave; ret;
0xffffffff8145ae28: sub [r10+0x12], sil; leave; ret;
0xffffffff8145ae29: sub [rdx+0x12], dh; leave; ret;
0xffffffff8145ae5b: ret 0xffe8;
0xffffffff8145ae74: sub eax, 0xffed84e6; xor eax, eax; leave; ret;
0xffffffff8145ae8b: sub eax, 0xffed84cf; xor eax, eax; leave; ret;
0xffffffff8145aeaf: ret 0xabe8;
0xffffffff8145aed5: xor [rbp-0x7b7c177f], esi; in eax, dx; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8145aed7: sub eax, 0xffed8483; mov rax, [rbp-8]; leave; ret;
0xffffffff8145aed9: add dword ptr [rbp+rbp*8+0x458b48ff], 0xfffffff8; leave; ret;
0xffffffff8145aeda: test ch, ch; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8145aedb: in eax, dx; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8145ba5e: ret 0x6b88;
0xffffffff8145bbeb: ret 0x1b77;
0xffffffff8145c0f2: ret 0x85ff;
0xffffffff8145c14d: ret 0x44ff;
0xffffffff8145c14e: ret 0x44ff;
0xffffffff8145c363: ret 0x32e2;
0xffffffff8145c627: ret 0x27fc;
0xffffffff8145cf62: ret 0x4c8d;
0xffffffff8145d1e0: pop rsp; mov [r13+0x1b0d0], r14d; pop r13; pop r14; pop rbp; ret;
0xffffffff8145ddc2: leave; pop rbx; pop r12; mov rax, rcx; pop rbp; ret;
0xffffffff8145ddc5: pop rsp; mov rax, rcx; pop rbp; ret;
0xffffffff8145de1f: ret 0x85ff;
0xffffffff8145e29d: ret 0x675;
0xffffffff8145e36a: ret 0xe901;
0xffffffff8145e414: fistp dword ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff8145e45b: shl byte ptr [rsp+rax*2-0x7d], 0xe8; add [rbp-0x73], ecx; xor [rbp-0x73], cl; pop rsp; ret 0x4938;
0xffffffff8145e460: add [rbp-0x73], ecx; xor [rbp-0x73], cl; pop rsp; ret 0x4938;
0xffffffff8145e464: xor [rbp-0x73], cl; pop rsp; ret 0x4938;
0xffffffff8145e467: pop rsp; ret 0x4938;
0xffffffff8145e468: ret 0x4938;
0xffffffff8145ed4b: ret 0xb73d;
0xffffffff8145ee57: ret 0xc43d;
0xffffffff8145f584: ret 0x823d;
0xffffffff81460dcd: ret 0xc630;
0xffffffff8146144c: ret 0x4c30;
0xffffffff81461fa6: ret 0x98;
0xffffffff814628a3: xchg esp, eax; ret 0xffff;
0xffffffff814628d3: ret 0xffff;
0xffffffff81462901: ret 0xffff;
0xffffffff81462e98: sub r8d, 0xffffb2c1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81462e99: sub eax, 0xffffb2c1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81462e9b: shl dword ptr [rdx-0x7cb70001], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81462ec7: sub r8d, 0xffffb292; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81462ec8: sub eax, 0xffffb292; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81462f1d: mov [rbx+8], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8146343d: ret 0xe9ff;
0xffffffff814638a3: ret 0x15;
0xffffffff81463b4d: or eax, 0x3981c031; mov eax, 0xf000100; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81463b51: cmp [rax+0xf000100], edi; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81463b52: mov eax, 0xf000100; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81463b53: add [rcx], al; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81463b80: cmp [rdi], eax; add [rcx], cl; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81463ba3: add [rcx], cl; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; pop rbp; ret;
0xffffffff81463ba5: add [rdi], cl; xchg esp, eax; shl bh, 0xd8; pop rbp; ret;
0xffffffff81463ba7: xchg esp, eax; shl bh, 0xd8; pop rbp; ret;
0xffffffff81463c36: leave; setne al; mov [r8+8], eax; mov eax, 1; pop rbp; ret;
0xffffffff81463e6d: ret 0xa6c0;
0xffffffff81463e8e: ret 0xa660;
0xffffffff81463eaf: ret 0xa5e0;
0xffffffff81463ed0: ret 0xa5b0;
0xffffffff81463ee2: ret 0x6606;
0xffffffff81463fca: sub eax, 0xffecf510; mov rax, [rbp-8]; mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fcf: dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd0: mov rax, [rbp-8]; mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd1: mov eax, [rbp-8]; mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd3: clc; mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd4: mov byte ptr [rax+0x3b], 0xe7; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd6: cmp esp, edi; mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff81463fd8: mov byte ptr [rax+0x35], 0xe7; leave; ret;
0xffffffff814644c8: mov edx, 0x3ff; mov ecx, 0x3ff; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644ca: add eax, [rax]; add [rcx+0x3ff], bh; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644cb: add [rax], al; mov ecx, 0x3ff; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644cc: add [rcx+0x3ff], bh; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644cd: mov ecx, 0x3ff; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644ce: inc dword ptr [rbx]; add [rax], al; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644d0: add [rax], al; mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644d2: mov [rax+0x10], dx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644d3: mov [rax+0x10], edx; mov [rax+0xb], cx; leave; ret;
0xffffffff814644d6: mov [rax+0xb], cx; leave; ret;
0xffffffff814644d7: mov [rax+0xb], ecx; leave; ret;
0xffffffff81464931: sub eax, 0xffeceba9; mov rax, [rbp-8]; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff81464933: test eax, 0x48ffeceb; mov eax, [rbp-8]; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff81464936: dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff81464937: mov rax, [rbp-8]; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff81464938: mov eax, [rbp-8]; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff8146493a: clc; mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff8146493b: mov byte ptr [rax+0x46], 0x2f; mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff8146493f: mov byte ptr [rax+0x41], 0x2f; leave; ret;
0xffffffff8146499a: add al, 0x85; leave; cmovne r9, rax; mov eax, 1; mov [rdi+0x1968], r9; ret;
0xffffffff8146499c: leave; cmovne r9, rax; mov eax, 1; mov [rdi+0x1968], r9; ret;
0xffffffff81464a5b: cmp [rip+0xf000900], eax; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464a5c: add eax, 0xf000900; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464a5d: add [rcx], cl; add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464a5f: add [rdi], cl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464a76: add [rcx], cl; add [rbp+0xf], bl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464a78: add [rbp+0xf], bl; xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81464abc: inc dword ptr [rbp+0x482775c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81464abe: shl byte ptr [rbp+0x27], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81464ad5: or dword ptr [rcx-0x7d170bbb], 0x8bffece8; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81464af5: or dword ptr [rcx+0x62e8f445], 0x8bffece8; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81464d42: add [rdi], cl; xchg [rsi+0x3d000000], esp; cwde; ret 0;
0xffffffff81464d44: xchg [rsi+0x3d000000], esp; cwde; ret 0;
0xffffffff81464e63: stc; xchg esp, eax; ret 0;
0xffffffff814652d2: ret 0x2808;
0xffffffff81466141: ret 0xaad0;
0xffffffff81466362: inc dword ptr [rbp+0x482c75c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81466364: shl byte ptr [rbp+0x2c], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81466366: sub al, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814667b0: sub eax, 0xffeccd2a; mov rax, [rbp-8]; mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667b5: dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667b6: mov rax, [rbp-8]; mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667b7: mov eax, [rbp-8]; mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667b9: clc; mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667ba: mov byte ptr [rax+0x22d], 0x35; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667bb: sub byte ptr [rip+0x35000002], 0xc6; sub byte ptr [rdi], 2; add [rax], al; leave; ret;
0xffffffff814667bc: sub eax, 0x35000002; mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667bd: add al, [rax]; add [rip+0x22f80c6], dh; add [rax], al; leave; ret;
0xffffffff814667be: add [rax], al; xor eax, 0x22f80c6; add [rax], al; leave; ret;
0xffffffff814667bf: add [rip+0x22f80c6], dh; add [rax], al; leave; ret;
0xffffffff814667c0: xor eax, 0x22f80c6; add [rax], al; leave; ret;
0xffffffff814667c1: mov byte ptr [rax+0x22f], 0x45; leave; ret;
0xffffffff814667c2: sub byte ptr [rdi], 2; add [rax], al; leave; ret;
0xffffffff814668fe: sub eax, 0xffeccbdc; mov rax, [rbp-8]; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466902: in al, dx; dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466903: dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466904: mov rax, [rbp-8]; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466905: mov eax, [rbp-8]; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466907: clc; mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff81466908: mov byte ptr [rax+0x1e], 0xc; leave; ret;
0xffffffff8146693b: sub [rcx-0x4b], al; sub eax, 0xffeccb9c; mov rax, [rbp-8]; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff8146693e: sub eax, 0xffeccb9c; mov rax, [rbp-8]; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466942: in al, dx; dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466943: dec dword ptr [rax-0x75]; clc; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466944: mov rax, [rbp-8]; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466945: mov eax, [rbp-8]; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466947: clc; mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466948: mov byte ptr [rax+0x65], 2; leave; ret;
0xffffffff81466f1a: ret 0xf905;
0xffffffff81467416: ret 0xaba;
0xffffffff81467524: cmp bl, 1; sbb eax, 0xffffffff; mov rbx, [rbp-8]; leave; ret;
0xffffffff81467525: sti; add [rbx-0x74b70028], eax; pop rbp; clc; leave; ret;
0xffffffff81467526: add [rbx-0x74b70028], eax; pop rbp; clc; leave; ret;
0xffffffff81467527: sbb eax, 0xffffffff; mov rbx, [rbp-8]; leave; ret;
0xffffffff81467528: fdivr st, st(7); mov rbx, [rbp-8]; leave; ret;
0xffffffff8146761f: or eax, 0x85fff8d3; shl byte ptr [rbp+6], 0x8b; cld; add eax, 1; leave; ret;
0xffffffff81467620: sar eax, cl; inc dword ptr [rbp-0x74f98a40]; cld; add eax, 1; leave; ret;
0xffffffff81467621: clc; inc dword ptr [rbp-0x74f98a40]; cld; add eax, 1; leave; ret;
0xffffffff81467622: inc dword ptr [rbp-0x74f98a40]; cld; add eax, 1; leave; ret;
0xffffffff81467624: shl byte ptr [rbp+6], 0x8b; cld; add eax, 1; leave; ret;
0xffffffff81467627: mov eax, [rbp-4]; add eax, 1; leave; ret;
0xffffffff81467629: cld; add eax, 1; leave; ret;
0xffffffff8146762a: add eax, 1; leave; ret;
0xffffffff8146763d: out dx, eax; sar al, cl; inc dword ptr [rbp-0x74178a40]; cld; leave; ret;
0xffffffff8146763e: sar al, cl; inc dword ptr [rbp-0x74178a40]; cld; leave; ret;
0xffffffff8146763f: clc; inc dword ptr [rbp-0x74178a40]; cld; leave; ret;
0xffffffff81467640: inc dword ptr [rbp-0x74178a40]; cld; leave; ret;
0xffffffff81467642: shl byte ptr [rbp-0x18], 0x8b; cld; leave; ret;
0xffffffff8146792e: test eax, 0x415bffca; pop rsp; pop rbp; ret;
0xffffffff8146799c: ret 0x3950;
0xffffffff81467ac2: ret 0x4223;
0xffffffff81467b62: ret 0x2820;
0xffffffff81467c46: ret 0x4215;
0xffffffff81467d84: shr byte ptr [r8+0x5b437510], 0x41; pop rsp; pop rbp; ret;
0xffffffff81467d85: shr byte ptr [rax+0x5b437510], 0x41; pop rsp; pop rbp; ret;
0xffffffff81467dd6: sbb eax, 0x415bfff8; pop rsp; pop rbp; ret;
0xffffffff81467e90: pushfq; adc eax, 0x415b0015; pop rsp; pop r13; pop rbp; ret;
0xffffffff81467e91: adc eax, 0x415b0015; pop rsp; pop r13; pop rbp; ret;
0xffffffff81468292: ret 0xca74;
0xffffffff814682e1: add [rax], al; neg dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814682e3: neg dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81469343: fldenv [rax+0x415bffec]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81469389: ret 0x418a;
0xffffffff81469666: ret 0xc3b0;
0xffffffff81469701: ret 0xc839;
0xffffffff81469cbd: ret 0xbde8;
0xffffffff81469dd0: mov [0xc48348fffffff2b8], eax; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81469f6f: ret 0x539;
0xffffffff8146a072: ret 0x28a0;
0xffffffff8146a0c5: ret 0x9e50;
0xffffffff8146a0dc: ret 0x5aff;
0xffffffff8146a749: add [rdi], cl; xchg esp, eax; rol bl, 0x66; nop; ret;
0xffffffff8146a74b: xchg esp, eax; rol bl, 0x66; nop; ret;
0xffffffff8146a7ea: adc dword ptr [rax+0x50000002], 0xffffffa7; or dword ptr [rax-0x77], 0x28083; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146a7ee: add [rax-0x59], dl; or dword ptr [rax-0x77], 0x28083; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146a7f0: cmpsd [rsi], [rdi]; or dword ptr [rax-0x77], 0x28083; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146a7f2: or dword ptr [rax-0x77], 0x28083; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146a7f5: add dword ptr [rax+0x5b000002], 0x41; pop rsp; pop rbp; ret;
0xffffffff8146a7f6: add byte ptr [rdx], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146a8d1: ret 0x8605;
0xffffffff8146aa78: ret 0x14;
0xffffffff8146aa79: ret 0x14;
0xffffffff8146abd5: ret 0x77f2;
0xffffffff8146b096: or dword ptr [rax-0x7d], 0x415b28c4; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8146b0d3: ret 0x31c0;
0xffffffff8146b12b: mov eax, [rbp-0x34]; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146b12d: int3; add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146b579: add [rcx+rcx*4-0x20], cl; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146b57a: mov rax, r12; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146b9d3: vpsubsb xmm0, xmm15, [rsi]; mov bl, 0x14; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146b9d7: mov bl, 0x14; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146bae6: add [r8], r8b; xor eax, eax; mov rbx, [rbp-8]; leave; ret;
0xffffffff8146bae7: add [rax], al; xor eax, eax; mov rbx, [rbp-8]; leave; ret;
0xffffffff8146bae8: add [rcx], dh; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff8146bb1a: ret 0x14b1;
0xffffffff8146bb23: add [rax], r8b; mov rbx, [rbp-8]; leave; ret;
0xffffffff8146bf0b: and al, 0x90; add al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146bf0c: nop; add al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8146c13a: ret 0x395e;
0xffffffff8146c58a: ret 0x194d;
0xffffffff8146caed: ret 0x4909;
0xffffffff8146cb33: ret 0xd7e8;
0xffffffff8146d037: ret 0xa72;
0xffffffff8146d062: ret 0xdf72;
0xffffffff8146d4aa: ret 0x14a4;
0xffffffff8146d4cf: or eax, 0x89ffc12c; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8146d4d1: sar edi, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8146d61a: ret 0xc12a;
0xffffffff8146d750: ret 0x4809;
0xffffffff8146dc78: ret 0x3b45;
0xffffffff8146e014: ret 0x320c;
0xffffffff8146e5fa: ret 0xc11a;
0xffffffff8146e8e0: ret 0x34e9;
0xffffffff8146e8f5: ret 0xd8e9;
0xffffffff8146ebbe: ret 0x3276;
0xffffffff8146ed86: add [rbp+0x480978c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146ed88: sar byte ptr [rax+9], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8146eded: ret 0xf0c;
0xffffffff8146f52d: xchg esp, eax; ret 0x148;
0xffffffff8146f67a: ret 0x3218;
0xffffffff8146f756: ret 0x1306;
0xffffffff8146f764: cmp [rax-0x77], cl; in eax, 0xe8; xchg ebx, eax; leave; int3; call far fword ptr [rbp-0x3d];
0xffffffff8146f767: in eax, 0xe8; xchg ebx, eax; leave; int3; call far fword ptr [rbp-0x3d];
0xffffffff8146f769: xchg ebx, eax; leave; int3; call far fword ptr [rbp-0x3d];
0xffffffff8146f76a: leave; int3; call far fword ptr [rbp-0x3d];
0xffffffff8146fcb7: ret 0x4c18;
0xffffffff8146fd17: add [rcx-0x3b7cb728], cl; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8146ff1a: ret 0x81c5;
0xffffffff8147026a: ret 0x1491;
0xffffffff81470294: ret 0xee01;
0xffffffff8147044c: ret 0xc2;
0xffffffff81470a9d: ret 0xa7f;
0xffffffff81470ac8: adc eax, 0x415b0039; pop rsp; pop rbp; ret;
0xffffffff81470ea9: push rbx; adc [rcx], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81470eaa: adc [rcx], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81470f59: ret 0x5050;
0xffffffff814710cb: or dword ptr [rax+0x30000000], 0x10; or dword ptr [r8-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff814710d0: xor [rax], dl; or dword ptr [r8-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff814710d2: or dword ptr [r8-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff814710d3: or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop rbp; ret;
0xffffffff81471490: mov [rax+0x218], rsi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81471491: mov [rax+0x218], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81471493: sbb [rdx], al; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814714e5: test [rax+rax-0x3fcf0000], dl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814714e9: add [rcx], dh; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81471537: ret 0xc3e8;
0xffffffff81471579: ret 0xea74;
0xffffffff814715c8: ret 0xe774;
0xffffffff81471bc6: rol byte ptr [rax-0x17acffa0], 0x40; cli; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81471bc9: add [rbx-0x18], dl; cli; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81471bcd: cli; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81471c6a: inc dword ptr [rax+rax*8-0x76b7f58c]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81471c6c: shl byte ptr [rdx+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81472906: ret 0x3e8;
0xffffffff814735e3: dec dword ptr [rax-0x77]; fucomip st, st(0); push rsp; in al, dx; leave; call far fword ptr [rbx+0x31];
0xffffffff814735e6: fucomip st, st(0); push rsp; in al, dx; leave; call far fword ptr [rbx+0x31];
0xffffffff814735e8: push rsp; in al, dx; leave; call far fword ptr [rbx+0x31];
0xffffffff814735e9: in al, dx; leave; call far fword ptr [rbx+0x31];
0xffffffff814735ea: leave; call far fword ptr [rbx+0x31];
0xffffffff8147384f: leave; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5c; pop rbp; ret;
0xffffffff814738ce: add eax, 0xc0be006f; and byte ptr [rax], 0xe8; xor al, 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814738cf: add eax, 0xc0be006f; and byte ptr [rax], 0xe8; xor al, 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814738d3: rol byte ptr [rax+0x34e80060], 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814738d4: and byte ptr [rax], 0xe8; xor al, 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814738d6: add al, ch; xor al, 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814738d8: xor al, 0xdd; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81473a8b: rol byte ptr [rax+0x7ce80060], 0xdb; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff81473aca: ret 0x3220;
0xffffffff81473b98: or [r13+0x480975c0], al; add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81473b99: or [rbp+0x480975c0], al; add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81473b9b: shl byte ptr [rbp+9], 0x48; add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81473c21: sar bh, 0x48; add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff81474317: ret 0x3c40;
0xffffffff81475112: ret 0xe8e8;
0xffffffff814751dd: add rsp, 0x98; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814751de: add esp, 0x98; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814753b2: ret 0xc1b6;
0xffffffff814753da: ret 0x5379;
0xffffffff81475490: ret 0xb553;
0xffffffff814756a4: leave; push qword ptr [rcx]; rcr byte ptr [rbx+0x5d], 0xc3; xor eax, eax; ret;
0xffffffff81475f58: int3; dec dword ptr [rax-0x77]; fucomip st, st(0); faddp st(2), st; leave; call far fword ptr [rbx+0x41];
0xffffffff81475f59: dec dword ptr [rax-0x77]; fucomip st, st(0); faddp st(2), st; leave; call far fword ptr [rbx+0x41];
0xffffffff81475f5c: fucomip st, st(0); faddp st(2), st; leave; call far fword ptr [rbx+0x41];
0xffffffff81475f5e: faddp st(2), st; leave; call far fword ptr [rbx+0x41];
0xffffffff814761be: ret 0x34e0;
0xffffffff814763fa: push 0x415b0114; pop rsp; pop rbp; ret;
0xffffffff814764c4: ret 0x775;
0xffffffff81476524: ret 0xa775;
0xffffffff8147653b: ret 0x9075;
0xffffffff8147676e: ret 0x183;
0xffffffff814768be: ret 0x181;
0xffffffff81476dbc: mov esp, 0x10487; add al, ch; add [r8], al; leave; ret;
0xffffffff81476dbf: add [rax], eax; add al, ch; add [r8], al; leave; ret;
0xffffffff81476dc1: add al, ch; add [r8], al; leave; ret;
0xffffffff81476dc4: add [r8], al; leave; ret;
0xffffffff81476e6b: mov [rbx+8], rax; mov qword ptr [rbx], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81476e6c: mov [rbx+8], eax; mov qword ptr [rbx], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81476e6f: mov qword ptr [rbx], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81476e70: mov dword ptr [rbx], 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81476e72: add [rax], al; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814773ff: add [r8], r8b; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814774df: sub eax, 0x48000044; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814774e0: add [rax], r8b; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814776dd: ret 0x4cff;
0xffffffff814777a8: sar bh, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81477b55: cmpsb [rsi], [rdi]; leave; call far fword ptr [rbx+0x4c];
0xffffffff81477b56: leave; call far fword ptr [rbx+0x4c];
0xffffffff81477e52: cli; add eax, 0x415b5b74; pop rsp; pop r13; pop rbp; ret;
0xffffffff81477e53: add eax, 0x415b5b74; pop rsp; pop r13; pop rbp; ret;
0xffffffff81478574: ret 0xb3b8;
0xffffffff81478a65: add rsp, 0x88; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81478a66: add esp, 0x88; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81478d52: ret 0x800;
0xffffffff81478d79: ret 0x1b0;
0xffffffff814793f4: ret 0x81e9;
0xffffffff81479811: ret 0x3575;
0xffffffff81479d3c: leave; call far fword ptr [rbx+0x44];
0xffffffff81479db8: ret 0x901;
0xffffffff81479eef: ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8147a130: xor eax, eax; add rsp, 0x98; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147a132: add rsp, 0x98; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147a133: add esp, 0x98; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147a135: cwde; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8147a88a: ret 0xda2f;
0xffffffff8147a8d7: leave; call qword ptr [rax-0x74bb6f70];
0xffffffff8147a907: insd [rdi], dx; leave; dec dword ptr [rax-0x77]; ret;
0xffffffff8147aa1a: ret 0x634c;
0xffffffff8147aab0: pop rsp; ret 0xffff;
0xffffffff8147ab47: ret 0x294d;
0xffffffff8147ad63: ret 0x34e8;
0xffffffff8147b2c4: pop rcx; test eax, eax; cmovg eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff8147b2c5: test eax, eax; cmovg eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff8147b2c7: cmovg eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff8147b556: mov [rbx], rdi; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8147b557: mov [rbx], edi; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8147ba92: ret 0x1bb;
0xffffffff8147bac6: ret 0x47f6;
0xffffffff8147bae7: and eax, 0x48fffffe; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8147bbbf: ret 0x450c;
0xffffffff8147bd3b: ret 0xe7eb;
0xffffffff8147be38: ret 0xc500;
0xffffffff8147c2c9: shl dword ptr [rax], 0xbe; or dword ptr [r8-0x77], 0xe8ff6ae5; enter 0xfffd, 0xff; leave; ret;
0xffffffff8147c2cc: or dword ptr [r8-0x77], 0xe8ff6ae5; enter 0xfffd, 0xff; leave; ret;
0xffffffff8147c2cd: or dword ptr [rax-0x77], 0xe8ff6ae5; enter 0xfffd, 0xff; leave; ret;
0xffffffff8147c2d4: enter 0xfffd, 0xff; leave; ret;
0xffffffff8147c4b6: pop rbp; leave; call far fword ptr [rbp-0x3d];
0xffffffff8147c58e: ret 0x5718;
0xffffffff8147cc58: ret 0x1948;
0xffffffff8147cec2: ret 0xf029;
0xffffffff8147d018: or esi, [rcx+rcx+0x48]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147d02f: mov [r12+0x210], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147d030: mov [rsp+0x210], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8147d594: ret 0xc4eb;
0xffffffff8147d987: ret 0xc0eb;
0xffffffff8147e1dd: leave; add eax, 0x29480000; ret 0x3949;
0xffffffff8147e7ac: ret 0x39e9;
0xffffffff8147e958: ret 0x5189;
0xffffffff8147eb84: ret 0x63e9;
0xffffffff8147ebab: ret 0x3ce9;
0xffffffff8147ed46: add [rax], eax; add [rax-0x77], cl; sbb bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8147ed48: add [rax-0x77], cl; sbb bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8147f141: ret 0xf55;
0xffffffff8147f814: pop rsp; enter 0x31ff, 0xc0; mov qword ptr [rbx+0x2b8], 0; pop rbx; pop rbp; ret;
0xffffffff81480021: ret 0x4c3b;
0xffffffff8148010d: mov qword ptr [rax+0xc8], 0xffffffff8147fe80; mov [rbx+0x118], rax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148010e: mov dword ptr [rax+0xc8], 0x8147fe80; mov [rbx+0x118], rax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81480113: add [rax+0x488147fe], al; mov [rbx+0x118], eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81480115: inc byte ptr [rdi-0x7f]; mov [rbx+0x118], rax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81480118: mov [rbx+0x118], rax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81480119: mov [rbx+0x118], eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148011a: sbb dword ptr [rax], 1; add [rax], al; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148011b: sbb [rcx], al; add [rax], al; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148011d: add [rax], al; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148012d: or al, ch; mov ebp, 0x48fffeef; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148012f: mov ebp, 0x48fffeef; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff814808f4: ret 0x84ff;
0xffffffff81480c10: add ecx, [rdi]; xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rbx+0x468901c0], 0x48; xor eax, eax; ret;
0xffffffff81480c12: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rbx+0x468901c0], 0x48; xor eax, eax; ret;
0xffffffff81480ca7: ret 0xe781;
0xffffffff81480e9e: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rsi+rbp+0x48], 0x89; ret;
0xffffffff81480ec8: leave; push qword ptr [rcx]; rcr byte ptr [rbx+0x41], 0x5c; pop r13; pop rbp; ret;
0xffffffff81481109: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rax+rsi-0x75], 0x4d; mov [rax-0x77], cl; ret 0x8944;
0xffffffff81481516: leave; dec dword ptr [rax-0x77]; ret;
0xffffffff814815f9: or bh, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814816dc: add [rsi+0x13], dl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81481aa3: ror byte ptr [rbp-0x17f26dac], cl; and esi, [rbp+1]; add [rbp-0x74f18740], al; cld; leave; ret;
0xffffffff81481aa6: xchg edx, eax; or eax, 0x17523e8; add [rbp-0x74f18740], al; cld; leave; ret;
0xffffffff81481aa7: or eax, 0x17523e8; add [rbp-0x74f18740], al; cld; leave; ret;
0xffffffff81481aa9: and esi, [rbp+1]; add [rbp-0x74f18740], al; cld; leave; ret;
0xffffffff81481aac: add [rbp-0x74f18740], al; cld; leave; ret;
0xffffffff81481aae: sar byte ptr [rax+0xe], 0x8b; cld; leave; ret;
0xffffffff81481c68: fild st, dword ptr [rbp+0xfca89d2]; xchg esp, eax; ret;
0xffffffff81481cb4: sbb [rcx+0x415b0001], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814821e2: mov [rbx+0x48], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81482e8d: mov ebx, [rax]; add eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8148300e: mov esp, eax; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff81483526: ret 0x5a9d;
0xffffffff814837b6: or al, 0x41; pop rsp; pop rbp; ret;
0xffffffff814837fc: add rsp, 0x10; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff814837fd: add esp, 0x10; not eax; pop rbx; pop rbp; and eax, 0xfffffff2; ret;
0xffffffff814838a8: add rsp, 0x10; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814838a9: add esp, 0x10; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81483918: add esi, [rcx+rcx+0x48]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81483996: add rsp, 8; mov eax, 3; pop rbx; pop r12; pop rbp; ret;
0xffffffff81483997: add esp, 8; mov eax, 3; pop rbx; pop r12; pop rbp; ret;
0xffffffff814839f0: or [rbx-0x3d092720], al; and [rbp+0x11], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814839f6: and [rbp+0x11], dh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814850c8: ret 0xee72;
0xffffffff8148549d: stc; add [rdi], ecx; xchg esp, eax; ret;
0xffffffff8148549e: add [rdi], ecx; xchg esp, eax; ret;
0xffffffff81485628: fimul st, dword ptr [rcx-0x3fcefbb8]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8148562b: add al, 0x31; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81485ba2: ret 0xffbd;
0xffffffff81485d8b: add [rax+0x48c2450f], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81485d8d: cmovne eax, edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81485f43: ret 0xf275;
0xffffffff81485ffd: leave; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8148622a: xor [rcx-0x75], eax; xchg esp, eax; and al, 0x10; add eax, [rax]; add [rcx], al; ret 0xd339;
0xffffffff8148622d: xchg esp, eax; and al, 0x10; add eax, [rax]; add [rcx], al; ret 0xd339;
0xffffffff81486305: and al, 0x40; add eax, 0x50880000; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81486307: add eax, 0x50880000; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81486309: add [rax+0x415b0250], cl; pop rsp; pop rbp; ret;
0xffffffff8148630b: push rax; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81486a37: add cl, [rdi]; xchg esp, eax; ror byte ptr [rbp-0x3cfcffbc], 0xb8; add al, 0; add [rax], al; ret;
0xffffffff81486a39: xchg esp, eax; ror byte ptr [rbp-0x3cfcffbc], 0xb8; add al, 0; add [rax], al; ret;
0xffffffff81486ac2: add dword ptr [rbx-0x38b7fd06], 0xb55bf4c1; sbb dword ptr [rbx+0x48], 0x41c8450f; pop rsp; pop rbp; mov rax, rcx; ret;
0xffffffff81486acc: sbb dword ptr [rbx+0x48], 0x41c8450f; pop rsp; pop rbp; mov rax, rcx; ret;
0xffffffff81486ad3: pop rsp; pop rbp; mov rax, rcx; ret;
0xffffffff81486d96: pop rsp; mov ch, 0x81; cmp ecx, 2; cmove rax, rdx; pop rbp; ret;
0xffffffff81486d97: pop rsp; mov ch, 0x81; cmp ecx, 2; cmove rax, rdx; pop rbp; ret;
0xffffffff81486f44: ret 0x5c74;
0xffffffff814872ea: clc; add eax, 0x39440000; mov [0x415bd777000005e8], eax; pop rsp; pop rbp; ret;
0xffffffff814872eb: add eax, 0x39440000; mov [0x415bd777000005e8], eax; pop rsp; pop rbp; ret;
0xffffffff814872f0: mov [0x415bd777000005e8], eax; pop rsp; pop rbp; ret;
0xffffffff814875cf: add eax, 0x415b0000; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81487d9b: ret 0x9ee8;
0xffffffff814883fe: or dword ptr [rcx+0x721ae8c2], 0x415b0012; pop rsp; cdqe; pop rbp; ret;
0xffffffff81488402: sbb dh, [rdx+0x12]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff8148843e: or dword ptr [rcx+0x71dae8c2], 0x415b0012; pop rsp; cdqe; pop rbp; ret;
0xffffffff81488442: fidiv st, dword ptr [rcx+0x12]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff81488a6a: ret 0xc182;
0xffffffff81488d5f: ret 0xca00;
0xffffffff8148919a: ret 0xeaa1;
0xffffffff81489763: ret 0x9bb0;
0xffffffff81489aa5: pop rsp; pop r13; and eax, 0xffffffed; pop rbp; ret;
0xffffffff81489c06: ret 0xdac0;
0xffffffff81489cf3: add [rax], al; add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8148a348: ret 0xdae0;
0xffffffff8148a43b: ret 0xd5e9;
0xffffffff8148a97b: ret 0xafe8;
0xffffffff8148ace1: ret 0x3152;
0xffffffff8148acea: ret 0x8541;
0xffffffff8148b0b8: ret 0x42e8;
0xffffffff8148b0e9: ret 0x11e8;
0xffffffff8148b1a8: ret 0x52e8;
0xffffffff8148b3ce: ret 0x2ce8;
0xffffffff8148b5ef: ret 0xbe8;
0xffffffff8148b96a: ret 0x90e8;
0xffffffff8148bbb7: ret 0x43e8;
0xffffffff8148bf91: ret 0x69e8;
0xffffffff8148c033: ret 0x64fa;
0xffffffff8148c077: mov qword ptr [rax+0x20], 0xffffffff8148a9d0; xor eax, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c078: mov dword ptr [rax+0x20], 0x8148a9d0; xor eax, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c07a: and al, dl; test eax, 0xc0318148; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c07b: shr byte ptr [rcx-0x3fce7eb8], 1; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c07c: test eax, 0xc0318148; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c07f: xor eax, eax; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff8148c422: pop rsp; mov ch, 0x81; pop rbx; pop r12; pop rbp; ret;
0xffffffff8148c56d: ret 0x6999;
0xffffffff8148c61e: ret 0x6135;
0xffffffff8148c71e: ret 0x9039;
0xffffffff8148c750: xchg esp, eax; ret 0xcbeb;
0xffffffff8148c751: ret 0xcbeb;
0xffffffff8148c947: shl byte ptr [rdi+rbx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8148cce4: ret 0xa173;
0xffffffff8148cdf2: ret 0x1e74;
0xffffffff8148cf48: ret 0xc789;
0xffffffff8148d60c: add [rdi], cl; xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rcx-0x3fceb7bd], 0x5b; pop rbp; ret;
0xffffffff8148d60e: xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rcx-0x3fceb7bd], 0x5b; pop rbp; ret;
0xffffffff8148d699: ret 0xd201;
0xffffffff8148e2de: ret 0x69dd;
0xffffffff8148e37a: ret 0x69d4;
0xffffffff8148e3db: ret 0x69f4;
0xffffffff8148e406: ret 0x69eb;
0xffffffff8148e798: ret 0x1ec0;
0xffffffff8148e9be: ret 0x3ce8;
0xffffffff8148f027: ret 0x6574;
0xffffffff8148f04a: ret 0x4274;
0xffffffff8148f178: xchg esp, eax; ror byte ptr [rdi], 0xb6; rol byte ptr [rbx-0x363cfe40], 0xb8; add al, [rax]; add [rax], al; ret;
0xffffffff8148f17e: rol byte ptr [rcx], 0xc3; leave; mov eax, 2; ret;
0xffffffff8148f17f: add ebx, eax; leave; mov eax, 2; ret;
0xffffffff8148f181: leave; mov eax, 2; ret;
0xffffffff8148ffac: xchg esp, eax; ret 0x8966;
0xffffffff814900e7: add [rcx-0x75], cl; xchg esp, eax; and al, 0xe0; add eax, [rax]; add [rax-0x7d], cl; ret;
0xffffffff814900ea: xchg esp, eax; and al, 0xe0; add eax, [rax]; add [rax-0x7d], cl; ret;
0xffffffff814901e0: ret 0xf939;
0xffffffff81490b3b: test eax, 0x415b0000; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81490c0b: mov es, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81490cac: ret 0x6a58;
0xffffffff81490ed2: dec byte ptr [rdi]; xchg esp, eax; iretd;
0xffffffff814910e1: clc; add [rdi], ecx; xchg esp, eax; rol bl, 0xc3; xor eax, eax; ret;
0xffffffff8149122b: add al, ch; shrd [rcx], edx, cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8149122d: shrd [rcx], edx, cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814917c0: ret 0xe740;
0xffffffff81492021: xchg esp, eax; rcr byte ptr [rbx+0x41], 0x5c; pop r13; pop rbp; ret;
0xffffffff8149208d: ret 0x622e;
0xffffffff814923f0: ret 0x6231;
0xffffffff814929bd: inc dword ptr [rcx-0x75]; xchg [rax+0x39000004], esp; ret 0x8f0f;
0xffffffff814929c0: xchg [rax+0x39000004], esp; ret 0x8f0f;
0xffffffff81493146: ret 0xe800;
0xffffffff814932d9: ret 0xe7a0;
0xffffffff81493348: ret 0xe860;
0xffffffff814937ee: ret 0xe6a0;
0xffffffff81493928: xchg [rsp+rax], esp; add [rcx], bh; ret 0x4d0f;
0xffffffff814939a8: ret 0x1b70;
0xffffffff81493abd: ret 0xd301;
0xffffffff81493b3c: ret 0xb28b;
0xffffffff81493b6f: ret 0x4420;
0xffffffff81493cb0: ret 0x440c;
0xffffffff81493d39: ret 0xe5e0;
0xffffffff8149422b: ret 0x1372;
0xffffffff81494645: ret 0xe520;
0xffffffff81494674: ret 0xe580;
0xffffffff814946aa: ret 0xe460;
0xffffffff814948c2: ret 0x6ac3;
0xffffffff81494be0: ret 0xe640;
0xffffffff81494c6a: ret 0x1eb0;
0xffffffff81494ed9: ret 0x5930;
0xffffffff81494f4d: ret 0x34f0;
0xffffffff8149501d: mov qword ptr [r12+0x3c0], 0xffffffff8148ef10; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8149501e: mov dword ptr [rsp+0x3c0], 0x8148ef10; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81495023: add [rax], al; adc bh, ch; or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81495024: add [rax], dl; out dx, eax; or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81495025: adc bh, ch; or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81495026: out dx, eax; or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81495027: or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff81495028: or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop rbp; ret;
0xffffffff814956be: ret 0x198;
0xffffffff81496422: ret 0xce81;
0xffffffff814966c1: or [rbx+0x41], bl; pop rsp; sub ecx, edx; pop rbp; mov eax, ecx; ret;
0xffffffff814966c4: pop rsp; sub ecx, edx; pop rbp; mov eax, ecx; ret;
0xffffffff814966cc: leave; pop rbx; pop r12; mov eax, ecx; pop rbp; ret;
0xffffffff814966cf: pop rsp; mov eax, ecx; pop rbp; ret;
0xffffffff81496774: pop rsp; mov eax, ecx; pop r13; pop rbp; ret;
0xffffffff814968e6: add [rbx+0x97401fb], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814968e9: add [rcx+rcx+0x48], esi; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8149699d: mov edi, 0x48fffffe; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814970d7: ret 0xc139;
0xffffffff814971f8: xchg esp, eax; shl bh, 0xd8; ret;
0xffffffff81497277: ret 0xffe9;
0xffffffff81497651: ret 0xb880;
0xffffffff8149776a: ret 0x3500;
0xffffffff81497a51: ret 0x7060;
0xffffffff81497b59: ret 0x6c45;
0xffffffff81497b95: xchg esp, eax; ret 0xc809;
0xffffffff81497e16: ret 0x8870;
0xffffffff81498009: xchg esp, eax; and al, 0xe0; add eax, 0xc2f60000; add [rdi+rcx*2-0xa], esi; ret 0x7510;
0xffffffff81498439: ret 0x6ce4;
0xffffffff814988a5: push rdi; xchg edi, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814988a6: xchg edi, eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814988a7: add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814989cc: add [rbp+0x480775c0], al; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff814989ce: shl byte ptr [rbp+7], 0x48; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81498a15: or al, [rbp-0x74128b37]; xchg esp, ebx; add al, [rax]; add bl, ch; or cl, [rax-0x7d]; ret 0x8b20;
0xffffffff81498a1b: xchg esp, ebx; add al, [rax]; add bl, ch; or cl, [rax-0x7d]; ret 0x8b20;
0xffffffff81498a24: ret 0x8b20;
0xffffffff81498b29: ret 0x7410;
0xffffffff81498c04: ret 0x35e0;
0xffffffff81498fb6: xchg esp, esp; add al, [rax]; add [rax-0x39], cl; ret 0x7108;
0xffffffff81498fbd: ret 0x7108;
0xffffffff8149902b: add dh, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8149907b: inc dword ptr [rbx-0x2c880206]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814990b0: adc cl, [rbx+0x508df445]; inc dword ptr [rbx+0x777fdfa]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814990b5: push rax; inc dword ptr [rbx+0x777fdfa]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814990b6: inc dword ptr [rbx+0x777fdfa]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814990e4: inc dword ptr [rbx-0x2d890206]; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81499134: ret 0xfcf4;
0xffffffff8149913f: ret 0x390c;
0xffffffff81499449: and [rax], eax; add [rbp-0x74fa8740], al; cld; leave; ret;
0xffffffff8149944b: add [rbp-0x74fa8740], al; cld; leave; ret;
0xffffffff8149944d: sar byte ptr [rax+5], 0x8b; cld; leave; ret;
0xffffffff81499455: leave; mov eax, 0xffffffff; ret;
0xffffffff8149948b: ret 0xff25;
0xffffffff81499494: and dx, 0x7fff; mov [rbx], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814994a4: shl byte ptr [rcx], cl; shl byte ptr [rsi-0x77], 0x13; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814994a5: xor eax, eax; mov [rbx], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814994a6: shl byte ptr [rsi-0x77], 0x13; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814994a7: mov [rbx], dx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81499949: ret 0x9574;
0xffffffff81499a5b: add rsp, 8; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81499a5c: add esp, 8; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8149a188: xchg esp, eax; push rsp; adc [rax], eax; pop rbp; cdqe; ret;
0xffffffff8149a1dd: sub eax, 0x11543d; mov eax, 0xb; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a40a: ret 0xffeb;
0xffffffff8149a46d: sub eax, 0x1151ad; mov eax, 0xb; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a471: adc [rax], eax; mov eax, 0xb; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a472: add [rax+0xb], bh; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a473: mov eax, 0xb; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a474: or eax, [rax]; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149a621: ret 0x2a1c;
0xffffffff8149a759: ret 0xfd80;
0xffffffff8149a8c4: leave; shr eax, 0x14; and eax, 0xf; cmp eax, 1; setbe al; ret;
0xffffffff8149adf5: ret 0x7502;
0xffffffff8149b16b: ret 0x88e9;
0xffffffff8149b7d0: push 0x415b0036; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c060: pop rdi; add [rax+rax*8+0x415bcc74], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c061: add [rax+rax*8+0x415bcc74], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c062: add [rax+rax*8+0x415bcc74], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c064: shl byte ptr [rsp+rcx*8+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c66f: add bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c71b: ror byte ptr [rcx+0x5a5de8c7], 1; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c720: pop rdx; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149c721: add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8149cbb7: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8149cf6f: ret 0x86f6;
0xffffffff8149cf94: xchg esp, eax; shl byte ptr [rbx], 0x45; ror byte ptr [rax-0x7d], 1; ret;
0xffffffff8149d28d: ret 0x39c3;
0xffffffff8149d349: ret 0xb89;
0xffffffff8149d61e: ret 0xeb75;
0xffffffff8149d670: ret 0x8fa0;
0xffffffff8149d79f: mov qword ptr [rcx+0x68], 0xffffffff8149da40; mov qword ptr [rcx+0x70], 0xffffffff8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149d7a0: mov dword ptr [rcx+0x68], 0x8149da40; mov qword ptr [rcx+0x70], 0xffffffff8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149d7a2: push 0xffffffff8149da40; mov qword ptr [rcx+0x70], 0xffffffff8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149d7a4: fimul st, dword ptr [rcx-0x7f]; mov qword ptr [rcx+0x70], 0xffffffff8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149d7a7: mov qword ptr [rcx+0x70], 0xffffffff8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149d7a8: mov dword ptr [rcx+0x70], 0x8149d7c0; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149da27: or [rbp-0x14], dh; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8149da29: in al, dx; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8149dbd3: inc dword ptr [rbp-0x27b6f040]; add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8149dbd6: cmovns ebx, eax; add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8149dc59: mov eax, ebx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff8149dcf1: ret 0xda0c;
0xffffffff8149dd02: ret 0x832c;
0xffffffff8149dd98: ret 0xbbeb;
0xffffffff8149e072: ret 0xd940;
0xffffffff8149e69a: ret 0x74ef;
0xffffffff8149e7d9: ret 0xf981;
0xffffffff8149ee09: sub eax, 0xffde3694; mov rax, [rbp-0x28]; leave; test rax, rax; setne al; ret;
0xffffffff8149ee0c: fdivp st(7), st; mov rax, [rbp-0x28]; leave; test rax, rax; setne al; ret;
0xffffffff8149ee0d: fdivp st(7), st; mov rax, [rbp-0x28]; leave; test rax, rax; setne al; ret;
0xffffffff8149ee0f: mov rax, [rbp-0x28]; leave; test rax, rax; setne al; ret;
0xffffffff8149ee10: mov eax, [rbp-0x28]; leave; test rax, rax; setne al; ret;
0xffffffff8149ee13: leave; test rax, rax; setne al; ret;
0xffffffff8149ee34: ret 0xef80;
0xffffffff8149efc7: push rbx; or [rdx+0x3e], dh; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8149efc8: or [rdx+0x3e], dh; add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8149efca: add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8149efcb: add rsp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8149efcc: add esp, 0x40; pop rbx; pop rbp; ret;
0xffffffff8149efef: add rsp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8149eff0: add esp, 0x40; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8149f15a: ret 0xe942;
0xffffffff8149f21a: ret 0x117a;
0xffffffff8149f31a: ret 0x1179;
0xffffffff8149f4c8: add [rax], al; mov dword ptr [rip+0x7bf594], 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149f4ca: mov dword ptr [rip+0x7bf594], 0xffffffff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149f6c0: sub al, 0xeb; fdivr st, st(7); add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149f726: fdivr st, st(7); add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8149f7bf: ret 0x2f7c;
0xffffffff8149f8e7: or [rbp-0x31], dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8149fca9: ret 0xf889;
0xffffffff8149fcad: mov eax, ecx; mov edx, esi; or eax, 0xffffff80; out dx, al; leave; ret;
0xffffffff8149fcaf: mov edx, esi; or eax, 0xffffff80; out dx, al; leave; ret;
0xffffffff8149fcb1: or eax, 0xffffff80; out dx, al; leave; ret;
0xffffffff8149fcb4: out dx, al; leave; ret;
0xffffffff8149fcd4: mov eax, 0x85fffba5; shl byte ptr [rbp+7], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8149fcd6: sti; inc dword ptr [rbp+0x480775c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8149fcd7: inc dword ptr [rbp+0x480775c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8149fcd9: shl byte ptr [rbp+7], 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8149fd6a: ret 0x3600;
0xffffffff814a004c: push r8; add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff814a004d: push rax; add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff814a0058: ret 0x807c;
0xffffffff814a007b: ret 0x7f18;
0xffffffff814a03a3: add rsp, 8; shr al, 4; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff814a03a4: add esp, 8; shr al, 4; movzx eax, al; pop rbx; pop rbp; ret;
0xffffffff814a03ac: rcr byte ptr [rbx+0x5d], 0xc3; add rsp, 8; and eax, 0xf; pop rbx; pop rbp; ret;
0xffffffff814a03b0: add rsp, 8; and eax, 0xf; pop rbx; pop rbp; ret;
0xffffffff814a03b1: add esp, 8; and eax, 0xf; pop rbx; pop rbp; ret;
0xffffffff814a03f6: inc dword ptr [rcx+rcx*4-0x20]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814a03f7: mov eax, r12d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814a03f8: mov eax, esp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814a0563: movzx eax, byte ptr [rbp-1]; mov edx, 0; leave; cmp al, 0x10; cmovae eax, edx; ret;
0xffffffff814a0567: mov edx, 0; leave; cmp al, 0x10; cmovae eax, edx; ret;
0xffffffff814a0568: add [rax], al; add [rax], al; leave; cmp al, 0x10; cmovae eax, edx; ret;
0xffffffff814a056a: add [rax], al; leave; cmp al, 0x10; cmovae eax, edx; ret;
0xffffffff814a056c: leave; cmp al, 0x10; cmovae eax, edx; ret;
0xffffffff814a0959: or dword ptr [rbx+7], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a0b53: ret 0x8259;
0xffffffff814a0bb3: ret 0x824f;
0xffffffff814a0bd2: ret 0x8262;
0xffffffff814a0dc1: ret 0x7e7;
0xffffffff814a1028: ret 0xe840;
0xffffffff814a1053: ret 0xa0;
0xffffffff814a1075: ret 0x489;
0xffffffff814a10dc: ret 0x4d0;
0xffffffff814a1323: in eax, 0xe8; xchg [rbp-0x26], esp; call far fword ptr [rbp-0x3d];
0xffffffff814a1325: xchg [rbp-0x26], esp; call far fword ptr [rbp-0x3d];
0xffffffff814a13a9: ret 0xea40;
0xffffffff814a1699: ret 0xc155;
0xffffffff814a171f: ret 0xf8ba;
0xffffffff814a1748: ret 0xcfc;
0xffffffff814a18ed: add bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814a1c91: ret 0xda8e;
0xffffffff814a1f88: ret 0x4128;
0xffffffff814a1fa8: movsd [rdi], [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814a203e: xchg esp, eax; ret 0xd089;
0xffffffff814a20b8: ret 0x688;
0xffffffff814a223a: ret 0x35fd;
0xffffffff814a24fb: mov [rbx+0x18], rax; mov [rax+0xc0], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814a24fc: mov [rbx+0x18], eax; mov [rax+0xc0], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814a24ff: mov [rax+0xc0], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814a2500: mov [rax+0xc0], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814a29c6: pop rsp; or eax, r14d; pop r13; pop r14; pop rbp; ret;
0xffffffff814a29fc: mov ecx, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814a2a75: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rcx*2+0x48], 0x89; ret;
0xffffffff814a2ce5: ret 0xd5e8;
0xffffffff814a3235: and al, 0x41; pop rsp; pop rbp; ret;
0xffffffff814a351d: or dword ptr [rax-0x39], 0xc5eb60c1; or dword ptr [rax-0x39], 0xa70d80c2; or dword ptr [rax-0x39], 0xb58c1dc6; or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a3520: shl dword ptr [rax-0x15], 0xc5; or dword ptr [rax-0x39], 0xa70d80c2; or dword ptr [rax-0x39], 0xb58c1dc6; or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a3524: or dword ptr [rax-0x39], 0xa70d80c2; or dword ptr [rax-0x39], 0xb58c1dc6; or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a3527: ret 0xd80;
0xffffffff814a352a: cmpsd [rsi], [rdi]; or dword ptr [rax-0x39], 0xb58c1dc6; or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a352b: or dword ptr [rax-0x39], 0xb58c1dc6; or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a3532: or dword ptr [rax-0x77], 0xbd15e8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a35cb: ret 0x38c8;
0xffffffff814a37a5: mov rdx, [rbp-0x30]; mov [rbx+0x20], rdx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff814a37a6: mov edx, [rbp-0x30]; mov [rbx+0x20], rdx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff814a37a9: mov [rbx+0x20], rdx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff814a37aa: mov [rbx+0x20], edx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff814a3824: ret 0x28b8;
0xffffffff814a3896: shl byte ptr [rsi+rcx-0x75], cl; or [r9+0x2288a], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a389a: or [r9+0x2288a], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a389b: or [rcx+0x2288a], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a389d: mov ch, [rax]; add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a389f: add al, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a393c: rcr byte ptr [rdx], 1; add [rax], eax; leave; ret;
0xffffffff814a3a15: sbb [rcx], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814a3d10: ret 0x3ae8;
0xffffffff814a3e36: ret 0x20e0;
0xffffffff814a431a: ret 0xc77f;
0xffffffff814a43f8: ret 0x158;
0xffffffff814a47a1: add rsp, 0x88; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814a47a2: add esp, 0x88; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814a4f06: pop rsp; cdqe; pop r13; pop rbp; ret;
0xffffffff814a52e9: dec dword ptr [rax-0x68]; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814a52ea: cdqe; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814a52eb: cwde; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814a53c1: add rsp, 0x30; mov rax, 0xffffffffffffffea; pop rbx; pop rbp; ret;
0xffffffff814a53c2: add esp, 0x30; mov rax, 0xffffffffffffffea; pop rbx; pop rbp; ret;
0xffffffff814a553c: ret 0xbee8;
0xffffffff814a556b: ret 0xb58b;
0xffffffff814a58e4: clc; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a5b3c: inc dword ptr [rax+rax*8+0x415b0575]; pop rsp; pop rbp; ret;
0xffffffff814a5c44: ret 0x38f0;
0xffffffff814a5e6d: add [rdi], cl; mov [rsi+rdx*8+0x10], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a5e6f: mov [rsi+rdx*8+0x10], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a5f58: ret 0xd48;
0xffffffff814a5ff6: mov edi, esp; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a5ff7: cld; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a602f: mov edi, 0x85480035; shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814a6031: add [rax-0x7b], cl; shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814a67f6: ret 0x4c74;
0xffffffff814a6947: mov ebp, 0xc48348ff; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814a6b44: add [rbx+0x41], bl; pop rsp; cmovns eax, r13d; pop r13; pop rbp; ret;
0xffffffff814a6b47: pop rsp; cmovns eax, r13d; pop r13; pop rbp; ret;
0xffffffff814a6cb3: test dword ptr [rax-0x39], 0xc5ec00c6; or dword ptr [rax-0x77], 0x520de8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a6cba: or dword ptr [rax-0x77], 0x520de8e5; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a6cc0: push rdx; leave; call far fword ptr [rbp-0x3d];
0xffffffff814a6cc1: leave; call far fword ptr [rbp-0x3d];
0xffffffff814a6cea: add ah, ch; vpsubsb xmm7, xmm15, [rbp+0x5c]; leave; call far fword ptr [rbx+0x5d];
0xffffffff814a6ceb: in al, dx; vpsubsb xmm7, xmm15, [rbp+0x5c]; leave; call far fword ptr [rbx+0x5d];
0xffffffff814a6cec: vpsubsb xmm7, xmm15, [rbp+0x5c]; leave; call far fword ptr [rbx+0x5d];
0xffffffff814a6cf0: pop rsp; leave; call far fword ptr [rbx+0x5d];
0xffffffff814a6cf1: leave; call far fword ptr [rbx+0x5d];
0xffffffff814a6d87: dec dword ptr [rax-0x7b]; shl byte ptr [rsi+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff814a6d8a: shl byte ptr [rsi+rax+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff814a6d97: and al, 0x38; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a6e35: ret 0xfcfc;
0xffffffff814a6f8d: add [rax+0x1b80000], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a6fa4: mov ecx, 0x846c7; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a6fa6: or [rax], r8b; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a6fa7: or [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a74b5: ret 0xf9f;
0xffffffff814a7be7: ret 0x4879;
0xffffffff814a7d1c: ret 0xb0cc;
0xffffffff814a7e7f: ret 0xedcb;
0xffffffff814a8644: ret 0x38f4;
0xffffffff814a89c7: or edx, [rcx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a8b05: cmpsd [rsi], [rdi]; or dl, [rcx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a8b06: or dl, [rcx]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814a8cad: ret 0xfb83;
0xffffffff814a921f: add [rax], al; add al, ch; leave; iretd;
0xffffffff814a9221: add al, ch; leave; iretd;
0xffffffff814a92b1: ret 0x8000;
0xffffffff814a92bd: ret 0x7480;
0xffffffff814a97c3: and eax, 0xfffffff2; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ab0a5: ret 0xf5d;
0xffffffff814ab1d2: and [r8], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814ab1d3: and [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814ab33e: mov rdx, [rsi+0xa8]; mov [rbx+0xa8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab33f: mov edx, [rsi+0xa8]; mov [rbx+0xa8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab343: add [rax], al; mov [rbx+0xa8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab345: mov [rbx+0xa8], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab346: mov [rbx+0xa8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab348: test al, 0; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ab493: fadd st, dword ptr [rcx-0x80]; and al, 0x7e; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff814ab497: and al, 0x7e; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff814ab67a: ret 0x1067;
0xffffffff814ab87a: ret 0x1065;
0xffffffff814ac0a1: movsd [rdi], [rsi]; or qword ptr [rax-0x39], 0xffffffffa5c0f845; sub rax, 0xfffffffffffffd4f; leave; ret;
0xffffffff814ac0a2: or qword ptr [rax-0x39], 0xffffffffa5c0f845; sub rax, 0xfffffffffffffd4f; leave; ret;
0xffffffff814ac0a3: or dword ptr [rax-0x39], 0xa5c0f845; sub rax, 0xfffffffffffffd4f; leave; ret;
0xffffffff814ac0a9: movsd [rdi], [rsi]; sub rax, 0xfffffffffffffd4f; leave; ret;
0xffffffff814ac0aa: sub rax, 0xfffffffffffffd4f; leave; ret;
0xffffffff814ac0ab: sub eax, 0xfffffd4f; leave; ret;
0xffffffff814ac5bd: ret 0xd339;
0xffffffff814ac684: ret 0x5177;
0xffffffff814ac9a1: ret 0x344;
0xffffffff814acc0a: ret 0x6348;
0xffffffff814ad611: ret 0x1c7;
0xffffffff814ad9bc: ret 0x5be9;
0xffffffff814ada3e: dec dword ptr [rbx-0x7adfdbbc]; shl byte ptr [rbp+6], 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff814ada42: and [rbp+0x480675c0], al; mov ebx, [rbp-8]; leave; ret;
0xffffffff814ada44: shl byte ptr [rbp+6], 0x48; mov ebx, [rbp-8]; leave; ret;
0xffffffff814ada58: leave; dec dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff814addbc: ret 0xeee8;
0xffffffff814ae243: add [rax+rbx*2+0x48], dh; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ae245: pop rax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ae815: ret 0xc019;
0xffffffff814ae8bd: ret 0x7408;
0xffffffff814af094: ret 0xebff;
0xffffffff814af1f1: mov [rax+0x18], rbx; mov qword ptr [rax+0x60], 0xffffffff814a8100; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814af1f2: mov [rax+0x18], ebx; mov qword ptr [rax+0x60], 0xffffffff814a8100; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814af1f5: mov qword ptr [rax+0x60], 0xffffffff814a8100; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814af1f6: mov dword ptr [rax+0x60], 0x814a8100; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814af236: add [rcx+rcx+0x48], dh; add esp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814af4f9: ret 0xb0f;
0xffffffff814af67c: ret 0x3c74;
0xffffffff814af9e6: ret 0x54e8;
0xffffffff814afacc: ret 0x6ee8;
0xffffffff814afb33: ret 0xc7e8;
0xffffffff814afc54: ret 0x947f;
0xffffffff814aff50: mov esp, eax; mov rax, r12; pop r12; pop rbp; ret;
0xffffffff814b07e2: ret 0x4903;
0xffffffff814b0c12: ret 0x7bbe;
0xffffffff814b0c74: mov [rax-0x3fcef48c], ch; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b0c77: or esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b0e6f: mov ecx, 0x41ffffff; pop rsp; pop rbp; ret;
0xffffffff814b0ea8: mov eax, 0x41000000; pop rsp; add rax, 0x10; pop rbp; ret;
0xffffffff814b0ead: pop rsp; add rax, 0x10; pop rbp; ret;
0xffffffff814b0ed6: mov eax, 0x41000000; pop rsp; add rax, 6; pop rbp; ret;
0xffffffff814b0edb: pop rsp; add rax, 6; pop rbp; ret;
0xffffffff814b1754: xor ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814b1d73: ret 0x8bff;
0xffffffff814b214d: mov [rbx+0xb0], r12d; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b214e: mov [rbx+0xb0], esp; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b2152: add [rax], al; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b22bb: sldt [rcx-0x75]; xchg esp, eax; and al, 0x84; add [rax], al; add [rcx], al; ret 0xd283;
0xffffffff814b22bc: add [rcx-0x75], al; xchg esp, eax; and al, 0x84; add [rax], al; add [rcx], al; ret 0xd283;
0xffffffff814b26ae: ret 0xce8;
0xffffffff814b2ecd: ret 0x4ee9;
0xffffffff814b35c1: leave; and [r8], al; add dh, dh; ret 0xf01;
0xffffffff814b388a: xor ah, [rsi+0x415bffff]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814b3c30: pop rsp; xor esi, edx; dec dword ptr [rax+0x39]; ret;
0xffffffff814b3f7a: sbb eax, 0xfc08566; xchg esp, eax; ret 0xd189;
0xffffffff814b3f90: or edx, ecx; mov [rbx+0x81], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814b3f92: mov [rbx+0x81], dl; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814b4041: mov [rbx+0x81], al; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff814b4045: add [rax], al; add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff814b4047: add rsp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff814b4048: add esp, 8; mov eax, edx; pop rbx; pop rbp; ret;
0xffffffff814b42b3: ret 0xe7e8;
0xffffffff814b4470: add rsp, 0x10; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b4471: add esp, 0x10; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b4473: adc [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814b49f0: ret 0x9aeb;
0xffffffff814b4e3b: add [rbp-0x3d7af040], al; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b4e3f: test edx, eax; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b4f29: mov esp, 0xc48348ff; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b4f59: ret 0x17f;
0xffffffff814b525d: ret 0x5a72;
0xffffffff814b53c3: ret 0xffc5;
0xffffffff814b57ca: or [r9+0x415b0846], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b57cb: or [rcx+0x415b0846], cl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b57cd: or [rbx+0x41], r11b; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b582a: ret 0xe;
0xffffffff814b587f: add [rbp+7], dh; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff814b5980: or al, 0x8b; adc [rcx-0x76bbefb9], cl; and ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814b5983: adc [rcx-0x76bbefb9], cl; and ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814b5989: and ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814b59f1: or esi, [rcx]; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b5bea: push rbx; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b5dae: or [r8-0x7b], cl; shl byte ptr [rbx+rax-0x3a], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b5daf: or [rax-0x7b], cl; shl byte ptr [rbx+rax-0x3a], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b5db2: shl byte ptr [rbx+rax-0x3a], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814b60f1: ret 0xc6c3;
0xffffffff814b6500: mov edx, 0x415b0034; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814b6536: ret 0xeca0;
0xffffffff814b68bd: ret 0x41e9;
0xffffffff814b6a7a: ret 0xebd;
0xffffffff814b6a91: ret 0xc0b9;
0xffffffff814b6cb8: ret 0x82e8;
0xffffffff814b6d9a: sub eax, 0xec310; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814b6e7b: ret 0x3918;
0xffffffff814b769c: mov dword ptr [rcx+0xf305de8], 0xc4834800; adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b77e5: ret 0x950;
0xffffffff814b77ff: pop rbp; mov rsi, 0x48d80106e8c148ff; mov ebx, [rbp-8]; leave; ret;
0xffffffff814b7800: mov rsi, 0x48d80106e8c148ff; mov ebx, [rbp-8]; leave; ret;
0xffffffff814b7803: shr rax, 6; add eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814b7804: shr eax, 6; add eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814b7807: add eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814b791d: mov dword ptr [rcx+0xf329ce8], 0xc4834800; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814b7b23: cmp bh, bh; inc dword ptr [rbp+0x483678c0]; lea ecx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b25: inc dword ptr [rbp+0x483678c0]; lea ecx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b27: sar byte ptr [rax+0x36], 0x48; lea ecx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b29: lea rcx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b2a: lea rcx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b2b: lea ecx, [rbp-4]; mov eax, [rcx]; leave; ret;
0xffffffff814b7b2d: cld; mov eax, [rcx]; leave; ret;
0xffffffff814b7b2e: mov eax, [rcx]; leave; ret;
0xffffffff814b7e3b: ret 0x1178;
0xffffffff814b8a50: xchg esp, eax; shr cl, 0x94; idiv edi; inc dword ptr [rcx-0x80]; jmp far fword ptr [rdi+rcx];
0xffffffff814b8a53: xchg esp, eax; idiv edi; inc dword ptr [rcx-0x80]; jmp far fword ptr [rdi+rcx];
0xffffffff814b9230: ret 0x3e79;
0xffffffff814b93bd: ret 0x3879;
0xffffffff814b9508: ret 0x3c79;
0xffffffff814b9533: ret 0xa20;
0xffffffff814b961d: add ebx, 8; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff814b962e: cmove ebx, edx; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff814b9673: ret 0xc301;
0xffffffff814b96d7: dec dword ptr [rcx+0x48d089c2]; mov ebx, [rbp-8]; leave; ret;
0xffffffff814b96d8: mov edx, eax; mov eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814b96da: mov eax, edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814b96db: ror byte ptr [rax-0x75], 1; pop rbp; clc; leave; ret;
0xffffffff814b9768: ret 0xfc60;
0xffffffff814b983d: ret 0xda74;
0xffffffff814b98f6: ret 0x93ab;
0xffffffff814b9cee: ret 0xa48;
0xffffffff814b9d61: ret 0x93b0;
0xffffffff814ba217: ret 0x9d0f;
0xffffffff814ba7d5: sbb [rsp+rax+0x48], dh; mov eax, [rdx-8]; leave; ret;
0xffffffff814ba7d7: add al, 0x48; mov eax, [rdx-8]; leave; ret;
0xffffffff814ba7d8: mov rax, [rdx-8]; leave; ret;
0xffffffff814ba7d9: mov eax, [rdx-8]; leave; ret;
0xffffffff814ba81b: add [rsi+rax+0x48], dh; mov eax, [rdx-0x18]; leave; ret;
0xffffffff814ba81e: mov rax, [rdx-0x18]; leave; ret;
0xffffffff814ba81f: mov eax, [rdx-0x18]; leave; ret;
0xffffffff814ba8ba: ret 0xca81;
0xffffffff814babca: add [rax+1], cl; cmp dword ptr [rax+0x48000000], 0xffffff89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814babcd: cmp dword ptr [rax+0x48000000], 0xffffff89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814bac57: or dh, al; add eax, 0xa38e55; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bac59: add eax, 0xa38e55; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bac5a: push rbp; mov fs, [rbx+0x415b0000]; pop rsp; pop rbp; ret;
0xffffffff814bac5b: mov fs, [rbx+0x415b0000]; pop rsp; pop rbp; ret;
0xffffffff814bad12: cmp r14b, al; add eax, 0xa38d99; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bad13: cmp dh, al; add eax, 0xa38d99; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bad15: add eax, 0xa38d99; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bad16: cdq; lea esp, [rbx+0x415b0000]; pop rsp; pop rbp; ret;
0xffffffff814bad17: lea esp, [rbx+0x415b0000]; pop rsp; pop rbp; ret;
0xffffffff814badbe: pop rsp; mov [r13+0x28], rax; mov eax, 1; pop r13; pop rbp; ret;
0xffffffff814baf51: ret 0xe9e8;
0xffffffff814baf94: fisttp qword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814bafc1: ret 0x79e8;
0xffffffff814bb00c: fimul st, dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814bb2fd: mov [0x415bc03100000300], eax; pop rsp; pop r13; pop rbp; ret;
0xffffffff814bb34a: pop rsp; test eax, eax; pop rbp; setne al; ret;
0xffffffff814bb5dd: test [rax+rsi], ah; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bb5de: and al, 0x30; add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bb72a: ret 0xc35d;
0xffffffff814bb79c: xchg esp, eax; mov ebp, 0x5dc031ff; ret;
0xffffffff814bb7f8: xchg esp, eax; mov ebp, 0x5c415bff; pop rbp; ret;
0xffffffff814bbb08: add [rax], eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814bc3e8: ret 0x8b18;
0xffffffff814bc715: mov r12, 0x1de80; push rbx; mov rbx, r12; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc716: mov esp, 0x1de80; push rbx; mov rbx, r12; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc718: sbb dh, 1; add [rbx+0x4c], dl; mov ebx, esp; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc719: fiadd st, word ptr [rcx]; add [rbx+0x4c], dl; mov ebx, esp; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc71a: add [rax], eax; push rbx; mov rbx, r12; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc71b: add [rbx+0x4c], dl; mov ebx, esp; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc71c: push rbx; mov rbx, r12; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc71d: mov rbx, r12; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc71e: mov ebx, esp; sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc720: sub rsp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc721: sub esp, 0x10; add rbx, [rsi*8-0x7e49ca80]; call qword ptr [0xffffffff81c27000];
0xffffffff814bc866: sub esp, 0; add [rax], al; mov [r13], eax; mov byte ptr [rbx+0x10c], 0; mov rdi, r15; call qword ptr [0xffffffff81c27008];
0xffffffff814bca5f: ret 0x2476;
0xffffffff814bcd44: mov [0x415bc031000002ec], eax; pop rsp; pop rbp; ret;
0xffffffff814bce4b: xchg esp, ecx; add [rax], al; add [rbx+0x497501f8], al; mov dword ptr [rdi+0xcc], 0; mov [rdi+0x28], esi; call qword ptr [0xffffffff81c27000];
0xffffffff814bce8d: pop rsp; mov ecx, 0xdf8948ff; call qword ptr [0xffffffff81c27008];
0xffffffff814bcfe9: ret 0x1550;
0xffffffff814bd078: ret 0x12e8;
0xffffffff814bd0d8: add [rdi+0x415bc031], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814bdb6f: lea eax, [rsp+rsi]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814bdb71: xor al, 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814bde01: cmp al, 0x74; or [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff814bde02: cmp al, 0x74; or [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff814bde04: or [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff814be485: ret 0x959d;
0xffffffff814be88a: rcr byte ptr [rbx+0x41], cl; pop rsp; pop rbp; ret;
0xffffffff814be8cb: pop rsp; and al, 0x58; mov qword ptr [r12+0x58], 0; call qword ptr [0xffffffff81c27018];
0xffffffff814be93f: pop rsp; and al, 0x48; mov qword ptr [r12+0x48], 0; mov [r12+0x50], rax; call qword ptr [0xffffffff81c27018];
0xffffffff814beb0d: add byte ptr [rax], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814becc6: ret 0xb55f;
0xffffffff814becd8: ret 0x7545;
0xffffffff814bee3b: ret 0x3b01;
0xffffffff814bf17e: mov ecx, 0x8b480001; pop rbp; clc; leave; ret;
0xffffffff814bf17f: add [rax], eax; mov rbx, [rbp-8]; leave; ret;
0xffffffff814bf703: ret 0x21d4;
0xffffffff814bf724: ret 0x95df;
0xffffffff814bf7c2: ret 0x7b12;
0xffffffff814bf948: add bl, ch; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814bfd58: mov [rcx+rdi+0xf], bh; add [rbp+rcx+0x48], dh; mov dword ptr [rdx+0x68], 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd5a: cmp [rdi], ecx; add [rbp+rcx+0x48], dh; mov dword ptr [rdx+0x68], 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd5c: add [rbp+rcx+0x48], dh; mov dword ptr [rdx+0x68], 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd5e: or eax, 0x6842c748; add [rax], al; add [rax], al; mov [rsi], rdx; leave; ret;
0xffffffff814bfd5f: mov qword ptr [rdx+0x68], 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd60: mov dword ptr [rdx+0x68], 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd62: push 0; mov [rsi], rdx; leave; ret;
0xffffffff814bfd63: add [rax], al; add [rax], al; mov [rsi], rdx; leave; ret;
0xffffffff814bfd65: add [rax], al; mov [rsi], rdx; leave; ret;
0xffffffff814bfd67: mov [rsi], rdx; leave; ret;
0xffffffff814bfd68: mov [rsi], edx; leave; ret;
0xffffffff814bfdf1: rol dword ptr [rdx], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814bfe60: add al, 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814bfe82: ret 0x71;
0xffffffff814bfef5: ret 0x2674;
0xffffffff814c0032: ret 0xba16;
0xffffffff814c0196: add al, ch; test [rip+0x415bffe7], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814c0198: test [rip+0x415bffe7], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814c0199: sbb eax, 0x415bffe7; pop rsp; pop r13; pop rbp; ret;
0xffffffff814c0308: ret 0x8481;
0xffffffff814c0372: mov eax, [rbp-0x20]; add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff814c072c: ret 0xe9ff;
0xffffffff814c077c: sbb [rax+rax], dh; leave; ret;
0xffffffff814c077d: xor al, 0; leave; ret;
0xffffffff814c07c7: ret 0xed75;
0xffffffff814c080e: ret 0x7474;
0xffffffff814c081a: ret 0x6874;
0xffffffff814c0851: mov ebp, 0xc48348ff; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814c0882: ret 0x8c75;
0xffffffff814c0971: mov eax, 0xc031baeb; leave; ret;
0xffffffff814c1078: ret 0x4902;
0xffffffff814c15d0: ret 0xa88;
0xffffffff814c15f1: ret 0xa84;
0xffffffff814c16ea: add rsp, 0x10; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c16eb: add esp, 0x10; mov rax, rdx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c16ed: adc [rax-0x77], cl; rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff814c172f: add rsp, 0x10; pop rbx; pop r12; mov rax, rdx; pop rbp; ret;
0xffffffff814c1730: add esp, 0x10; pop rbx; pop r12; mov rax, rdx; pop rbp; ret;
0xffffffff814c1732: adc [rbx+0x41], bl; pop rsp; mov rax, rdx; pop rbp; ret;
0xffffffff814c1b21: mov [rbx+0xc0], rdx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c1b22: mov [rbx+0xc0], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c1b3a: add rsp, 8; mov rax, 0xffffffffffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c1b3b: add esp, 8; mov rax, 0xffffffffffffffea; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c1bd2: add dword ptr [rax+0x60000000], 0xf; xchg esp, eax; ret 0xd284;
0xffffffff814c1bd3: add byte ptr [rax], 0; add [rax+0xf], ah; xchg esp, eax; ret 0xd284;
0xffffffff814c1bd4: add [rax], al; add [rax+0xf], ah; xchg esp, eax; ret 0xd284;
0xffffffff814c1bd6: add [rax+0xf], ah; xchg esp, eax; ret 0xd284;
0xffffffff814c2516: add dword ptr [rax+0x5b000003], 0x41; pop rsp; add rax, rdx; pop r13; pop rbp; ret;
0xffffffff814c251a: add [rbx+0x41], bl; pop rsp; add rax, rdx; pop r13; pop rbp; ret;
0xffffffff814c251d: pop rsp; add rax, rdx; pop r13; pop rbp; ret;
0xffffffff814c25fe: ret 0xf11;
0xffffffff814c2b9a: ret 0xf69;
0xffffffff814c31a1: fist dword ptr [rsi-0x7a99814b], st; shl byte ptr [rbp+2], cl; leave; ret;
0xffffffff814c31a7: shl byte ptr [rbp+2], cl; leave; ret;
0xffffffff814c31b0: cmp al, 0xf8; mov eax, 0xfc458bff; leave; ret;
0xffffffff814c31b1: clc; mov eax, 0xfc458bff; leave; ret;
0xffffffff814c31b2: mov eax, 0xfc458bff; leave; ret;
0xffffffff814c3add: dec byte ptr [rdi]; xchg esp, eax; ror byte ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret 0xd038;
0xffffffff814c3adf: xchg esp, eax; ror byte ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret 0xd038;
0xffffffff814c3ae0: ror byte ptr [rax-0x7d], 0xe6; dec byte ptr [rdi]; xchg esp, eax; ret 0xd038;
0xffffffff814c3ae4: dec byte ptr [rdi]; xchg esp, eax; ret 0xd038;
0xffffffff814c3ae6: xchg esp, eax; ret 0xd038;
0xffffffff814c3ae7: ret 0xd038;
0xffffffff814c3d6c: xchg esp, eax; ret 0xe3e9;
0xffffffff814c3e02: xchg esp, eax; ret 0x4de9;
0xffffffff814c3e03: ret 0x4de9;
0xffffffff814c3f47: ret 0xe850;
0xffffffff814c4019: clc; add [rax-0x77], esi; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814c401a: add [rax-0x77], esi; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814c47f6: ret 0x44e8;
0xffffffff814c4aab: mov eax, [0x415be88944fffffe]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814c4ba6: ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814c4ba7: ltr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814c4c07: mov eax, edx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c4c2e: and byte ptr [rbx+0x48], 0xfe; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c4c2f: movsxd ecx, [rax-2]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c4c7a: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814c4ce7: add rsp, 0x10; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c4ce8: add esp, 0x10; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c4d69: add [rbp+9], dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c50a5: ret 0xa5e8;
0xffffffff814c52d9: add rsp, 0x28; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c52da: add esp, 0x28; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c5477: ret 0xf0b8;
0xffffffff814c5623: ret 0xe181;
0xffffffff814c563a: xchg esp, eax; and al, 0; add [rax], eax; add [rax-0x7b], cl; ret 0xf74;
0xffffffff814c564a: ret 0xa9;
0xffffffff814c5669: ret 0xe680;
0xffffffff814c5713: xchg esp, eax; and al, 0xd0; add [rax], al; add [rax+0x39], cl; ret 0x840f;
0xffffffff814c59da: ret 0x1852;
0xffffffff814c5ce0: inc dword ptr [rbp+0x480775c0]; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c5ce2: shl byte ptr [rbp+7], 0x48; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c5d00: add al, ch; sub bl, [rdi+rdi*8-1]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c5d02: sub bl, [rdi+rdi*8-1]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c6438: mov [rdx], rax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c6439: mov [rdx], eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c649d: add dword ptr [rax+0x138], 1; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c64a2: add [rcx], al; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c6715: add al, ch; adc eax, 0x48ffff52; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c6717: adc eax, 0x48ffff52; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814c6d79: ret 0x9c4;
0xffffffff814c6d97: sub dword ptr [rax+0x49fffffc], 0xffffff8d; xchg esp, eax; and al, 0x90; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c6d9b: dec dword ptr [rcx-0x73]; xchg esp, eax; and al, 0x90; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c6d9e: xchg esp, eax; and al, 0x90; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c6daf: cmp dword ptr [rax+0x49fffffc], 0xffffff8d; xchg esp, eax; and al, 0xa0; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c6db3: dec dword ptr [rcx-0x73]; xchg esp, eax; and al, 0xa0; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c6db6: xchg esp, eax; and al, 0xa0; add [rax], al; add [rax+0x39], cl; ret 0x850f;
0xffffffff814c71da: ret 0x9613;
0xffffffff814c7216: ret 0x960e;
0xffffffff814c721c: ret 0xb389;
0xffffffff814c73ad: ret 0xf80;
0xffffffff814c73cd: leave; add [rax], al; add [rax], dl; test rdx, rsi; cmovne eax, ecx; ret;
0xffffffff814c760b: add rsp, 0x30; mov eax, r8d; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c760c: add esp, 0x30; mov eax, r8d; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c76dd: ret 0xca80;
0xffffffff814c76e8: ret 0xc6f7;
0xffffffff814c77b2: xor eax, [rax]; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff814c7817: in eax, 0xa7; xor eax, [rax]; add rsp, 0x88; pop rbx; pop rbp; ret;
0xffffffff814c7818: cmpsd [rsi], [rdi]; xor eax, [rax]; add rsp, 0x88; pop rbx; pop rbp; ret;
0xffffffff814c7819: xor eax, [rax]; add rsp, 0x88; pop rbx; pop rbp; ret;
0xffffffff814c781b: add rsp, 0x88; pop rbx; pop rbp; ret;
0xffffffff814c781c: add esp, 0x88; pop rbx; pop rbp; ret;
0xffffffff814c78a4: shl byte ptr [rbp+9], cl; add rsp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c78f4: xor eax, [rax]; add rsp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c78f6: add rsp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c78f7: add esp, 0x78; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c7a76: shl bh, 0xd0; and eax, 0xfffffff2; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff814c7a77: not eax; and eax, 0xfffffff2; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff814c7a79: and eax, 0xfffffff2; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff814c7af5: shl bh, 0xd0; and eax, 0xfffffff2; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff814c7af6: not eax; and eax, 0xfffffff2; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff814c7af8: and eax, 0xfffffff2; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff814c7b49: shl bh, 0xd0; and eax, 0xfffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814c7b4a: not eax; and eax, 0xfffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814c7b4c: and eax, 0xfffffff2; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814c7ca7: add rsp, 0x78; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814c7ca8: add esp, 0x78; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814c7eb4: ret 0xd039;
0xffffffff814c86fc: xor eax, [rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c896c: shr byte ptr [rcx-0x3fce002c], 1; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff814c896d: test eax, 0xc031ffd4; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff814c8970: xor eax, eax; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff814c8d49: add rsp, 0x208; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814c8d4a: add esp, 0x208; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff814c8d4d: add al, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814c90a0: ret 0x853b;
0xffffffff814c9429: mov al, 0x13; mov dword ptr [rcx+0xe8a0de8], 0xc4834800; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814c942c: mov dword ptr [rcx+0xe8a0de8], 0xc4834800; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814c942d: sub eax, 0xe8a0d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c942f: or eax, 0x48000e8a; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814c94ea: ret 0xd49e;
0xffffffff814c9536: rcr byte ptr [rbx+0x41], 1; pop rsp; and eax, 0xfffffff2; pop rbp; ret;
0xffffffff814c9539: pop rsp; and eax, 0xfffffff2; pop rbp; ret;
0xffffffff814caa27: xchg esp, eax; or eax, 0x894c0000; ret 0x894c;
0xffffffff814cb80b: ret 0x2fe8;
0xffffffff814cbde2: xchg [rax+2], esp; add [rax], al; mov dword ptr [rdi+0x270], 0; mov [rdi+0x260], rax; mov [rdi+0x268], rax; ret;
0xffffffff814cbdee: add [rax], al; add [rax-0x77], cl; xchg [rax+2], esp; add [rax], al; mov [rdi+0x268], rax; ret;
0xffffffff814cbdf0: add [rax-0x77], cl; xchg [rax+2], esp; add [rax], al; mov [rdi+0x268], rax; ret;
0xffffffff814cbdf3: xchg [rax+2], esp; add [rax], al; mov [rdi+0x268], rax; ret;
0xffffffff814cc12b: mov rcx, [rbx+0x290]; lea rdx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc12c: mov ecx, [rbx+0x290]; lea rdx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc12d: mov edx, [rax+0x48000002]; lea edx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc130: add [rax], al; lea rdx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc132: lea rdx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc133: lea edx, [rcx+0x10]; mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc136: mov [rbx+0x2d8], rdx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc137: mov [rbx+0x2d8], edx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc138: xchg ebx, eax; fadd st, dword ptr [rdx]; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc139: fadd st, dword ptr [rdx]; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc13a: add al, [rax]; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff814cc4c6: or eax, [rbx+0x674eff8]; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4d3: shl byte ptr [rbp+0xe], 0x83; xor al, 1; add dword ptr [rbx+0x38], 1; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4d6: add dword ptr [rbx+0x34], 1; add dword ptr [rbx+0x38], 1; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4d8: xor al, 1; add dword ptr [rbx+0x38], 1; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4d9: add [rbx+0x48013843], eax; mov ebx, [rbp-8]; leave; ret;
0xffffffff814cc4da: add dword ptr [rbx+0x38], 1; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4db: cmp [r9], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4dc: cmp [rcx], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814cc4dd: add [rax-0x75], ecx; pop rbp; clc; leave; ret;
0xffffffff814cc9c8: shl byte ptr [rsp+rbx*8+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814cc9ca: fcomp st, qword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814cc9ef: ret 0x315b;
0xffffffff814ccd35: mov byte ptr [rbx+0x258], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ccee6: add eax, [rax]; add [rbp-1], ah; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814ccee8: add [rbp-1], ah; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814ccf30: and esi, [rax+rcx+0x48]; add esp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf41: mov al, 0xd2; sub rax, 0xffffffffffbc7d65; add rsp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf42: rcl dl, 0x4c; sub eax, 0xffbc7d65; add rsp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf44: sub rax, 0xffffffffffbc7d65; add rsp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf45: sub eax, 0xffbc7d65; add rsp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf4b: add rsp, 8; pop r12; pop rbp; ret;
0xffffffff814ccf4c: add esp, 8; pop r12; pop rbp; ret;
0xffffffff814cd053: ret 0x1fe0;
0xffffffff814cd176: or eax, 0xc031fffe; leave; ret;
0xffffffff814cdd59: ret 0xf40;
0xffffffff814ce673: sbb dword ptr [rcx+rax+0x5b000000], 0x41; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff814ce678: add [rbx+0x41], bl; pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff814ce68c: pop rsp; pop r14; pop r15; pop rbp; ret;
0xffffffff814ce788: ret 0xc931;
0xffffffff814ce7ed: add rsp, 0x48; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ce7ee: add esp, 0x48; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ce999: ret 0xa300;
0xffffffff814cf133: ret 0xead3;
0xffffffff814cf313: shl byte ptr [rbp+9], cl; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814cf6d1: xor dword ptr [rax+0x5b000001], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff814cf8c9: ret 0x4904;
0xffffffff814cf90e: ret 0x2275;
0xffffffff814cfff4: ret 0x7eb;
0xffffffff814d0017: ret 0x759b;
0xffffffff814d02a0: fucomip st, st(0); mov dl, [rbx+0x415b000e]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814d02a2: mov dl, [rbx+0x415b000e]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814d0f08: add [rax], al; add [rax-0x77], cl; or [rax-0x77], cl; adc al, ch; leave; iretd;
0xffffffff814d0f0a: add [rax-0x77], cl; or [rax-0x77], cl; adc al, ch; leave; iretd;
0xffffffff814d0f0e: or [rax-0x77], cl; adc al, ch; leave; iretd;
0xffffffff814d0f11: adc al, ch; leave; iretd;
0xffffffff814d13ca: ret 0xd06;
0xffffffff814d1a9e: ret 0x23eb;
0xffffffff814d25b4: ret 0x451c;
0xffffffff814d3a62: shl byte ptr [rcx+rcx*2+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff814d3a93: add [rax-0x77], cl; fucomip st, st(0); xchg esp, eax; mov dh, 0xfe; call far fword ptr [rbx+0x41];
0xffffffff814d3a96: fucomip st, st(0); xchg esp, eax; mov dh, 0xfe; call far fword ptr [rbx+0x41];
0xffffffff814d3a98: xchg esp, eax; mov dh, 0xfe; call far fword ptr [rbx+0x41];
0xffffffff814d3aa6: shl byte ptr [rsp+rax*8+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff814d3e9e: add rsp, 0x100; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814d3e9f: add esp, 0x100; mov eax, edx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814d3f02: ret 0x895b;
0xffffffff814d4363: ret 0x67;
0xffffffff814d476c: leave; mov eax, 0xffffffa6; ret;
0xffffffff814d47bc: inc dword ptr [rbp+0x480975c0]; add esp, 0x28; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814d47be: shl byte ptr [rbp+9], 0x48; add esp, 0x28; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814d47c1: add rsp, 0x28; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814d47c2: add esp, 0x28; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814d4e6a: ret 0xd569;
0xffffffff814d5080: or bh, ch; inc dword ptr [rax+rax*8-0x76b7f78c]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d5081: std; inc dword ptr [rax+rax*8-0x76b7f78c]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d5082: inc dword ptr [rax+rax*8-0x76b7f78c]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d5084: shl byte ptr [rax+rcx+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d52b3: ret 0x3be9;
0xffffffff814d5404: mov [rbx+0xf8], rax; xor eax, eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814d5405: mov [rbx+0xf8], eax; xor eax, eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814d5409: add [rax], al; xor eax, eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814d540b: xor eax, eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff814d5bfa: ret 0x8d04;
0xffffffff814d5dd6: ret 0x32;
0xffffffff814d5e40: ret 0x32;
0xffffffff814d6aa2: ret 0xedbe;
0xffffffff814d6b95: ret 0x8e9;
0xffffffff814d6c6c: or byte ptr [rbx-0x2b], 0xff; leave; ret;
0xffffffff814d72f4: ret 0x8320;
0xffffffff814d7797: test al, 0x32; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814d7cfa: ret 0xd539;
0xffffffff814d85c1: ret 0x39e8;
0xffffffff814d8e22: or bl, [rbp+1]; add [rax+rax*8-0x76b7d28c], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d8e25: add [rax+rax*8-0x76b7d28c], al; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d8e27: shl byte ptr [rbp+rbp+0x48], 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814d99e6: ret 0x2be9;
0xffffffff814d9c9c: ret 0x75e9;
0xffffffff814d9f51: mov edx, 0xc48348ff; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814da6df: ret 0xa44e;
0xffffffff814da83c: mov dil, dil; inc dword ptr [rbp-0x137af040]; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814da83d: mov bh, bh; inc dword ptr [rbp-0x137af040]; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814da83f: inc dword ptr [rbp-0x137af040]; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814da841: ror byte ptr [rdi], 0x85; in al, dx; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814da843: test esp, ebp; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814da844: in al, dx; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff814daa4d: pop rax; xor eax, eax; leave; ret;
0xffffffff814db0e2: ret 0x4908;
0xffffffff814db19b: add [rax], dl; add [rdi], cl; xchg esp, eax; ret;
0xffffffff814db46a: ret 0xb;
0xffffffff814db855: ret 0xd281;
0xffffffff814db896: test [rsi], ebp; add [rax], al; add [rbx-0x3f7afbb9], cl; sete al; leave; ret;
0xffffffff814db897: add [rax], al; add [rbx-0x3f7afbb9], cl; sete al; leave; ret;
0xffffffff814db898: add [rax], al; add [rbx-0x3f7afbb9], cl; sete al; leave; ret;
0xffffffff814db899: add [rax], al; mov eax, [rdi+4]; test eax, eax; sete al; leave; ret;
0xffffffff814db89a: add [rbx-0x3f7afbb9], cl; sete al; leave; ret;
0xffffffff814db89b: mov eax, [rdi+4]; test eax, eax; sete al; leave; ret;
0xffffffff814db89e: test eax, eax; sete al; leave; ret;
0xffffffff814dba38: ret 0x5a0;
0xffffffff814dc2bd: ret 0xef90;
0xffffffff814dc2fd: ret 0xeec0;
0xffffffff814dc3bd: xchg esp, eax; add [rax], al; add [rsi-0x77], ah; add dil, [rax+1]; mov dword ptr [rdx+4], 0; ret;
0xffffffff814de92a: ret 0xffb3;
0xffffffff814de93d: ret 0xc3eb;
0xffffffff814debfc: mov rax, 0xffffffffffffffea; leave; ret;
0xffffffff814debfd: mov eax, 0xffffffea; leave; ret;
0xffffffff814dee72: sar byte ptr [rsi+8], cl; cdqe; movzx eax, byte ptr [rsi+rax]; leave; ret;
0xffffffff814dee74: or [rax-0x68], cl; movzx eax, byte ptr [rsi+rax]; leave; ret;
0xffffffff814dee75: cdqe; movzx eax, byte ptr [rsi+rax]; leave; ret;
0xffffffff814dee76: cwde; movzx eax, byte ptr [rsi+rax]; leave; ret;
0xffffffff814dee77: movzx eax, byte ptr [rsi+rax]; leave; ret;
0xffffffff814dee79: add al, 6; leave; ret;
0xffffffff814deeaa: out 0xf, al; mov dh, 0; leave; ret;
0xffffffff814deed5: sar byte ptr [rsi+0x10], 0x48; mov eax, [rdi+0xc0]; movsxd rsi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deed8: mov rax, [rdi+0xc0]; movsxd rsi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deed9: mov eax, [rdi+0xc0]; movsxd rsi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deedb: rol byte ptr [rax], 0; add [rax+0x63], cl; test byte ptr [rdi], 0xb6; add al, 0x30; leave; ret;
0xffffffff814deedc: add [rax], al; add [rax+0x63], cl; test byte ptr [rdi], 0xb6; add al, 0x30; leave; ret;
0xffffffff814deedd: add [rax], al; movsxd rsi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deede: add [rax+0x63], cl; test byte ptr [rdi], 0xb6; add al, 0x30; leave; ret;
0xffffffff814deedf: movsxd rsi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deee0: movsxd esi, esi; movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deee1: test byte ptr [rdi], 0xb6; add al, 0x30; leave; ret;
0xffffffff814deee2: movzx eax, byte ptr [rax+rsi]; leave; ret;
0xffffffff814deee4: add al, 0x30; leave; ret;
0xffffffff814def12: movzx eax, byte ptr [rax]; leave; ret;
0xffffffff814def13: mov dh, 0; leave; ret;
0xffffffff814def17: movzx eax, byte ptr [rbp-1]; leave; ret;
0xffffffff814def35: cmovs ebx, [rax+0x604b70f]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814def36: cdqe; movzx eax, word ptr [rsi+rax]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814def37: cwde; movzx eax, word ptr [rsi+rax]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814def38: movzx eax, word ptr [rsi+rax]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814def3a: add al, 6; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814def58: leave; mov rax, 0xfffffffffffffff2; ret;
0xffffffff814def72: out 0xf, al; mov bh, 0; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defb0: movsxd rsi, esi; movzx eax, word ptr [rax+rsi]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defb1: movsxd esi, esi; movzx eax, word ptr [rax+rsi]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defb2: test byte ptr [rdi], 0xb7; add al, 0x30; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defb3: movzx eax, word ptr [rax+rsi]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defb5: add al, 0x30; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defea: movzx eax, word ptr [rax]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814defeb: mov bh, 0; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814deff6: movzx eax, word ptr [rbp-2]; leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814deffa: leave; rol ax, 8; movzx eax, ax; ret;
0xffffffff814df025: or ecx, [rax-0x68]; mov eax, [rsi+rax]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df026: cdqe; mov eax, [rsi+rax]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df027: cwde; mov eax, [rsi+rax]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df028: mov eax, [rsi+rax]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df029: add al, 6; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df062: dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rbx*8-0x75], 0; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df065: shl byte ptr [rbp+rbx*8-0x75], 0; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df090: movsxd rsi, esi; mov eax, [rax+rsi]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df091: movsxd esi, esi; mov eax, [rax+rsi]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df093: mov eax, [rax+rsi]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df094: add al, 0x30; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0ae: leave; mov rax, 0xfffffffffffffff2; ret;
0xffffffff814df0b5: inc ebx; mov eax, [rbp-4]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0b7: mov eax, [rbp-4]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0b9: cld; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0c9: dec dword ptr [rax-0x7b]; shl byte ptr [rdi+rbx*8-0x75], 0; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0cc: shl byte ptr [rdi+rbx*8-0x75], 0; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0cf: mov eax, [rax]; leave; bswap eax; mov eax, eax; ret;
0xffffffff814df0d1: leave; bswap eax; mov eax, eax; ret;
0xffffffff814df17a: ret 0xd2c;
0xffffffff814df272: ret 0x5f77;
0xffffffff814df987: add [rbx+0x41], bl; pop rsp; mov eax, eax; pop rbp; ret;
0xffffffff814df98a: pop rsp; mov eax, eax; pop rbp; ret;
0xffffffff814e00ea: ret 0x4639;
0xffffffff814e0127: ret 0xd889;
0xffffffff814e088c: ret 0x841;
0xffffffff814e09e9: and ebx, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814e0ee8: in eax, 0x68; shl ah, 1; sub r8, 0xffffffffffbda32d; pop rdx; leave; ret;
0xffffffff814e0eea: shl ah, 1; sub r8, 0xffffffffffbda32d; pop rdx; leave; ret;
0xffffffff814e0eeb: hlt; sub r8, 0xffffffffffbda32d; pop rdx; leave; ret;
0xffffffff814e0eec: sub r8, 0xffffffffffbda32d; pop rdx; leave; ret;
0xffffffff814e0eed: sub eax, 0xffbda32d; pop rdx; leave; ret;
0xffffffff814e0eef: sub eax, 0x5affbda3; leave; ret;
0xffffffff814e0f2a: ret 0x2a75;
0xffffffff814e0f43: test dword ptr [rcx+rcx*4-0x2a], 0x68e58948; cmc; sub r8, 0xffffffffffbda2cc; pop rdx; leave; ret;
0xffffffff814e0f49: in eax, 0x68; cmc; sub r8, 0xffffffffffbda2cc; pop rdx; leave; ret;
0xffffffff814e0f4c: cmc; sub r8, 0xffffffffffbda2cc; pop rdx; leave; ret;
0xffffffff814e0f4d: sub r8, 0xffffffffffbda2cc; pop rdx; leave; ret;
0xffffffff814e0f4e: sub eax, 0xffbda2cc; pop rdx; leave; ret;
0xffffffff814e102b: shl byte ptr [rcx], cl; test byte ptr [rcx+rcx*4-0x39], 0xe8; adc [rip-0x2776b800], rcx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e102d: test byte ptr [rcx+rcx*4-0x39], 0xe8; adc [rip-0x2776b800], rcx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e1032: adc [rip-0x2776b800], rcx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e1033: adc [rip-0x2776b800], ecx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e1034: or eax, 0xd8894800; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e1035: add [rax-0x77], cl; fmul st, dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff814e1036: mov rax, rbx; mov rbx, [rbp-8]; leave; ret;
0xffffffff814e1b1c: inc byte ptr [rdi+rcx]; xchg esp, eax; rol bl, 0x8d; inc dword ptr [rbp-0x3f6bf010]; ret;
0xffffffff814e1b1d: add al, 0xf; xchg esp, eax; rol bl, 0x8d; inc dword ptr [rbp-0x3f6bf010]; ret;
0xffffffff814e1b1f: xchg esp, eax; rol bl, 0x8d; inc dword ptr [rbp-0x3f6bf010]; ret;
0xffffffff814e1ddc: ret 0xa8eb;
0xffffffff814e1e48: inc byte ptr [rdi+rcx]; xchg esp, eax; ror dword ptr [rcx-0x17c3c38], 8; sete cl; mov eax, ecx; ret;
0xffffffff814e1e49: add al, 0xf; xchg esp, eax; ror dword ptr [rcx-0x17c3c38], 8; sete cl; mov eax, ecx; ret;
0xffffffff814e1e4b: xchg esp, eax; ror dword ptr [rcx-0x17c3c38], 8; sete cl; mov eax, ecx; ret;
0xffffffff814e1f7a: add [rax], cl; add [rax], al; add [rdi], cl; xchg esp, eax; rol bl, 0x83; call qword ptr [rax];
0xffffffff814e1f7c: add [rax], al; add [rdi], cl; xchg esp, eax; rol bl, 0x83; call qword ptr [rax];
0xffffffff814e1f7e: add [rdi], cl; xchg esp, eax; rol bl, 0x83; call qword ptr [rax];
0xffffffff814e1f80: xchg esp, eax; rol bl, 0x83; call qword ptr [rax];
0xffffffff814e1f9b: xchg esp, eax; rol bl, 0x83; call far fword ptr [rdi];
0xffffffff814e1fa9: inc byte ptr [rdi+rcx]; xchg esp, eax; rol bl, 0xc3; ret;
0xffffffff814e1faa: add al, 0xf; xchg esp, eax; rol bl, 0xc3; ret;
0xffffffff814e1fac: xchg esp, eax; rol bl, 0xc3; ret;
0xffffffff814e2241: ret 0x8b8;
0xffffffff814e3862: ret 0xa30f;
0xffffffff814e3cd3: ret 0xc780;
0xffffffff814e3de8: ret 0x83c3;
0xffffffff814e4561: xchg [rax+2], esp; add [rax], al; add [rax], al; add [rax], al; xor eax, eax; ret;
0xffffffff814e4b19: cmovg eax, r12d; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e4b1a: cmovg eax, esp; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e4b26: add rsp, 8; mov eax, 0xffffffb5; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e4b27: add esp, 8; mov eax, 0xffffffb5; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e4f31: and eax, 0x4198485b; pop rsp; pop r13; pop rbp; ret;
0xffffffff814e4f76: xchg esp, eax; ror byte ptr [rdi], 0xb6; ror byte ptr [rax-0x3f], 0xe0; add eax, ebx; ret;
0xffffffff814e4fdb: push qword ptr [rsi+9]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e502a: ret 0x83ff;
0xffffffff814e5199: add [rbp+9], esi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e5236: in eax, 0xe8; xchg esp, eax; int 0xff; call far fword ptr [rbp-0x3d];
0xffffffff814e5238: xchg esp, eax; int 0xff; call far fword ptr [rbp-0x3d];
0xffffffff814e52ab: add [rax], al; add [rax], al; add [rax-0x75], cl; xchg [rax+2], esp; add [rax], al; ret;
0xffffffff814e52ad: add [rax], al; add [rax-0x75], cl; xchg [rax+2], esp; add [rax], al; ret;
0xffffffff814e52af: add [rax-0x75], cl; xchg [rax+2], esp; add [rax], al; ret;
0xffffffff814e52b2: xchg [rax+2], esp; add [rax], al; ret;
0xffffffff814e534d: ror byte ptr [rax-0x7f], 1; push qword ptr [rax+0xf814e02]; xchg esp, eax; ret 0xd009;
0xffffffff814e5350: push qword ptr [rax+0xf814e02]; xchg esp, eax; ret 0xd009;
0xffffffff814e53a1: ror byte ptr [rax-0x7f], 1; inc dword ptr [rax+0xf814dfd]; xchg esp, eax; ret 0xd009;
0xffffffff814e53a4: inc dword ptr [rax+0xf814dfd]; xchg esp, eax; ret 0xd009;
0xffffffff814e53ad: ror byte ptr [rax-0x7f], 1; inc dword ptr [rax]; test byte ptr [rbp-0x7f], 0xf; xchg esp, eax; ret 0xd009;
0xffffffff814e53b0: inc dword ptr [rax]; test byte ptr [rbp-0x7f], 0xf; xchg esp, eax; ret 0xd009;
0xffffffff814e53b2: test byte ptr [rbp-0x7f], 0xf; xchg esp, eax; ret 0xd009;
0xffffffff814e53f9: push rax; ror dword ptr [rbp-0x7f], 0xf; xchg esp, eax; ret 0xd009;
0xffffffff814e53fa: ror dword ptr [rbp-0x7f], 0xf; xchg esp, eax; ret 0xd009;
0xffffffff814e5500: ret 0xff91;
0xffffffff814e5504: inc dword ptr [rbx+0x47501f8]; mov rdx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e5506: clc; add [rbp+4], esi; mov rdx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e5507: add [rbp+4], esi; mov rdx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e5509: add al, 0x48; mov edx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e550a: mov rdx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e550b: mov edx, [rbp-0x20]; leave; mov rax, rdx; ret;
0xffffffff814e558e: add rsp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e558f: add esp, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e597d: sbb eax, eax; add rsp, 0x30; and eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814e597f: add rsp, 0x30; and eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814e5980: add esp, 0x30; and eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814e6716: ret 0x4d08;
0xffffffff814e713e: ret 0x55c3;
0xffffffff814e7827: ret 0xbf;
0xffffffff814e7c8c: mov [rbx+8], edx; mov dword ptr [rbx+0xc], 1; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814e7c8f: mov dword ptr [rbx+0xc], 1; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814e7c92: add [rax], eax; add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814e7c94: add [rax], al; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814e7cac: ret 0xb666;
0xffffffff814e8421: or dword ptr [rcx+rcx*4-0x19], 0xc71f6e8; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff814e8426: div byte ptr [rcx+0xc]; add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff814e8522: or al, 0; cdqe; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e8523: add [rax-0x68], cl; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e8524: cdqe; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e8525: cwde; add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e8526: add rsp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e8527: add esp, 0x100; pop rbx; pop rbp; ret;
0xffffffff814e85a5: xchg edi, eax; mov bl, 0xa0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814e85a6: mov bl, 0xa0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814e8894: ret 0xa4c;
0xffffffff814e892a: add [rdi+4], dh; leave; cdqe; ret;
0xffffffff814e892d: leave; cdqe; ret;
0xffffffff814e8a46: add rsp, 8; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8a47: add esp, 8; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8a52: add rsp, 8; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8a53: add esp, 8; cdqe; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8ae3: mov rax, rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8ae4: mov eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814e8c11: sub ebp, [rbp+0x415b00a0]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814e8c36: ret 0x8290;
0xffffffff814e8c56: ret 0x8260;
0xffffffff814e8c76: ret 0x81e0;
0xffffffff814e8c96: ret 0x81b0;
0xffffffff814e8cb6: ret 0x8240;
0xffffffff814e8cd6: ret 0x82c0;
0xffffffff814e8cf6: ret 0x8180;
0xffffffff814e8d1f: ret 0x8210;
0xffffffff814e8d46: ret 0x8030;
0xffffffff814e8d66: ret 0x8010;
0xffffffff814e8d86: ret 0x7ff0;
0xffffffff814e8da6: ret 0x7fc0;
0xffffffff814e8dc6: ret 0x82f0;
0xffffffff814e8de6: ret 0x7f90;
0xffffffff814e8fea: ret 0x45ff;
0xffffffff814e90c5: add [rbx+0x41], bl; pop rsp; cdqe; pop rbp; ret;
0xffffffff814e90c8: pop rsp; cdqe; pop rbp; ret;
0xffffffff814e91ec: ret 0x81ff;
0xffffffff814e9441: ret 0x2859;
0xffffffff814e94eb: mov ecx, 0x415b000b; pop rsp; pop rbp; ret;
0xffffffff814e9813: sub [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814e996b: ret 0xf8e0;
0xffffffff814e9978: ret 0x566c;
0xffffffff814e9a1b: ret 0xdfe8;
0xffffffff814ea3f2: add [rax-0x39], cl; shl dword ptr [rax+0x3f], 0xa7; or dword ptr [rax-0x39], 0xb5aaefc7; or dword ptr [rax-0x77], 0x13e7e8e5; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea3f5: shl dword ptr [rax+0x3f], 0xa7; or dword ptr [rax-0x39], 0xb5aaefc7; or dword ptr [rax-0x77], 0x13e7e8e5; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea3f8: cmpsd [rsi], [rdi]; or dword ptr [rax-0x39], 0xb5aaefc7; or dword ptr [rax-0x77], 0x13e7e8e5; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea3f9: or dword ptr [rax-0x39], 0xb5aaefc7; or dword ptr [rax-0x77], 0x13e7e8e5; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea400: or dword ptr [rax-0x77], 0x13e7e8e5; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea403: in eax, 0xe8; out 0x13, eax; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea405: out 0x13, eax; leave; call far fword ptr [rbp+0x48];
0xffffffff814ea407: leave; call far fword ptr [rbp+0x48];
0xffffffff814ea456: sub eax, 0xffc51ca4; xor eax, eax; leave; ret;
0xffffffff814ea4e9: leave; dec dword ptr [rax-0x7b]; shl byte ptr [rbp+rax+0x31], 0xc0; pop rbx; pop rbp; ret;
0xffffffff814ea5ce: add rsp, 0x68; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ea5cf: add esp, 0x68; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814eab31: sub ecx, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff814eac22: adc al, 0x89; adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814eac24: adc ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff814eaebb: ret 0xada0;
0xffffffff814eb098: adc eax, esi; add eax, 0xa09270; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814eb09a: add eax, 0xa09270; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814eb153: add rsp, 8; pop rbx; movzx eax, al; pop r12; pop rbp; ret;
0xffffffff814eb154: add esp, 8; pop rbx; movzx eax, al; pop r12; pop rbp; ret;
0xffffffff814eb3ac: shl byte ptr [rbp+0x54], cl; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814eb3ae: push rsp; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814eb5b9: ret 0xc275;
0xffffffff814eb5f8: pop rsp; mov rax, r13; pop r13; pop r14; pop rbp; ret;
0xffffffff814eb9d2: push qword ptr [rbp+0x13]; leave; mov eax, 0x100; ret;
0xffffffff814eb9d5: leave; mov eax, 0x100; ret;
0xffffffff814eb9e8: leave; mov eax, 0x400; ret;
0xffffffff814eba62: mov [0x415bc03100000218], eax; pop rsp; pop rbp; ret;
0xffffffff814ebb5d: ret 0xadb5;
0xffffffff814ebf1a: ret 0xb901;
0xffffffff814ec0e7: mov eax, [rbx+0x70]; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff814ec489: ret 0x31ff;
0xffffffff814ec89d: ret 0xcfe8;
0xffffffff814ec9f9: ret 0x140;
0xffffffff814edb21: mov rdx, [rbp-0x10]; mov rax, [rbp-8]; mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb22: mov edx, [rbp-0x10]; mov rax, [rbp-8]; mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb25: mov rax, [rbp-8]; mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb26: mov eax, [rbp-8]; mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb28: clc; mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb29: mov [rdx+8], rax; mov [rax], rdx; leave; ret;
0xffffffff814edb2a: mov [rdx+8], eax; mov [rax], rdx; leave; ret;
0xffffffff814edb2d: mov [rax], rdx; leave; ret;
0xffffffff814edb2e: mov [rax], edx; leave; ret;
0xffffffff814edd37: add [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814ee11f: fisttp dword ptr [rcx-0x75], st; xchg esp, eax; and al, 0x40; add [rax], eax; add [rcx+0x348b48d8], cl; ret 0x8b48;
0xffffffff814ee122: xchg esp, eax; and al, 0x40; add [rax], eax; add [rcx+0x348b48d8], cl; ret 0x8b48;
0xffffffff814ee250: adc eax, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814ee2cb: cmp eax, 0xc3c90031; leave; mov eax, 0xffffffa1; ret;
0xffffffff814ee2cc: xor [rax], eax; leave; ret;
0xffffffff814ee2d0: leave; mov eax, 0xffffffa1; ret;
0xffffffff814ee34d: ret 0x5bff;
0xffffffff814ee53c: ret 0xc13f;
0xffffffff814ee734: sub [rsi+0xf8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814ee99e: ret 0x4b8;
0xffffffff814eea62: ret 0x8504;
0xffffffff814eee0c: ret 0x2172;
0xffffffff814eee1e: ret 0xf73;
0xffffffff814eee26: pop rsp; mov rax, r14; pop r13; pop r14; pop rbp; ret;
0xffffffff814ef28b: add rsp, 0x30; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ef28c: add esp, 0x30; lea rsp, [rbp-0x10]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814ef2d0: pushfq; leave; sar bh, cl; pop rbx; pop rbp; ret;
0xffffffff814ef2d1: leave; sar bh, cl; pop rbx; pop rbp; ret;
0xffffffff814efbf4: ret 0x9f0f;
0xffffffff814f03a7: cmove rax, rdx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f03a8: cmove eax, edx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f08a3: ret 0x1573;
0xffffffff814f099d: ret 0x5d41;
0xffffffff814f0aeb: mov al, [0xc483480975c08500]; xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f0aec: add [rbp+0x480975c0], al; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0aee: shl byte ptr [rbp+9], 0x48; add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0bc5: mov byte ptr [rcx-0x474afb18], 0xff; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0bc6: sub eax, 0xffb8b504; add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0bc8: add al, 0xb5; mov eax, 0xc48348ff; xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f0bca: mov eax, 0xc48348ff; xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f0bcc: add rsp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0bcd: add esp, 0x30; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f0bcf: xor [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f0cfe: ret 0x4dff;
0xffffffff814f0de8: ret 0x49ff;
0xffffffff814f1c3d: add [rdi+rax+0x48], dh; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814f1c4e: mov fs, [rbx+rdi*8-1]; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814f2581: ret 0x8107;
0xffffffff814f26ab: ret 0x3577;
0xffffffff814f27d4: mov [0x415bc0310000009c], eax; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff814f2b9d: mov eax, 0xc48348ff; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814f2ed8: ret 0x4583;
0xffffffff814f31ff: add [rbx+0x41], bl; pop rsp; test eax, eax; pop rbp; cmovg eax, esi; ret;
0xffffffff814f3202: pop rsp; test eax, eax; pop rbp; cmovg eax, esi; ret;
0xffffffff814f3828: add rsp, 0x30; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814f3829: add esp, 0x30; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff814f3839: test [rdx+0x4800000c], ah; add esp, 0x30; mov eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814f383c: add [rax], al; add rsp, 0x30; mov eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814f383e: add rsp, 0x30; mov eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814f383f: add esp, 0x30; mov eax, 0xfffffff4; pop rbx; pop rbp; ret;
0xffffffff814f395a: ret 0xc9eb;
0xffffffff814f4434: ror byte ptr [rax-0x7d], 0xc4; sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff814f4b17: xchg esp, eax; rol bl, 0x66; nop [rax+rax]; add qword ptr [rdx], 1; xor eax, eax; ret;
0xffffffff814f4d27: add rsp, 8; mov eax, edi; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f4d28: add esp, 8; mov eax, edi; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f4da5: mov [rbx+4], ax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f4da6: mov [rbx+4], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f5193: ret 0xc13b;
0xffffffff814f5206: mov [rax+0x18], rdx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f5207: mov [rax+0x18], edx; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f5550: ret 0x1620;
0xffffffff814f5573: sbb dh, [rcx]; rcr byte ptr [rbx+0x41], cl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff814f5575: rcr byte ptr [rbx+0x41], cl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff814f5797: ret 0xd7ba;
0xffffffff814f5aac: ret 0xb1f8;
0xffffffff814f5b07: ret 0x4a74;
0xffffffff814f5b50: pop rsp; cmp cl, [rax+rax]; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f628e: ret 0xf231;
0xffffffff814f68b7: pop rsp; ret 0x4868;
0xffffffff814f68b8: ret 0x4868;
0xffffffff814f6971: adc al, ch; cmp [rsp+rcx], ebp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f6973: cmp [rsp+rcx], ebp; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f6974: sub al, 0xc; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f69cd: push qword ptr [rcx]; ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f69ce: xor eax, eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f69cf: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814f6a05: movzx eax, byte ptr [rbp-0x18]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f6e2d: ret 0x49c3;
0xffffffff814f6e72: mov edx, 0; pop rcx; leave; test eax, eax; cmovg eax, edx; ret;
0xffffffff814f6e75: add [rax], al; pop rcx; leave; test eax, eax; cmovg eax, edx; ret;
0xffffffff814f6e77: pop rcx; leave; test eax, eax; cmovg eax, edx; ret;
0xffffffff814f6e78: leave; test eax, eax; cmovg eax, edx; ret;
0xffffffff814f702f: ret 0x3130;
0xffffffff814f71f8: xchg esp, eax; ret 0x5589;
0xffffffff814f8109: push qword ptr [rsi+0x16]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f81d1: push qword ptr [rsi+9]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f82b9: push qword ptr [rsi+0x12]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f82e3: sub [rbp+rdi*8-1], ecx; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff814f8b2f: ret 0xcc80;
0xffffffff814f8e39: ret 0xafe9;
0xffffffff814f9284: ret 0x83eb;
0xffffffff814f9386: pop rsp; mov dword ptr [r13+0x10], 0; pop r13; pop rbp; ret;
0xffffffff814fa174: sub al, bpl; test [rsi+0x30], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fa175: sub al, ch; test [rsi+0x30], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fa177: test [rsi+0x30], edi; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fa568: ret 0x1d40;
0xffffffff814fa737: rol byte ptr [rbp+0x480d75c9], 0x89; or eax, 0; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fa76f: dec dword ptr [rax-0x77]; or eax, 0; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fa770: mov [rbx+0xc8], rax; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fa771: mov [rbx+0xc8], eax; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fa772: or eax, 0; add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fa773: enter 0, 0; mov rbx, [rbp-8]; leave; ret;
0xffffffff814fb2dc: ret 0x8041;
0xffffffff814fbcdd: ret 0x14c;
0xffffffff814fbf39: ret 0xcfeb;
0xffffffff814fc39a: or al, 0xf; xchg esp, eax; ret 0xe083;
0xffffffff814fc39c: xchg esp, eax; ret 0xe083;
0xffffffff814fc51a: ret 0xb59c;
0xffffffff814fc63c: add eax, [rax]; mov eax, [rbp-0x14]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff814fc741: inc dword ptr [rax]; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fcd31: ret 0xaf0f;
0xffffffff814fd1f6: add al, 0xf; test [rcx+0x31fffffe], ebp; shl dh, cl; add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd1f8: test [rcx+0x31fffffe], ebp; shl dh, cl; add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd1f9: test eax, 0x31fffffe; shl dh, cl; add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd1fc: push qword ptr [rcx]; shl dh, cl; add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd1fe: shl dh, cl; add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd200: add dword ptr [rax+0x8000000], 0xf; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd203: add [rax], al; or [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd205: or [rdi], cl; xchg esp, eax; ret 0xe2c1;
0xffffffff814fd207: xchg esp, eax; ret 0xe2c1;
0xffffffff814fd458: movzx eax, word ptr [rsi+0x3c]; mov [rbx+0x3c], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814fd45b: cmp al, 0x66; mov [rbx+0x3c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814fd45c: mov [rbx+0x3c], ax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814fd45d: mov [rbx+0x3c], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff814fd45f: cmp al, 0x48; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff814fd67a: ret 0xfade;
0xffffffff814fd828: ret 0xef72;
0xffffffff814fd9cf: ret 0x1477;
0xffffffff814fdcfb: ret 0x4910;
0xffffffff814fde79: xchg esp, eax; and al, 0x84; add [rax], al; add [rcx+0x5c], al; pop rbp; ret;
0xffffffff814fdebd: add [rcx], ebx; rol byte ptr [rbx-0x7cb70d20], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fdebf: rol byte ptr [rbx-0x7cb70d20], 0xc4; or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff814fdec0: and eax, 0xfffffff2; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff814fe70d: rol byte ptr [rcx-0x75], 1; xchg esp, eax; and al, 0x84; add [rax], al; add [rcx], al; ret 0xd283;
0xffffffff814fe710: xchg esp, eax; and al, 0x84; add [rax], al; add [rcx], al; ret 0xd283;
0xffffffff814fe71a: add [rbx-0x76be6bbb], cl; xchg esp, eax; and al, 0x84; add [rax], al; add [rcx-0x77], cl; ret 0x149;
0xffffffff814fe720: xchg esp, eax; and al, 0x84; add [rax], al; add [rcx-0x77], cl; ret 0x149;
0xffffffff814fe8e1: ret 0x6e8;
0xffffffff814ff0a6: add [rbx-0x74b38fad], cl; enter 0xc189, 0xc1; leave; or dh, dh; ret 0xf01;
0xffffffff814ff0ad: enter 0xc189, 0xc1; leave; or dh, dh; ret 0xf01;
0xffffffff814ff0b1: leave; or dh, dh; ret 0xf01;
0xffffffff814ff507: xchg esp, eax; and al, 0xd2; add al, [rax]; add [rsi-0x3f], ah; ret 0x6608;
0xffffffff814ff923: ret 0xde40;
0xffffffff814ffdda: cli; dec dword ptr [rax-0x77]; fucomip st, st(0); pop rsp; and al, 0xc1; call far fword ptr [rbx+0x5d];
0xffffffff814ffddb: dec dword ptr [rax-0x77]; fucomip st, st(0); pop rsp; and al, 0xc1; call far fword ptr [rbx+0x5d];
0xffffffff814ffdde: fucomip st, st(0); pop rsp; and al, 0xc1; call far fword ptr [rbx+0x5d];
0xffffffff814ffde0: pop rsp; and al, 0xc1; call far fword ptr [rbx+0x5d];
0xffffffff81501254: ret 0x4872;
0xffffffff81501647: ret 0xffd1;
0xffffffff81501794: ret 0x90;
0xffffffff815021d3: add cl, [rdi]; xchg esp, eax; ret 0xc283;
0xffffffff815021d8: ret 0x8501;
0xffffffff8150221c: ret 0x8b04;
0xffffffff81502c82: ret 0xc985;
0xffffffff81502e36: pop rax; xor [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81503368: ret 0x9475;
0xffffffff815043ba: ret 0xb51;
0xffffffff8150526b: xchg esp, eax; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8150550e: or bh, dl; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rbx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff8150550f: cli; dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rbx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81505510: dec dword ptr [rax-0x7b]; shl byte ptr [rbx+rbx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81505513: shl byte ptr [rbx+rbx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81505577: adc [rbp-0x7b], eax; ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rbp-0x3e6bf037], 8; enter 0x450f, 0xc2; ret;
0xffffffff8150557a: ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rbp-0x3e6bf037], 8; enter 0x450f, 0xc2; ret;
0xffffffff8150557c: xchg esp, eax; rol byte ptr [rbp-0x3e6bf037], 8; enter 0x450f, 0xc2; ret;
0xffffffff8150557f: leave; sete cl; or al, cl; cmovne eax, edx; ret;
0xffffffff81505581: xchg esp, eax; ror dword ptr [rax], 0xc8; cmovne eax, edx; ret;
0xffffffff8150559f: ret 0xc041;
0xffffffff81505c56: xchg esp, eax; ret 0xd009;
0xffffffff81505d4d: xchg esp, eax; rol bl, 0x48; mov eax, [rdi+0x48]; or rax, [rdi+0x50]; sete al; ret;
0xffffffff81505de7: ret 0x2f;
0xffffffff81505e24: leave; and [r8], al; add dh, dh; ret 0x4401;
0xffffffff81505f1d: add rsp, 8; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81505f1e: add esp, 8; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff81506100: mov [rsi+0xa8], r8; mov [rsi+0xb0], rax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506101: mov [rsi+0xa8], eax; mov [rsi+0xb0], rax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506102: xchg [rax+0x48000000], ch; mov [rsi+0xb0], eax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506105: add [rax], al; mov [rsi+0xb0], rax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506106: add [rax-0x77], cl; xchg [rax+0x48000000], dh; mov eax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506107: mov [rsi+0xb0], rax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506108: mov [rsi+0xb0], eax; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506109: xchg [rax+0x48000000], dh; mov eax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610a: mov al, 0; add [rax], al; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610b: add [rax], al; add [rax-0x75], cl; clc; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610c: add [rax], al; mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610d: add [rax-0x75], cl; clc; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610e: mov rax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff8150610f: mov eax, [rbp-8]; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506111: clc; mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506112: mov [rsi+0xb8], rax; leave; ret;
0xffffffff81506113: mov [rsi+0xb8], eax; leave; ret;
0xffffffff815062cf: sub eax, 0x48000ac0; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815062d0: ror byte ptr [rdx], 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815062d1: or al, [rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8150630e: mov eax, 0xfffffdfd; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8150669c: ret 0x1276;
0xffffffff815068a9: mov [0x415b5776000005a0], eax; pop rsp; pop rbp; ret;
0xffffffff81506b2a: ret 0x63e0;
0xffffffff81506e3c: add al, [rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81506f63: mov al, 0x2f; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150723a: ret 0xb91b;
0xffffffff81507374: ret 0x6948;
0xffffffff815074fa: ret 0xfa69;
0xffffffff8150789d: ret 0xfcb8;
0xffffffff815080e0: ret 0x172;
0xffffffff815084ea: ret 0xfb8;
0xffffffff815086bd: ret 0xd689;
0xffffffff8150876d: ret 0xfffa;
0xffffffff8150969a: ret 0xc76;
0xffffffff815096a6: ret 0x1577;
0xffffffff81509792: ret 0x8b65;
0xffffffff815098dd: ret 0x1de8;
0xffffffff81509af2: ret 0x7773;
0xffffffff8150a170: ret 0xc220;
0xffffffff8150a172: ret 0x5588;
0xffffffff8150a88f: ret 0xd872;
0xffffffff8150b62a: ret 0x83c6;
0xffffffff8150b96b: mov rcx, 0x89ffb46c9ce88150; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8150bb91: ret 0x8ba;
0xffffffff8150be3f: add rsp, 0xe8; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8150be40: add esp, 0xe8; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8150c054: leave; or [rax+0x6268b], cl; add [rbx+0x5d], bl; ret;
0xffffffff8150c081: ret 0x978b;
0xffffffff8150c365: cmovs ecx, [rcx-0x19dd1721]; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8150c36a: and ah, dh; add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8150c436: add [rax], al; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8150c475: ret 0xbe48;
0xffffffff8150c9b6: neg byte ptr [rbx+0x41]; pop rsp; mov rax, rsi; pop r13; pop rbp; ret;
0xffffffff8150c9b9: pop rsp; mov rax, rsi; pop r13; pop rbp; ret;
0xffffffff8150cb0a: ret 0x473;
0xffffffff8150ce5d: add al, 0; add [rcx+0x7a883], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150ce5f: add [rcx+0x7a883], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150ce61: sub dword ptr [rax+0x5b000007], 0x41; pop rsp; pop rbp; ret;
0xffffffff8150cf42: ret 0x831f;
0xffffffff8150d4f8: pop rsp; mov [r9], r8; pop r13; pop rbp; ret;
0xffffffff8150d8a9: ret 0x5573;
0xffffffff8150d902: ret 0xaceb;
0xffffffff8150d974: ret 0x1572;
0xffffffff8150e03a: ret 0x6f6f;
0xffffffff8150e03f: ret 0xe78;
0xffffffff8150e0ff: sbb byte ptr [rax+3], 0; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8150e22c: ret 0x5441;
0xffffffff8150e56f: mov esp, eax; add eax, 0xbe0000; add [rax], al; add [rax-0x77], cl; iretd;
0xffffffff8150e835: ret 0x7492;
0xffffffff8150f011: ret 0x8aeb;
0xffffffff8150f0ff: ret 0x1673;
0xffffffff8150f130: outsd dx, [rsi]; add [rcx+0x66083], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150f131: add [rcx+0x66083], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150f133: and dword ptr [rax+6], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8150f32e: ret 0x8739;
0xffffffff8150fcd3: mov eax, 0xd55c8b44; mov esp, 0xffe3944; xchg esp, eax; ret 0x3145;
0xffffffff8150fcd8: mov esp, 0xffe3944; xchg esp, eax; ret 0x3145;
0xffffffff8150fcdb: dec byte ptr [rdi]; xchg esp, eax; ret 0x3145;
0xffffffff81510612: rol byte ptr [rbp-0x7b], cl; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc239;
0xffffffff81510615: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc239;
0xffffffff81510617: xchg esp, eax; ret 0xc239;
0xffffffff81510625: ret 0xc201;
0xffffffff81510627: ret 0x9789;
0xffffffff81510ad4: ret 0x30ba;
0xffffffff81510ff8: ret 0xe183;
0xffffffff815118f5: ret 0x2949;
0xffffffff815118f8: ret 0xf4d;
0xffffffff81511985: ret 0x4f0f;
0xffffffff81511a91: ret 0x7417;
0xffffffff81511a96: ret 0x860;
0xffffffff81511ab3: fisttp word ptr [rdi], st; xchg esp, eax; ret 0x8d48;
0xffffffff81511ab5: xchg esp, eax; ret 0x8d48;
0xffffffff81511acd: ret 0x7534;
0xffffffff81511ad2: ret 0x7517;
0xffffffff81511f4b: ret 0xf34;
0xffffffff8151235d: ret 0x87eb;
0xffffffff81512eea: ret 0x8d0f;
0xffffffff81512f60: ret 0x3678;
0xffffffff81513159: ret 0x8e0f;
0xffffffff815132fa: ret 0xf9ab;
0xffffffff815133cf: ret 0xfa29;
0xffffffff81513ab5: ret 0x932b;
0xffffffff81513cd7: ret 0x1078;
0xffffffff81513f75: ret 0x9f78;
0xffffffff815144ac: add [rdi], cl; enter 0x8389, 0x14; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff815144ae: enter 0x8389, 0x14; add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff815144b2: add eax, 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff81514c32: ret 0x58ba;
0xffffffff81515225: ret 0x4c0f;
0xffffffff8151590b: ret 0xca29;
0xffffffff81515aaa: ret 0x4d04;
0xffffffff81515ce9: add eax, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81515e8a: ret 0x6fe9;
0xffffffff81516a01: add rsp, 0x28; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff81516a02: add esp, 0x28; pop rbx; mov eax, r12d; pop r12; pop rbp; ret;
0xffffffff81516a4d: xchg esp, edx; add eax, 0xe6830000; add ecx, [rcx+0x5c497]; add [rbx-0x39f60320], al; mov [rdi+0x5d4], sil; ret;
0xffffffff81516aeb: xchg esp, edx; add eax, 0xe0830000; cld; or eax, 1; mov [rdi+0x5d4], al; ret;
0xffffffff81516c37: ret 0xfad3;
0xffffffff81516cc7: ret 0x74f0;
0xffffffff81516cf7: ret 0x47d;
0xffffffff81516d1c: xchg esp, eax; add r10d, eax; cmp r10d, esi; cmovl eax, esi; ret;
0xffffffff81517297: lodsd gs:[rsi]; add [rbp+0x6d8f0fc0], al; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff81517298: lodsd [rsi]; add [rbp+0x6d8f0fc0], al; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff81517299: add [rbp+0x6d8f0fc0], al; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff8151729a: add [rbp+0x6d8f0fc0], al; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff8151729c: ror byte ptr [rdi], 0x8f; insd [rdi], dx; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff8151729f: insd [rdi], dx; add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff815172a0: add eax, [rax]; add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff815172a2: add [rdi], cl; xchg esp, eax; ret 0x854d;
0xffffffff815172a4: xchg esp, eax; ret 0x854d;
0xffffffff815178c4: ret 0x2914;
0xffffffff81517a29: ret 0xa76;
0xffffffff81517e62: ret 0xf989;
0xffffffff81517fe1: ret 0x7de9;
0xffffffff815182ba: ret 0x4832;
0xffffffff81518d16: ret 0x1e77;
0xffffffff8151913d: ret 0xfde8;
0xffffffff815194f8: ret 0xc284;
0xffffffff81519591: ret 0xf980;
0xffffffff81519794: ret 0xa6e8;
0xffffffff81519dcd: ret 0xd231;
0xffffffff81519fb7: ret 0x1676;
0xffffffff8151a073: ret 0xf3c;
0xffffffff8151a0fc: mov [rdi-0x67], dl; or [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8151a0fe: cdq; or [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8151a0ff: or [rax], eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8151a199: ret 0x873;
0xffffffff8151a1ec: lea r12, [rbp-0x38]; push rbx; sub rsp, 0x10; mov [rbp-0x38], r12; mov [rbp-0x30], r12; call qword ptr [0xffffffff81c27000];
0xffffffff8151a1ed: lea esp, [rbp-0x38]; push rbx; sub rsp, 0x10; mov [rbp-0x38], r12; mov [rbp-0x30], r12; call qword ptr [0xffffffff81c27000];
0xffffffff8151a1f0: push rbx; sub rsp, 0x10; mov [rbp-0x38], r12; mov [rbp-0x30], r12; call qword ptr [0xffffffff81c27000];
0xffffffff8151a1f1: sub rsp, 0x10; mov [rbp-0x38], r12; mov [rbp-0x30], r12; call qword ptr [0xffffffff81c27000];
0xffffffff8151a1f2: sub esp, 0x10; mov [rbp-0x38], r12; mov [rbp-0x30], r12; call qword ptr [0xffffffff81c27000];
0xffffffff8151a500: add dword ptr [rbx+0x534], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151a503: add eax, 0x48010000; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151a505: add [rcx], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151a59a: ret 0x2679;
0xffffffff8151a5c2: ret 0x14ba;
0xffffffff8151a5ea: ret 0xb560;
0xffffffff8151a640: cmp byte ptr [rax+0x5b000001], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8151a642: add [rax], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8151a6da: ret 0xf929;
0xffffffff8151ac3d: ret 0xb801;
0xffffffff8151ac55: add dword ptr [rax+rax], 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151afb3: ret 0xca39;
0xffffffff8151b08d: ret 0xb38b;
0xffffffff8151b105: push rax; add al, 0x31; rol byte ptr [rbp+0x5b6674d2], 0x41; pop rsp; pop rbp; ret;
0xffffffff8151b106: add al, 0x31; rol byte ptr [rbp+0x5b6674d2], 0x41; pop rsp; pop rbp; ret;
0xffffffff8151b108: rol byte ptr [rbp+0x5b6674d2], 0x41; pop rsp; pop rbp; ret;
0xffffffff8151b15d: and byte ptr [rax-0x47ffffff], 1; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151b178: mov ebp, 0x1b8fffe; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151b220: xchg esp, eax; and al, 0xe0; add eax, 0xb9480000; iretd;
0xffffffff8151bd5a: sbb bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8151bd77: fucomip st, st(0); rcr dword ptr [rbx+0x415bfff8], cl; pop rsp; pop rbp; ret;
0xffffffff8151bd79: rcr dword ptr [rbx+0x415bfff8], cl; pop rsp; pop rbp; ret;
0xffffffff8151bf6a: ret 0xb400;
0xffffffff8151c10d: add [rax], al; add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8151c10f: add rsp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8151c110: add esp, 0x10; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8151c18a: or [rax], eax; add rsp, 0x10; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8151c18c: add rsp, 0x10; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8151c18d: add esp, 0x10; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8151ca27: pop rsp; pop rbp; lea rsp, [r10-8]; ret;
0xffffffff8151cc9d: shl byte ptr [rbx+rcx+0xf], cl; mov dh, 0x42; sbb [rsi-0x77], ah; add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151cc9f: or ecx, [rdi]; mov dh, 0x42; sbb [rsi-0x77], ah; add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151cca1: mov dh, 0x42; sbb [rsi-0x77], ah; add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151cca2: sbb [rsi-0x77], spl; add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151cca3: sbb [rsi-0x77], ah; add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151cca6: add dword ptr [rsi-0x17fffffc], 0xffffffb0; pop rsp; iretd;
0xffffffff8151ceca: ret 0xa978;
0xffffffff8151d92e: ret 0xf668;
0xffffffff8151df21: ret 0x80ba;
0xffffffff8151e0f7: add rsp, 0x10; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151e0f8: add esp, 0x10; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151e144: add [rcx], ah; mov byte ptr [rcx-0x7cb73fcf], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151e145: and esi, eax; xor dword ptr [rcx], 0xc48348c0; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151e146: mov byte ptr [rcx-0x7cb73fcf], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151e147: xor dword ptr [rcx], 0xc48348c0; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151e148: xor eax, eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151e149: ror byte ptr [rax-0x7d], 0xc4; adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8151e15e: mov eax, [rbp-0x1c]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151e160: in al, 0x48; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8151e647: ret 0xc221;
0xffffffff8151ea8d: add rsp, 0x40; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8151ea8e: add esp, 0x40; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8151f9f2: ret 0x4440;
0xffffffff8151fbd2: ret 0xf8e8;
0xffffffff81520adf: ret 0x460f;
0xffffffff81520b11: ret 0xd639;
0xffffffff81520bbe: ret 0xf189;
0xffffffff81520bcd: ret 0xd574;
0xffffffff81520c31: xchg [rsi+rax], esp; add [rcx], bh; xchg [rax+6], edx; add [rax], al; cmovae eax, [rdi+0x650]; ret;
0xffffffff81520dd1: adc esi, [rax+rax-0x3a]; add eax, 0x9d38a5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81520dd3: add dh, al; add eax, 0x9d38a5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81520dd5: add eax, 0x9d38a5; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81520dd6: movsd [rdi], [rsi]; cmp [rbp+0x415b0000], bl; pop rsp; pop rbp; ret;
0xffffffff81520dd7: cmp [rbp+0x415b0000], bl; pop rsp; pop rbp; ret;
0xffffffff81520e26: add al, ch; xchg esp, eax; mov r15b, 0xff; pop rbx; pop rbp; ret;
0xffffffff81520e28: xchg esp, eax; mov r15b, 0xff; pop rbx; pop rbp; ret;
0xffffffff81520f14: and esi, eax; xor dword ptr [rbp-0x1f], 0x8948db31; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81520f16: xor dword ptr [rbp-0x1f], 0x8948db31; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8152103d: add bl, [r11+0x41]; pop rsp; pop rbp; ret;
0xffffffff8152103e: add bl, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81521123: ret 0xe2d3;
0xffffffff81521cd1: ret 0x4690;
0xffffffff81521fc6: leave; mov eax, 0xffffff9f; cmovne eax, ecx; ret;
0xffffffff81522331: ret 0xea7f;
0xffffffff8152297c: ret 0xee7f;
0xffffffff815229a0: ret 0xed7f;
0xffffffff815229ad: mov edi, 0x41ffffed; mov eax, [rcx+0x44]; test eax, eax; setne al; leave; ret;
0xffffffff815229b0: inc dword ptr [rcx-0x75]; test eax, r8d; setne al; leave; ret;
0xffffffff815229b1: mov eax, [r9+0x44]; test eax, eax; setne al; leave; ret;
0xffffffff815229b2: mov eax, [rcx+0x44]; test eax, eax; setne al; leave; ret;
0xffffffff815229b4: test eax, r8d; setne al; leave; ret;
0xffffffff815229b5: test eax, eax; setne al; leave; ret;
0xffffffff815229b7: setne al; leave; ret;
0xffffffff81522a56: ret 0x43c6;
0xffffffff81522d33: xor [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81522efb: ret 0xf4bb;
0xffffffff815230f5: ret 0xfa;
0xffffffff81523736: add [rax], al; add al, ch; rcl byte ptr [rdi+0x415bfffa], cl; pop rsp; pop rbp; ret;
0xffffffff81523738: add al, ch; rcl byte ptr [rdi+0x415bfffa], cl; pop rsp; pop rbp; ret;
0xffffffff8152373a: rcl byte ptr [rdi+0x415bfffa], cl; pop rsp; pop rbp; ret;
0xffffffff815239ef: ret 0xc639;
0xffffffff81523a34: xchg esp, edx; add eax, 0xe0830000; sti; or eax, edx; mov [rdi+0x5d4], al; ret;
0xffffffff81523a3f: xchg esp, edx; add eax, 0x41c30000; mov dword ptr [rax+0xc], 0xffffffff; mov qword ptr [r8+0x10], 0xffffffffffffffff; ret;
0xffffffff81523e2b: ret 0x8101;
0xffffffff81523f74: add eax, 0x9d0722; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81524023: ret 0xb6b4;
0xffffffff81524246: mov [r12+0x450], rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81524247: mov [rsp+0x450], ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81524257: add rsp, 8; mov eax, 0xfffffffe; pop rbx; pop r12; pop rbp; ret;
0xffffffff81524258: add esp, 8; mov eax, 0xfffffffe; pop rbx; pop r12; pop rbp; ret;
0xffffffff8152426f: mov eax, 0xec458bff; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815242f8: ret 0x4806;
0xffffffff81524657: ret 0xffea;
0xffffffff81524685: ret 0x458b;
0xffffffff81524a70: ret 0x478b;
0xffffffff81524d20: ret 0x5688;
0xffffffff81524d2b: mov [rsi+0x38], ax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81524d2c: mov [rsi+0x38], eax; add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81524d2f: add rsp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81524d30: add esp, 8; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81524e1e: ret 0x7589;
0xffffffff81525225: xchg esp, eax; ret 0x845;
0xffffffff81525226: ret 0x845;
0xffffffff81525a96: ret 0xb4e8;
0xffffffff81525bc8: rcr byte ptr [rbx+0x41], cl; pop rsp; mov rax, rdx; pop rbp; ret;
0xffffffff81525bcb: pop rsp; mov rax, rdx; pop rbp; ret;
0xffffffff81525f96: ret 0x56a0;
0xffffffff8152676c: xchg esp, eax; ret 0xff83;
0xffffffff8152676d: ret 0xff83;
0xffffffff81526c1a: ret 0x4f8;
0xffffffff81527025: ret 0x2e66;
0xffffffff8152709c: ret 0x2910;
0xffffffff815270a5: ret 0x2904;
0xffffffff8152714a: shl byte ptr [rbp+8], 0x8b; add eax, 0x74bc6d; leave; ret;
0xffffffff8152714d: mov eax, [rip+0x74bc6d]; leave; ret;
0xffffffff8152714e: add eax, 0x74bc6d; leave; ret;
0xffffffff81527aa3: ret 0x6d00;
0xffffffff8152801a: ret 0xf85e;
0xffffffff81528698: add [rbx-0x5c], bh; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81528699: mov ebx, 0xffffffa4; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff815286dd: sar byte ptr [rbx-0xe], 0x48; add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8152884e: ret 0x702e;
0xffffffff81528954: ret 0x4eb4;
0xffffffff81528a46: or byte ptr [r12+0x39a], 2; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a47: or byte ptr [rsp+0x39a], 2; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a4d: add [rdx], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a83: or byte ptr [r12+0x39a], 4; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a84: or byte ptr [rsp+0x39a], 4; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a8a: add [rax+rcx*2], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528a8b: add al, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528aef: mov [rdi+0x391], sil; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528af0: mov [rdi+0x391], dh; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81528b16: ret 0x1fe9;
0xffffffff81528e82: ret 0x98e8;
0xffffffff81528fad: or cl, ch; xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret 0x8b48;
0xffffffff81528faf: xchg esp, eax; add [rax], al; add [rax-0x77], cl; ret 0x8b48;
0xffffffff81529098: ret 0x450b;
0xffffffff815290ee: ret 0xc131;
0xffffffff81529100: ret 0x4504;
0xffffffff81529280: ret 0xb479;
0xffffffff81529404: add [rcx+rcx-0x77], esi; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff815297f6: xchg edx, eax; add eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81529a9a: ret 0xf7ce;
0xffffffff8152a2c0: dec dword ptr [rcx+0x39]; fcomp st, qword ptr [rbx+0x41]; pop rsp; setne al; pop rbp; ret;
0xffffffff8152a2c3: fcomp st, qword ptr [rbx+0x41]; pop rsp; setne al; pop rbp; ret;
0xffffffff8152a2c6: pop rsp; setne al; pop rbp; ret;
0xffffffff8152a320: ret 0xdae8;
0xffffffff8152a322: fidivr st, dword ptr [rdi+8]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8152aa79: ret 0xa874;
0xffffffff8152ab3c: add [rax], al; add [rax-0x77], cl; in eax, 0xe8; leave; std; call far fword ptr [rbp-0x3d];
0xffffffff8152ab3e: add [rax-0x77], cl; in eax, 0xe8; leave; std; call far fword ptr [rbp-0x3d];
0xffffffff8152ab41: in eax, 0xe8; leave; std; call far fword ptr [rbp-0x3d];
0xffffffff8152ab43: leave; std; call far fword ptr [rbp-0x3d];
0xffffffff8152ab7c: mov [0x415b1b7fc085009c], eax; pop rsp; pop rbp; ret;
0xffffffff8152ab82: sbb ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8152af23: ret 0x2e00;
0xffffffff8152bb0c: ret 0x7d89;
0xffffffff8152bce3: ret 0x2e20;
0xffffffff8152be1e: add [rdi], cl; xchg esp, eax; ret 0xd138;
0xffffffff8152be20: xchg esp, eax; ret 0xd138;
0xffffffff8152c446: ret 0x1277;
0xffffffff8152c840: ret 0x5388;
0xffffffff8152c9ca: ret 0x2b11;
0xffffffff8152caa4: sbb [rax], al; and [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8152caa6: and [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8152cb3f: ret 0xaac0;
0xffffffff8152cc8b: xor edi, 0x415bffff; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8152d289: add rsp, 0x40; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8152d28a: add esp, 0x40; mov eax, r12d; pop rbx; pop r12; pop rbp; ret;
0xffffffff8152d788: ret 0x2900;
0xffffffff8152db63: ret 0xfeff;
0xffffffff8152e368: ret 0xf729;
0xffffffff8152e641: ret 0x855;
0xffffffff8152e7a0: or qword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8152e7a1: or dword ptr [rax-0x7d], 0x415b08c4; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8152ef72: ret 0xf040;
0xffffffff8152f05d: ret 0x5de8;
0xffffffff8152f232: cmovs ecx, [rbp+0x415bf065]; pop rsp; pop rbp; ret;
0xffffffff8152f6e1: cli; add al, 0xf; xchg esp, eax; ret 0xd020;
0xffffffff8152f6e2: add al, 0xf; xchg esp, eax; ret 0xd020;
0xffffffff8152f6e4: xchg esp, eax; ret 0xd020;
0xffffffff8152fb1a: ret 0x4e0f;
0xffffffff8152fec8: inc qword ptr gs:[rax+0x10]; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8152fec9: inc qword ptr [rax+0x10]; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8152feca: inc dword ptr [rax+0x10]; add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8152fecd: add rsp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8152fece: add esp, 0x70; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff8152ff3d: mov eax, 1; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff8152ff3e: add [rax], eax; add [rax], al; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff8152ff40: add [rax], al; add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff8152ff42: add rsp, 0x70; pop rbx; pop rbp; ret;
0xffffffff8152ff43: add esp, 0x70; pop rbx; pop rbp; ret;
0xffffffff815300bb: ret 0x4073;
0xffffffff81530354: cmp [rsp+rdi*8-1], bh; pop rax; leave; ret;
0xffffffff81530527: sbb eax, 0x415bffbe; pop rsp; pop rbp; ret;
0xffffffff8153093d: ret 0xc0;
0xffffffff815310f7: ret 0x875;
0xffffffff8153166c: ret 0xfab8;
0xffffffff815318f0: add [rbx-0x3389e008], eax; mov eax, 0xffffffea; leave; ret;
0xffffffff815318f5: int3; mov eax, 0xffffffea; leave; ret;
0xffffffff815318f6: mov eax, 0xffffffea; leave; ret;
0xffffffff81531941: add al, 0xe8; leave; lahf; iretd;
0xffffffff81531943: leave; lahf; iretd;
0xffffffff8153195c: add edi, [rdi+9]; xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff8153195f: xor eax, eax; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff815319be: ret 0x9fb8;
0xffffffff81531b8d: inc dword ptr [rcx+rcx*4-0x20]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81531b8e: mov eax, r12d; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81531b8f: mov eax, esp; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff81531f05: mov rdx, 0x2444894c00000010; or al, ch; fwait; xchg esp, eax; iretd;
0xffffffff81531f0f: or al, ch; fwait; xchg esp, eax; iretd;
0xffffffff81531f11: fwait; xchg esp, eax; iretd;
0xffffffff815320a8: ret 0x1be;
0xffffffff8153210a: ret 0xffb1;
0xffffffff815324ac: shl byte ptr [rdx+rdx*8+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815324ae: rcr byte ptr [rbx+0x41], cl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8153259a: add rsp, 0x60; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153259b: add esp, 0x60; mov rax, rbx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81532dd6: add [rax], al; add [rbx+0x14bf05fa], al; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532dd8: add [rbx+0x14bf05fa], al; add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532dda: cli; add eax, 0x14bf; add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532ddb: add eax, 0x14bf; add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532dde: add [rax], al; add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532de0: add [rdi], cl; xchg esp, eax; ret 0x8341;
0xffffffff81532de2: xchg esp, eax; ret 0x8341;
0xffffffff8153306d: ret 0xc26c;
0xffffffff81533138: mov bh, 0xf9; inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81533139: stc; inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81533171: imul edi, [rdx+0x458bfff9], 0xfffffff4; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81533172: mov edx, 0x458bfff9; hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8153371c: ret 0x73e9;
0xffffffff81533d26: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0x5089;
0xffffffff81533d28: xchg esp, eax; ret 0x5089;
0xffffffff81533d29: ret 0x5089;
0xffffffff81533f2e: mov edx, [rbp-0xc]; mov [rbx+8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81533f30: hlt; mov [rbx+8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81533f31: mov [rbx+8], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815344d9: ret 0x7273;
0xffffffff81534533: ret 0x878b;
0xffffffff815346d6: fldcw [rax+rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815346d7: fldcw [rax+rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153470c: fsubr st, dword ptr [rax+rax]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153470d: sub al, 0; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81534751: fucomip st, st(0); test eax, 0x48002cd8; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81534753: test eax, 0x48002cd8; add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81534754: fsubr st, dword ptr [rax+rax]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81534755: sub al, 0; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81534c60: add [rax-0x68], cl; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81534c61: cdqe; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81534c62: cwde; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81534c72: idiv edi; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff815354d1: ret 0x8301;
0xffffffff8153559d: ret 0x8948;
0xffffffff815355bd: leave; imul ecx, 0x3e8; shr edx, 0x12; lea eax, [rdx+rcx]; bswap eax; ret;
0xffffffff8153561e: sub al, 0; mov eax, [rbp-0x14]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81535620: mov eax, [rbp-0x14]; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81535622: in al, dx; add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81535623: add rsp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81535624: add esp, 0x10; pop rbx; pop rbp; ret;
0xffffffff81535db0: ret 0x2c;
0xffffffff81535f57: ret 0xff85;
0xffffffff81536293: ret 0xb507;
0xffffffff81536711: ret 0x62f0;
0xffffffff81536827: ret 0x2908;
0xffffffff81536959: mov rax, [r12+0x2b8]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153695a: mov eax, [rsp+0x2b8]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153695d: mov eax, 0x48000002; add esp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815369a9: sbb [rcx], esi; ror byte ptr [rax-0x7d], 0xc4; cmp [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815369aa: xor eax, eax; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815369ab: ror byte ptr [rax-0x7d], 0xc4; cmp [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81536b13: add dword ptr [rcx+0xf], 0x55e4e8c8; sar bh, 0x58; xor eax, eax; pop rdx; leave; ret;
0xffffffff81536b16: enter 0xe4e8, 0x55; sar bh, 0x58; xor eax, eax; pop rdx; leave; ret;
0xffffffff81536b18: in al, 0x55; sar bh, 0x58; xor eax, eax; pop rdx; leave; ret;
0xffffffff81536b19: push rbp; sar bh, 0x58; xor eax, eax; pop rdx; leave; ret;
0xffffffff81536b1a: sar bh, 0x58; xor eax, eax; pop rdx; leave; ret;
0xffffffff81536b28: sub eax, 0xffc05a82; xor eax, eax; leave; ret;
0xffffffff81536fc2: pop rsp; add [rax], eax; add [rax-0x77], cl; ret 0x7039;
0xffffffff81536fc8: ret 0x7039;
0xffffffff8153761b: inc dword ptr [rbp+0x480774c0]; add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff815386d7: xchg esp, eax; ret 0xf41;
0xffffffff8153890b: add [rax], al; add [rax-0x7b], cl; push qword ptr [rbp+0x1c]; leave; ret;
0xffffffff8153890d: add [rax-0x7b], cl; push qword ptr [rbp+0x1c]; leave; ret;
0xffffffff81538910: push qword ptr [rbp+0x1c]; leave; ret;
0xffffffff81538950: ret 0xb8c9;
0xffffffff81538a26: add [rax-0x7b], cl; push qword ptr [rbp+0x13]; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff81538a29: push qword ptr [rbp+0x13]; add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff81538a2c: add rsp, 0x60; pop rbx; pop rbp; ret;
0xffffffff81538a2d: add esp, 0x60; pop rbx; pop rbp; ret;
0xffffffff81538a33: add rsp, 0x60; mov eax, 3; pop rbx; pop rbp; ret;
0xffffffff81538a34: add esp, 0x60; mov eax, 3; pop rbx; pop rbp; ret;
0xffffffff81538ac3: add [rax], al; add [rax-0x7b], cl; push qword ptr [rbp+9]; leave; ret;
0xffffffff81538ac5: add [rax-0x7b], cl; push qword ptr [rbp+9]; leave; ret;
0xffffffff81538ac8: push qword ptr [rbp+9]; leave; ret;
0xffffffff81538acd: leave; mov eax, 3; ret;
0xffffffff81538af3: leave; mov eax, 5; ret;
0xffffffff81538de4: ret 0x8303;
0xffffffff8153900d: add dh, [rdi+rcx+0x48]; add esp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153900f: cmovs eax, [rbx+0x415b70c4]; pop rsp; pop rbp; ret;
0xffffffff8153901f: mov byte ptr [rbx+0x2a0], 1; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81539020: and dword ptr [rax+0x1000002], 0x48; add esp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81539024: add [rcx], al; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81539247: ret 0x1272;
0xffffffff81539259: ret 0x7b72;
0xffffffff81539398: or [rax-0x7b], cl; shl byte ptr [rax+rbp-0x75], 0x50; adc [rbx+0x558902fe], al; mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff8153939b: shl byte ptr [rax+rbp-0x75], 0x50; adc [rbx+0x558902fe], al; mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff8153939f: push rax; adc [rbx+0x558902fe], al; mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff815393a0: adc [rbx+0x558902fe], al; mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff815393a5: push rbp; mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff815393a6: mov [rdi], cl; xchg esp, eax; ret 0xea83;
0xffffffff815393a8: xchg esp, eax; ret 0xea83;
0xffffffff815393c3: add [r8], r8b; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff815393e5: add [eax], al; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff815393e7: add [rax], al; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81539418: mov [rdx+0x48000000], ebx; add esp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153954b: add [rax-0xc], bh; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153954c: mov eax, 0xfffffff4; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815396d7: add rsp, 0x60; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815396d8: add esp, 0x60; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8153acba: add [rcx+0x415b3453], cl; pop rsp; pop rbp; ret;
0xffffffff8153b43a: ret 0xce75;
0xffffffff8153bb1a: ret 0xc06b;
0xffffffff8153bca8: ret 0x6e74;
0xffffffff8153c445: ret 0x430f;
0xffffffff8153c448: ret 0xd838;
0xffffffff8153cdb0: ret 0xca60;
0xffffffff8153cf75: ret 0xaeeb;
0xffffffff8153cf80: mov esp, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8153d6ee: ret 0x3a40;
0xffffffff8153d885: ret 0xb5c8;
0xffffffff8153dd7f: ret 0xb5c9;
0xffffffff8153ddde: ret 0xc9b9;
0xffffffff8153ddf4: ret 0xa8ef;
0xffffffff8153e7e6: ret 0xf66;
0xffffffff8153ecb4: add [rax-0x77], cl; pop rax; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8153ecb7: pop rax; sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8153ece8: and dh, al; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8153eceb: and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8153f793: ret 0x8910;
0xffffffff8153fa12: sub [rdx+0x100], rcx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153fa13: sub [rdx+0x100], ecx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8153fc4a: ret 0xbd19;
0xffffffff8153fe4a: ret 0x30e9;
0xffffffff8153ff51: ret 0x1873;
0xffffffff81540e0b: ret 0x6f72;
0xffffffff815415be: ret 0xd70;
0xffffffff81541f78: ret 0x6248;
0xffffffff81542002: movzx edx, byte ptr [rbx+0xc1]; or edx, 1; mov [rax+0xc1], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff81542007: add [rax], al; or edx, 1; mov [rax+0xc1], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff81542009: or edx, 1; mov [rax+0xc1], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff8154200b: add [rax+0xc190], ecx; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff8154200c: mov [rax+0xc1], dl; mov rbx, [rbp-8]; leave; ret;
0xffffffff8154200e: rol dword ptr [rax], 0; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff8154200f: add [rax], al; add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff81542010: add [rax], al; mov rbx, [rbp-8]; leave; ret;
0xffffffff81542011: add [rax-0x75], cl; pop rbp; clc; leave; ret;
0xffffffff8154210f: ret 0x8d41;
0xffffffff81542385: ret 0x9388;
0xffffffff81542ad5: ret 0x8b4d;
0xffffffff81542aea: enter 0xc161, 0xe9; sbb [rax-0x73], ecx; pop rsp; iretd;
0xffffffff81542aee: sbb [rax-0x73], ecx; pop rsp; iretd;
0xffffffff81542b2c: ret 0x4475;
0xffffffff81542b5c: xchg esp, eax; ret 0x8445;
0xffffffff81542bd6: mov eax, 0x74c08548; cmp bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81542bd9: shl byte ptr [rdx+rdi+0x5b], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81542bdb: cmp bl, [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81542c0c: fild st, dword ptr [rcx+0xf]; xchg esp, eax; ret 0x48e9;
0xffffffff81542c0f: xchg esp, eax; ret 0x48e9;
0xffffffff81542cb8: ret 0xc069;
0xffffffff81542db2: xchg esp, eax; mov dword ptr [rax-0x7c], 0xc3b374ff; xor eax, eax; ret;
0xffffffff8154320d: ret 0xf02;
0xffffffff81543358: xchg esp, eax; add [rax], al; add [rcx], dh; rcr byte ptr [rbx+0x41], 0x5c; pop rbp; ret;
0xffffffff81543546: ret 0xb73;
0xffffffff81543a47: ret 0x6624;
0xffffffff81543bb4: ret 0xf30;
0xffffffff8154431e: add rsp, 0x38; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8154431f: add esp, 0x38; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81544321: cmp [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8154453a: ret 0x6c0a;
0xffffffff81544946: ret 0x3341;
0xffffffff81544fae: add al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8154502a: add rsp, 0x50; pop rbx; pop r12; pop rbp; ret;
0xffffffff8154502b: add esp, 0x50; pop rbx; pop r12; pop rbp; ret;
0xffffffff81545057: add rsp, 0x50; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81545058: add esp, 0x50; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff815450c8: ret 0xf475;
0xffffffff8154512d: ret 0x3b80;
0xffffffff81545202: ret 0xcbd2;
0xffffffff8154529d: ret 0xeabb;
0xffffffff815458ef: ret 0x5bff;
0xffffffff815459a7: ret 0x53e8;
0xffffffff815459d8: ret 0xf7f0;
0xffffffff81545b44: ret 0xb6e8;
0xffffffff81545b64: ret 0x96e8;
0xffffffff81545c18: movsb [rdi], [rsi]; pop rsp; ret;
0xffffffff81545c4a: ret 0xb8ff;
0xffffffff81545dd3: add rsp, 0xa0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81545dd4: add esp, 0xa0; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81545e49: ret 0xf59f;
0xffffffff81545e9c: xchg esp, eax; ret 0xc283;
0xffffffff81545e9f: ret 0xe801;
0xffffffff81545fb9: ret 0xd3f0;
0xffffffff81546288: ret 0xf5d0;
0xffffffff815463cf: ret 0xd41d;
0xffffffff81546600: xchg esp, edx; add [rax], al; add [rcx+0x478b0c42], cl; mov [rdx+0x10], eax; xor eax, eax; ret;
0xffffffff81546621: ret 0x1be9;
0xffffffff81546900: ret 0x3018;
0xffffffff81546913: ret 0x3010;
0xffffffff81546a71: out 0xe8, eax; imul esi, [rsi+rsi*8-1], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81546a73: imul esi, [rsi+rsi*8-1], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff815474e9: ret 0xcd7c;
0xffffffff81547519: ret 0x7503;
0xffffffff81547545: ret 0xf03;
0xffffffff81547999: mov dword ptr [rax], 0xe881c656; cmp eax, 0x890006f3; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8154799f: cmp eax, 0x890006f3; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81547a3c: ret 0x89c3;
0xffffffff81547c18: ret 0x4588;
0xffffffff81547ec0: sbb [r8-0x77], cl; push rbx; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81547ec1: sbb [rax-0x77], cl; push rbx; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81547ef6: and al, 0x89; sbb [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81548a64: ret 0x4578;
0xffffffff81549084: xchg esp, eax; ret 0xc208;
0xffffffff81549085: ret 0xc208;
0xffffffff81549288: ret 0x2ba;
0xffffffff81549337: ret 0x3f75;
0xffffffff81549373: test [rdx], ah; add al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81549374: and al, 0xe2; add al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81549376: add al, 0; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815493cf: ret 0x4976;
0xffffffff815495f9: ret 0xe9c1;
0xffffffff81549612: ret 0xd30a;
0xffffffff815496d7: ret 0x3944;
0xffffffff815497d4: ret 0xd8b;
0xffffffff815498f5: ret 0x480f;
0xffffffff815498f8: ret 0x8789;
0xffffffff81549b00: adc [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff81549e41: mov [r12+0x30], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81549e42: mov [rsp+0x30], eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81549e44: and al, 0x30; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81549f6b: ret 0x6602;
0xffffffff8154a0f0: ret 0x34d;
0xffffffff8154a1cf: add ebp, eax; cmp ebp, [rip-0x3fce0008]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a1d1: cmp ebp, [rip-0x3fce0008]; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a1d2: sub eax, 0xc031fff8; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a1d5: xor eax, eax; add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a1d7: add rsp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a1d8: add esp, 0x38; pop rbx; pop rbp; ret;
0xffffffff8154a69e: mov [0x718e8000000aa], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8154abde: ret 0x30f8;
0xffffffff8154abfd: ret 0x30f0;
0xffffffff8154ac17: ret 0x3100;
0xffffffff8154b2d5: ret 0x100;
0xffffffff8154b60c: ret 0xfb80;
0xffffffff8154b622: ret 0xf221;
0xffffffff8154b6f4: ret 0x145;
0xffffffff8154b730: ret 0x4510;
0xffffffff8154b74f: ret 0x4104;
0xffffffff8154b7ca: ret 0x5e03;
0xffffffff8154b7d1: ret 0x104;
0xffffffff8154b7de: ret 0xc3c1;
0xffffffff8154b7ff: ret 0xc9c1;
0xffffffff8154b88f: ret 0xe3e9;
0xffffffff8154b9f8: fld st, qword ptr [rax+0x31]; mov dword ptr [rcx+0x5c6c031], 0x9aa8d6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8154b9fb: mov dword ptr [rcx+0x5c6c031], 0x9aa8d6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8154ba00: add eax, 0x9aa8d6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8154bad7: in eax, 0xb4; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8154bd01: adc [rax-0x75], ecx; adc ecx, [rax+0xb]; push rbx; or [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff8154bd04: adc ecx, [rax+0xb]; push rbx; or [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff8154bd07: push rbx; or [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff8154bd08: or [rdi], cl; xchg esp, eax; ret 0xb60f;
0xffffffff8154bd25: xchg esp, eax; ret 0xd285;
0xffffffff8154be2f: ret 0x8503;
0xffffffff8154d45e: ret 0xb30;
0xffffffff8154d5f1: add [rcx-0x73], cl; xchg esp, eax; and al, 0x10; or eax, [rax]; add [rax+0x39], cl; ret 0x850f;
0xffffffff8154d5f4: xchg esp, eax; and al, 0x10; or eax, [rax]; add [rax+0x39], cl; ret 0x850f;
0xffffffff8154e15a: ret 0x724f;
0xffffffff8154e2ce: ret 0x345;
0xffffffff8154e4aa: ret 0xd031;
0xffffffff8154e69b: rol byte ptr [rbp+0x5b0c74d2], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8154e8a7: xchg esp, eax; ret 0xc084;
0xffffffff8154e8a8: ret 0xc084;
0xffffffff8154e8bb: ror byte ptr [rdi], cl; xchg esp, eax; ror byte ptr [rcx], 0xc8; ret;
0xffffffff8154e8bd: xchg esp, eax; ror byte ptr [rcx], 0xc8; ret;
0xffffffff8154efd5: ret 0xd721;
0xffffffff8154f04d: ret 0x440e;
0xffffffff8154f059: ret 0x440b;
0xffffffff8154f078: ret 0xc631;
0xffffffff8154f0c6: ret 0xe90b;
0xffffffff8154ff47: mov rax, [rbp-0x18]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8154ff48: mov eax, [rbp-0x18]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8155000a: xor eax, eax; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81550046: mov [r12+0x58], rdx; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81550047: mov [rsp+0x58], edx; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81550049: and al, 0x58; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8155004a: pop rax; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81550204: ret 0x6280;
0xffffffff8155025b: ret 0x4840;
0xffffffff815503fe: ret 0xe675;
0xffffffff815505f4: ret 0x18eb;
0xffffffff81550b0a: mov [0x41e089445b00068a], al; pop rsp; pop r13; pop rbp; ret;
0xffffffff81550c44: mov [rsi], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81550d96: fstp qword ptr [rbx+0x41], st; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81550e37: imul eax, esi, 0x48df7581; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81550e38: mov byte ptr [rcx-0x7cb7208b], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81550f12: fstp dword ptr [rbx+0x41], st; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81550f70: mov byte ptr [rcx-0x7cb7238b], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81551034: sti; and [rcx-0x3a], ch; xor dword ptr [rbp-0x21], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81551035: and [rcx-0x3a], ch; xor dword ptr [rbp-0x21], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff81551038: xor dword ptr [rbp-0x21], 0x415bc031; pop rsp; pop rbp; ret;
0xffffffff815512ec: add [rax], al; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8155147b: xor [rcx+0x3ce80006], eax; cmp esi, [rdi+rdi*8+0x415bd889]; pop rsp; pop rbp; ret;
0xffffffff81551481: cmp esi, [rdi+rdi*8+0x415bd889]; pop rsp; pop rbp; ret;
0xffffffff81551b07: ret 0x8e75;
0xffffffff81551b2a: ret 0x94d;
0xffffffff81551bb5: ror byte ptr [rdi], cl; xchg esp, eax; ret 0x840;
0xffffffff81551bb7: xchg esp, eax; ret 0x840;
0xffffffff81551bb8: ret 0x840;
0xffffffff81551be1: ret 0xf031;
0xffffffff81551cba: and byte ptr [rax+0x1000000], 0xeb; xchg esp, eax; ret;
0xffffffff81551cbd: add [rax], al; add ebx, ebp; xchg esp, eax; ret;
0xffffffff81551cbf: add ebx, ebp; xchg esp, eax; ret;
0xffffffff81552444: or [rbx], bh; xchg esp, ebp; or al, [rax]; add [rdx+1], dh; ret;
0xffffffff81552446: xchg esp, ebp; or al, [rax]; add [rdx+1], dh; ret;
0xffffffff81552af9: ret 0x2e9;
0xffffffff81552b44: ret 0x1de9;
0xffffffff81552b7e: push 6; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81552d03: imul eax, esi, 0x31df7581; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81552d04: mov byte ptr [rcx-0x3fce208b], 0x48; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81552d07: fbstp tbyte ptr [rcx], st; ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81552d08: xor eax, eax; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81552d09: ror byte ptr [rax-0x7d], 0xc4; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81552dbd: imul eax, esi, 0xf6bbe881; mov al, 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81552dbe: mov byte ptr [rcx-0x4f094418], 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81552dbf: sub eax, 0xffb0f6bb; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81552dc1: mov ebx, 0x48ffb0f6; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81552dc3: mov al, 0xff; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81552f25: xchg [rsi+6], esp; add [rcx+rcx*4-0x20], al; pop rbx; pop r12; pop rbp; ret;
0xffffffff81553d35: ret 0xb2eb;
0xffffffff81553db3: or r8b, bpl; not byte ptr [rdi+6]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81553db4: or al, ch; not byte ptr [rdi+6]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81553db6: not byte ptr [rdi+6]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8155410b: ret 0x74e9;
0xffffffff815541f1: add [rsi+0x70], esi; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815541fd: mov dword ptr [rcx], 1; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81554233: or eax, 0x241c8949; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81554234: mov [r12], rbx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81554235: mov [rsp], ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81554236: sbb al, 0x24; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81554237: and al, 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815543e1: ret 0x8075;
0xffffffff81554602: xchg esp, eax; ret 0xd284;
0xffffffff8155468d: ret 0xa9e9;
0xffffffff815546b1: ret 0xbae9;
0xffffffff815546c0: ret 0xabe9;
0xffffffff815547c9: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81554b88: cmovs esi, [rbx]; push rdi; or [rax+9], cl; ror dword ptr [rdi], 1; xchg esp, eax; ret 0x6ce9;
0xffffffff81554b8b: push rdi; or [rax+9], cl; ror dword ptr [rdi], 1; xchg esp, eax; ret 0x6ce9;
0xffffffff81554b8c: or [rax+9], cl; ror dword ptr [rdi], 1; xchg esp, eax; ret 0x6ce9;
0xffffffff81554b8f: ror dword ptr [rdi], 1; xchg esp, eax; ret 0x6ce9;
0xffffffff81554b91: xchg esp, eax; ret 0x6ce9;
0xffffffff81554b92: ret 0x6ce9;
0xffffffff81554e13: out 0xe8, al; test dword ptr [rax], 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff81554e15: test dword ptr [rax], 0x415b0000; pop rsp; pop rbp; ret;
0xffffffff815550ce: shl byte ptr [rbp-0x45], cl; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8155530b: or eax, 0x68438948; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8155530c: mov [rbx+0x68], rax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8155530d: mov [rbx+0x68], eax; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8155556e: ret 0xffff;
0xffffffff81555b4c: ret 0x48e9;
0xffffffff81555d82: ret 0x2a;
0xffffffff81556358: add [rdx+rbp*8-0x7d], dh; xchg esp, ebp; add [rax], eax; add [rcx], al; mov eax, 0xffffffea; ret;
0xffffffff81556401: xchg esp, ebp; add [rax], eax; add [rcx], al; mov eax, 0xffffffea; ret;
0xffffffff81556479: ret 0xddeb;
0xffffffff81556497: ret 0x48d;
0xffffffff815565e1: ret 0x4c04;
0xffffffff81556641: mov ecx, 0x415b002a; pop rsp; pop rbp; ret;
0xffffffff815567f6: mov eax, 0x415b002a; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815568d8: xor dword ptr [rcx+rax-0x3f7b0000], 0xf; test [rdx+0x48000000], eax; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff815568e0: test [rdx+0x48000000], eax; add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff815568e3: add [rax], al; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81556984: inc dword ptr [rbx+0x1b0a3]; add dh, bh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81556985: and dword ptr [rbx+0x1b0], 0xfffffffe; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81556988: add [rax], eax; add dh, bh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8155698a: add dh, bh; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff8155704a: adc ah, [rip-0x76b7fffa]; fucomip st, st(0); or ah, [rip+0x415b0006]; pop rsp; pop rbp; ret;
0xffffffff8155704b: and eax, 0x89480006; fucomip st, st(0); or ah, [rip+0x415b0006]; pop rsp; pop rbp; ret;
0xffffffff8155704d: add [rax-0x77], cl; fucomip st, st(0); or ah, [rip+0x415b0006]; pop rsp; pop rbp; ret;
0xffffffff81557050: fucomip st, st(0); or ah, [rip+0x415b0006]; pop rsp; pop rbp; ret;
0xffffffff81557052: or ah, [rip+0x415b0006]; pop rsp; pop rbp; ret;
0xffffffff81557053: and eax, 0x415b0006; pop rsp; pop rbp; ret;
0xffffffff815570dd: sbb esp, 0; add [rax], al; add [rbx+0x5d], bl; ret;
0xffffffff81557183: ret 0x48ff;
0xffffffff815571f5: cli; add [rdi], ecx; xchg esp, eax; ret 0xb60f;
0xffffffff815571f6: add [rdi], ecx; xchg esp, eax; ret 0xb60f;
0xffffffff81557348: mov [rbx], rdx; mov [rsi+0x70], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81557349: mov [rbx], edx; mov [rsi+0x70], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8155734b: mov [rsi+0x70], rbx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8155734c: mov [rsi+0x70], ebx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81557bbc: add rsp, 0x18; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81557bbd: add esp, 0x18; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81557cb5: mov esp, 0x48d889ff; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81557cb6: dec dword ptr [rcx-0x3b7cb728]; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81557cb7: mov eax, ebx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81557e26: ret 0xfde9;
0xffffffff81557f7a: ret 0x7d20;
0xffffffff8155846a: xchg esp, eax; and al, 0xb0; add [rax], al; add [rcx], dh; fisttp dword ptr [rax+0x39], st; ret 0x1874;
0xffffffff8155885a: ret 0x5e2;
0xffffffff815588bd: ret 0x2274;
0xffffffff81558c7f: add rsp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81558c80: add esp, 0x20; pop rbx; pop rbp; ret;
0xffffffff81558dfa: ret 0xd020;
0xffffffff81558fc7: ret 0x470f;
0xffffffff8155936a: ret 0xf5bc;
0xffffffff815594b1: ret 0x8589;
0xffffffff8155952d: shr al, 1; pop rbp; idiv edi; dec dword ptr [rax-0x68]; leave; ret;
0xffffffff8155952f: pop rbp; idiv edi; dec dword ptr [rax-0x68]; leave; ret;
0xffffffff81559530: idiv edi; dec dword ptr [rax-0x68]; leave; ret;
0xffffffff81559532: dec dword ptr [rax-0x68]; leave; ret;
0xffffffff81559533: cdqe; leave; ret;
0xffffffff81559534: cwde; leave; ret;
0xffffffff815595bb: add [rbx+0x41], bl; pop rsp; add eax, 3; pop rbp; ret;
0xffffffff815595be: pop rsp; add eax, 3; pop rbp; ret;
0xffffffff81559a39: ret 0x99d2;
0xffffffff8155a03e: ret 0x93b8;
0xffffffff8155aa70: ret 0x8f74;
0xffffffff8155b647: ret 0x5175;
0xffffffff8155b687: add esi, eax; add eax, 0x99c6a1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8155b689: add eax, 0x99c6a1; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8155b696: ret 0xd475;
0xffffffff8155b74a: add esi, eax; add eax, 0x99c5de; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8155b74c: add eax, 0x99c5de; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8155b8ce: ret 0x6cd0;
0xffffffff8155ba73: cmp [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8155bac7: in al, dx; sub [rdi], cl; mov dh, 5; pop rsp; ret 0x99;
0xffffffff8155bac8: sub [rdi], cl; mov dh, 5; pop rsp; ret 0x99;
0xffffffff8155baca: mov dh, 5; pop rsp; ret 0x99;
0xffffffff8155bacc: pop rsp; ret 0x99;
0xffffffff8155bb0d: ret 0x99;
0xffffffff8155bb1a: mov al, 0x6c; mov byte ptr [rcx-0x4df56218], 0xff; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb1b: insb [rdi], dx; mov byte ptr [rcx-0x4df56218], 0xff; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb1c: mov byte ptr [rcx-0x4df56218], 0xff; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb1d: sub eax, 0xffb20a9d; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb21: mov dl, 0xff; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb33: rcr dword ptr [rcx+0x75c08400], 0xa6; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb37: shl byte ptr [rbp-0x5a], 0x48; add esp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bb39: cmpsb [rsi], [rdi]; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff8155bd4a: ret 0xe275;
0xffffffff8155c01c: ret 0x8b45;
0xffffffff8155c352: shl byte ptr [rdi+rax-0x18], 0xa6; pop rsp; sub al, [rax]; pop rbp; ret;
0xffffffff8155c356: cmpsb [rsi], [rdi]; pop rsp; sub al, [rax]; pop rbp; ret;
0xffffffff8155c357: pop rsp; sub al, [rax]; pop rbp; ret;
0xffffffff8155c43d: add [rax], al; add al, ch; sub ecx, [rax+0x415bffb3]; pop rsp; pop rbp; ret;
0xffffffff8155c43f: add al, ch; sub ecx, [rax+0x415bffb3]; pop rsp; pop rbp; ret;
0xffffffff8155c441: sub ecx, [rax+0x415bffb3]; pop rsp; pop rbp; ret;
0xffffffff8155c53d: ret 0x7d60;
0xffffffff8155c547: ret 0x1874;
0xffffffff8155c55f: ret 0xe875;
0xffffffff8155c923: mov eax, [rbp-0x14]; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8155c925: in al, dx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8155cf28: ret 0x9c75;
0xffffffff8155d39a: ret 0xf48d;
0xffffffff8155d5b0: rol byte ptr [rip+0x5bc03100], 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8155d698: ret 0xd975;
0xffffffff8155d86a: mov ebp, 0x415b0005; pop rsp; pop r13; pop rbp; ret;
0xffffffff8155d956: in eax, 0xe8; xchg esp, eax; faddp; call far fword ptr [rbp+0x48];
0xffffffff8155d958: xchg esp, eax; faddp; call far fword ptr [rbp+0x48];
0xffffffff8155de1a: ret 0xf500;
0xffffffff8155df06: mov [rbx+0x81], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8155e28d: ret 0x894d;
0xffffffff8155e5cd: ret 0xbbe9;
0xffffffff8155e5fb: ret 0xe4e9;
0xffffffff8155e9cd: ret 0x2b41;
0xffffffff8155ed66: ret 0x5589;
0xffffffff8155f954: ret 0xfe9;
0xffffffff8155fd34: ret 0x43f6;
0xffffffff81560347: ret 0x7eab;
0xffffffff81560541: ret 0x4803;
0xffffffff815605bd: ret 0xce80;
0xffffffff81560ed1: ret 0x408b;
0xffffffff8156108f: ret 0x1189;
0xffffffff8156160f: or cl, [rax-0x77]; imul eax; sbb [rsi], cl; add [rax], eax; leave; ret;
0xffffffff81561612: imul eax; sbb [rsi], cl; add [rax], eax; leave; ret;
0xffffffff81561614: sbb [rsi], cl; add [rax], eax; leave; ret;
0xffffffff81561664: stosd [rdi]; leave; ret;
0xffffffff815618ab: ret 0x8304;
0xffffffff81561de7: ret 0x2b49;
0xffffffff815626dd: ret 0x118;
0xffffffff815627cc: ret 0x101;
0xffffffff81562886: ret 0x7510;
0xffffffff81562bac: ret 0xf129;
0xffffffff81562c63: ret 0xdd75;
0xffffffff81562d4d: ret 0x7e20;
0xffffffff81562ebf: ret 0x7e78;
0xffffffff815630f5: stc; add [rax], al; leave; ret;
0xffffffff81563251: ret 0x2144;
0xffffffff81563524: ret 0x4389;
0xffffffff8156399a: ret 0x70;
0xffffffff81563b53: ret 0xe5da;
0xffffffff81563d99: cld; in eax, 0xb5; sub eax, 0xffbd835e; xor eax, eax; leave; ret;
0xffffffff81563d9a: in eax, 0xb5; sub eax, 0xffbd835e; xor eax, eax; leave; ret;
0xffffffff81563d9c: sub eax, 0xffbd835e; xor eax, eax; leave; ret;
0xffffffff81563edf: ret 0x5958;
0xffffffff81564199: ret 0xeb08;
0xffffffff815641d6: ret 0xea83;
0xffffffff81564ba5: pop rsp; movzx eax, al; pop r13; pop rbp; ret;
0xffffffff81564bdf: add [rax], eax; adc [rcx-0x75], cl; add [r15], r9b; xchg esp, eax; ret 0x8b;
0xffffffff81564be1: adc [rcx-0x75], cl; add [r15], r9b; xchg esp, eax; ret 0x8b;
0xffffffff81564be4: add [r15], r9b; xchg esp, eax; ret 0x8b;
0xffffffff81564be5: add [rdi], cl; xchg esp, eax; ret 0x8b;
0xffffffff81564be7: xchg esp, eax; ret 0x8b;
0xffffffff81564c35: sbb al, 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff81564c74: ret 0x418b;
0xffffffff81564c9b: ret 0x940f;
0xffffffff81565236: ror byte ptr [rax-0x77], cl; out 0xe8, eax; add eax, ebx; add [rax], al; leave; ret;
0xffffffff81565239: out 0xe8, eax; add eax, ebx; add [rax], al; leave; ret;
0xffffffff8156523b: add eax, ebx; add [rax], al; leave; ret;
0xffffffff81565258: add [rax], ah; add [rcx-0x17ebdbbc], cl; fcom st, st(7); add [rax], al; leave; ret;
0xffffffff8156525a: add [rcx-0x17ebdbbc], cl; fcom st, st(7); add [rax], al; leave; ret;
0xffffffff8156525e: adc al, 0xe8; fcom st, st(7); add [rax], al; leave; ret;
0xffffffff81565260: fcom st, st(7); add [rax], al; leave; ret;
0xffffffff81565261: xlat [rbx]; add [rax], al; leave; ret;
0xffffffff8156541b: add al, [rax]; leave; ret;
0xffffffff81565ef0: ret 0xe61a;
0xffffffff81566007: or dword ptr [rcx+rcx*4-0x39], 0xf688a0e8; inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8156600c: mov al, [0x480774c085fff688]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8156600d: mov dh, dh; inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff8156600f: inc dword ptr [rbp+0x480774c0]; add esp, 8; pop rbx; pop rbp; ret;
0xffffffff81566045: idiv bh; mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81566047: mov eax, [rbp-0xc]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81566049: hlt; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8156624a: dec byte ptr [rdi]; xchg esp, eax; shl dword ptr [rsi+0x3d], 8; add ecx, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff8156624c: xchg esp, eax; shl dword ptr [rsi+0x3d], 8; add ecx, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff8156624d: shl dword ptr [rsi+0x3d], 8; add ecx, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff81566251: add ecx, [rdi]; xchg esp, eax; ret 0xd108;
0xffffffff815664d5: add [rax], al; add [rbp+0x1b], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815664d7: add [rbp+0x1b], esi; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815664ff: add al, [rax]; mov rax, [rbp-0x10]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81566501: mov rax, [rbp-0x10]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81566502: mov eax, [rbp-0x10]; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff81566585: add rsp, 8; mov rax, 0xfffffffffffffff3; pop rbx; pop rbp; ret;
0xffffffff81566586: add esp, 8; mov rax, 0xfffffffffffffff3; pop rbx; pop rbp; ret;
0xffffffff815665a5: add rsp, 8; mov rax, 0xffffffffffffff97; pop rbx; pop rbp; ret;
0xffffffff815665a6: add esp, 8; mov rax, 0xffffffffffffff97; pop rbx; pop rbp; ret;
0xffffffff815667f7: ret 0xc75;
0xffffffff81566831: add [rax], eax; add [rcx+0xf], al; xchg esp, eax; ret;
0xffffffff81566833: add [rcx+0xf], al; xchg esp, eax; ret;
0xffffffff8156685b: ror byte ptr [rdi], cl; xchg esp, eax; ret 0x3844;
0xffffffff8156685d: xchg esp, eax; ret 0x3844;
0xffffffff8156685e: ret 0x3844;
0xffffffff81566bea: xchg esp, eax; ret 0x3949;
0xffffffff81566c8f: ror byte ptr [rdi], cl; xchg esp, eax; ret 0xc238;
0xffffffff81566c91: xchg esp, eax; ret 0xc238;
0xffffffff81566c92: ret 0xc238;
0xffffffff815670fe: add esi, [rdx+rcx-0x7b]; shl byte ptr [rdi+rcx*2+0x48], 0x8b; pop rbp; clc; leave; ret;
0xffffffff81567100: or al, [rbp+0x484f74c0]; mov ebx, [rbp-8]; leave; ret;
0xffffffff81567102: shl byte ptr [rdi+rcx*2+0x48], 0x8b; pop rbp; clc; leave; ret;
0xffffffff8156714c: dec dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff815675ea: ret 0x51f;
0xffffffff81567b89: cld; add [rax-0x77], ecx; fisttp word ptr [rdi], st; xchg esp, eax; ret 0x9ae8;
0xffffffff81567b8a: add [rax-0x77], ecx; fisttp word ptr [rdi], st; xchg esp, eax; ret 0x9ae8;
0xffffffff81567b8d: fisttp word ptr [rdi], st; xchg esp, eax; ret 0x9ae8;
0xffffffff81567b8f: xchg esp, eax; ret 0x9ae8;
0xffffffff81567b90: ret 0x9ae8;
0xffffffff815682a7: xor eax, 0x48fffffe; add esp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156896a: ret 0x50c;
0xffffffff81568a3a: ret 0x69c5;
0xffffffff81568cda: ret 0xd284;
0xffffffff81568de3: cli; add cl, [rdi]; xchg esp, eax; ret 0xeee9;
0xffffffff81568de4: add cl, [rdi]; xchg esp, eax; ret 0xeee9;
0xffffffff81568de6: xchg esp, eax; ret 0xeee9;
0xffffffff81568de7: ret 0xeee9;
0xffffffff81569313: xchg esp, eax; ret 0xeec1;
0xffffffff81569314: ret 0xeec1;
0xffffffff81569926: ret 0xc339;
0xffffffff81569d20: ret 0x5741;
0xffffffff81569e63: xchg esp, eax; ret 0xc6e8;
0xffffffff81569e64: ret 0xc6e8;
0xffffffff8156b5cd: xchg esp, eax; ret 0xf685;
0xffffffff8156b5ce: ret 0xf685;
0xffffffff8156b5d5: ret 0x1675;
0xffffffff8156b638: xchg esp, eax; ret 0x8545;
0xffffffff8156b856: ret 0xa0a0;
0xffffffff8156b98a: ret 0x6f34;
0xffffffff8156cb73: cmovs eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156cb9b: mov eax, 0xffffffff; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156cdcc: mov [rbx+0xcc], eax; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156cdea: ret 0xfa80;
0xffffffff8156d29f: push 0x48077500; add esp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8156d2a0: add [rbp+7], dh; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8156d2b2: xor eax, eax; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8156d67e: ret 0x4ce8;
0xffffffff8156d8f4: ret 0x8307;
0xffffffff8156d9c0: ret 0x4309;
0xffffffff8156dec3: ret 0x7440;
0xffffffff8156df43: or al, 0x48; add esp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8156df44: add rsp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8156df45: add esp, 8; mov eax, 1; pop rbx; pop rbp; ret;
0xffffffff8156df85: mov [rsi], rbx; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8156df86: mov [rsi], ebx; xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8156df88: xor eax, eax; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff8156e1c7: add [rcx+0xb893], cl; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8156e348: mov [rax+0xb8], edx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156e34a: mov eax, 0x48000000; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156e34c: add [rax], al; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156e375: add rsp, 8; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156e376: add esp, 8; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8156e461: ret 0xc629;
0xffffffff8156e514: ret 0x8647;
0xffffffff8156e61e: shl byte ptr [rbp+6], 0x48; mov eax, [rsi+0x10]; leave; ret;
0xffffffff8156e621: mov rax, [rsi+0x10]; leave; ret;
0xffffffff8156e622: mov eax, [rsi+0x10]; leave; ret;
0xffffffff8156e6e0: ret 0x3d74;
0xffffffff8156e824: ficomp st, word ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff8156ed4f: ret 0x3e75;
0xffffffff8156f104: leave; mov rax, rsi; ret;
0xffffffff8156f110: cmc; dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8156f111: dec dword ptr [rax-0x75]; clc; leave; ret;
0xffffffff8156f5a4: ret 0xffcb;
0xffffffff8156fa10: ret 0x2975;
0xffffffff8156fe54: mov eax, 0x48fffffe; add esp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff8157015f: ret 0x12e9;
0xffffffff815704c2: ret 0x9eb;
0xffffffff815704e9: add [rax], al; add [rbx+0xf], bl; xchg esp, eax; rcr byte ptr [rbp-9], 0xd8; ret;
0xffffffff815704eb: add [rbx+0xf], bl; xchg esp, eax; rcr byte ptr [rbp-9], 0xd8; ret;
0xffffffff815704ee: xchg esp, eax; rcr byte ptr [rbp-9], 0xd8; ret;
0xffffffff8157055b: ret 0x3b48;
0xffffffff81570605: ret 0x1474;
0xffffffff815706e3: leave; mov es, [rax+rax]; pop rbx; pop r12; pop rbp; ret;
0xffffffff81570825: sbb eax, 0x8948ffae; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81570827: dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81570897: fmul st, dword ptr [r8-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81570898: fmul st, dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81570aa6: ret 0x3144;
0xffffffff81570bd4: ret 0x7504;
0xffffffff81570c00: ret 0x45c7;
0xffffffff815711c3: or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81571dca: ret 0x8841;
0xffffffff81572519: add rsp, 0x58; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff8157251a: add esp, 0x58; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815727a6: pop rsp; and al, 0x28; pop rbx; pop r12; pop rbp; ret;
0xffffffff815727a8: sub [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81572b44: ret 0xc375;
0xffffffff81572c1b: add rsp, 0xa8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81572c1c: add esp, 0xa8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81572fb4: or [rbx], dh; add [rax], al; leave; ret;
0xffffffff81573038: xor [rsi], al; push rdi; sub eax, 0x327f; leave; ret;
0xffffffff8157303a: push rdi; sub eax, 0x327f; leave; ret;
0xffffffff8157303b: sub eax, 0x327f; leave; ret;
0xffffffff8157306d: mov byte ptr [rax+4], 0x57; sub eax, 0x3249; leave; ret;
0xffffffff8157306f: add al, 0x57; sub eax, 0x3249; leave; ret;
0xffffffff81573070: push rdi; sub eax, 0x3249; leave; ret;
0xffffffff81573071: sub eax, 0x3249; leave; ret;
0xffffffff815731fc: mov al, 0xdf; push rsi; sub eax, 0x30ba; leave; ret;
0xffffffff815731fd: rcr bh, 0x56; sub eax, 0x30ba; leave; ret;
0xffffffff815731ff: push rsi; sub eax, 0x30ba; leave; ret;
0xffffffff81573200: sub eax, 0x30ba; leave; ret;
0xffffffff81573263: sar edi, 0xff; add rsp, 0x20; leave; ret;
0xffffffff81573266: add rsp, 0x20; leave; ret;
0xffffffff81573267: add esp, 0x20; leave; ret;
0xffffffff8157383c: xchg esp, eax; ret 0x3948;
0xffffffff81573a66: add rsp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff81573a67: add esp, 0xa8; pop rbx; pop rbp; ret;
0xffffffff81573ce3: add [rax], al; add [rax-0x77], cl; sbb [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81573ce5: add [rax-0x77], cl; sbb [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81573ce8: sbb [r11+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81573ded: ret 0x43c7;
0xffffffff81573e1d: shl byte ptr [rsp+rcx*2+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81573e46: ret 0x27e9;
0xffffffff81573e66: ret 0x7e9;
0xffffffff815748f8: add rsp, 0x20; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff815748f9: add esp, 0x20; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81574db1: ret 0xafeb;
0xffffffff81575157: ret 0xe475;
0xffffffff81575167: ret 0x8166;
0xffffffff81575423: mov [rcx+0x40012e7], al; add [rbx+0xf4102ff], al; xchg esp, eax; ret;
0xffffffff81575429: add [rbx+0xf4102ff], al; xchg esp, eax; ret;
0xffffffff8157542c: add al, [rcx+0xf]; xchg esp, eax; ret;
0xffffffff81575e5b: ret 0x137c;
0xffffffff81575e91: ret 0x5c41;
0xffffffff81575ec0: ret 0xc174;
0xffffffff81575efc: ret 0xc47f;
0xffffffff81575f3d: pop rsp; pop r14; pop rbp; ret;
0xffffffff8157606a: ret 0x2874;
0xffffffff81576288: add rsp, 0x18; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81576289: add esp, 0x18; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81576862: ret 0xc883;
0xffffffff8157686e: ret 0x4489;
0xffffffff815768e9: ret 0xf631;
0xffffffff81577286: ret 0x86f0;
0xffffffff815772d6: ret 0x4b73;
0xffffffff8157875a: ret 0xde89;
0xffffffff81578a06: ret 0x7ea9;
0xffffffff81578c01: add dh, [rbp+rcx-0x77]; leave; movzx eax, word ptr [r8+rcx-2]; mov [rsi+rcx-2], ax; xor eax, eax; ret;
0xffffffff81578c05: leave; movzx eax, word ptr [r8+rcx-2]; mov [rsi+rcx-2], ax; xor eax, eax; ret;
0xffffffff81578dad: ret 0x7588;
0xffffffff81579035: ret 0x448b;
0xffffffff815790e3: add [rax], al; xor eax, eax; leave; ret;
0xffffffff81579230: add rsp, 8; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81579231: add esp, 8; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff815794fd: ret 0x48f0;
0xffffffff8157a051: mov edi, 0x224; and [rdi], cl; xchg esp, eax; ret 0x5c8d;
0xffffffff8157a052: and al, 2; add [rax], al; and [rdi], cl; xchg esp, eax; ret 0x5c8d;
0xffffffff8157a054: add [rax], al; and [rdi], cl; xchg esp, eax; ret 0x5c8d;
0xffffffff8157a056: and [rdi], cl; xchg esp, eax; ret 0x5c8d;
0xffffffff8157a058: xchg esp, eax; ret 0x5c8d;
0xffffffff8157a059: ret 0x5c8d;
0xffffffff8157a222: add [rcx], dh; shl byte ptr [rsi-0x7d], cl; mov edi, 0x224; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157a224: shl byte ptr [rsi-0x7d], cl; mov edi, 0x224; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157a227: mov edi, 0x224; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157a8da: ret 0xf53c;
0xffffffff8157a983: ret 0x57e8;
0xffffffff8157abca: ret 0xf530;
0xffffffff8157b326: ret 0xc138;
0xffffffff8157b32d: ret 0x9675;
0xffffffff8157bb4f: mov esi, 0x224; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157bb50: and al, 2; add [rax], al; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157bb52: add [rax], al; and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157bb54: and [rdi], cl; xchg esp, eax; ret 0x8d44;
0xffffffff8157bb56: xchg esp, eax; ret 0x8d44;
0xffffffff8157bf7a: ret 0xd049;
0xffffffff8157bf93: ret 0xb0aa;
0xffffffff8157c0c3: scasb [rdi]; leave; call far fword ptr [rbp+0x3c];
0xffffffff8157c0c4: leave; call far fword ptr [rbp+0x3c];
0xffffffff8157c16a: ret 0xa92f;
0xffffffff8157c16f: rcr dword ptr [rbp+0xf], 1; xchg esp, eax; ret 0xb60f;
0xffffffff8157c18e: sub eax, 0x2d0c; pop rax; leave; ret;
0xffffffff8157c190: or al, 0x2d; add [rax], al; pop rax; leave; ret;
0xffffffff8157c2d5: ret 0x410e;
0xffffffff8157c401: ret 0x2945;
0xffffffff8157c4d6: ret 0x341;
0xffffffff8157c51e: ret 0xd801;
0xffffffff8157d192: ret 0xc101;
0xffffffff8157d196: ret 0xf70e;
0xffffffff8157d1c4: ret 0xc2c1;
0xffffffff8157d1c6: ret 0x4406;
0xffffffff8157d204: ret 0xd029;
0xffffffff8157d2a4: ret 0x8724;
0xffffffff8157d305: add [rbx+0x41], bl; pop rsp; test eax, eax; pop rbp; cmovs eax, edx; ret;
0xffffffff8157d308: pop rsp; test eax, eax; pop rbp; cmovs eax, edx; ret;
0xffffffff8157d45a: ret 0x8f0f;
0xffffffff8157d8c5: xor edx, edx; mov [rbx+0x392], dx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8157d8c7: mov [rbx+0x392], dx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8157d8c8: mov [rbx+0x392], edx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8157d8cc: add [rax], al; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff8157db29: ret 0xde90;
0xffffffff8157e5b5: ret 0xf6c3;
0xffffffff8157e6ae: ret 0x450e;
0xffffffff8157eddc: ret 0xf001;
0xffffffff8157ee45: ret 0xefe9;
0xffffffff8157f552: ret 0xf089;
0xffffffff8157f5d7: ret 0x3b66;
0xffffffff8157f614: ret 0xa675;
0xffffffff8157f7d4: ret 0x79e9;
0xffffffff8157f933: ret 0x310e;
0xffffffff8157f93a: ret 0xc731;
0xffffffff8157f93e: ret 0x290b;
0xffffffff8157fabe: sub eax, 0xfffff3dc; pop rax; leave; ret;
0xffffffff8157fc12: sub eax, 0x41d0895b; pop rsp; pop rbp; ret;
0xffffffff8157fc30: ret 0xb879;
0xffffffff8157fc4a: add [rax], al; add [rbx+0x41], bl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff8157fc4c: add [rbx+0x41], bl; pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff8157fc4f: pop rsp; mov eax, edx; pop rbp; ret;
0xffffffff8157fd1b: ret 0xc075;
0xffffffff8157fd50: ret 0x2174;
0xffffffff8157ff5e: ret 0x9ce8;
0xffffffff81580038: ret 0xa73;
0xffffffff81580098: ret 0xfee9;
0xffffffff815800b5: ret 0xaa78;
0xffffffff81580500: mov ebx, eax; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81580574: mov ebx, 0xfffffff2; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff815805d2: shl byte ptr [rbp-0x61], 0x48; add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff815805d4: lahf; add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff815805d5: add rsp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff815805d6: add esp, 8; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff8158067b: ret 0xc8d;
0xffffffff815806bc: ret 0x8ee8;
0xffffffff81580ff5: ret 0xbce9;
0xffffffff815816ea: test [rcx+rax], al; add [rax-0x77], cl; fucomip st, st(0); leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff815816eb: add [rax], r8d; add [rax-0x77], cl; fucomip st, st(0); leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff815816ec: add [rax], eax; add [rax-0x77], cl; fucomip st, st(0); leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff815816ee: add [rax-0x77], cl; fucomip st, st(0); leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff815816f1: fucomip st, st(0); leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff815816f3: leave; sub bl, dh; jmp qword ptr [rsi-0x7b];
0xffffffff81581aed: ret 0xcde8;
0xffffffff81581af4: ret 0xcac1;
0xffffffff81581afe: ret 0x938b;
0xffffffff81581c0c: push 0x415b9848; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81581cfb: add [rax+0x415b2874], al; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81581cfc: xor byte ptr [rax+rbp+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81581d8b: and cl, [rcx-0x75]; xchg esp, eax; and al, 0x18; or al, [rax]; add [rax+0x63], cl; ret;
0xffffffff81581d8e: xchg esp, eax; and al, 0x18; or al, [rax]; add [rax+0x63], cl; ret;
0xffffffff81582f5e: ret 0x708d;
0xffffffff81583071: ret 0x8388;
0xffffffff81583297: ret 0xf610;
0xffffffff81583515: mov esp, [rdi+0x4f63e881]; add [rax], eax; pop rbp; ret;
0xffffffff81583606: cli; add [rdi], ecx; xchg esp, eax; rol bl, 0xc3; xor eax, eax; ret;
0xffffffff81583607: add [rdi], ecx; xchg esp, eax; rol bl, 0xc3; xor eax, eax; ret;
0xffffffff815837c2: ret 0x948;
0xffffffff81583bb2: ret 0x2175;
0xffffffff81583df3: or [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81583e03: add [rcx], dh; fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81583e05: fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81583e4c: sub eax, 0xffbb82ae; pop rax; xor eax, eax; pop rdx; leave; ret;
0xffffffff81583e50: mov ebx, 0xc03158ff; pop rdx; leave; ret;
0xffffffff81583e52: pop rax; xor eax, eax; pop rdx; leave; ret;
0xffffffff81583e53: xor eax, eax; pop rdx; leave; ret;
0xffffffff81583e5b: sub dh, 0xb5; sub eax, 0xffbb874c; xor eax, eax; leave; ret;
0xffffffff81583e5e: sub eax, 0xffbb874c; xor eax, eax; leave; ret;
0xffffffff81583fa9: ret 0x1875;
0xffffffff81583fbe: ret 0x1774;
0xffffffff815840b7: ret 0x110;
0xffffffff815843e5: ret 0x9f75;
0xffffffff815847b5: ret 0xd138;
0xffffffff81584979: ret 0xe175;
0xffffffff815849aa: add [rdi], cl; xchg esp, eax; ret 0x5088;
0xffffffff815849ac: xchg esp, eax; ret 0x5088;
0xffffffff815849ad: ret 0x5088;
0xffffffff81584d07: add [rbx+0x41], ebx; pop rsp; pop r13; pop rbp; ret;
0xffffffff81585072: ret 0x2944;
0xffffffff8158517d: ret 0x6601;
0xffffffff815856af: ret 0xff31;
0xffffffff8158571d: ret 0x3101;
0xffffffff815857cb: add [rax-0x77], cl; fimul st, word ptr [rdi]; xchg esp, eax; ret 0x894c;
0xffffffff815857ce: fimul st, word ptr [rdi]; xchg esp, eax; ret 0x894c;
0xffffffff815857d0: xchg esp, eax; ret 0x894c;
0xffffffff8158581f: cmp eax, 0x415b0003; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8158593f: ret 0xe806;
0xffffffff8158597a: xchg esp, eax; ret 0x3145;
0xffffffff81585985: ret 0xe803;
0xffffffff81585d23: ret 0x27;
0xffffffff815860ea: ret 0xa9eb;
0xffffffff81586543: ret 0x67e8;
0xffffffff81586a24: ret 0xf839;
0xffffffff81586a2d: rol byte ptr [rbx+0x1a7401fa], 0x85; ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rcx+rdi-0x29], 0xf; xchg edi, eax; ret 0xd021;
0xffffffff81586a30: add [rdx+rbx-0x7b], esi; ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rcx+rdi-0x29], 0xf; xchg edi, eax; ret 0xd021;
0xffffffff81586a6c: add [rsi+rbx*8-0x7b], esi; ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rcx+rdi-0x29], 0xf; xchg edi, eax; ret 0xd021;
0xffffffff81586a70: ror byte ptr [rdi], cl; xchg esp, eax; rol byte ptr [rcx+rdi-0x29], 0xf; xchg edi, eax; ret 0xd021;
0xffffffff81586a72: xchg esp, eax; rol byte ptr [rcx+rdi-0x29], 0xf; xchg edi, eax; ret 0xd021;
0xffffffff81586b7d: ror byte ptr [rax-0x7d], 0xc4; or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81586c5d: ret 0xdb75;
0xffffffff81586dd3: ret 0x2b74;
0xffffffff81587488: ret 0xe808;
0xffffffff8158773f: ret 0x1475;
0xffffffff81587f47: ret 0xe575;
0xffffffff81588058: adc eax, 0x415b0003; pop rsp; pop rbp; ret;
0xffffffff815880d1: adc eax, 0x415b0003; pop rsp; pop r13; pop rbp; ret;
0xffffffff8158812d: fist word ptr [rbx+rax], st; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8158812e: adc al, 3; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815881d4: pop rax; adc al, 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815881d5: adc al, 3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81588229: sbb al, ch; add [rbx+rax], edx; add [rax-0x77], cl; fucomip st, st(0); leave; ret 0xffff;
0xffffffff8158822b: add [rbx+rax], edx; add [rax-0x77], cl; fucomip st, st(0); leave; ret 0xffff;
0xffffffff8158822c: adc al, 3; add [rax-0x77], cl; fucomip st, st(0); leave; ret 0xffff;
0xffffffff8158822e: add [rax-0x77], cl; fucomip st, st(0); leave; ret 0xffff;
0xffffffff81588231: fucomip st, st(0); leave; ret 0xffff;
0xffffffff81588233: leave; ret 0xffff;
0xffffffff8158824e: adc eax, [rbx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8158843a: ret 0x4404;
0xffffffff81588465: ret 0x4410;
0xffffffff81588626: ret 0x8020;
0xffffffff815887f3: ret 0x4408;
0xffffffff81588d54: ret 0x8d44;
0xffffffff81588f21: ret 0x19e8;
0xffffffff81589181: mov esp, [rdi-0xd08177f]; add [rax], al; pop rbp; ret;
0xffffffff815892a2: add dword ptr [rsi+0x5b000000], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815898a1: shl byte ptr [rsp+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8158a4a4: ret 0xd6e8;
0xffffffff8158a571: ret 0x9e8;
0xffffffff8158ab05: ret 0x35e8;
0xffffffff8158acc8: mov esp, [rdi-0x3838b77f]; xor al, 0xc7; sub eax, 0xfff82c39; pop rbp; ret;
0xffffffff8158b37e: ret 0xeb01;
0xffffffff8158b410: add rsp, 0x28; leave; ret;
0xffffffff8158b411: add esp, 0x28; leave; ret;
0xffffffff8158b522: ret 0x9478;
0xffffffff8158d2dc: ret 0x348;
0xffffffff8158d32a: ret 0x40e8;
0xffffffff8158d5a8: ret 0x92e8;
0xffffffff8158d6eb: ret 0x890f;
0xffffffff8158d91d: and al, 0x41; pop rsp; pop r13; pop rbp; ret;
0xffffffff8158db76: ret 0xffb8;
0xffffffff8158db7b: inc dword ptr [rdx+rdx*8+0x415b0775]; pop rsp; pop r13; pop rbp; ret;
0xffffffff8158e52d: ret 0x5489;
0xffffffff8158eece: or [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff8158f390: ret 0x2a8;
0xffffffff8158f3a7: ret 0xf20;
0xffffffff8158fed1: ret 0x58fe;
0xffffffff8158ff92: sbb dl, [rsi+0x415b0002]; pop rsp; pop rbp; ret;
0xffffffff81590024: ret 0x779;
0xffffffff815907c5: lea eax, [rdx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815908f0: ret 0xd148;
0xffffffff81590d29: ret 0xfa81;
0xffffffff81590e98: ret 0xca0f;
0xffffffff815910e9: pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff815911d7: ret 0xa3e8;
0xffffffff81591254: push rbx; sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81591431: push qword ptr [rdi+9]; add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81591434: add rsp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff81591435: add esp, 0x58; pop rbx; pop r12; pop rbp; ret;
0xffffffff8159143d: add rsp, 0x58; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff8159143e: add esp, 0x58; xor eax, eax; pop rbx; pop r12; pop rbp; ret;
0xffffffff81591553: ret 0xee50;
0xffffffff81591b55: ret 0x9804;
0xffffffff81592113: ret 0x86e0;
0xffffffff81592156: add [rcx-0x6e1703bb], cl; in eax, dx; add [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff8159215b: xchg ecx, eax; in eax, dx; add [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff8159215c: in eax, dx; add [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff8159215d: add [rax], al; mov eax, [rbp-4]; leave; ret;
0xffffffff8159215e: add [rbx-0x3c3603bb], cl; leave; mov eax, 0xfffffff4; ret;
0xffffffff81592164: leave; mov eax, 0xfffffff4; ret;
0xffffffff81592583: or byte ptr [rip+0x64e80000], 0x89; leave; call far fword ptr [rbx+0x41];
0xffffffff8159258a: leave; call far fword ptr [rbx+0x41];
0xffffffff81592792: ret 0x8c40;
0xffffffff81592944: movsx rax, bx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81592945: movsx eax, bx; add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81592948: add rsp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81592949: add esp, 0x58; pop rbx; pop rbp; ret;
0xffffffff81592c70: xor ecx, [rdi]; xchg esp, eax; ror byte ptr [rbp-0x3cfeffbc], 0xb8; add al, 0; add [rax], al; ret;
0xffffffff81592c72: xchg esp, eax; ror byte ptr [rbp-0x3cfeffbc], 0xb8; add al, 0; add [rax], al; ret;
0xffffffff81592d66: ret 0xb808;
0xffffffff81592de7: ret 0xe908;
0xffffffff815932e9: adc al, bpl; adc ch, ch; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815932ea: adc al, ch; adc ch, ch; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815932ec: adc ch, ch; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815932ed: in eax, dx; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815932ee: add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8159335e: ret 0xcaeb;
0xffffffff8159363e: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81593810: ret 0x4589;
0xffffffff81593889: ret 0x830f;
0xffffffff8159396e: ret 0x3488;
0xffffffff8159398d: ret 0x3480;
0xffffffff815939a7: ret 0x3490;
0xffffffff815939e3: ret 0x6f73;
0xffffffff81593db3: ret 0xf505;
0xffffffff81593e09: ret 0xf51a;
0xffffffff81593ed8: ret 0x22e8;
0xffffffff81593f18: ret 0xe2e8;
0xffffffff815941f8: xchg esp, eax; std; stc; dec dword ptr [rax+1]; add ecx, [rax-0x7d]; ret;
0xffffffff81594217: ret 0xf59c;
0xffffffff815942f3: ret 0xf5b6;
0xffffffff81594556: sub dword ptr [rdx+0x5b000000], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81594870: ret 0xf009;
0xffffffff815948d7: sbb [r9], sil; ror byte ptr [rax-0x77], 0x53; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815948d8: sbb [rcx], dh; ror byte ptr [rax-0x77], 0x53; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815948da: ror byte ptr [rax-0x77], 0x53; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815948dd: push rbx; and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81594c33: ret 0x4928;
0xffffffff81594cb6: ret 0x6608;
0xffffffff81594e0d: dec dword ptr [rdi]; xchg esp, eax; ret;
0xffffffff81594e4e: div byte ptr [rdx+rbx-0x75]; push rax; push 0xf41d285; xchg esp, eax; ret 0x3941;
0xffffffff81594e52: push rax; push 0xf41d285; xchg esp, eax; ret 0x3941;
0xffffffff81594e53: push 0xf41d285; xchg esp, eax; ret 0x3941;
0xffffffff81594e55: rol byte ptr [rcx+0xf], cl; xchg esp, eax; ret 0x3941;
0xffffffff81594e58: xchg esp, eax; ret 0x3941;
0xffffffff81594e59: ret 0x3941;
0xffffffff81594ead: ret 0x90c3;
0xffffffff81594fe9: ret 0x87c6;
0xffffffff815950ae: add [rcx-0x75], cl; xchg esp, eax; and al, 0x80; or al, [rax]; add [rbx+rcx*4+0x34], cl; ret 0x8b49;
0xffffffff815950b1: xchg esp, eax; and al, 0x80; or al, [rax]; add [rbx+rcx*4+0x34], cl; ret 0x8b49;
0xffffffff815951df: div byte ptr [rbp+9]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff8159523e: ret 0x8389;
0xffffffff8159523f: mov [rbx+0x218], eax; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff81595243: add [rax], al; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815955d0: adc [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff815956cc: add [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815956f5: test al, 0; add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff815956f7: add [rax], al; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81595b3a: ret 0x66f4;
0xffffffff81595e41: inc dword ptr [rbp+0x480975c0]; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81595e43: shl byte ptr [rbp+9], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff81595e4f: add rsp, 8; mov eax, 0xffffffa6; pop rbx; pop r12; pop rbp; ret;
0xffffffff81595e50: add esp, 8; mov eax, 0xffffffa6; pop rbx; pop r12; pop rbp; ret;
0xffffffff81596128: ret 0xefb8;
0xffffffff815961c1: ret 0x8141;
0xffffffff81596573: xchg esp, eax; ret 0xe6e8;
0xffffffff81596574: ret 0xe6e8;
0xffffffff81596706: ret 0x7c0;
0xffffffff81596aa1: ret 0x838b;
0xffffffff81596d4a: ret 0x9588;
0xffffffff81597108: ret 0x941;
0xffffffff8159746e: ret 0xa040;
0xffffffff81597474: cwde; mov edx, 0x415bfffa; pop rsp; pop rbp; ret;
0xffffffff81597475: mov edx, 0x415bfffa; pop rsp; pop rbp; ret;
0xffffffff81597726: ret 0xc3c3;
0xffffffff81597736: ret 0xb8c3;
0xffffffff81597767: ret 0xe0c1;
0xffffffff81598191: ret 0x4106;
0xffffffff8159823a: ret 0x124;
0xffffffff8159824e: add byte ptr [rbp-0x3dbbf040], 0x48; add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81598251: cmove eax, edx; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff815982ef: dec dword ptr [rax-0x75]; pop rbp; clc; bswap eax; leave; ret;
0xffffffff815982f0: mov rbx, [rbp-8]; bswap eax; leave; ret;
0xffffffff815982f1: mov ebx, [rbp-8]; bswap eax; leave; ret;
0xffffffff815982f2: pop rbp; clc; bswap eax; leave; ret;
0xffffffff815982f3: clc; bswap eax; leave; ret;
0xffffffff815982f4: bswap eax; leave; ret;
0xffffffff815982ff: in al, 0x31; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff815984ef: pop rsp; pop rbp; neg eax; ret;
0xffffffff81598823: ret 0x4566;
0xffffffff81598a56: ret 0xd283;
0xffffffff81598f9a: out 0xe8, eax; push rax; mov ecx, 0x415bfff8; pop rsp; pop rbp; ret;
0xffffffff81598f9c: push rax; mov ecx, 0x415bfff8; pop rsp; pop rbp; ret;
0xffffffff81598f9d: mov ecx, 0x415bfff8; pop rsp; pop rbp; ret;
0xffffffff8159913a: ret 0xf1e5;
0xffffffff8159913f: ret 0xd4eb;
0xffffffff81599398: ret 0x1a8;
0xffffffff815995e2: ret 0x8b01;
0xffffffff815997df: ret 0x290e;
0xffffffff81599830: ret 0x1e75;
0xffffffff81599898: ror dword ptr [rdi], 1; xchg esp, eax; ret 0xb60f;
0xffffffff8159989a: xchg esp, eax; ret 0xb60f;
0xffffffff81599a4d: ret 0xdef7;
0xffffffff81599aa6: ret 0xce89;
0xffffffff81599aac: ret 0x3104;
0xffffffff81599ac3: ret 0x3108;
0xffffffff81599ad9: ret 0xcec1;
0xffffffff81599da6: ret 0x7501;
0xffffffff81599f19: xchg esp, eax; ret 0xd189;
0xffffffff81599f95: ret 0x9303;
0xffffffff8159a097: ret 0x9e90;
0xffffffff8159a0e3: ret 0xf229;
0xffffffff8159a152: ret 0x5472;
0xffffffff8159a5dc: sub dword ptr [rax], 8; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8159a5dd: sub [rax], cl; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8159ad66: mov [rbx+0x16], ax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8159ad67: mov [rbx+0x16], eax; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff8159ae49: sub dword ptr [rbp+rdi*8-1], 0xffffffff; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff8159ae85: ret 0xa5eb;
0xffffffff8159afa2: ret 0x4166;
0xffffffff8159b7b6: ret 0x24e8;
0xffffffff8159b7fd: push rbx; pop rsp; add [rax+1], cl; ret 0x8b48;
0xffffffff8159b7fe: pop rsp; add [rax+1], cl; ret 0x8b48;
0xffffffff8159b815: push rdi; push rbx; pop rsp; add al, ch; ret 0xb5bf;
0xffffffff8159b816: push rbx; pop rsp; add al, ch; ret 0xb5bf;
0xffffffff8159b817: pop rsp; add al, ch; ret 0xb5bf;
0xffffffff8159b81a: ret 0xb5bf;
0xffffffff8159bd97: sbb al, 0; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff8159c49e: ret 0x984a;
0xffffffff8159c8f0: ret 0x8901;
0xffffffff8159c9b3: ret 0x60;
0xffffffff8159d7b9: ret 0x2be0;
0xffffffff8159d8f3: ret 0xf2b8;
0xffffffff8159db89: ret 0xf741;
0xffffffff8159dc33: ret 0x4808;
0xffffffff8159dc37: ret 0xf372;
0xffffffff8159deda: ret 0xf1cd;
0xffffffff8159df7a: ret 0xe8c3;
0xffffffff8159e16f: ret 0xf10;
0xffffffff8159e692: ret 0x4d0f;
0xffffffff8159e695: ret 0x144;
0xffffffff8159ef17: ret 0x480c;
0xffffffff8159f78b: ret 0x820f;
0xffffffff8159fe92: ret 0xe80c;
0xffffffff815a0409: pop rsp; test rax, rax; pop rbp; setne al; movzx eax, al; ret;
0xffffffff815a0433: xchg esp, eax; shl dword ptr [rcx], 0xc0; test rdx, rdx; setne al; and eax, ecx; ret;
0xffffffff815a0a39: xor [rdi], cl; xchg esp, eax; ret 0x8348;
0xffffffff815a0a3b: xchg esp, eax; ret 0x8348;
0xffffffff815a0b97: ret 0x68e9;
0xffffffff815a0bef: ret 0xae9;
0xffffffff815a0c12: ret 0xe7e9;
0xffffffff815a0c98: ret 0x508b;
0xffffffff815a0f2a: ret 0xeb0;
0xffffffff815a10e9: sub ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815a140f: ret 0xf277;
0xffffffff815a153e: ret 0x4110;
0xffffffff815a1587: ret 0xc108;
0xffffffff815a160a: ret 0x3110;
0xffffffff815a1654: ret 0x4508;
0xffffffff815a175b: cli; sub eax, 0xf5c415b; xchg esp, eax; rol byte ptr [rcx+0x5d], 0x5d; lea eax, [rax+rax+1]; ret;
0xffffffff815a175c: sub eax, 0xf5c415b; xchg esp, eax; rol byte ptr [rcx+0x5d], 0x5d; lea eax, [rax+rax+1]; ret;
0xffffffff815a175f: pop rsp; sete al; pop r13; pop rbp; lea eax, [rax+rax+1]; ret;
0xffffffff815a1761: xchg esp, eax; rol byte ptr [rcx+0x5d], 0x5d; lea eax, [rax+rax+1]; ret;
0xffffffff815a1890: mov rdx, [rbp-0x10]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815a1891: mov edx, [rbp-0x10]; mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815a1894: mov [rbx], rdx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815a194c: mov ebp, 0x41c0315b; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815a195d: adc eax, [rdx+rdx*8-0x7f3f6bf1]; cli; sub al, 0xf; xchg esp, eax; ret 0xd008;
0xffffffff815a1964: cli; sub al, 0xf; xchg esp, eax; ret 0xd008;
0xffffffff815a1965: sub al, 0xf; xchg esp, eax; ret 0xd008;
0xffffffff815a1ac2: ret 0xbe01;
0xffffffff815a1c19: ret 0x4776;
0xffffffff815a1dbd: ret 0x98c0;
0xffffffff815a1dd8: leave; dec dword ptr [rax-0x77]; in eax, 0x41; push rsp; push rbx; call qword ptr [0xffffffff81c27000];
0xffffffff815a1e08: ret 0x1d74;
0xffffffff815a1e13: ret 0xf381;
0xffffffff815a21a0: ret 0x66c3;
0xffffffff815a226c: ret 0x4c0c;
0xffffffff815a2477: mov esp, eax; call qword ptr [0xffffffff81c27010];
0xffffffff815a25be: ret 0x415b;
0xffffffff815a281c: and [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815a2868: inc dword ptr [rbp-0x74fc8a40]; cld; leave; ret;
0xffffffff815a286a: shl byte ptr [rbp+3], 0x8b; cld; leave; ret;
0xffffffff815a2911: ret 0x6666;
0xffffffff815a2b19: mov [rbx], edx; add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815a2bc0: adc [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815a2fd7: ret 0x8d4d;
0xffffffff815a30dd: movsxd r8, [r9]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a30de: movsxd eax, [rcx]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a317a: ret 0x6923;
0xffffffff815a35fe: ret 0x2f74;
0xffffffff815a362d: ret 0xd175;
0xffffffff815a39f1: mov esp, edi; and eax, 0x5c415b00; pop r13; pop r14; pop rbp; ret;
0xffffffff815a3aba: ret 0x6c68;
0xffffffff815a3b8c: add rsp, 8; pop rbx; pop rbp; ret;
0xffffffff815a3b8d: add esp, 8; pop rbx; pop rbp; ret;
0xffffffff815a3ce6: add al, 0x24; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a3e7a: add [rsp+rcx-0x3a], esi; add eax, 0x955adc; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a3e7c: or al, 0xc6; add eax, 0x955adc; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a3e7e: add eax, 0x955adc; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a3ea5: add dh, al; add eax, 0x955ab3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a3ea7: add eax, 0x955ab3; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a3fb3: sub [rbx-0x377c0f20], al; add [rax+0x415b3c43], ecx; pop rsp; pop rbp; ret;
0xffffffff815a3fb9: add [rax+0x415b3c43], ecx; pop rsp; pop rbp; ret;
0xffffffff815a4034: sbb [rax-0x77], cl; in eax, 0xe8; add esp, edx; mov dh, 0xff; pop rbp; ret;
0xffffffff815a4037: in eax, 0xe8; add esp, edx; mov dh, 0xff; pop rbp; ret;
0xffffffff815a4039: add esp, edx; mov dh, 0xff; pop rbp; ret;
0xffffffff815a4099: mov [0x102444c641fffffc], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a40a0: and al, 0x10; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a40e2: sbb [r8], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a40e3: sbb [rax], al; add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a44fd: test byte ptr [rcx+rcx*4-0x19], 0xe8; mov edx, 0x89000010; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815a4500: out 0xe8, eax; mov edx, 0x89000010; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815a4502: mov edx, 0x89000010; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815a45d7: ret 0xf3e8;
0xffffffff815a46f4: ret 0x26e8;
0xffffffff815a4aa8: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a4b33: add eax, 0x954e27; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a4c76: add dh, al; add eax, 0x954ce2; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a4c78: add eax, 0x954ce2; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a4ccb: ret 0x3b5;
0xffffffff815a4d04: ret 0x440;
0xffffffff815a4f4e: xor eax, eax; add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a53b4: ret 0x8d49;
0xffffffff815a56d0: ret 0x6ff;
0xffffffff815a579a: ret 0xf4a4;
0xffffffff815a57e7: ret 0xc749;
0xffffffff815a58d9: mov eax, [rbp-0x44]; add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a58dc: add rsp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a58dd: add esp, 0x38; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a58df: cmp [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815a596a: ret 0x714d;
0xffffffff815a5aa5: ret 0xf601;
0xffffffff815a5d97: ret 0x25;
0xffffffff815a5e51: ret 0x323b;
0xffffffff815a61a2: ret 0x3f76;
0xffffffff815a6256: ret 0x850f;
0xffffffff815a6305: ret 0x4c01;
0xffffffff815a687c: ret 0x8b41;
0xffffffff815a6c9a: ret 0x854d;
0xffffffff815a6e22: ret 0x4828;
0xffffffff815a6ef6: ret 0xc850;
0xffffffff815a6f6f: ret 0xec77;
0xffffffff815a70fe: ret 0xd2f7;
0xffffffff815a7102: ret 0x4816;
0xffffffff815a7342: mov [0x4815720000023891], eax; add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a7347: add [rdx+0x15], dh; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815a7422: dec dword ptr [rax-0x7b]; shl byte ptr [rsp+rax+0x48], 0x8b; clc; leave; ret;
0xffffffff815a7425: shl byte ptr [rsp+rax+0x48], 0x8b; clc; leave; ret;
0xffffffff815a7427: add al, 0x48; mov eax, [rbp-8]; leave; ret;
0xffffffff815a74dd: fisttp dword ptr [rax-0x77], st; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff815a7890: ret 0xf748;
0xffffffff815a7adf: ret 0x3a78;
0xffffffff815a7f69: ret 0xbde9;
0xffffffff815a8cea: leave; add al, [rcx+1]; ret;
0xffffffff815a8d76: ret 0xf41;
0xffffffff815a8e87: ret 0xf05;
0xffffffff815a8e99: ret 0xc8c1;
0xffffffff815a916b: ret 0xc0c1;
0xffffffff815a919e: ret 0x428b;
0xffffffff815a92ee: ret 0xc1d1;
0xffffffff815a954b: ret 0xc6c1;
0xffffffff815a981e: ret 0xc141;
0xffffffff815a984c: ret 0xc889;
0xffffffff815a9878: ret 0x8d47;
0xffffffff815a9930: ret 0x8b44;
0xffffffff815a9a3a: ret 0xd141;
0xffffffff815a9a8c: ret 0x4405;
0xffffffff815a9b99: ret 0x3344;
0xffffffff815a9be2: ret 0x4505;
0xffffffff815a9ca7: ret 0x4a33;
0xffffffff815a9cb8: ret 0x4a89;
0xffffffff815a9d64: ret 0x480;
0xffffffff815a9efb: ret 0x5b0d;
0xffffffff815aa27c: ret 0x4c20;
0xffffffff815aa7be: ret 0x4d10;
0xffffffff815aa7f5: ret 0x4920;
0xffffffff815aa8d2: ret 0xc149;
0xffffffff815aa8df: ret 0x4911;
0xffffffff815aae2d: ret 0x4c10;
0xffffffff815aae3e: ret 0x4c15;
0xffffffff815aae93: ret 0x4810;
0xffffffff815aaeac: ret 0x4815;
0xffffffff815aafc8: ret 0x4a11;
0xffffffff815ab0cc: ret 0x490d;
0xffffffff815ab12e: ret 0x4c11;
0xffffffff815ab263: ret 0x314d;
0xffffffff815ab3c0: ret 0x3149;
0xffffffff815ab484: ret 0x4811;
0xffffffff815ab4a6: ret 0x480d;
0xffffffff815ab4e5: ret 0x4120;
0xffffffff815ab4f6: ret 0xca89;
0xffffffff815ab4fd: ret 0x4320;
0xffffffff815ab6a7: leave; imul rcx, rax; mov [rdi], r9; shr rcx, 0x38; lea rax, [rcx+r8]; ret;
0xffffffff815aba45: add [rdi], cl; xchg esp, eax; rol bl, 0xc3; xor eax, eax; ret;
0xffffffff815aba47: xchg esp, eax; rol bl, 0xc3; xor eax, eax; ret;
0xffffffff815abdd8: add al, 0x20; add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815abdda: add [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815abeed: ret 0x8001;
0xffffffff815abef6: ret 0x4574;
0xffffffff815ac0eb: ret 0x8d01;
0xffffffff815ac15b: ret 0xb70f;
0xffffffff815ac1ae: ret 0x2964;
0xffffffff815ac1bf: ret 0x5c29;
0xffffffff815ac240: ret 0xe100;
0xffffffff815ac4e1: ret 0xef75;
0xffffffff815ac54f: ret 0xf320;
0xffffffff815ac5b5: ret 0x788d;
0xffffffff815ac61e: ret 0xf45;
0xffffffff815ac632: add [rax], al; add [rbp+rcx*4+0x4d], cl; in al, 0xf; xchg esp, eax; ret;
0xffffffff815ac634: add [rbp+rcx*4+0x4d], cl; in al, 0xf; xchg esp, eax; ret;
0xffffffff815ac638: in al, 0xf; xchg esp, eax; ret;
0xffffffff815ac83d: mov rax, [rbp-0x18]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815ac83e: mov eax, [rbp-0x18]; add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815ac841: add rsp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815ac842: add esp, 0x10; pop rbx; pop r12; pop rbp; ret;
0xffffffff815ac844: adc [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815ac86f: ret 0xa4c0;
0xffffffff815ac871: movsb [rdi], [rsi]; mov byte ptr [rcx-0x171a76b8], 4; pop rsp; stosd [rdi]; call far fword ptr [rbp-0x3d];
0xffffffff815ac872: mov byte ptr [rcx-0x171a76b8], 4; pop rsp; stosd [rdi]; call far fword ptr [rbp-0x3d];
0xffffffff815ac879: pop rsp; stosd [rdi]; call far fword ptr [rbp-0x3d];
0xffffffff815ac8d6: rol dword ptr [rdx+rdx*8-0x27d6168b], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815ac8db: sub eax, ebx; add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815acabe: or [rax-0x7d], cl; rol byte ptr [rcx], 0x29; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815acac1: rol byte ptr [rcx], 0x29; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815acac2: add [rcx], ebp; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff815acbbb: ret 0x4109;
0xffffffff815acc9f: ret 0x410b;
0xffffffff815accd4: or cl, [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff815acee8: mov al, [0x3abd41523c000000]; add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff815acef1: add [rax], al; add [rdi], cl; xchg esp, eax; ret;
0xffffffff815acefd: ret 0xf340;
0xffffffff815acfb3: ret 0x4853;
0xffffffff815ad019: ret 0xf170;
0xffffffff815ad0c3: add rsp, 0x28; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815ad0c4: add esp, 0x28; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815ad0c6: sub [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815ad0e5: ret 0xf180;
0xffffffff815ad306: ret 0x4c08;
0xffffffff815ad33b: ret 0x8b4c;
0xffffffff815ad39a: ret 0xfff9;
0xffffffff815ad433: ret 0x3901;
0xffffffff815ad488: ret 0x8908;
0xffffffff815ad55f: ret 0xc0be;
0xffffffff815ad69f: ret 0xa440;
0xffffffff815ad70a: ret 0xb941;
0xffffffff815ad712: ret 0x8445;
0xffffffff815ad8d8: ret 0xf08;
0xffffffff815adb06: ret 0xa77;
0xffffffff815ade14: ret 0x8566;
0xffffffff815adf2a: ret 0x8801;
0xffffffff815ae087: ret 0x4802;
0xffffffff815ae2d2: ret 0x3de9;
0xffffffff815ae452: ret 0x294c;
0xffffffff815ae46a: ret 0xdceb;
0xffffffff815ae633: ret 0x86a8;
0xffffffff815ae67f: ret 0xa9d;
0xffffffff815ae6aa: ret 0xa80;
0xffffffff815ae76c: ret 0x3bc6;
0xffffffff815ae793: ret 0xa8a;
0xffffffff815ae7d1: ret 0xa90;
0xffffffff815ae7f4: ret 0xa97;
0xffffffff815ae81a: ret 0xb947;
0xffffffff815ae843: ret 0xcb8d;
0xffffffff815ae878: ret 0xa85;
0xffffffff815ae894: ret 0xb9d9;
0xffffffff815ae8b8: ret 0xba10;
0xffffffff815ae8e6: ret 0xaa5;
0xffffffff815aea2a: ret 0x30e8;
0xffffffff815aec89: add rsp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff815aec8a: add esp, 0x20; pop rbx; pop r12; pop rbp; ret;
0xffffffff815aec8c: and [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815aeeac: ret 0x4870;
0xffffffff815aef05: ret 0xaab;
0xffffffff815aef2f: ret 0xabd;
0xffffffff815af555: ret 0xedeb;
0xffffffff815af5ff: ror byte ptr [rax+0x39], 1; shl dword ptr [rsi+7], cl; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff815af602: shl dword ptr [rsi+7], cl; add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff815af605: add rsp, 0x48; pop rbx; pop rbp; ret;
0xffffffff815af606: add esp, 0x48; pop rbx; pop rbp; ret;
0xffffffff815af619: ret 0xe9eb;
0xffffffff815af68c: ret 0xbe30;
0xffffffff815af6b0: ret 0xc283;
0xffffffff815af6b2: ret 0x4101;
0xffffffff815af826: mov rax, [rdi]; mov [rdi+8], rax; mov [rdi+0x10], rax; mov eax, ecx; leave; ret;
0xffffffff815af827: mov eax, [rdi]; mov [rdi+8], rax; mov [rdi+0x10], rax; mov eax, ecx; leave; ret;
0xffffffff815af829: mov [rdi+8], rax; mov [rdi+0x10], rax; mov eax, ecx; leave; ret;
0xffffffff815af82a: mov [rdi+8], eax; mov [rdi+0x10], rax; mov eax, ecx; leave; ret;
0xffffffff815af82d: mov [rdi+0x10], rax; mov eax, ecx; leave; ret;
0xffffffff815af82e: mov [rdi+0x10], eax; mov eax, ecx; leave; ret;
0xffffffff815af831: mov eax, ecx; leave; ret;
0xffffffff815af8f1: ret 0x8401;
0xffffffff815af912: ret 0x2941;
0xffffffff815af930: ret 0xf01;
0xffffffff815af992: ret 0x4901;
0xffffffff815afafc: ret 0x4501;
0xffffffff815afc79: mov dh, 0x48; mov ebx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7a: mov rbx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7b: mov ebx, [rsp]; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7c: sbb al, 0x24; mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7d: and al, 0x4c; mov esp, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7e: mov r12, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc7f: mov esp, [rsp+8]; add rsp, 0x10; ret;
0xffffffff815afc80: and al, 8; add rsp, 0x10; ret;
0xffffffff815afc81: and al, 8; add rsp, 0x10; ret;
0xffffffff815afc83: add rsp, 0x10; ret;
0xffffffff815afc84: add esp, 0x10; ret;
0xffffffff815aff39: ret 0xe8d1;
0xffffffff815affd8: ret 0xf640;
0xffffffff815affe8: ret 0xe683;
0xffffffff815b0015: ret 0x31e9;
0xffffffff815b001c: ret 0xc15d;
0xffffffff815b00a2: ret 0x3166;
0xffffffff815b01d1: add rsp, 8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b01d2: add esp, 8; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b01d4: or [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b073a: ret 0x8310;
0xffffffff815b07d1: add eax, ebp; fwait; fld st, tbyte ptr [rcx-0x74f4f001]; cld; leave; ret;
0xffffffff815b07d3: fwait; fld st, tbyte ptr [rcx-0x74f4f001]; cld; leave; ret;
0xffffffff815b07d4: fld st, tbyte ptr [rcx-0x74f4f001]; cld; leave; ret;
0xffffffff815b07d5: test eax, 0x8b0b0fff; cld; leave; ret;
0xffffffff815b07d9: mov eax, [rbp-4]; leave; ret;
0xffffffff815b07db: cld; leave; ret;
0xffffffff815b0945: ret 0x9eeb;
0xffffffff815b0abd: ret 0x3156;
0xffffffff815b0b32: shl edi, 0x18; or eax, edi; movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b33: out 0x18, eax; or eax, edi; movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b34: sbb [rcx], cl; clc; movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b35: or eax, edi; movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b36: clc; movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b37: movzx edi, word ptr [rbp-6]; or eax, edi; leave; ret;
0xffffffff815b0b38: mov bh, 0x7d; cli; or eax, edi; leave; ret;
0xffffffff815b0b3a: cli; or eax, edi; leave; ret;
0xffffffff815b0b3b: or eax, edi; leave; ret;
0xffffffff815b0b3f: leave; mov rax, 0xffffffffffffffff; ret;
0xffffffff815b0b66: add [rax], eax; sar bh, 0x14; and eax, 0x81c26fa0; leave; ret;
0xffffffff815b0b68: sar bh, 0x14; and eax, 0x81c26fa0; leave; ret;
0xffffffff815b0b6b: and eax, 0x81c26fa0; leave; ret;
0xffffffff815b0b6e: ret 0xc981;
0xffffffff815b0f5f: ret 0xeab8;
0xffffffff815b0f64: inc dword ptr [rbx+0x27503fa]; leave; ret;
0xffffffff815b0f66: cli; add esi, [rbp+2]; leave; ret;
0xffffffff815b0f67: add esi, [rbp+2]; leave; ret;
0xffffffff815b0f6c: mov eax, [rdx*4-0x7e585880]; leave; ret;
0xffffffff815b0f79: leave; mov eax, 0xffffffea; ret;
0xffffffff815b0fcf: add rsp, 0x20; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b0fd0: add esp, 0x20; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b0fd2: and [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b1262: ret 0x4401;
0xffffffff815b13d4: add [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815b1403: ret 0x4102;
0xffffffff815b174e: ret 0xeac0;
0xffffffff815b1815: xchg esp, eax; ret 0xca84;
0xffffffff815b1816: ret 0xca84;
0xffffffff815b1d9a: ret 0x40e4;
0xffffffff815b1e31: ret 0x3148;
0xffffffff815b1eaf: ret 0xeb20;
0xffffffff815b2047: ret 0xe920;
0xffffffff815b20e8: ret 0x4820;
0xffffffff815b2266: ret 0x72e9;
0xffffffff815b24f3: ret 0xab83;
0xffffffff815b256c: ret 0xd8f7;
0xffffffff815b25be: ret 0x772;
0xffffffff815b269e: and bl, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815b26cc: ret 0xc083;
0xffffffff815b29c9: ret 0x7401;
0xffffffff815b29dd: mov r12, [rsp+0x18]; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29de: mov esp, [rsp+0x18]; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29df: and al, 0x18; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e0: and al, 0x18; mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e1: sbb [rbx+rcx*4+0x74], cl; and al, 0x20; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e2: mov r14, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e3: mov esi, [rsp+0x20]; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e5: and al, 0x20; mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e6: and [rbx+rcx*4+0x6c], cl; and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e7: mov r13, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e8: mov ebp, [rsp+0x28]; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29e9: insb [rdi], dx; and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29ea: and al, 0x28; mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29eb: sub [rbx+rcx*4+0x7c], cl; and al, 0x30; add rsp, 0x38; ret;
0xffffffff815b29ec: mov r15, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29ed: mov edi, [rsp+0x30]; add rsp, 0x38; ret;
0xffffffff815b29ef: and al, 0x30; add rsp, 0x38; ret;
0xffffffff815b29f1: add rsp, 0x38; ret;
0xffffffff815b29f2: add esp, 0x38; ret;
0xffffffff815b4d74: ret 0x85;
0xffffffff815b4e9a: ret 0xad23;
0xffffffff815b5041: ret 0xdcb3;
0xffffffff815b510f: ret 0x860f;
0xffffffff815b52f5: sbb [rax], eax; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b5338: mov ebp, 0x415b006f; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b5339: outsd dx, [rsi]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b5440: add rsp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b5441: add esp, 0x48; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b57d9: ret 0x4d81;
0xffffffff815b595a: ret 0xab7b;
0xffffffff815b5a10: ret 0xe375;
0xffffffff815b5a4d: ret 0xaea0;
0xffffffff815b5b63: ret 0xe775;
0xffffffff815b5b70: ret 0xda75;
0xffffffff815b5bc5: mov r12, rdi; push rbx; sub rsp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5bc6: mov esp, edi; push rbx; sub rsp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5bc7: cld; push rbx; sub rsp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5bc8: push rbx; sub rsp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5bc9: sub rsp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5bca: sub esp, 0x18; mov [rbp-0x3c], esi; mov [rbp-0x38], rax; call qword ptr [0xffffffff81c27000];
0xffffffff815b5de7: ret 0xf681;
0xffffffff815b5e52: fimul st, dword ptr [rax+0x31891]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815b5e56: add eax, [rax]; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815b5f13: ret 0x24;
0xffffffff815b5f28: ret 0x1f0f;
0xffffffff815b5fa3: or al, 7; sub eax, 0xfffffef4; leave; ret;
0xffffffff815b5fa6: sub eax, 0xfffffef4; leave; ret;
0xffffffff815b6163: or al, 7; sub eax, 0xfffffed4; leave; ret;
0xffffffff815b6166: sub eax, 0xfffffed4; leave; ret;
0xffffffff815b64eb: ret 0xfc3;
0xffffffff815b65e1: cmove esp, esi; mov byte ptr [rbx+8], 0; call qword ptr [0xffffffff81c27018];
0xffffffff815b666b: ret 0xd2eb;
0xffffffff815b666f: ret 0x7404;
0xffffffff815b677d: ret 0x3ee9;
0xffffffff815b6965: ret 0xdbeb;
0xffffffff815b697c: ret 0x4e74;
0xffffffff815b69a0: ret 0x49e9;
0xffffffff815b69ba: ret 0x4174;
0xffffffff815b69bf: ret 0xf3e9;
0xffffffff815b6c25: ret 0x7e74;
0xffffffff815b6c2a: ret 0xc2f6;
0xffffffff815b6c2c: ret 0x7402;
0xffffffff815b6c43: ret 0x5974;
0xffffffff815b6cbe: ret 0xc774;
0xffffffff815b6d75: xor [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff815b6ebb: ret 0xd7eb;
0xffffffff815b6edb: ret 0x43e9;
0xffffffff815b70a5: ret 0x70e9;
0xffffffff815b7232: ret 0x840f;
0xffffffff815b723b: ret 0x61e9;
0xffffffff815b7436: ret 0xf04;
0xffffffff815b8177: movsd [rdi], [rsi]; xchg esp, eax; lodsb [rsi]; inc esi; sbb [r8], al; call qword ptr [0xffffffff81c27018];
0xffffffff815b8178: xchg esp, eax; lodsb [rsi]; inc esi; sbb [r8], al; call qword ptr [0xffffffff81c27018];
0xffffffff815b877e: ret 0xe981;
0xffffffff815b87f9: mov [0x48dd75c085000004], eax; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b87fc: add [rbp+0x48dd75c0], al; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b87fe: shl byte ptr [rbp-0x23], 0x48; add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b8801: add rsp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b8802: add esp, 8; pop rbx; pop r12; pop rbp; ret;
0xffffffff815b8804: or [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff815b8b2b: sub ebp, [rsi-0x3b7cb701]; sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff815b8b81: add rsp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff815b8b82: add esp, 0x48; cdqe; pop rbx; pop rbp; ret;
0xffffffff815b8c4f: add rsp, 0x48; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b8c50: add esp, 0x48; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff815b903b: ret 0x94e9;
0xffffffff815b96b9: ret 0xb881;
0xffffffff816006f9: ret 0x1e9;
0xffffffff81600d0a: ret 0xa176;
0xffffffff81600e79: add [rbp-1], bl; or al, 0x25; xchg esp, eax; add [rax], r8; leave; ret;
0xffffffff81600e7a: pop rsp; dec dword ptr gs:[0x14c94]; leave; ret;
0xffffffff81600e7b: dec dword ptr gs:[0x14c94]; leave; ret;
0xffffffff81600e7c: dec dword ptr [0x14c94]; leave; ret;
0xffffffff81600e7d: or al, 0x25; xchg esp, eax; add [rax], r8; leave; ret;
0xffffffff81600e7e: and eax, 0x14c94; leave; ret;
0xffffffff81600e7f: xchg esp, eax; add [rax], r8; leave; ret;
0xffffffff81600e80: add [rax], r8; leave; ret;
0xffffffff81600e81: add [rax], eax; leave; ret;
0xffffffff81600f9a: ret 0xa425;
0xffffffff81601197: mov rsp, rax; lea rbp, [rsp+1]; push r12; ret;
0xffffffff81601198: mov esp, eax; lea rbp, [rsp+1]; push r12; ret;
0xffffffff816012ea: ret 0x1365;
0xffffffff816012f8: ret 0x138a;
0xffffffff81601336: sbb [rdx-0x64], dl; push 0x10; push 0xffffffff81601365; add rsp, 0x30; pop rdx; iretq;
0xffffffff81601338: pushfq; push 0x10; push 0xffffffff81601365; add rsp, 0x30; pop rdx; iretq;
0xffffffff81601339: push 0x10; push 0xffffffff81601365; add rsp, 0x30; pop rdx; iretq;
0xffffffff8160133a: adc [rax+0x65], ch; adc esp, [rax-0x7f]; add rsp, 0x30; pop rdx; iretq;
0xffffffff8160133b: push 0xffffffff81601365; add rsp, 0x30; pop rdx; iretq;
0xffffffff8160133c: adc esp, gs:[rax-0x7f]; add rsp, 0x30; pop rdx; iretq;
0xffffffff8160133d: adc esp, [rax-0x7f]; add rsp, 0x30; pop rdx; iretq;
0xffffffff81601340: add rsp, 0x30; pop rdx; iretq;
0xffffffff81601341: add esp, 0x30; pop rdx; iretq;
0xffffffff816013f2: pop rsi; pop rdi; add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff816013f3: pop rdi; add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff816013f4: add rsp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff816013f5: add esp, 0x30; std; mov qword ptr [rsp+0x28], 0; iretq;
0xffffffff8160193e: ret 0x2075;
0xffffffff81802b84: pop rsp; adc [rdi+rdi*8-0x5c07b7], eax; fdiv st(7), st; call qword ptr [rax+0x11];
0xffffffff81802c52: test bh, bh; xor eax, 0x2cffc9f0; fdiv st(7), st; inc dword ptr [rax+rdx-0xfcd007c]; leave; jmp qword ptr [rdi];
0xffffffff81802c53: push qword ptr [rip+0x2cffc9f0]; fdiv st(7), st; inc dword ptr [rax+rdx-0xfcd007c]; leave; jmp qword ptr [rdi];
0xffffffff81802c54: xor eax, 0x2cffc9f0; fdiv st(7), st; inc dword ptr [rax+rdx-0xfcd007c]; leave; jmp qword ptr [rdi];
0xffffffff81802c56: leave; jmp far fword ptr [rsp+rbx*8];
0xffffffff81802c59: fdiv st(7), st; inc dword ptr [rax+rdx-0xfcd007c]; leave; jmp qword ptr [rdi];
0xffffffff81802c5b: inc dword ptr [rax+rdx-0xfcd007c]; leave; jmp qword ptr [rdi];
0xffffffff81802c5c: test [rax], dl; test bh, bh; xor dh, al; leave; jmp qword ptr [rdi];
0xffffffff81802c5e: test bh, bh; xor dh, al; leave; jmp qword ptr [rdi];
0xffffffff81802c60: xor dh, al; leave; jmp qword ptr [rdi];
0xffffffff81802c62: leave; jmp qword ptr [rdi];
0xffffffff81802c6a: test bh, bh; sub al, dh; leave; jmp qword ptr [rdx];
0xffffffff81802c6c: sub al, dh; leave; jmp qword ptr [rdx];
0xffffffff81802c6e: leave; jmp qword ptr [rdx];
0xffffffff81802c82: test bh, bh; int1; leave; call far fword ptr [rax];
0xffffffff81802c83: dec dword ptr [rsi-0xf]; leave; call far fword ptr [rax];
0xffffffff81802c85: int1; leave; call far fword ptr [rax];
0xffffffff81802c86: leave; call far fword ptr [rax];
0xffffffff81802cfa: test bh, bh; leave; iretd;
0xffffffff81802dd0: adc [rdi], cl; test bh, bh; pop rsp; iretd;
0xffffffff81802dd2: test bh, bh; pop rsp; iretd;
0xffffffff8180304c: xchg esp, eax; or al, 0x84; jmp far fword ptr [rbx-0x5d002508];
0xffffffff81803424: pop rsp; or [rdi+rdi*8-0x25077a], eax; sub bl, [rcx]; xchg edx, eax; call qword ptr [rax+9];
0xffffffff81803452: xchg esp, eax; jmp far fword ptr [rcx+rcx];
0xffffffff818034e4: pushfq; or [rdi+rdi*8-0x2507d2], al; xchg ecx, eax; leave; xchg ebp, eax; call qword ptr [rax+0x2bff8408];
0xffffffff818034e5: or [rdi+rdi*8-0x2507d2], al; xchg ecx, eax; leave; xchg ebp, eax; call qword ptr [rax+0x2bff8408];
0xffffffff818034ec: xchg ecx, eax; leave; xchg ebp, eax; call qword ptr [rax+0x2bff8408];
0xffffffff818034ed: leave; xchg ebp, eax; call qword ptr [rax+0x2bff8408];
0xffffffff81803859: xchg esp, eax; stosb [rdi]; jmp qword ptr [rax*1-0x98e007c];
0xffffffff8180388e: test bh, bh; pop rsp; neg dl; call rbx;
0xffffffff81803890: pop rsp; neg dl; call rbx;
0xffffffff818038ec: xchg esp, eax; add al, 0x84; jmp far fword ptr [rbx];
0xffffffff81803a24: pop rsp; add eax, [rdi+rdi*8-0x250a7a]; xchg [rip+0x350ffae], esp; test bh, bh; xor ch, 0xda; call far fword ptr [rdi+0x44ffae26];
0xffffffff81803a25: add eax, [rdi+rdi*8-0x250a7a]; xchg [rip+0x350ffae], esp; test bh, bh; xor ch, 0xda; call far fword ptr [rdi+0x44ffae26];
0xffffffff81803a2c: xchg [rip+0x350ffae], esp; test bh, bh; xor ch, 0xda; call far fword ptr [rdi+0x44ffae26];
0xffffffff81803b90: ret 0xdaf4;
0xffffffff81803c65: add [rdi+rdi*8-0x250bb7], eax; xchg esp, eax; xor al, 0xb0; call qword ptr [rax];
0xffffffff81803c6c: xchg esp, eax; xor al, 0xb0; call qword ptr [rax];
0xffffffff81803d38: ret 0xb0e2;
0xffffffff818044e8: sub ebp, ebx; leave; call qword ptr [rax+rdi*8-0x102f007d];
0xffffffff818044ea: leave; call qword ptr [rax+rdi*8-0x102f007d];
0xffffffff81804520: ret 0xdaef;
0xffffffff81804624: pop rsp; test dword ptr [rbx-0x25109401], 0xca99abff; call qword ptr [rax-9];
0xffffffff81804a24: ret 0xdaed;
0xffffffff81804b3c: ret 0xcf62;
0xffffffff818051cc: ret 0xd47c;
0xffffffff818051f0: out dx, al; adc esp, 0x83eb8cff; jmp qword ptr [rsi];
0xffffffff818051f1: adc esp, 0x83eb8cff; jmp qword ptr [rsi];
0xffffffff81805310: xchg esp, eax; rcl ah, cl; jmp far fword ptr [rdx+rbp*8-0x7d];
0xffffffff818056d0: ret 0xd620;
0xffffffff81805824: pop rsp; in eax, 0x83; jmp far fword ptr [rdi-0x18];
0xffffffff81805935: ret 0xffd6;
0xffffffff81805a18: pop rsp; xor edx, edi; jmp qword ptr [rbx-0x7d];
0xffffffff81805e22: fcos; pop rsp; fild st, word ptr [rbx-0x2519af01]; push qword ptr [rbp+0x50ffd9a4]; fild st, word ptr [rbx-0x2519b501]; call far fword ptr [rcx+0x44ffd9d8];
0xffffffff81805e24: pop rsp; fild st, word ptr [rbx-0x2519af01]; push qword ptr [rbp+0x50ffd9a4]; fild st, word ptr [rbx-0x2519b501]; call far fword ptr [rcx+0x44ffd9d8];
0xffffffff81a0040b: cmp edi, 0x80ffffff; xchg esp, eax; sbb eax, 0xffffff81; inc eax; mov ebx, [rip-0x7f]; jmp qword ptr [rax-0x47];
0xffffffff81a00411: xchg esp, eax; sbb eax, 0xffffff81; inc eax; mov ebx, [rip-0x7f]; jmp qword ptr [rax-0x47];
0xffffffff81a00721: ret 0x8110;
0xffffffff81a03399: ret 0xff81;
0xffffffff81a04708: pop rsp; shr dword ptr [rdi-0x7f], 1; jmp qword ptr [rax-0x2f];
0xffffffff81a04788: xchg esp, eax; shr dword ptr [rdi-0x7f], 1; call far fword ptr [rbx-0x7e502f];
0xffffffff81a06950: ret 0x13;
0xffffffff81a06e58: ret 0xafea;
0xffffffff81a0ad98: ret 0xbb7;
0xffffffff81a0b919: ret 0x810b;
0xffffffff81a0c950: ret 0xb0d5;
0xffffffff81a0ce30: ret 0x6200;
0xffffffff81a14651: ret 0x8117;
0xffffffff81a16b60: ret 0xb14b;
0xffffffff81a19742: ret 0xc4c3;
0xffffffff81a19904: ret 0xc300;
0xffffffff81a1bc26: ret 0x8603;
0xffffffff81a1bfc2: ret 0x7889;
0xffffffff81a1c027: ret 0x869a;
0xffffffff81a1c30d: ret 0x40a3;
0xffffffff81a1c3bf: leave; mov [rdx+0x75], ebp; ret 0x7879;
0xffffffff81a1c3c3: ret 0x7879;
0xffffffff81a1c5f1: ret 0x8df6;
0xffffffff81a1c70e: ret 0xc3a3;
0xffffffff81a1c7c0: ret 0x6a89;
0xffffffff81a1c825: ret 0x2f03;
0xffffffff81a1c83e: pop rsp; in eax, dx; iretd;
0xffffffff81a1c9f2: ret 0xd8f6;
0xffffffff81a1cb0f: ret 0xc31d;
0xffffffff81a1dbc3: ret 0xfde1;
0xffffffff81a1dcdf: xchg esp, eax; mov al, [rbp+0x45]; iretd;
0xffffffff81a1dddd: pop rsp; pop rsp; in al, 0x9f; ret 0x5dc2;
0xffffffff81a1ddde: pop rsp; in al, 0x9f; ret 0x5dc2;
0xffffffff81a1dde2: ret 0xbd5d;
0xffffffff81a1e1dc: in al, 0xb8; pop rsp; pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff81a1e1de: pop rsp; pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff81a1e1df: pop rsp; pop rbp; lahf; ret 0x6ec2;
0xffffffff81a1e1e2: ret 0x6ec2;
0xffffffff81a1e1e3: ret 0xbd6e;
0xffffffff81a1e2a1: ret 0x6161;
0xffffffff81a1e3c1: ret 0xb775;
0xffffffff81a1e5d5: or cl, [rsi+rax]; and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5d6: or al, 6; and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5d8: and al, 0x6c; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5d9: insb [rdi], dx; and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5db: and al, 0x5c; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5dc: pop rsp; in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5dd: in al, 0xb8; pop rsp; ret 0x9f5d;
0xffffffff81a1e5df: pop rsp; ret 0x9f5d;
0xffffffff81a1e5e3: ret 0x6ed3;
0xffffffff81a1e6a2: ret 0x3561;
0xffffffff81a1e7c2: ret 0xfd75;
0xffffffff81a1e8de: xchg esp, eax; adc [rbp+0x45], eax; iretd;
0xffffffff81a1e9d6: or cl, [rsp]; and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9d7: or al, 0x24; and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9d8: and al, 0x24; insb [rdi], dx; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9d9: and al, 0x6c; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9da: insb [rdi], dx; pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9dc: pop rsp; pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9dd: pop rsp; in al, 0xb8; ret 0x5dc2;
0xffffffff81a1e9e0: ret 0x5dc2;
0xffffffff81a1eaa3: ret 0x3535;
0xffffffff81a1f3a3: ret 0xa222;
0xffffffff81a1f46f: ret 0xc601;
0xffffffff81a1f714: ret 0x4c9a;
0xffffffff81a1f735: ret 0x9f95;
0xffffffff81a1f747: ret 0x3946;
0xffffffff81a1f860: ret 0x410c;
0xffffffff81a1f92e: ret 0x763b;
0xffffffff81a1fc5c: ret 0x341d;
0xffffffff81a1fcdd: ret 0xbe6b;
0xffffffff81a1fd12: ret 0x50ca;
0xffffffff81a1fd60: ret 0x992b;
0xffffffff81a20045: xchg esp, eax; ret 0x4af3;
0xffffffff81a20046: ret 0x4af3;
0xffffffff81a200f9: ret 0x1265;
0xffffffff81a2013e: ret 0xdd26;
0xffffffff81a201f8: ret 0x42;
0xffffffff81a202e6: ret 0xf15a;
0xffffffff81a203c2: ret 0x6242;
0xffffffff81a203de: ret 0x3c5b;
0xffffffff81a2040d: ret 0x1ea1;
0xffffffff81a20554: ret 0x86f7;
0xffffffff81a20569: sub al, 0xc2; and eax, 0xf8878656; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a2056a: ret 0x5625;
0xffffffff81a2056b: and eax, 0xf8878656; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a2056e: xchg eax, edi; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a2056f: clc; pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a20570: pushfq; xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a20571: xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a20572: xchg ecx, esp; and al, 0x94; ret 0x1d3c;
0xffffffff81a20575: xchg esp, eax; ret 0x1d3c;
0xffffffff81a20576: ret 0x1d3c;
0xffffffff81a205f9: push rsi; movsxd esp, [rdx]; leave; cld; call qword ptr [rbx-0x7e];
0xffffffff81a205fa: movsxd esp, [rdx]; leave; cld; call qword ptr [rbx-0x7e];
0xffffffff81a205fc: leave; cld; call qword ptr [rbx-0x7e];
0xffffffff81a20629: ret 0x6700;
0xffffffff81a20858: ret 0xbcdf;
0xffffffff81a20928: ret 0x4fb4;
0xffffffff81a20947: ret 0xde80;
0xffffffff81a209a2: xchg esp, eax; pushfq; iretd;
0xffffffff81a20b25: ret 0x510a;
0xffffffff81a20b26: ret 0x510a;
0xffffffff81a20b74: ret 0x3b62;
0xffffffff81a20b7d: ret 0xa3b7;
0xffffffff81a20c39: ret 0x828f;
0xffffffff81a20e66: ret 0x52d8;
0xffffffff81a20ef1: ret 0x7796;
0xffffffff81a20f8f: ret 0xc2ab;
0xffffffff81a21024: pop rsp; push rbp; ret 0x461;
0xffffffff81a21026: ret 0x461;
0xffffffff81a210c8: ret 0x33ad;
0xffffffff81a211c3: adc esp, eax; fild st, word ptr [rcx-0x7b554785]; ret;
0xffffffff81a213c1: ret 0x9e76;
0xffffffff81a215a8: ret 0x42a3;
0xffffffff81a215d7: ret 0x2cc1;
0xffffffff81a216db: ret 0x5652;
0xffffffff81a21864: ret 0xed7d;
0xffffffff81a21ac4: ret 0x5a48;
0xffffffff81a21ba7: ret 0xfc6b;
0xffffffff81a2215d: ret 0x855c;
0xffffffff81a22174: ret 0x61b6;
0xffffffff81a221a0: xchg esp, eax; mov eax, 0x60957806; stosb [rdi]; call qword ptr [rdi-0x6989a0f7];
0xffffffff81a2225b: ret 0xe9b9;
0xffffffff81a222ff: ret 0xe9ea;
0xffffffff81a226e0: ret 0x93b;
0xffffffff81a226f5: ret 0x4ed;
0xffffffff81a227ca: ret 0x5e48;
0xffffffff81a22a15: ret 0x43e0;
0xffffffff81a22a53: ret 0x10e2;
0xffffffff81a22a6a: ret 0x115d;
0xffffffff81a22aa4: ret 0x6668;
0xffffffff81a22bbc: sbb rax, 0xffffffffc4661a5a; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff81a22bbd: sbb eax, 0xc4661a5a; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff81a22bbe: pop rdx; sbb ah, [rsi-0x3c]; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff81a22bbf: sbb ah, [rsi-0x3c]; fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff81a22bc2: fld st, dword ptr [rbp-0x22b1383]; push rax; xchg esp, eax; ret;
0xffffffff81a22bc7: std; push rax; xchg esp, eax; ret;
0xffffffff81a22bc8: push rax; xchg esp, eax; ret;
0xffffffff81a22d21: leave; fmul st, st(2); psraw mm2, mm5; mov dl, 0x22; cdq; ret 0x393a;
0xffffffff81a22d2a: ret 0x393a;
0xffffffff81a22f70: rep ret;
0xffffffff81a23000: pop rsp; lodsb [rsi]; or eax, esi; adc edi, ebx; movsxd edx, edi; ret 0xdb02;
0xffffffff81a23008: ret 0xdb02;
0xffffffff81a23025: ret 0x3118;
0xffffffff81a23037: ret 0xa788;
0xffffffff81a23196: ret 0x1e6e;
0xffffffff81a2324a: ret 0x464d;
0xffffffff81a232ce: ret 0xc795;
0xffffffff81a23425: mov ebp, 0x5f8297f7; xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff81a23429: pop rdi; xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff81a2342a: xchg edx, eax; leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff81a2342b: leave; fsin; add r11, [rdi+0x5a]; ret 0xfb04;
0xffffffff81a23433: ret 0xfb04;
0xffffffff81a238cd: ret 0x6906;
0xffffffff81a23909: ret 0x38d8;
0xffffffff81a2396d: push 0xffffffffffffffb3; pop rsp; cmpsd [rsi], [rdi]; call rdi;
0xffffffff81a2396f: pop rsp; cmpsd [rsi], [rdi]; call rdi;
0xffffffff81a23973: ret 0xcf31;
0xffffffff81a23a0c: ret 0x3b3;
0xffffffff81a23a45: ret 0xcaba;
0xffffffff81a23aa6: ret 0x8ad1;
0xffffffff81a23ac2: ret 0x104a;
0xffffffff81a23b55: ret 0xa231;
0xffffffff81a23b8b: ret 0x1cc6;
0xffffffff81a23b9c: ret 0x38d9;
0xffffffff81a23c65: ret 0xfefd;
0xffffffff81a23c9e: ret 0x4374;
0xffffffff81a23cf8: xchg esp, eax; cmpsd [rsi], [rdi]; ret 0xd5ef;
0xffffffff81a23cfa: ret 0xd5ef;
0xffffffff81a23d35: ret 0x1ba9;
0xffffffff81a23e05: ret 0x4765;
0xffffffff81a23e86: ret 0x6e01;
0xffffffff81a23e95: ret 0x6cb;
0xffffffff81a23ed8: ret 0xabdf;
0xffffffff81a240e6: ret 0x26f2;
0xffffffff81a24153: ret 0x3cfb;
0xffffffff81a243b2: ret 0xe0d1;
0xffffffff81a24457: pop rsp; call qword ptr [rsi+rcx*2+0x25];
0xffffffff81a2448d: sbb esp, ebp; jmp far fword ptr [rcx+0x3b];
0xffffffff81a24513: ret 0xe937;
0xffffffff81a2462a: ret 0x39b9;
0xffffffff81a24644: ret 0xda71;
0xffffffff81a24731: ret 0x431;
0xffffffff81a2474d: ret 0xe681;
0xffffffff81a24832: ret 0xfc5c;
0xffffffff81a24866: ret 0x6ef4;
0xffffffff81a2491f: ret 0xd457;
0xffffffff81a24a1a: xchg esp, eax; cmpsd [rsi], [rdi]; iretd;
0xffffffff81a24ab2: ret 0xde77;
0xffffffff81a24af1: ret 0x7414;
0xffffffff81a24b81: or bl, [rax+0xf]; leave; fld st, dword ptr [rsp+rax*8]; stosd [edi]; nop; ret 0xcc78;
0xffffffff81a24b84: leave; fld st, dword ptr [rsp+rax*8]; stosd [edi]; nop; ret 0xcc78;
0xffffffff81a24b8c: ret 0xcc78;
0xffffffff81a24d05: ret 0xd240;
0xffffffff81a25109: ret 0xd034;
0xffffffff81a25247: ret 0x2bf0;
0xffffffff81a25373: shr byte ptr [rsi+rax*2+0x414f1ec8], cl; xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a25376: enter 0x4f1e, 0x41; xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a2537a: xchg r8d, eax; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a2537b: nop; rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a2537c: rol dword ptr [rcx-0x13], 1; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a2537e: in eax, dx; pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a2537f: pop rsp; in eax, dx; ret 0x299d;
0xffffffff81a25381: ret 0x299d;
0xffffffff81a25385: ret 0xe537;
0xffffffff81a254ab: ret 0x998c;
0xffffffff81a2550e: ret 0x7624;
0xffffffff81a25594: push rbx; xor r14b, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a25596: xor r14b, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a25597: xor dh, [rax+0x2ebcc94e]; movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a2559c: movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a2559d: movsxd r14, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a2559e: movsxd esi, [rax-0x7e]; pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a255a1: pop rsp; test eax, 0x65e95c1c; call far fword ptr [rbx+0x66];
0xffffffff81a2591e: ret 0x1000;
0xffffffff81a26c24: ret 0x7cc0;
0xffffffff81a26c34: ret 0xcc6;
0xffffffff81a26f89: ret 0xfec6;
0xffffffff81a271e3: data16 ret 0xc0c0;
0xffffffff81a271e4: ret 0xc0c0;
0xffffffff81a271e9: ret 0x3c66;
0xffffffff81a294d8: ret 0xb20e;
0xffffffff81a2acc0: ret 0xb21e;
0xffffffff81a3c740: ret 0xb4e4;
0xffffffff81a3c954: add [rax], al; add [rax], al; mov al, [0x70ffffffff812d5b]; pop rsp; sub eax, 0xffffff81; jmp qword ptr [rax+0x5e];
0xffffffff81a3c956: add [rax], al; mov al, [0x70ffffffff812d5b]; pop rsp; sub eax, 0xffffff81; jmp qword ptr [rax+0x5e];
0xffffffff81a3c958: mov al, [0x70ffffffff812d5b]; pop rsp; sub eax, 0xffffff81; jmp qword ptr [rax+0x5e];
0xffffffff81a3c95b: cmp edi, 0x70ffffff; pop rsp; sub eax, 0xffffff81; jmp qword ptr [rax+0x5e];
0xffffffff81a3c961: pop rsp; sub eax, 0xffffff81; jmp qword ptr [rax+0x5e];
0xffffffff81a3d059: ret 0x9b64;
0xffffffff81a3ecb0: ret 0x1064;
0xffffffff81a4b188: ret 0x515;
0xffffffff81a4b47c: ret 5;
0xffffffff81a4fac3: cmp edi, 0xc4ffffff; xor byte ptr [rbx-0x7f], 0xff; leave; xor byte ptr [rbx-0x7f], 0xff; iretd;
0xffffffff81a4fac7: inc esp; xor byte ptr [rbx-0x7f], 0xff; leave; xor byte ptr [rbx-0x7f], 0xff; iretd;
0xffffffff81a4fac9: xor byte ptr [rbx-0x7f], 0xff; leave; xor byte ptr [rbx-0x7f], 0xff; iretd;
0xffffffff81a4fad0: leave; xor byte ptr [rbx-0x7f], 0xff; iretd;
0xffffffff81a51040: ret 0xb3bc;
0xffffffff81a51750: ret 0x81b3;
0xffffffff81a51860: add [rcx], al; add [rax], al; add [rax], al; add [rax], al; pop rsp; ret;
0xffffffff81a51862: add [rax], al; add [rax], al; add [rax], al; pop rsp; ret;
0xffffffff81a51864: add [rax], al; add [rax], al; pop rsp; ret;
0xffffffff81a51866: add [rax], al; pop rsp; ret;
0xffffffff81a57ca1: ret 0x8138;
0xffffffff81a5b2b1: ret 0x813a;
0xffffffff81a5c924: ret 0x10;
0xffffffff81a60a64: ret 8;
0xffffffff81a61498: ret 0xb47f;
0xffffffff81a62c99: ret 0x8142;
0xffffffff81a66dd3: ret 0x8a86;
0xffffffff81a6ac47: add [rbx], al; add [rax], al; add [rbp+4], ch; add [rax], al; xchg esp, eax; ret 0;
0xffffffff81a6ac49: add [rax], al; add [rbp+4], ch; add [rax], al; xchg esp, eax; ret 0;
0xffffffff81a6ac4b: add [rbp+4], ch; add [rax], al; xchg esp, eax; ret 0;
0xffffffff81a6ac4e: add [rax], al; xchg esp, eax; ret 0;
0xffffffff81a6ac50: xchg esp, eax; ret 0;
0xffffffff81a6c120: ret 0xb547;
0xffffffff81a6c230: ret 0xb546;
0xffffffff81a6c8a9: ret 0x8146;
0xffffffff81a6cdb8: ret 0xb554;
0xffffffff81a6dc00: ret 0xb1db;
0xffffffff81a6ded8: ret 0xb565;
0xffffffff81a72eb9: ret 0x814d;
0xffffffff81a747c1: ret 0x8151;
0xffffffff81a76250: ret 0xb5f6;
0xffffffff81a767dd: ret 0xc7c5;
0xffffffff81a77741: ret 0x81b5;
0xffffffff81a7a299: ret 0x8159;
0xffffffff81a7f429: ret 0xfffd;
0xffffffff81a7f4ed: xchg esp, eax; std; jmp far fword ptr [rbp-0x6c00026d];
0xffffffff81a7f615: pop rsp; std; dec dword ptr [rdi+0x7ffffd5c]; pop rsp; std; jmp far fword ptr [rdi+0x5c];
0xffffffff81a7f616: std; dec dword ptr [rdi+0x7ffffd5c]; pop rsp; std; jmp far fword ptr [rdi+0x5c];
0xffffffff81a7f617: dec dword ptr [rdi+0x7ffffd5c]; pop rsp; std; jmp far fword ptr [rdi+0x5c];
0xffffffff81a7f61d: pop rsp; std; jmp far fword ptr [rdi+0x5c];
0xffffffff81a7f620: outsd dx, [rsi]; pop rsp; std; call far fword ptr [rdi+0x5c];
0xffffffff81a7f621: pop rsp; std; call far fword ptr [rdi+0x5c];
0xffffffff81a7f62d: pop rsp; std; jmp far fword ptr [rdi];
0xffffffff81a7f631: pop rsp; std; call far fword ptr [rdi];
0xffffffff81a7fa15: ret 0xfffc;
0xffffffff81a7fbdd: xchg esp, edi; call far fword ptr [rdi];
0xffffffff81a7fda5: pop rsp; cld; dec dword ptr [rdi+0xffffc5c]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fda6: cld; dec dword ptr [rdi+0xffffc5c]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fda7: dec dword ptr [rdi+0xffffc5c]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fda9: pop rsp; cld; dec dword ptr [rdi]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fdaa: cld; dec dword ptr [rdi]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fdab: dec dword ptr [rdi]; pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7fdad: pop rsp; cld; jmp far fword ptr [rdi-0x100003a5];
0xffffffff81a7ff58: mov al, [0x6ffffc298afffc29]; sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff59: sub esp, edi; dec dword ptr [rdx+0x6ffffc29]; sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff5a: cld; dec dword ptr [rdx+0x6ffffc29]; sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff5b: dec dword ptr [rdx+0x6ffffc29]; sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff5d: sub esp, edi; jmp far fword ptr [rdi+0x29];
0xffffffff81a7ff60: outsd dx, [rsi]; sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff61: sub esp, edi; call far fword ptr [rdi+0x29];
0xffffffff81a7ff69: sub esp, edi; call far fword ptr [rdi];
0xffffffff81a7ffe0: scasd [rdi]; sbb esp, edi; jmp far fword ptr [rdi+0x6ffffc18];
0xffffffff81a7ffe1: sbb esp, edi; jmp far fword ptr [rdi+0x6ffffc18];
0xffffffff81a8005c: mov edi, 0xaffffc11; adc esp, edi; call far fword ptr [rdi-0x700003ef];
0xffffffff81a8005d: adc esp, edi; jmp far fword ptr [rdi-0x600003ef];
0xffffffff81a80060: scasd [rdi]; adc esp, edi; call far fword ptr [rdi-0x700003ef];
0xffffffff81a80061: adc esp, edi; call far fword ptr [rdi-0x700003ef];
0xffffffff81a80064: lahf; adc esp, edi; dec dword ptr [rdi+0x7ffffc11]; adc esp, edi; jmp far fword ptr [rdi+0x11];
0xffffffff81a80065: adc esp, edi; dec dword ptr [rdi+0x7ffffc11]; adc esp, edi; jmp far fword ptr [rdi+0x11];
0xffffffff81a80066: cld; dec dword ptr [rdi+0x7ffffc11]; adc esp, edi; jmp far fword ptr [rdi+0x11];
0xffffffff81a80067: dec dword ptr [rdi+0x7ffffc11]; adc esp, edi; jmp far fword ptr [rdi+0x11];
0xffffffff81a8006d: adc esp, edi; jmp far fword ptr [rdi+0x11];
0xffffffff81a80070: outsd dx, [rsi]; adc esp, edi; call far fword ptr [rdi+0x11];
0xffffffff81a80071: adc esp, edi; call far fword ptr [rdi+0x11];
0xffffffff81a8007d: adc esp, edi; jmp far fword ptr [rdi];
0xffffffff81a80081: adc esp, edi; call far fword ptr [rdi];
0xffffffff81a8030a: sti; push qword ptr [rcx+0x4ffffbc9]; leave; sti; call far fword ptr [rdi-0x38];
0xffffffff81a8030b: push qword ptr [rcx+0x4ffffbc9]; leave; sti; call far fword ptr [rdi-0x38];
0xffffffff81a8030d: leave; sti; dec dword ptr [rdi-0x37]; sti; call far fword ptr [rdi-0x38];
0xffffffff81a80311: leave; sti; call far fword ptr [rdi-0x38];
0xffffffff81a80361: ret 0xfffb;
0xffffffff81a80aac: mov edi, 0xfffffa95; xchg esp, eax; cli; call far fword ptr [rdi];
0xffffffff81a80ab1: xchg esp, eax; cli; call far fword ptr [rdi];
0xffffffff81a80bb0: out dx, eax; pop rsp; cli; call far fword ptr [rdi+0x5c];
0xffffffff81a80bb1: pop rsp; cli; call far fword ptr [rdi+0x5c];
0xffffffff81a80bb4: pop rdi; pop rsp; cli; jmp far fword ptr [rdi+0xffffa5b];
0xffffffff81a80bb5: pop rsp; cli; jmp far fword ptr [rdi+0xffffa5b];
0xffffffff81a80ee5: leave; stc; jmp far fword ptr [rdi-0x60000637];
0xffffffff81a80ee8: scasd [rdi]; leave; stc; call far fword ptr [rdi-0x10000637];
0xffffffff81a80ee9: leave; stc; call far fword ptr [rdi-0x10000637];
0xffffffff81a81098: scasd [rdi]; xchg esp, eax; stc; call far fword ptr [rdi-0x4000066c];
0xffffffff81a81099: xchg esp, eax; stc; call far fword ptr [rdi-0x4000066c];
0xffffffff81a814a1: pop rsp; stc; dec dword ptr [rdi+0x1ffff95c]; pop rsp; stc; jmp far fword ptr [rdi+0x5a];
0xffffffff81a814a2: stc; dec dword ptr [rdi+0x1ffff95c]; pop rsp; stc; jmp far fword ptr [rdi+0x5a];
0xffffffff81a814a3: dec dword ptr [rdi+0x1ffff95c]; pop rsp; stc; jmp far fword ptr [rdi+0x5a];
0xffffffff81a814a5: pop rsp; stc; call far fword ptr [rdi];
0xffffffff81a814a9: pop rsp; stc; jmp far fword ptr [rdi+0x5a];
0xffffffff81a81891: leave; clc; jmp far fword ptr [rdi];
0xffffffff81a818f5: xchg ebp, eax; clc; dec edi; xchg esp, eax; clc; jmp far fword ptr [rdi];
0xffffffff81a818f6: clc; dec edi; xchg esp, eax; clc; jmp far fword ptr [rdi];
0xffffffff81a818f7: dec edi; xchg esp, eax; clc; jmp far fword ptr [rdi];
0xffffffff81a818f9: xchg esp, eax; clc; jmp far fword ptr [rdi];
0xffffffff81a818fd: xchg esp, eax; clc; dec dword ptr [rdi]; xchg ebx, eax; clc; call far fword ptr [rdi+0x4ffff892];
0xffffffff81a82639: xchg esp, eax; idiv bh; call qword ptr [rbx-0x6c20000a];
0xffffffff81a826a6: idiv bh; xchg esp, eax; mov dh, dh; jmp qword ptr [rcx-0x78];
0xffffffff81a826a8: xchg esp, eax; mov dh, dh; jmp qword ptr [rcx-0x78];
0xffffffff81a82b18: pop rsp; in al, dx; cmc; jmp far fword ptr [rdi];
0xffffffff81a82ca0: pop rsp; scasd [rdi]; cmc; jmp far fword ptr [rdi];
0xffffffff81a82d97: dec dword ptr [rdi-0x6c]; cmc; push qword ptr [rax]; xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a82d98: xchg r12, rax; cmc; push qword ptr [rax]; xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a82d99: xchg esp, eax; cmc; push qword ptr [rax]; xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a82d9a: cmc; push qword ptr [rax]; xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a82d9b: push qword ptr [rax]; xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a82d9d: xchg esp, eax; cmc; call far fword ptr [rax];
0xffffffff81a831c9: leave; hlt; call far fword ptr [rdi];
0xffffffff81a832e0: lahf; xchg esp, eax; hlt; jmp far fword ptr [rdi-0x6c];
0xffffffff81a832e1: xchg esp, eax; hlt; jmp far fword ptr [rdi-0x6c];
0xffffffff81a83341: xchg esp, esi; dec dword ptr [rdi]; xchg esp, esi; jmp far fword ptr [rdi];
0xffffffff81a83342: hlt; dec dword ptr [rdi]; xchg esp, esi; jmp far fword ptr [rdi];
0xffffffff81a83343: dec dword ptr [rdi]; xchg esp, esi; jmp far fword ptr [rdi];
0xffffffff81a83345: xchg esp, esi; jmp far fword ptr [rdi];
0xffffffff81a8342c: scasd [rdi]; pop rsp; hlt; call far fword ptr [rdi+0x5c];
0xffffffff81a8342d: pop rsp; hlt; call far fword ptr [rdi+0x5c];
0xffffffff81a8344c: ret 0xf454;
0xffffffff81a835a1: sub esp, esi; call far fword ptr [rdi];
0xffffffff81a83639: sbb dh, ah; dec edi; sbb esp, esi; dec dword ptr [rdi-0x20000be7]; sbb ah, dh; call far fword ptr [rdi+0x17];
0xffffffff81a8363a: hlt; dec edi; sbb esp, esi; dec dword ptr [rdi-0x20000be7]; sbb ah, dh; call far fword ptr [rdi+0x17];
0xffffffff81a8363b: dec edi; sbb esp, esi; dec dword ptr [rdi-0x20000be7]; sbb ah, dh; call far fword ptr [rdi+0x17];
0xffffffff81a8363d: sbb esp, esi; dec dword ptr [rdi-0x20000be7]; sbb ah, dh; call far fword ptr [rdi+0x17];
0xffffffff81a836b4: outsd dx, [rsi]; add dh, ah; dec dword ptr [rdi]; add esp, esi; call far fword ptr [rdi];
0xffffffff81a836b5: add dh, ah; dec dword ptr [rdi]; add esp, esi; call far fword ptr [rdi];
0xffffffff81a836b6: hlt; dec dword ptr [rdi]; add esp, esi; call far fword ptr [rdi];
0xffffffff81a836b7: dec dword ptr [rdi]; add esp, esi; call far fword ptr [rdi];
0xffffffff81a836b9: add esp, esi; call far fword ptr [rdi];
0xffffffff81a837d3: dec dword ptr [rdi]; leave; call far fword ptr [rdi];
0xffffffff81a837d5: leave; call far fword ptr [rdi];
0xffffffff81a837ed: ret 0xfff3;
0xffffffff81a83c2d: leave; jmp far fword ptr [rdi-0x38];
0xffffffff81a83c45: ret 0xfff2;
0xffffffff81a83ff0: scasd [rdi]; leave; int1; jmp far fword ptr [rdi-0x37];
0xffffffff81a83ff1: leave; int1; jmp far fword ptr [rdi-0x37];
0xffffffff81a83ff4: outsd dx, [rsi]; leave; int1; jmp far fword ptr [rdi];
0xffffffff81a83ff5: leave; int1; jmp far fword ptr [rdi];
0xffffffff81a83ff9: leave; int1; call far fword ptr [rdi-0x38];
0xffffffff81a84021: ret 0xfff1;
0xffffffff81a84264: out dx, eax; pop rsp; int1; call far fword ptr [rdi+0x3ffff15c];
0xffffffff81a84265: pop rsp; int1; call far fword ptr [rdi+0x3ffff15c];
0xffffffff81a8426d: pop rsp; int1; dec dword ptr [rdi-0x40000ea5]; pop rdx; int1; call far fword ptr [rdi-0xea6];
0xffffffff81a84551: ret 0xfff0;
0xffffffff81a84d1d: ret 0xffee;
0xffffffff81a852dd: ret 0xffed;
0xffffffff81a853a0: pop rdi; xchg esp, eax; in eax, dx; dec dword ptr [rdi-0x6f]; in eax, dx; jmp far fword ptr [rdi-0x72];
0xffffffff81a853a1: xchg esp, eax; in eax, dx; dec dword ptr [rdi-0x6f]; in eax, dx; jmp far fword ptr [rdi-0x72];
0xffffffff81a856c4: leave; xlat [rbx]; in al, dx; call far fword ptr [rdx+0x3fffecd7];
0xffffffff81a85779: ret 0xffec;
0xffffffff81a858f0: mov edi, 0x6fffec94; xchg esp, eax; in al, dx; call far fword ptr [rdi-0x6c];
0xffffffff81a858f1: xchg esp, eax; in al, dx; jmp far fword ptr [rdi-0x6c];
0xffffffff81a858f4: outsd dx, [rsi]; xchg esp, eax; in al, dx; call far fword ptr [rdi-0x6c];
0xffffffff81a858f5: xchg esp, eax; in al, dx; call far fword ptr [rdi-0x6c];
0xffffffff81a85940: outsd dx, [rsi]; mov esp, gs; call far fword ptr [rdi];
0xffffffff81a85941: mov esp, gs; call far fword ptr [rdi];
0xffffffff81a85945: mov esp, gs; jmp far fword ptr [rdi-0x70001375];
0xffffffff81a8595c: out dx, eax; mov esp, ebp; dec dword ptr [rdi-0x77]; in al, dx; jmp far fword ptr [rdi];
0xffffffff81a8595d: mov esp, ebp; dec dword ptr [rdi-0x77]; in al, dx; jmp far fword ptr [rdi];
0xffffffff81a85961: mov esp, ebp; jmp far fword ptr [rdi];
0xffffffff81a85a78: pop rdi; pop rsp; in al, dx; call far fword ptr [rdi+0x5b];
0xffffffff81a85a79: pop rsp; in al, dx; call far fword ptr [rdi+0x5b];
0xffffffff81a85b71: sub ebp, esp; dec dword ptr [rdi+0x2a]; in al, dx; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b72: in al, dx; dec dword ptr [rdi+0x2a]; in al, dx; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b73: dec dword ptr [rdi+0x2a]; in al, dx; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b74: sub r13b, r12b; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b75: sub ch, ah; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b76: in al, dx; dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b77: dec edi; sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85b79: sub esp, ebp; call far fword ptr [rdi+0x29];
0xffffffff81a85bd9: sbb esp, ebp; jmp far fword ptr [rdi+0x19];
0xffffffff81a85bdc: outsd dx, [rsi]; sbb esp, ebp; dec dword ptr [rdi+0x19]; in al, dx; jmp far fword ptr [rdi];
0xffffffff81a85bdd: sbb esp, ebp; dec dword ptr [rdi+0x19]; in al, dx; jmp far fword ptr [rdi];
0xffffffff81a85be1: sbb esp, ebp; jmp far fword ptr [rdi];
0xffffffff81a85be5: sbb esp, ebp; jmp far fword ptr [rdi-0x700013e8];
0xffffffff81a85c54: out dx, eax; adc esp, ebp; jmp far fword ptr [rdi-0x13f0];
0xffffffff81a85c55: adc esp, ebp; jmp far fword ptr [rdi-0x13f0];
0xffffffff81a85ea4: ret 0xeba2;
0xffffffff81a866d1: ret 0xffe9;
0xffffffff81a871ad: xchg edi, esp; jmp far fword ptr [rdi+0x7fffe774];
0xffffffff81a8723d: sbb esp, edi; jmp far fword ptr [rdi-0x400018e5];
0xffffffff81a87359: xchg esp, eax; out 0xff, al; iretd;
0xffffffff81a87655: sbb esp, ebp; call far fword ptr [rdi+0x1a];
0xffffffff81a8768d: add esp, ebp; jmp far fword ptr [rdi+0xfffe500];
0xffffffff81a87772: in al, 0xff; fist word ptr [rcx-0x71c0001c], st; in al, 0xff; lahf; mov esp, fs; call far fword ptr [rdi+0xfffe48b];
0xffffffff81a87774: fist word ptr [rcx-0x71c0001c], st; in al, 0xff; lahf; mov esp, fs; call far fword ptr [rdi+0xfffe48b];
0xffffffff81a8777a: in al, 0xff; lahf; mov esp, fs; call far fword ptr [rdi+0xfffe48b];
0xffffffff81a8777c: lahf; mov esp, fs; call far fword ptr [rdi+0xfffe48b];
0xffffffff81a8777d: mov esp, fs; call far fword ptr [rdi+0xfffe48b];
0xffffffff81a877ff: dec dword ptr [rdi-0x40001bbb]; in al, 0xff; outsd dx, [rsi]; in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a87802: in al, 0xff; mov edi, 0x6fffe443; in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a87804: mov edi, 0x6fffe443; in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a87806: in al, 0xff; outsd dx, [rsi]; in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a87808: outsd dx, [rsi]; in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a8780a: in al, 0xff; cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a8780c: cmovae esp, esp; jmp far fword ptr [rdi+0x1fffe442];
0xffffffff81a878d0: lahf; sbb esp, esp; dec dword ptr [rdi+0x19]; in al, 0xff; nop esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d1: sbb esp, esp; dec dword ptr [rdi+0x19]; in al, 0xff; nop esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d2: in al, 0xff; sbb r12, r12; dec dword ptr [rdi]; sbb esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d4: sbb r12, r12; dec dword ptr [rdi]; sbb esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d5: sbb esp, esp; dec dword ptr [rdi]; sbb esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d7: dec dword ptr [rdi]; sbb esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a878d9: sbb esp, esp; jmp far fword ptr [rdi-0x40001bea];
0xffffffff81a87aa8: ret 0xe34c;
0xffffffff81a87d29: ret 0xffe2;
0xffffffff81a87f5d: sub esp, edx; jmp far fword ptr [rdi];
0xffffffff81a87fdd: adc esp, edx; jmp far fword ptr [rdi];
0xffffffff81a87fe1: adc esp, edx; dec edi; adc ah, dl; jmp far fword ptr [rdi+0x12];
0xffffffff81a883f9: mov esp, ecx; dec edi; mov esp, ecx; jmp far fword ptr [rdi-0x70001e75];
0xffffffff81a883fb: dec edi; mov esp, ecx; jmp far fword ptr [rdi-0x70001e75];
0xffffffff81a883fd: mov esp, ecx; jmp far fword ptr [rdi-0x70001e75];
0xffffffff81a88405: mov esp, ecx; call far fword ptr [rdi];
0xffffffff81a88590: cmova esp, ecx; jmp far fword ptr [rdi-0x20001eba];
0xffffffff81a886a1: sbb esp, ecx; jmp far fword ptr [rdi+0x7fffe11b];
0xffffffff81a886d8: out dx, eax; adc esp, ecx; jmp far fword ptr [rdi+0x6fffe113];
0xffffffff81a886d9: adc esp, ecx; jmp far fword ptr [rdi+0x6fffe113];
0xffffffff81a886dc: scasd [rdi]; adc esp, ecx; jmp far fword ptr [rdi+0x13];
0xffffffff81a886dd: adc esp, ecx; jmp far fword ptr [rdi+0x13];
0xffffffff81a886e0: outsd dx, [rsi]; adc esp, ecx; jmp far fword ptr [rdi];
0xffffffff81a886e1: adc esp, ecx; jmp far fword ptr [rdi];
0xffffffff81a88785: add esp, ecx; call far fword ptr [rdi+3];
0xffffffff81a8888c: ret 0xe0c8;
0xffffffff81a888d1: ret 0xffe0;
0xffffffff81a88cc5: adc esp, eax; dec edi; adc ah, al; call far fword ptr [rdi];
0xffffffff81a88d14: scasd [rdi]; add esp, eax; dec edi; add ah, al; jmp far fword ptr [rdi+2];
0xffffffff81a88d15: add esp, eax; dec edi; add ah, al; jmp far fword ptr [rdi+2];
0xffffffff81a88ee5: ret 0xffdf;
0xffffffff81a8945d: ret 0xffde;
0xffffffff81a89a1d: ret 0xffdd;
0xffffffff81a8a08d: mov esp, ds; call far fword ptr [rdi+0x7fffdc8c];
0xffffffff81a8a095: mov esp, ds; jmp far fword ptr [rdi];
0xffffffff81a8a162: fdiv st(7), st; xchg esp, eax; imul ebx, esp, 0xdc6975ff; call far fword ptr [rbx+0x69];
0xffffffff81a8a164: xchg esp, eax; imul ebx, esp, 0xdc6975ff; call far fword ptr [rbx+0x69];
0xffffffff81a8a5a1: ret 0xffdb;
0xffffffff81a8aab1: ret 0xffda;
0xffffffff81a8acc4: xchg esp, eax; xor ebx, edx; call far fword ptr [rcx];
0xffffffff81a8b26b: dec dword ptr [rdi+0x7fffd95c]; pop rsp; fcos; iretd;
0xffffffff81a8b271: pop rsp; fcos; iretd;
0xffffffff81a8b58c: ret 0xffd8;
0xffffffff81a8b58d: ret 0xffd8;
0xffffffff81a8b641: movsb [rdi], [rsi]; fdivr st, st(7); xchg [rax+rbx*8-0x275cf401], esp; jmp qword ptr [rdx-0x28];
0xffffffff81a8b642: fdivr st, st(7); xchg [rax+rbx*8-0x275cf401], esp; jmp qword ptr [rdx-0x28];
0xffffffff81a8b644: xchg [rax+rbx*8-0x275cf401], esp; jmp qword ptr [rdx-0x28];
0xffffffff81a8b9a4: mov esp, edi; xlat [rbx]; call qword ptr [rdi+0x50ffd7fb];
0xffffffff81a8ba08: pop rsp; out 0xd7, al; jmp far fword ptr [rbx+0x52ffd7e5];
0xffffffff81a8ba8c: xchg esp, eax; rcl bh, 1; inc dword ptr [rax-0x33]; xlat [rbx]; call rsi;
0xffffffff81a8bb3c: leave; test al, 0xd7; call qword ptr [rbp-0x58];
0xffffffff81a8bb70: cmp [rbp-0x6ae60029], dl; xlat [rbx]; push rsp; xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb75: xchg ebp, eax; xlat [rbx]; push rsp; xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb76: xlat [rbx]; push rsp; xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb77: push rsp; xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb78: hlt; xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb79: xchg esp, eax; xlat [rbx]; call far fword ptr [rsi+0x69ffd794];
0xffffffff81a8bb7c: sahf; xchg esp, eax; xlat [rbx]; jmp far fword ptr [rcx-0x6c];
0xffffffff81a8bb7d: xchg esp, eax; xlat [rbx]; jmp far fword ptr [rcx-0x6c];
0xffffffff81a8bb81: xchg esp, eax; xlat [rbx]; call qword ptr [rsp+rdx*4-0x29];
0xffffffff81a8bb84: push rsp; xchg esp, eax; xlat [rbx]; call rcx;
0xffffffff81a8bb85: xchg esp, eax; xlat [rbx]; call rcx;
0xffffffff81a8bba8: ret 0xd790;
0xffffffff81a8bcc4: leave; insb [rdi], dx; xlat [rbx]; call far fword ptr [rbx-0xe002894];
0xffffffff81a8bcf8: xchg [rdx-0x29], esp; push qword ptr [rax+0x62]; xlat [rbx]; call far fword ptr [rcx+0x62];
0xffffffff81a8cc45: ret 0xffd4;
0xffffffff81a8ce2d: mov esp, edx; call far fword ptr [rdi];
0xffffffff81a8ce39: xchg esp, edx; call far fword ptr [rdi-0x79];
0xffffffff81a8d018: outsd dx, [rsi]; sub esp, edx; call far fword ptr [rdi];
0xffffffff81a8d019: sub esp, edx; call far fword ptr [rdi];
0xffffffff81a8d085: adc esp, edx; dec edi; adc esp, edx; jmp far fword ptr [rdi+0x5fffd411];
0xffffffff81a8d087: dec edi; adc esp, edx; jmp far fword ptr [rdi+0x5fffd411];
0xffffffff81a8d089: adc esp, edx; jmp far fword ptr [rdi+0x5fffd411];
0xffffffff81a8d08c: scasd [rdi]; adc esp, edx; call far fword ptr [rdi+0x11];
0xffffffff81a8d08d: adc esp, edx; call far fword ptr [rdi+0x11];
0xffffffff81a8d095: adc esp, edx; dec edi; adc ah, dl; jmp far fword ptr [rdi+0x4fffd410];
0xffffffff81a8d22d: ret 0xffd3;
0xffffffff81a8d686: sar bh, cl; out dx, eax; leave; sar bh, cl; iretd;
0xffffffff81a8d688: out dx, eax; leave; sar bh, cl; iretd;
0xffffffff81a8d689: leave; sar bh, cl; iretd;
0xffffffff81a8d6c5: ret 0xffd2;
0xffffffff81a8d98d: pop rbp; sar bh, cl; lahf; pop rsp; sar bh, cl; call far fword ptr [rbx-0x2e];
0xffffffff81a8d98e: sar bh, cl; lahf; pop rsp; sar bh, cl; call far fword ptr [rbx-0x2e];
0xffffffff81a8d990: lahf; pop rsp; sar bh, cl; call far fword ptr [rbx-0x2e];
0xffffffff81a8d991: pop rsp; sar bh, cl; call far fword ptr [rbx-0x2e];
0xffffffff81a8da8a: sar bh, cl; xchg [rcx], esp; sar bh, cl; outsd dx, [rsi]; and edx, edx; jmp far fword ptr [rdi+0x7fffd220];
0xffffffff81a8da8c: xchg [rcx], esp; sar bh, cl; outsd dx, [rsi]; and edx, edx; jmp far fword ptr [rdi+0x7fffd220];
0xffffffff81a8ddf1: pop rsp; sar edi, 1; pop r12; sar edi, 1; fistp word ptr [rbx-0x2f], st; jmp far fword ptr [rdi];
0xffffffff81a8ddf5: pop rsp; sar edi, 1; fistp word ptr [rbx-0x2f], st; jmp far fword ptr [rdi];
0xffffffff81a8e145: ret 0xffd0;
0xffffffff81a8e6a5: ret 0xffcf;
0xffffffff81a8e727: dec edi; xchg esp, eax; iretd;
0xffffffff81a8e72b: dec dword ptr [rdi+0x5fffcf94]; xchg esp, eax; iretd;
0xffffffff81a8e730: pop rdi; xchg esp, eax; iretd;
0xffffffff81a8e733: dec dword ptr [rdi]; xchg esp, eax; iretd;
0xffffffff81a8eb04: ret 0xcee3;
0xffffffff81a8f0e1: leave; int 0xff; iretd;
0xffffffff81a8f7ad: ret 0xffcc;
0xffffffff81a8f905: xchg esp, eax; int3; jmp far fword ptr [rdi-0x6c];
0xffffffff81a8fb0d: pop rsp; int3; jmp far fword ptr [rdi-0x700033a5];
0xffffffff81a8fd75: sub cl, ah; dec dword ptr [rdi+0x3fffcc29]; sub esp, ecx; call far fword ptr [rdi];
0xffffffff81a8fd76: int3; dec dword ptr [rdi+0x3fffcc29]; sub esp, ecx; call far fword ptr [rdi];
0xffffffff81a8fd77: dec dword ptr [rdi+0x3fffcc29]; sub esp, ecx; call far fword ptr [rdi];
0xffffffff81a8fd7d: sub esp, ecx; call far fword ptr [rdi];
0xffffffff81a8fdc5: sbb esp, ecx; call far fword ptr [rdi+0x5fffcc19];
0xffffffff81a8fdc8: lahf; sbb esp, ecx; call far fword ptr [rdi+0x19];
0xffffffff81a8fdc9: sbb esp, ecx; call far fword ptr [rdi+0x19];
0xffffffff81a8fe31: adc esp, ecx; call far fword ptr [rdi];
0xffffffff81a906e5: ret 0xffca;
0xffffffff81a90aca: leave; call rbp;
0xffffffff81a90ad2: leave; jmp far fword ptr [rdi-1];
0xffffffff81a90add: dec ecx; dec dword ptr [rdi]; dec ecx; dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90ade: leave; dec dword ptr [rdi]; dec ecx; dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90adf: dec dword ptr [rdi]; dec ecx; dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90ae1: dec ecx; dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90ae2: leave; dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90ae3: dec dword ptr [rdi-2]; leave; jmp far fword ptr [rdi];
0xffffffff81a90afb: dec dword ptr [rdi-7]; leave; dec edi; clc; leave; jmp far fword ptr [rdi-8];
0xffffffff81a90afd: stc; leave; dec edi; clc; leave; jmp far fword ptr [rdi-8];
0xffffffff81a90afe: leave; dec edi; clc; leave; jmp far fword ptr [rdi-8];
0xffffffff81a90aff: dec edi; clc; leave; jmp far fword ptr [rdi-8];
0xffffffff81a90b01: clc; leave; jmp far fword ptr [rdi-8];
0xffffffff81a90b02: leave; jmp far fword ptr [rdi-8];
0xffffffff81a90b08: push rdi; leave; call far fword ptr [rdi+0x7dffc9f7];
0xffffffff81a90b0a: leave; call far fword ptr [rdi+0x7dffc9f7];
0xffffffff81a90b12: leave; call far fword ptr [rsi-9];
0xffffffff81a90b32: leave; jmp far fword ptr [rdi-0x11];
0xffffffff81a90b34: outsd dx, [rsi]; out dx, eax; leave; jmp far fword ptr [rdi];
0xffffffff81a90b35: out dx, eax; leave; jmp far fword ptr [rdi];
0xffffffff81a90b44: fucomip st, st(3); leave; call far fword ptr [rdi-0x3e003615];
0xffffffff81a90b46: leave; call far fword ptr [rdi-0x3e003615];
0xffffffff81a90b4e: leave; call far fword ptr [rbx-0x77003616];
0xffffffff81a90b66: leave; jmp far fword ptr [rdi-0x70003617];
0xffffffff81a90b6e: leave; jmp far fword ptr [rdi-0x17];
0xffffffff81a90b72: leave; dec dword ptr [rdi-0x17]; leave; jmp far fword ptr [rdi];
0xffffffff81a90b73: dec dword ptr [rdi-0x17]; leave; jmp far fword ptr [rdi];
0xffffffff81a90b86: leave; call far fword ptr [rdi+0x5fffc9e7];
0xffffffff81a90b8a: leave; call far fword ptr [rdi-0x19];
0xffffffff81a90b8e: leave; call far fword ptr [rdi+0x7fffc9e6];
0xffffffff81a90b96: leave; call far fword ptr [rdi-0x1a];
0xffffffff81a90b9e: leave; jmp far fword ptr [rdi-0x7000361b];
0xffffffff81a90ba6: leave; jmp far fword ptr [rdi-0x1b];
0xffffffff81a90bb2: leave; call far fword ptr [rdi+0x7fffc9e4];
0xffffffff81a90bba: leave; call far fword ptr [rdi-0x1c];
0xffffffff81a90bce: leave; jmp far fword ptr [rdi-0x1d];
0xffffffff81a90bde: leave; dec dword ptr [rdi-0x1e]; leave; call far fword ptr [rdi];
0xffffffff81a90bdf: dec dword ptr [rdi-0x1e]; leave; call far fword ptr [rdi];
0xffffffff81a90bea: leave; call far fword ptr [rdi-0x10003620];
0xffffffff81a90bf4: fstp st(7), st; leave; dec edi; fxch; call far fword ptr [rdi+0x7fffc9df];
0xffffffff81a90bf6: leave; dec edi; fxch; call far fword ptr [rdi+0x7fffc9df];
0xffffffff81a90bfa: leave; call far fword ptr [rdi+0x7fffc9df];
0xffffffff81a90c06: leave; call far fword ptr [rdi+0x5fffc9dc];
0xffffffff81a90c0a: leave; call far fword ptr [rdi-0x24];
0xffffffff81a90c18: fstp st(3), st; leave; dec dword ptr [rdi]; fxch; call far fword ptr [rdi-0x28];
0xffffffff81a90c1a: leave; dec dword ptr [rdi]; fxch; call far fword ptr [rdi-0x28];
0xffffffff81a90c1e: leave; call far fword ptr [rdi-0x28];
0xffffffff81a90c22: leave; jmp far fword ptr [rdi+0x1fffc9d7];
0xffffffff81a90c24: scasd [rdi]; xlat [rbx]; leave; call far fword ptr [rdi];
0xffffffff81a90c25: xlat [rbx]; leave; call far fword ptr [rdi];
0xffffffff81a90c2a: leave; call far fword ptr [rdi-0x2b];
0xffffffff81a90c36: leave; jmp far fword ptr [rdi-0x1000362c];
0xffffffff81a90c3e: leave; call far fword ptr [rdi-0x2f];
0xffffffff81a90c46: leave; jmp far fword ptr [rdi+0x7fffc9cc];
0xffffffff81a90c4d: int3; leave; call far fword ptr [rdi-0x30003635];
0xffffffff81a90c4e: leave; call far fword ptr [rdi-0x30003635];
0xffffffff81a90c58: clc; leave; leave; jmp rbp;
0xffffffff81a90c59: leave; leave; jmp rbp;
0xffffffff81a90c5a: leave; jmp rbp;
0xffffffff81a90c5c: in eax, 0xc9; leave; call far fword ptr [rdi-0x70003637];
0xffffffff81a90c5d: leave; leave; call far fword ptr [rdi-0x70003637];
0xffffffff81a90c5e: leave; call far fword ptr [rdi-0x70003637];
0xffffffff81a90c65: leave; leave; jmp far fword ptr [rdi-0x37];
0xffffffff81a90c66: leave; jmp far fword ptr [rdi-0x37];
0xffffffff81a90c72: leave; jmp far fword ptr [rdi-0x38];
0xffffffff81a90c84: pop rdi; leave; call far fword ptr [rdi-0x39];
0xffffffff81a90c86: leave; call far fword ptr [rdi-0x39];
0xffffffff81a90c96: leave; call far fword ptr [rdi+0x6fffc9c6];
0xffffffff81a90c9a: leave; jmp far fword ptr [rdi-0x3a];
0xffffffff81a90ca4: inc ebp; leave; jmp far fword ptr [rdi-0x3c];
0xffffffff81a90ca6: leave; jmp far fword ptr [rdi-0x3c];
0xffffffff81a90caa: leave; jmp far fword ptr [rdi+0x4fffc9c3];
0xffffffff81a90cae: leave; dec dword ptr [rdi-0x3d]; leave; dec dword ptr [rdi]; ret 0xffc9;
0xffffffff81a90caf: dec dword ptr [rdi-0x3d]; leave; dec dword ptr [rdi]; ret 0xffc9;
0xffffffff81a90cb2: leave; dec dword ptr [rdi]; ret 0xffc9;
0xffffffff81a90cb5: ret 0xffc9;
0xffffffff81a90cb6: leave; call far fword ptr [rdi-0x3f];
0xffffffff81a90cb9: ror ecx, 0xff; ffreep st(0); leave; dec dword ptr [rdi-0x40]; leave; jmp far fword ptr [rdi];
0xffffffff81a90cbc: ffreep st(0); leave; dec dword ptr [rdi-0x40]; leave; jmp far fword ptr [rdi];
0xffffffff81a90cbe: leave; dec dword ptr [rdi-0x40]; leave; jmp far fword ptr [rdi];
0xffffffff81a90cbf: dec dword ptr [rdi-0x40]; leave; jmp far fword ptr [rdi];
0xffffffff81a90cc5: ror cl, 0xff; out dx, eax; mov edi, 0xbdcfffc9; leave; jmp far fword ptr [rdi];
0xffffffff81a90cc8: out dx, eax; mov edi, 0xbdcfffc9; leave; jmp far fword ptr [rdi];
0xffffffff81a90cc9: mov edi, 0xbdcfffc9; leave; jmp far fword ptr [rdi];
0xffffffff81a90ccb: dec edi; mov ebp, 0xbc2fffc9; leave; dec dword ptr [rdi-0x45]; leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90ccd: mov ebp, 0xbc2fffc9; leave; dec dword ptr [rdi-0x45]; leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90cd1: mov esp, 0xbb4fffc9; leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90cd2: leave; dec dword ptr [rdi-0x45]; leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90cd3: dec dword ptr [rdi-0x45]; leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90cd5: mov ebx, 0xba9fffc9; leave; jmp far fword ptr [rdi+0x3fffc9b7];
0xffffffff81a90cd6: leave; call far fword ptr [rdi-0x50003646];
0xffffffff81a90cda: leave; jmp far fword ptr [rdi+0x3fffc9b7];
0xffffffff81a90ce2: leave; dec edi; mov ch, 0xc9; call far fword ptr [rdi-0x4c];
0xffffffff81a90ce6: leave; call far fword ptr [rdi-0x4c];
0xffffffff81a90cee: leave; call far fword ptr [rdi+0x7fffc9a8];
0xffffffff81a90d01: cmpsd [rsi], [rdi]; leave; dec dword ptr [rdi-0x10003659]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d02: leave; dec dword ptr [rdi-0x10003659]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d03: dec dword ptr [rdi-0x10003659]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d08: out dx, eax; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d09: cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d0a: leave; jmp far fword ptr [rdi+0xfffc9a6];
0xffffffff81a90d0d: cmpsb [rsi], [rdi]; leave; dec dword ptr [rdi]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0x4fffc9a5];
0xffffffff81a90d0e: leave; dec dword ptr [rdi]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0x4fffc9a5];
0xffffffff81a90d0f: dec dword ptr [rdi]; cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0x4fffc9a5];
0xffffffff81a90d11: cmpsb [rsi], [rdi]; leave; jmp far fword ptr [rdi+0x4fffc9a5];
0xffffffff81a90d12: leave; jmp far fword ptr [rdi+0x4fffc9a5];
0xffffffff81a90d1d: movsb [rdi], [rsi]; leave; dec dword ptr [rdi-0x2000365c]; mov [0xa05fffc9a17fffc9], al; leave; call far fword ptr [rdi-0x61];
0xffffffff81a90d1e: leave; dec dword ptr [rdi-0x2000365c]; mov [0xa05fffc9a17fffc9], al; leave; call far fword ptr [rdi-0x61];
0xffffffff81a90d1f: dec dword ptr [rdi-0x2000365c]; mov [0xa05fffc9a17fffc9], al; leave; call far fword ptr [rdi-0x61];
0xffffffff81a90d24: fbld st, tbyte ptr [rdx-0x5e800037]; leave; call far fword ptr [rdi-0x60];
0xffffffff81a90d25: mov [0xa05fffc9a17fffc9], al; leave; call far fword ptr [rdi-0x61];
0xffffffff81a90d2a: leave; call far fword ptr [rdi-0x60];
0xffffffff81a90d2e: leave; call far fword ptr [rdi-0x61];
0xffffffff81a90d41: popfq; leave; call far fword ptr [rdi];
0xffffffff81a90d48: out dx, eax; pushfq; leave; call far fword ptr [rdi+0x5fffc99c];
0xffffffff81a90d49: pushfq; leave; call far fword ptr [rdi+0x5fffc99c];
0xffffffff81a90d4a: leave; call far fword ptr [rdi+0x5fffc99c];
0xffffffff81a90d4c: lahf; pushfq; leave; call far fword ptr [rdi-0x65];
0xffffffff81a90d4d: pushfq; leave; call far fword ptr [rdi-0x65];
0xffffffff81a90d4e: leave; call far fword ptr [rdi-0x65];
0xffffffff81a90d59: xchg ebp, eax; leave; dec dword ptr [rdi+0x77]; leave; call far fword ptr [rdi-0xd00368b];
0xffffffff81a90d5a: leave; dec dword ptr [rdi+0x77]; leave; call far fword ptr [rdi-0xd00368b];
0xffffffff81a90d5b: dec dword ptr [rdi+0x77]; leave; call far fword ptr [rdi-0xd00368b];
0xffffffff81a90d5e: leave; call far fword ptr [rdi-0xd00368b];
0xffffffff81a90d6e: leave; jmp far fword ptr [rdi+0x5fffc971];
0xffffffff81a90d72: leave; call far fword ptr [rdi+0x71];
0xffffffff81a90d89: outsd dx, [rsi]; leave; call far fword ptr [rdi+0x6fffc96f];
0xffffffff81a90d8a: leave; call far fword ptr [rdi+0x6fffc96f];
0xffffffff81a90d8c: lahf; outsd dx, [rsi]; leave; jmp far fword ptr [rdi+0x6f];
0xffffffff81a90d8d: outsd dx, [rsi]; leave; jmp far fword ptr [rdi+0x6f];
0xffffffff81a90d8e: leave; jmp far fword ptr [rdi+0x6f];
0xffffffff81a90d90: outsd dx, [rsi]; outsd dx, [rsi]; leave; call far fword ptr [rdi];
0xffffffff81a90d91: outsd dx, [rsi]; leave; call far fword ptr [rdi];
0xffffffff81a90d99: outsb dx, [rsi]; leave; jmp far fword ptr [rdi];
0xffffffff81a90d9d: outsb dx, [rsi]; leave; call far fword ptr [rdi];
0xffffffff81a90dac: out dx, eax; insd [rdi], dx; leave; jmp far fword ptr [rdi+0x2fffc96d];
0xffffffff81a90dad: insd [rdi], dx; leave; jmp far fword ptr [rdi+0x2fffc96d];
0xffffffff81a90dae: leave; jmp far fword ptr [rdi+0x2fffc96d];
0xffffffff81a90db0: scasd [rdi]; insd [rdi], dx; leave; jmp far fword ptr [rdi];
0xffffffff81a90db1: insd [rdi], dx; leave; jmp far fword ptr [rdi];
0xffffffff81a90db5: insd [rdi], dx; leave; call far fword ptr [rdi+0x6c];
0xffffffff81a90db6: leave; call far fword ptr [rdi+0x6c];
0xffffffff81a90db8: pop rdi; insb [rdi], dx; leave; call far fword ptr [rdi];
0xffffffff81a90db9: insb [rdi], dx; leave; call far fword ptr [rdi];
0xffffffff81a90dca: leave; jmp far fword ptr [rdi-0x60003695];
0xffffffff81a90dce: leave; call far fword ptr [rdi-0x70003695];
0xffffffff81a90de6: leave; call far fword ptr [rdi+0x1fffc969];
0xffffffff81a90e0c: out dx, eax; leave; dec edi; leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e0d: leave; dec edi; leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e0e: leave; dec edi; leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e0f: dec edi; leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e11: leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e12: leave; jmp far fword ptr [rdi+0x7fffc964];
0xffffffff81a90e19: leave; dec dword ptr [rdi+0x64]; leave; call far fword ptr [rdi];
0xffffffff81a90e1a: leave; dec dword ptr [rdi+0x64]; leave; call far fword ptr [rdi];
0xffffffff81a90e1b: dec dword ptr [rdi+0x64]; leave; call far fword ptr [rdi];
0xffffffff81a90e1d: leave; call far fword ptr [rdi];
0xffffffff81a90e26: leave; call far fword ptr [rdi+0x4fffc963];
0xffffffff81a90e42: leave; call far fword ptr [rdi+0x1fffc960];
0xffffffff81a90e50: mov edi, 0x5fffc95f; pop rdi; leave; jmp far fword ptr [rdi];
0xffffffff81a90e51: pop rdi; leave; call far fword ptr [rdi+0x5f];
0xffffffff81a90e52: leave; call far fword ptr [rdi+0x5f];
0xffffffff81a90e54: pop rdi; pop rdi; leave; jmp far fword ptr [rdi];
0xffffffff81a90e55: pop rdi; leave; jmp far fword ptr [rdi];
0xffffffff81a90e68: fistp word ptr [rcx+rcx*8-1], st; mov edi, 0x9fffc95b; pop rbx; leave; call far fword ptr [rdi];
0xffffffff81a90e6c: mov edi, 0x9fffc95b; pop rbx; leave; call far fword ptr [rdi];
0xffffffff81a90e6d: pop rbx; leave; call far fword ptr [rdi+0x1fffc95b];
0xffffffff81a90e6e: leave; call far fword ptr [rdi+0x1fffc95b];
0xffffffff81a90e70: lahf; pop rbx; leave; call far fword ptr [rdi];
0xffffffff81a90e71: pop rbx; leave; call far fword ptr [rdi];
0xffffffff81a90e75: pop rbx; leave; jmp far fword ptr [rdi-0x100036a6];
0xffffffff81a90e76: leave; jmp far fword ptr [rdi-0x100036a6];
0xffffffff81a90e7c: out dx, eax; pop rcx; leave; jmp far fword ptr [rdi+0x6fffc959];
0xffffffff81a90e7d: pop rcx; leave; jmp far fword ptr [rdi+0x6fffc959];
0xffffffff81a90e7e: leave; jmp far fword ptr [rdi+0x6fffc959];
0xffffffff81a90e80: scasd [rdi]; pop rcx; leave; jmp far fword ptr [rdi+0x59];
0xffffffff81a90e81: pop rcx; leave; jmp far fword ptr [rdi+0x59];
0xffffffff81a90e82: leave; jmp far fword ptr [rdi+0x59];
0xffffffff81a90e91: push rdi; leave; call far fword ptr [rdi+0x54];
0xffffffff81a90e92: leave; call far fword ptr [rdi+0x54];
0xffffffff81a90e94: pop rdi; push rsp; leave; call far fword ptr [rdi-0x100036ad];
0xffffffff81a90e95: push rsp; leave; call far fword ptr [rdi-0x100036ad];
0xffffffff81a90e96: leave; call far fword ptr [rdi-0x100036ad];
0xffffffff81a90ebe: leave; jmp far fword ptr [rdi-0x100036b3];
0xffffffff81a90ed0: mov edi, 0x9fffc94a; leave; call far fword ptr [rdi+0x49];
0xffffffff81a90ed2: leave; call far fword ptr [rdi+0x5fffc949];
0xffffffff81a90ed4: lahf; leave; call far fword ptr [rdi+0x49];
0xffffffff81a90ed6: leave; call far fword ptr [rdi+0x49];
0xffffffff81a90ee2: leave; call far fword ptr [rdi+0x45];
0xffffffff81a90ef1: cmp eax, 0x3d9fffc9; leave; jmp far fword ptr [rdi];
0xffffffff81a90ef2: leave; call far fword ptr [rdi+0x2fffc93d];
0xffffffff81a90efe: leave; call far fword ptr [rdi-0x100036c5];
0xffffffff81a90f0c: fbstp tbyte ptr [rip+0x350fffc9], st; leave; jmp far fword ptr [rdi];
0xffffffff81a90f0d: xor eax, 0x350fffc9; leave; jmp far fword ptr [rdi];
0xffffffff81a90f0e: leave; dec dword ptr [rdi]; xor eax, 0x312fffc9; leave; jmp far fword ptr [rdi+0x22];
0xffffffff81a90f0f: dec dword ptr [rdi]; xor eax, 0x312fffc9; leave; jmp far fword ptr [rdi+0x22];
0xffffffff81a90f11: xor eax, 0x312fffc9; leave; jmp far fword ptr [rdi+0x22];
0xffffffff81a90f16: leave; jmp far fword ptr [rdi+0x22];
0xffffffff81a90f25: adc eax, 0x14ffffc9; leave; dec dword ptr [rdi+0x4fffc914]; adc al, 0xc9; call far fword ptr [rdi];
0xffffffff81a90f2a: leave; dec dword ptr [rdi+0x4fffc914]; adc al, 0xc9; call far fword ptr [rdi];
0xffffffff81a90f2d: adc al, 0xc9; dec dword ptr [rdi+0x14]; leave; call far fword ptr [rdi];
0xffffffff81a90f2e: leave; dec dword ptr [rdi+0x14]; leave; call far fword ptr [rdi];
0xffffffff81a90f2f: dec dword ptr [rdi+0x14]; leave; call far fword ptr [rdi];
0xffffffff81a90f36: leave; call far fword ptr [rdi+0x5fffc913];
0xffffffff81a90f3a: leave; call far fword ptr [rdi+0x13];
0xffffffff81a90f3e: leave; call far fword ptr [rdi];
0xffffffff81a90f54: femms; leave; jmp far fword ptr [rdi-0x700036f3];
0xffffffff81a90f56: leave; jmp far fword ptr [rdi-0x700036f3];
0xffffffff81a90f74: fild st, word ptr [rip+0x5afffc9]; leave; jmp qword ptr [rdx+5];
0xffffffff81a90f75: add eax, 0x5afffc9; leave; jmp qword ptr [rdx+5];
0xffffffff81a90f76: leave; jmp far fword ptr [rdi+0x62ffc905];
0xffffffff81a90f78: scasd [rdi]; add eax, 0x562ffc9; leave; dec dword ptr [rdi+5]; leave; jmp far fword ptr [rcx];
0xffffffff81a90f79: add eax, 0x562ffc9; leave; dec dword ptr [rdi+5]; leave; jmp far fword ptr [rcx];
0xffffffff81a90f7a: leave; jmp qword ptr [rdx+5];
0xffffffff81a90f7d: add eax, 0x54fffc9; leave; jmp far fword ptr [rcx];
0xffffffff81a90f7e: leave; dec dword ptr [rdi+5]; leave; jmp far fword ptr [rcx];
0xffffffff81a90f7f: dec dword ptr [rdi+5]; leave; jmp far fword ptr [rcx];
0xffffffff81a90f80: add rax, 0x529ffc9; leave; call far fword ptr [rdx];
0xffffffff81a90f81: add eax, 0x529ffc9; leave; call far fword ptr [rdx];
0xffffffff81a90f82: leave; jmp far fword ptr [rcx];
0xffffffff81a90f86: leave; call far fword ptr [rdx];
0xffffffff81a90f96: leave; inc ebp; add ecx, ecx; call far fword ptr [rbp+3];
0xffffffff81a90f9a: leave; call far fword ptr [rbp+3];
0xffffffff81a90fa0: cmp eax, [rbx]; leave; call far fword ptr [rbx+rax];
0xffffffff81a90fa2: leave; call far fword ptr [rbx+rax];
0xffffffff81a90faa: leave; inc dword ptr [rsi]; add cl, cl; jmp rdx;
0xffffffff81a90fae: leave; jmp rdx;
0xffffffff81a90fb2: leave; inc edx; add ecx, ecx; call far fword ptr [rdi+0x7dffc901];
0xffffffff81a90fb4: ret 0xc901;
0xffffffff81a90fb6: leave; call far fword ptr [rdi+0x7dffc901];
0xffffffff81a90fc6: leave; inc ebp; dec al; jmp far fword ptr [rsi];
0xffffffff81a921cd: ret 0xffc3;
0xffffffff81a923bd: bnd ret 0x3fff;
0xffffffff81a92414: pop rdi; leave; ret 0xdfff;
0xffffffff81a92415: leave; ret 0xdfff;
0xffffffff81a92449: ret 0xffc2;
0xffffffff81a924f1: xchg esp, eax; ret 0x8fff;
0xffffffff81a925cd: data16 ret 0xefff;
0xffffffff81a925d1: ret 0x8fff;
0xffffffff81a925e4: mov edi, 0xffffc25d; pop rsp; ret 0xdfff;
0xffffffff81a925e9: pop rsp; ret 0xdfff;
0xffffffff81a926a1: ret 0xcfff;
0xffffffff81a926dd: ret 0xfff;
0xffffffff81a926e1: ret 0x6fff;
0xffffffff81a9270d: ret 0xffff;
0xffffffff81a9277a: ret 0xafff;
0xffffffff81a927aa: ret 0xcfff;
0xffffffff81a927d6: ret 0x4fff;
0xffffffff81a927da: ret 0x3fff;
0xffffffff81a927de: ret 0x2fff;
0xffffffff81a927e2: ret 0x1fff;
0xffffffff81a927e6: ret 0xefff;
0xffffffff81a927fe: ret 0x5fff;
0xffffffff81a9280a: ret 0x9fff;
0xffffffff81a9280e: ret 0x7fff;
0xffffffff81a92899: mov cl, 0xff; outsd dx, [rsi]; mov cl, 0xff; adc esp, eax; sar edi, 0xfb; ret;
0xffffffff81a9289a: sar edi, 0x6f; mov cl, 0xff; adc esp, eax; sar edi, 0xfb; ret;
0xffffffff81a9289c: outsd dx, [rsi]; mov cl, 0xff; adc esp, eax; sar edi, 0xfb; ret;
0xffffffff81a9289d: mov cl, 0xff; adc esp, eax; sar edi, 0xfb; ret;
0xffffffff81a928a0: adc esp, eax; sar edi, 0xfb; ret;
0xffffffff81a928d5: ret 0xffc1;
0xffffffff81a92c8d: ret 0xffc0;
0xffffffff81a93165: ret 0xffbf;
0xffffffff81a93231: xchg edi, eax; mov edi, 0xbf959fff; dec edi; xchg esp, eax; mov edi, 0xbf8a6fff; call far fword ptr [rdi-0x6000407c];
0xffffffff81a93232: mov edi, 0xbf959fff; dec edi; xchg esp, eax; mov edi, 0xbf8a6fff; call far fword ptr [rdi-0x6000407c];
0xffffffff81a93237: dec edi; xchg esp, eax; mov edi, 0xbf8a6fff; call far fword ptr [rdi-0x6000407c];
0xffffffff81a93239: xchg esp, eax; mov edi, 0xbf8a6fff; call far fword ptr [rdi-0x6000407c];
0xffffffff81a93489: ret 0xffbe;
0xffffffff81a93750: mov edi, 0x8fffbd94; xchg esp, eax; mov ebp, 0xbd943fff; jmp far fword ptr [rdi-0x4000426d];
0xffffffff81a93755: xchg esp, eax; mov ebp, 0xbd943fff; jmp far fword ptr [rdi-0x4000426d];
0xffffffff81a9387c: mov edi, 0x1fffbd5c; pop rsp; mov ebp, 0xbd5bdfff; call far fword ptr [rdi+0x5b];
0xffffffff81a93881: pop rsp; mov ebp, 0xbd5bdfff; call far fword ptr [rdi+0x5b];
0xffffffff81a93b84: pop rsp; out dx, al; mov esp, 0xbcee49ff; jmp far fword ptr [rdi];
0xffffffff81a93d34: pop rdi; xchg esp, eax; mov esp, 0xbc93ffff; call far fword ptr [rdi];
0xffffffff81a93d35: xchg esp, eax; mov esp, 0xbc93ffff; call far fword ptr [rdi];
0xffffffff81a93fbd: leave; mov ebx, 0xbbc8efff; call far fword ptr [rdi-0x38];
0xffffffff81a93fdd: ret 0xffbb;
0xffffffff81a94225: pop rdi; mov ebx, 0xbb5c5fff; dec dword ptr [rdi]; pop rsp; mov ebx, 0xbb5acfff; jmp qword ptr [rbp+0x5fffbb5a];
0xffffffff81a94226: mov ebx, 0xbb5c5fff; dec dword ptr [rdi]; pop rsp; mov ebx, 0xbb5acfff; jmp qword ptr [rbp+0x5fffbb5a];
0xffffffff81a94229: pop rsp; mov ebx, 0xbb5c0fff; dec edi; pop rdx; mov ebx, 0xbb5aa5ff; call far fword ptr [rdi+0x5a];
0xffffffff81a9422b: dec dword ptr [rdi]; pop rsp; mov ebx, 0xbb5acfff; jmp qword ptr [rbp+0x5fffbb5a];
0xffffffff81a9422d: pop rsp; mov ebx, 0xbb5acfff; jmp qword ptr [rbp+0x5fffbb5a];
0xffffffff81a94614: fxch st, st(2); mov edx, 0xbaca6fff; dec edi; leave; mov edx, 0xbac9bfff; call far fword ptr [rdi-0x37];
0xffffffff81a94616: mov edx, 0xbaca6fff; dec edi; leave; mov edx, 0xbac9bfff; call far fword ptr [rdi-0x37];
0xffffffff81a9461b: dec edi; leave; mov edx, 0xbac9bfff; call far fword ptr [rdi-0x37];
0xffffffff81a9461d: leave; mov edx, 0xbac9bfff; call far fword ptr [rdi-0x37];
0xffffffff81a94620: mov edi, 0x5fffbac9; leave; mov edx, 0xbac86fff; jmp far fword ptr [rdi];
0xffffffff81a94621: leave; mov edx, 0xbac95fff; jmp far fword ptr [rdi-0x38];
0xffffffff81a94624: pop rdi; leave; mov edx, 0xbac86fff; jmp far fword ptr [rdi];
0xffffffff81a94625: leave; mov edx, 0xbac86fff; jmp far fword ptr [rdi];
0xffffffff81a94655: ret 0xffba;
0xffffffff81a947b9: xchg esp, eax; mov edx, 0xba93dfff; jmp far fword ptr [rdi];
0xffffffff81a94999: pop rbp; mov edx, 0xba5d0fff; dec edi; pop rsp; mov edx, 0xba5c6fff; call far fword ptr [rdi];
0xffffffff81a9499a: mov edx, 0xba5d0fff; dec edi; pop rsp; mov edx, 0xba5c6fff; call far fword ptr [rdi];
0xffffffff81a9499f: dec edi; pop rsp; mov edx, 0xba5c6fff; call far fword ptr [rdi];
0xffffffff81a949a1: pop rsp; mov edx, 0xba5c6fff; call far fword ptr [rdi];
0xffffffff81a94b5c: pop rdi; leave; mov ecx, 0xb9c79fff; jmp far fword ptr [rcx+0x5fffb9c5];
0xffffffff81a94b5d: leave; mov ecx, 0xb9c79fff; jmp far fword ptr [rcx+0x5fffb9c5];
0xffffffff81a94b85: ret 0xffb9;
0xffffffff81a94c0d: xchg esi, eax; mov ecx, 0xb996afff; dec dword ptr [rdi-0x4000466b]; xchg esp, eax; mov ecx, 0xb993bfff; call far fword ptr [rdi-0x2000466f];
0xffffffff81a94c0e: mov ecx, 0xb996afff; dec dword ptr [rdi-0x4000466b]; xchg esp, eax; mov ecx, 0xb993bfff; call far fword ptr [rdi-0x2000466f];
0xffffffff81a94c13: dec dword ptr [rdi-0x4000466b]; xchg esp, eax; mov ecx, 0xb993bfff; call far fword ptr [rdi-0x2000466f];
0xffffffff81a94c19: xchg esp, eax; mov ecx, 0xb993bfff; call far fword ptr [rdi-0x2000466f];
0xffffffff81a94d31: pop rsi; mov ecx, 0xb95dcfff; dec dword ptr [rdi]; pop rsp; mov ecx, 0xb95b7fff; call far fword ptr [rdi+0x5fffb95a];
0xffffffff81a94d32: mov ecx, 0xb95dcfff; dec dword ptr [rdi]; pop rsp; mov ecx, 0xb95b7fff; call far fword ptr [rdi+0x5fffb95a];
0xffffffff81a94d37: dec dword ptr [rdi]; pop rsp; mov ecx, 0xb95b7fff; call far fword ptr [rdi+0x5fffb95a];
0xffffffff81a94d39: pop rsp; mov ecx, 0xb95b7fff; call far fword ptr [rdi+0x5fffb95a];
0xffffffff81a95055: leave; mov eax, 0xb8c83fff; call far fword ptr [rdi-0x70004739];
0xffffffff81a955f9: ret 0xffb7;
0xffffffff81a95b48: ret 0xb671;
0xffffffff81a96066: mov ch, 0xff; pop rsp; mov ch, 0xff; pop rdi; ret 0xffb5;
0xffffffff81a96068: pop rsp; mov ch, 0xff; pop rdi; ret 0xffb5;
0xffffffff81a9606d: ret 0xffb5;
0xffffffff81a961f9: xchg esp, eax; mov ch, 0xff; iretd;
0xffffffff81a96559: ret 0xffb4;
0xffffffff81a96698: ret 0xb489;
0xffffffff81a96e89: ret 0xffb2;
0xffffffff81a971b5: ret 0xffb1;
0xffffffff81a972d5: xchg ebp, eax; mov cl, 0xff; lahf; xchg esp, eax; mov cl, 0xff; call qword ptr [rbx-0x6c70004f];
0xffffffff81a972d6: mov cl, 0xff; lahf; xchg esp, eax; mov cl, 0xff; call qword ptr [rbx-0x6c70004f];
0xffffffff81a972d8: lahf; xchg esp, eax; mov cl, 0xff; call qword ptr [rbx-0x6c70004f];
0xffffffff81a972d9: xchg esp, eax; mov cl, 0xff; call qword ptr [rbx-0x6c70004f];
0xffffffff81a97595: pop rsp; mov cl, 0xff; fistp word ptr [rbx-0x4f], st; call far fword ptr [rdi-0x30004ea5];
0xffffffff81a97a65: pop rsp; mov al, 0xff; out dx, eax; pop rbx; mov al, 0xff; iretd;
0xffffffff81a97bf1: ret 0xffaf;
0xffffffff81a97f2d: pop rsp; scasb [rdi]; call far fword ptr [rdi-0x300051a4];
0xffffffff81a97f31: pop rsp; scasb [rdi]; dec edi; pop rdx; scasb [rdi]; call far fword ptr [rdi+0x6fffae59];
0xffffffff81a9813a: lodsd [rsi]; dec edi; leave; lodsd [rsi]; call far fword ptr [rdi+0x4fffadc9];
0xffffffff81a9813b: dec edi; leave; lodsd [rsi]; call far fword ptr [rdi+0x4fffadc9];
0xffffffff81a9813d: leave; lodsd [rsi]; call far fword ptr [rdi+0x4fffadc9];
0xffffffff81a98179: ret 0xffad;
0xffffffff81a98225: xchg esp, eax; lodsd [rsi]; push rdi; xchg ebx, eax; lodsd [rsi]; jmp far fword ptr [rdi-0x6000526d];
0xffffffff81a982e4: scasd [rdi]; pop rsp; lodsd [rsi]; call far fword ptr [rdi+0x5b];
0xffffffff81a982e5: pop rsp; lodsd [rsi]; call far fword ptr [rdi+0x5b];
0xffffffff81a984e5: ret 0xffac;
0xffffffff81a9897d: xchg ebp, eax; stosd [rdi]; dec edi; xchg esp, eax; stosd [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff81a9897e: stosd [rdi]; dec edi; xchg esp, eax; stosd [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff81a9897f: dec edi; xchg esp, eax; stosd [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff81a98981: xchg esp, eax; stosd [rdi]; call far fword ptr [rdi-0x6c];
0xffffffff81a98a63: dec dword ptr [rdi-0x600054a3]; pop rsp; stosd [rdi]; dec dword ptr [rdi+0x5c]; stosd [rdi]; jmp far fword ptr [rdi];
0xffffffff81a98a68: lahf; pop rsp; stosd [rdi]; dec dword ptr [rdi+0x5c]; stosd [rdi]; jmp far fword ptr [rdi];
0xffffffff81a98a69: pop rsp; stosd [rdi]; dec dword ptr [rdi+0x5c]; stosd [rdi]; jmp far fword ptr [rdi];
0xffffffff81a98a6d: pop rsp; stosd [rdi]; jmp far fword ptr [rdi];
0xffffffff81a98c94: pop rsp; stosb [rdi]; call far fword ptr [rdi+0x3fffaac2];
0xffffffff81a98c9d: ret 0xffaa;
0xffffffff81a98d54: out dx, eax; xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x1000556d];
0xffffffff81a98d55: xchg esp, eax; stosb [rdi]; call far fword ptr [rdi-0x1000556d];
0xffffffff81a98e31: pop rsp; stosb [rdi]; dec edi; pop rax; stosb [rdi]; call far fword ptr [rdi+0x58];
0xffffffff81a99011: ret 0xffa9;
0xffffffff81a990a9: xchg esp, eax; test eax, 0xa9927fff; dec dword ptr [rdi]; xchg edx, eax; test eax, 0xa991bfff; jmp far fword ptr [rdi-0x6f];
0xffffffff81a993c5: ret 0xffa8;
0xffffffff81a99668: mov [0x6fffa7ca4fffa7ca], eax; leave; cmpsd [rsi], [rdi]; jmp far fword ptr [rdi];
0xffffffff81a99670: outsd dx, [rsi]; leave; cmpsd [rsi], [rdi]; jmp far fword ptr [rdi];
0xffffffff81a99671: leave; cmpsd [rsi], [rdi]; jmp far fword ptr [rdi];
0xffffffff81a99688: pop rsp; cmpsd [rsi], [rdi]; dec dword ptr [rdi-0x3d]; cmpsd [rsi], [rdi]; call far fword ptr [rdi-0x3e];
0xffffffff81a99691: ret 0xffa7;
0xffffffff81a99a9d: ret 0xffa6;
0xffffffff81a99b61: xchg esp, eax; cmpsb [rsi], [rdi]; jmp far fword ptr [rdi-0x74];
0xffffffff81a99c6c: mov edi, 0x5fffa65c; pop rsp; cmpsb [rsi], [rdi]; jmp far fword ptr [rdi-0x700059a5];
0xffffffff81a99c6d: pop rsp; cmpsb [rsi], [rdi]; call far fword ptr [rdi+0x5c];
0xffffffff81a99c70: pop rdi; pop rsp; cmpsb [rsi], [rdi]; jmp far fword ptr [rdi-0x700059a5];
0xffffffff81a99c71: pop rsp; cmpsb [rsi], [rdi]; jmp far fword ptr [rdi-0x700059a5];
0xffffffff81a99e66: movsd [rdi], [rsi]; dec dword ptr [rdi-0x40005a36]; leave; movsd [rdi], [rsi]; call far fword ptr [rdi-0x70005a37];
0xffffffff81a99e67: dec dword ptr [rdi-0x40005a36]; leave; movsd [rdi], [rsi]; call far fword ptr [rdi-0x70005a37];
0xffffffff81a99e6d: leave; movsd [rdi], [rsi]; call far fword ptr [rdi-0x70005a37];
0xffffffff81a99e75: leave; movsd [rdi], [rsi]; call far fword ptr [rdi];
0xffffffff81a99e79: leave; movsd [rdi], [rsi]; dec dword ptr [rdi]; leave; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a99e7a: movsd [rdi], [rsi]; dec dword ptr [rdi]; leave; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a99e7b: dec dword ptr [rdi]; leave; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a99e7d: leave; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a99ec5: ret 0xffa5;
0xffffffff81a99ff8: lahf; xchg esp, eax; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a99ff9: xchg esp, eax; movsd [rdi], [rsi]; jmp far fword ptr [rdi];
0xffffffff81a9a4e5: xchg esp, eax; movsb [rdi], [rsi]; dec dword ptr [rdi]; xchg esp, eax; movsb [rdi], [rsi]; call far fword ptr [rdi];
0xffffffff81a9a4e6: movsb [rdi], [rsi]; dec dword ptr [rdi]; xchg esp, eax; movsb [rdi], [rsi]; call far fword ptr [rdi];
0xffffffff81a9a4e7: dec dword ptr [rdi]; xchg esp, eax; movsb [rdi], [rsi]; call far fword ptr [rdi];
0xffffffff81a9a4e9: xchg esp, eax; movsb [rdi], [rsi]; call far fword ptr [rdi];
0xffffffff81a9a525: xchg [rdi+rdi*8-0x5b7901], esp; iretd;
0xffffffff81a9a86d: leave; xor eax, 0x35c8faff; jmp qword ptr [rbx-0x39];
0xffffffff81a9a89d: ret 0xff35;
0xffffffff81a9aa60: pop rsp; xor eax, 0x355c2cff; jmp far fword ptr [rax+0x69ff355b];
0xffffffff81a9aa61: pop rsp; xor eax, 0x355c2cff; jmp far fword ptr [rax+0x69ff355b];
0xffffffff81a9aa65: pop rsp; xor eax, 0x355ba8ff; jmp far fword ptr [rcx+0x5b];
0xffffffff81a9ab7c: xchg esp, eax; xor [rip+0x35305aff], dh; jmp qword ptr [rcx];
0xffffffff81a9ae44: ret 0x34c3;
0xffffffff81a9b3c8: ret 0x33f3;
0xffffffff81a9b4a0: ret 0x33db;
0xffffffff81a9ba64: ret 0x3321;
0xffffffff81a9bbf4: ret 0x32e4;
0xffffffff81a9bc4c: ret 0x32d8;
0xffffffff81a9bdf4: ret 0x328e;
0xffffffff81a9be9c: ret 0x326a;
0xffffffff81a9c1c3: ret 0x7409;
0xffffffff81a9c6b9: ret 0xd00a;
0xffffffff81a9c74c: ret 0xd009;
0xffffffff81a9cb2a: ret 0xfdf7;
0xffffffff81a9d10b: ret 0x655f;
0xffffffff81a9eb58: ret 0x6b5f;
0xffffffff81a9ed24: data16 ret 0xce5f;
0xffffffff81a9ed30: data16 ret 0x625f;
0xffffffff81a9ed3e: data16 ret 0x115f;
0xffffffff81a9ed3f: ret 0x115f;
0xffffffff81a9ed44: data16 ret 0xfb5f;
0xffffffff81a9ed45: ret 0xfb5f;
0xffffffff81a9ed7f: data16 ret 0xf75f;
0xffffffff81a9ed80: ret 0xf75f;
0xffffffff81a9ed94: data16 ret 0xa05f;
0xffffffff81a9ed95: ret 0xa05f;
0xffffffff81a9f0bc: ret 0x34aa;
0xffffffff81a9f3ab: ret 0xfb94;
0xffffffff81a9f3d9: ret 0x5f94;
0xffffffff81a9f3da: xchg esp, eax; pop rdi; out 0x6c, eax; ret;
0xffffffff81a9f437: ret 0x740a;
0xffffffff81a9f45e: ret 0x3da0;
0xffffffff81aa05b4: ret 0x3e5f;
0xffffffff81aa0cb3: ret 0x36cc;
0xffffffff81aa16cf: ret 0x864;
0xffffffff81aa16d0: ret 0x864;
0xffffffff81aa1a04: ret 0xa25f;
0xffffffff81aa1ad4: ret 0x5f30;
0xffffffff81aa1d58: ret 0xacf4;
0xffffffff81aa2571: ret 0x8a64;
0xffffffff81aa259b: ret 0xa1f4;
0xffffffff81aa28f7: ret 0xc8ff;
0xffffffff81aa2b0a: ret 0xff09;
0xffffffff81aa2b5b: ret 0x23ef;
0xffffffff81aa2c3c: ret 0x1e5f;
0xffffffff81aa2c4f: ret 0x5cef;
0xffffffff81aa2c81: ret 0xc75f;
0xffffffff81aa4051: ret 0x61fb;
0xffffffff81aa4906: ret 0x5405;
0xffffffff81aa49d4: ret 0x3516;
0xffffffff81aa4f4f: ret 0xfda0;
0xffffffff81aa5171: movsxd esi, [rbp+0x5f]; mov ebp, 0x3fe73f70; xchg esp, eax; or dh, [rdx+rsi*4+0x76]; int1; jmp far fword ptr [rax+0x14];
0xffffffff81aa5173: pop rdi; mov ebp, 0x3fe73f70; xchg esp, eax; or dh, [rdx+rsi*4+0x76]; int1; jmp far fword ptr [rax+0x14];
0xffffffff81aa5174: mov ebp, 0x3fe73f70; xchg esp, eax; or dh, [rdx+rsi*4+0x76]; int1; jmp far fword ptr [rax+0x14];
0xffffffff81aa5177: out 0x3f, eax; xchg esp, eax; or dh, [rdx+rsi*4+0x76]; int1; jmp far fword ptr [rax+0x14];
0xffffffff81aa5179: xchg esp, eax; or dh, [rdx+rsi*4+0x76]; int1; jmp far fword ptr [rax+0x14];
0xffffffff81aa54f4: ret 0x105f;
0xffffffff81aa5500: ret 0xee8a;
0xffffffff81aa5bdf: ret 0xfe1f;
0xffffffff81aa5ef4: ret 0x9a5f;
0xffffffff81aa665c: ret 0x7d0b;
0xffffffff81aa6668: ret 0x7d05;
0xffffffff81aa667a: ret 0xc564;
0xffffffff81aa6684: ret 0x6c64;
0xffffffff81aa6695: ret 0xc2a0;
0xffffffff81aa66a7: ret 0xf95f;
0xffffffff81aa6705: ret 0xf85f;
0xffffffff81aa69ca: pop rsp; or dl, gs:[rsp-0x25]; outsb dx, [rsi]; pop rdi; and esi, esp; iretd;
0xffffffff81aa785d: ret 0xc45f;
0xffffffff81aa868d: ret 0xedae;
0xffffffff81aa86db: ret 0x95ae;
0xffffffff81aa8b0e: ret 0xc610;
0xffffffff81aa8b2e: ret 0xc60f;
0xffffffff81aa998f: ret 0x86a0;
0xffffffff81aa9a57: ret 0x6e5f;
0xffffffff81aaa1b1: ret 0xe05f;
0xffffffff81aaa1e7: ret 0xc60b;
0xffffffff81aaa208: ret 0x5418;
0xffffffff81aaa393: ret 0xe4ff;
0xffffffff81aaa8a4: ret 0x61ae;
0xffffffff81aaa93c: pop rsp; pcmpeqb mm7, gs:[rip+0x63d36c70]; in eax, 0x7f; in eax, 0x6f; call far fword ptr [rax];
0xffffffff81aaaa3b: ret 0x1cff;
0xffffffff81aab212: ret 0xa2ae;
0xffffffff81aab287: ret 0xba0d;
0xffffffff81aaba14: ret 0xcff;
0xffffffff81aabebf: ret 0x1f5f;
0xffffffff81aabfa6: ret 0xd6a0;
0xffffffff81aad2e1: ret 0x740d;
0xffffffff81aaed18: ret 0x63f4;
0xffffffff81aaf4a8: ret 0x800d;
0xffffffff81aaf877: ret 0xeaf7;
0xffffffff81aafa43: ret 0x6cfb;
0xffffffff81aafd33: ret 0x6274;
0xffffffff81ab0214: data16 ret 0xa74;
0xffffffff81ab021f: data16 ret 0x674;
0xffffffff81ab0220: ret 0x674;
0xffffffff81ab0226: data16 ret 0x474;
0xffffffff81ab0227: ret 0x474;
0xffffffff81ab022b: data16 ret 0x974;
0xffffffff81ab0278: data16 ret 0x774;
0xffffffff81ab027d: data16 ret 0x790d;
0xffffffff81ab0336: imul eax, fs:[rdi], 0xf1c3fbb8; hlt; pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab0337: imul eax, [rdi], 0xf1c3fbb8; hlt; pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab0339: mov eax, 0xf4f1c3fb; pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab033c: int1; hlt; pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab033d: hlt; pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab033e: pop rsp; or gs:[rax-0x15519d05], bh; call far fword ptr [rbp+6];
0xffffffff81ab0abc: ret 0x96ff;
0xffffffff81ab0cad: ret 0x613a;
0xffffffff81ab1214: ret 0x974;
0xffffffff81ab13ae: ret 0xcc74;
0xffffffff81ab16e9: bnd ret 0xcc74;
0xffffffff81ab1a38: in eax, 0xeb; pop rsp; or edx, gs:[rbp+rbp*2+0x6e]; jmp qword ptr [rbp-0x15];
0xffffffff81ab1a39: in eax, 0xeb; pop rsp; or edx, gs:[rbp+rbp*2+0x6e]; jmp qword ptr [rbp-0x15];
0xffffffff81ab1a3b: pop rsp; or edx, gs:[rbp+rbp*2+0x6e]; jmp qword ptr [rbp-0x15];
0xffffffff81ab1bcd: or gs:[rax+0x77ff6e6d], ebp; in al, 0xff; pop rsp; or gs:[rbp+rbp*2+0x6e], edx; push qword ptr [rdi-0x1c]; call far fword ptr [rbp+0xb];
0xffffffff81ab1bce: or [rax+0x77ff6e6d], ebp; in al, 0xff; pop rsp; or gs:[rbp+rbp*2+0x6e], edx; push qword ptr [rdi-0x1c]; call far fword ptr [rbp+0xb];
0xffffffff81ab1bd4: in al, 0xff; pop rsp; or gs:[rbp+rbp*2+0x6e], edx; push qword ptr [rdi-0x1c]; call far fword ptr [rbp+0xb];
0xffffffff81ab1bd6: pop rsp; or gs:[rbp+rbp*2+0x6e], edx; push qword ptr [rdi-0x1c]; call far fword ptr [rbp+0xb];
0xffffffff81ab303f: div dword ptr [rax+0x5d220665]; pop rsp; pop rsi; mov al, 0x65; add al, 0x22; ret 0x374;
0xffffffff81ab3044: pop rbp; pop rsp; pop rsi; mov al, 0x65; add al, 0x22; ret 0x374;
0xffffffff81ab3045: pop rsp; pop rsi; mov al, 0x65; add al, 0x22; ret 0x374;
0xffffffff81ab304b: ret 0x374;
0xffffffff81ab304c: ret 0x374;
0xffffffff81ab6b97: xchg esp, eax; or [rbp+rbp*2-0x3d], dh; mov eax, [0x1b78de0f738662fe]; insd [rdi], dx; ret;
0xffffffff81abaf54: ret 0x69ff;
0xffffffff81abdf60: ret 0x725f;
0xffffffff81abe0d0: ret 0x9208;
0xffffffff81abe0d9: ret 0x920b;
0xffffffff81abe0ef: ret 0x5409;
0xffffffff81abe102: ret 0x5408;
0xffffffff81abe10b: ret 0x540b;
0xffffffff81abe124: ret 0x540e;
0xffffffff81abe141: ret 0x920a;
0xffffffff81abe16e: ret 0x540c;
0xffffffff81abe189: ret 0x920e;
0xffffffff81abe198: ret 0x920d;
0xffffffff81abe1a6: ret 0x9206;
0xffffffff81abe1b7: ret 0x540d;
0xffffffff81abf459: ret 0x1361;
0xffffffff81abf464: ret 0xd16c;
0xffffffff81abf46b: ret 0xa56c;
0xffffffff81abf5bb: xchg esp, eax; or eax, 0xfd7275bb; outsb dx, [rsi]; call qword ptr [rsi+0x6570fb6b];
0xffffffff81ac03c8: ret 0xd014;
0xffffffff81ac09c0: pop rsp; add al, 0x74; data16 ret;
0xffffffff81ac104e: ret 0x73bb;
0xffffffff81ac1278: sub esp, edi; and [rdx-0x39], dh; jmp far fword ptr [rax+0x26];
0xffffffff81ac21d2: pop rdi; pop rsp; or gs:[rdx+rdi*4+0x5f], edx; iretd;
0xffffffff81ac21d3: pop rsp; or gs:[rdx+rdi*4+0x5f], edx; iretd;
0xffffffff81ac2557: leave; imul esi, edi, 0x1d99caa7; div dword ptr fs:[rdx-1]; int1; iretd;
0xffffffff81ac4006: leave; imul esi, edi, 0xbd6ecbef; push qword ptr [rax-0xb]; imul esi, [rax+0x540f11fe], 0xffffffc9; imul esi, edi, 0xbd6ecbef; jmp far fword ptr [rsi+0x61];
0xffffffff81ac4011: mov al, 0xfe; adc [rdi], ecx; push rsp; leave; imul esi, edi, 0xbd6ecbef; jmp far fword ptr [rsi+0x61];
0xffffffff81ac4013: adc [rdi], ecx; push rsp; leave; imul esi, edi, 0xbd6ecbef; jmp far fword ptr [rsi+0x61];
0xffffffff81ac4025: push rsp; leave; imul esi, edi, 0xbd6ecbef; jmp far fword ptr [rsi+0x61];
0xffffffff81ac4026: leave; imul esi, edi, 0xbd6ecbef; jmp far fword ptr [rsi+0x61];
0xffffffff81ac516d: ret 0x740f;
0xffffffff81ac6ec6: ret 0x58ff;
0xffffffff81ac6f06: ret 0xeeff;
0xffffffff81ac6f11: ret 0x9bff;
0xffffffff81ac7139: ret 0xa3ff;
0xffffffff81ac7971: ret 0x62ff;
0xffffffff81ac8436: ret 0xb174;
0xffffffff81ac8896: push qword ptr [rax+0x60]; xchg esp, eax; or [rbp+rsi*2-0x16], dh; jmp qword ptr [rbx-0x66];
0xffffffff81ac8899: xchg esp, eax; or [rbp+rsi*2-0x16], dh; jmp qword ptr [rbx-0x66];
0xffffffff81ac8c24: ret 0xdc74;
0xffffffff81ac900d: sbb esp, edi; or al, dl; cmpsd [rsi], [rdi]; xor dh, gs:[eax]; jmp far fword ptr [rdi+rax+0x71f41d74];
0xffffffff81ac96b2: ret 0x72ff;
0xffffffff81accb0b: ret 0xf2ff;
0xffffffff81acce2e: ret 0x2774;
0xffffffff81acf1b4: ret 0xfd5f;
0xffffffff81acf1c1: ret 0xe5f7;
0xffffffff81acf33e: ret 0x335f;
0xffffffff81acf34e: ret 0xc366;
0xffffffff81acf45b: ret 0x72a0;
0xffffffff81acf46f: ret 0xf15f;
0xffffffff81acf48c: ret 0xce5f;
0xffffffff81acf4ae: ret 0xc05f;
0xffffffff81acf4f8: ret 0x9b5f;
0xffffffff81acf571: ret 0xcfa0;
0xffffffff81acf59d: ret 0xa15f;
0xffffffff81acf717: ret 0x6da0;
0xffffffff81acf747: ret 0xfc5f;
0xffffffff81acf796: ret 0x875f;
0xffffffff81acf7a5: ret 0x765f;
0xffffffff81acf7ed: ret 0x625f;
0xffffffff81acf915: ret 0x665f;
0xffffffff81acf928: ret 0xa35f;
0xffffffff81acf9d4: ret 0x72f7;
0xffffffff81acfa0e: ret 0x6cf7;
0xffffffff81acfa1b: ret 0x75a0;
0xffffffff81acfa54: ret 0x805f;
0xffffffff81acfaa7: ret 0x6f5f;
0xffffffff81acfabc: ret 0xb75f;
0xffffffff81acfad0: ret 0xbd5f;
0xffffffff81acfae2: ret 0x175f;
0xffffffff81acfb09: ret 0xcf5f;
0xffffffff81acfb97: ret 0x675f;
0xffffffff81ad020b: xchg esp, eax; or [rsp+rdx*8+0x76], esi; pop rdi; clc; iretd;
0xffffffff81ad021c: xchg esp, eax; or [rsp+rbx*4-0x11], dh; clc; iretd;
0xffffffff81ad0669: insb [rdi], dx; enter 0xf8ef, 0xcf; xchg esp, eax; or [rbx-0x7103794], edi; iretd;
0xffffffff81ad066a: enter 0xf8ef, 0xcf; xchg esp, eax; or [rbx-0x7103794], edi; iretd;
0xffffffff81ad066e: xchg esp, eax; or [rbx-0x7103794], edi; iretd;
0xffffffff81ad0984: ret 0x75fb;
0xffffffff81ad09e9: ret 0x695f;
0xffffffff81ad11c4: ret 0x4a0;
0xffffffff81ad1a9c: ret 0xc70d;
0xffffffff81ad2acf: ret 0xf55f;
0xffffffff81ad4611: ret 0xcde;
0xffffffff81ad8a9f: mov es, bx; pop rsp; pop rsi; push 0x385fb3d3; xor dh, [rip-0xdefcfc8]; ret;
0xffffffff81ad8aa1: pop rsp; pop rsi; push 0x385fb3d3; xor dh, [rip-0xdefcfc8]; ret;
0xffffffff81ad940a: xchg esp, eax; mov al, [0xb68b78cc4f27561]; bnd ret;
0xffffffff81adad2c: outsd dx, [rsi]; std; add eax, 0x1476e674; xchg esp, eax; andps xmm1, xmm6; ret;
0xffffffff81adad2d: std; add eax, 0x1476e674; xchg esp, eax; andps xmm1, xmm6; ret;
0xffffffff81adad2e: add eax, 0x1476e674; xchg esp, eax; andps xmm1, xmm6; ret;
0xffffffff81adad33: xchg esp, eax; andps xmm1, xmm6; ret;
0xffffffff81adb273: or edx, [rsi+rcx*8-0x3d]; leave; imul ecx, [rdx-0x51052490], 0xce740993; ret;
0xffffffff81adb277: leave; imul ecx, [rdx-0x51052490], 0xce740993; ret;
0xffffffff81adced7: ret 0x21ff;
0xffffffff81adcee1: ret 0x630d;
0xffffffff81adcf01: ret 0xf6ff;
0xffffffff81adcf36: ret 0xf1ff;
0xffffffff81adcf56: ret 0x67ff;
0xffffffff81adcf60: ret 0x18ff;
0xffffffff81adcf86: ret 0x7ff;
0xffffffff81add0d5: xchg esp, eax; pcmpeqb mm7, mm4; ret 0x68ff;
0xffffffff81add102: ret 0xf8ff;
0xffffffff81add13e: ret 0x7bff;
0xffffffff81add22d: xchg esp, eax; mov al, [0xfc740a79656beb61]; ret 0xdfff;
0xffffffff81add242: ret 0xdfff;
0xffffffff81add25a: ret 0xf30d;
0xffffffff81add28c: ret 0x650d;
0xffffffff81add295: out 0x1e, eax; or dh, [rsp+rdi*8-0x3e]; dec dword ptr [rcx+0x7165fba6]; xchg esp, eax; or dh, [rsp+rdi*8-0x3e]; jmp qword ptr [rcx+0x166589fe];
0xffffffff81add297: or dh, [rsp+rdi*8-0x3e]; dec dword ptr [rcx+0x7165fba6]; xchg esp, eax; or dh, [rsp+rdi*8-0x3e]; jmp qword ptr [rcx+0x166589fe];
0xffffffff81add29a: ret 0x89ff;
0xffffffff81add29b: dec dword ptr [rcx+0x7165fba6]; xchg esp, eax; or dh, [rsp+rdi*8-0x3e]; jmp qword ptr [rcx+0x166589fe];
0xffffffff81add2a1: xchg esp, eax; or dh, [rsp+rdi*8-0x3e]; jmp qword ptr [rcx+0x166589fe];
0xffffffff81add2a5: ret 0xa1ff;
0xffffffff81add3e5: ret 0x66ff;
0xffffffff81add3f0: ret 0x13ff;
0xffffffff81add529: imul esp, [rdx-0xc], 0x64; outsd dx, [rsi]; xchg esp, eax; sti; outsd dx, [rsi]; iret;
0xffffffff81add52b: hlt; outsd dx, fs:[rsi]; xchg esp, eax; sti; outsd dx, [rsi]; iret;
0xffffffff81add52c: outsd dx, fs:[rsi]; xchg esp, eax; sti; outsd dx, [rsi]; iret;
0xffffffff81add52d: outsd dx, [rsi]; xchg esp, eax; sti; outsd dx, [rsi]; iret;
0xffffffff81add52e: xchg esp, eax; sti; outsd dx, [rsi]; iret;
0xffffffff81adde46: ret 0x2a74;
0xffffffff81aded4a: xchg esp, eax; or ecx, [rdi+rsi*2-0x7a03b93]; iretd;
0xffffffff81aded53: xchg esp, eax; sti; iretd;
0xffffffff81adf04c: movsb [rdi], [rsi]; xchg esp, eax; or al, 0x74; iretd;
0xffffffff81adf04d: xchg esp, eax; or al, 0x74; iretd;
0xffffffff81adf1d0: ret 0xb50d;
0xffffffff81adf314: ret 0xaf7;
0xffffffff81adf69b: ret 0x95f;
0xffffffff81adf73d: ret 0x71a1;
0xffffffff81adfb84: ret 0xac5f;
0xffffffff81adfe95: sub esp, edi; and [rsi-0xb], ah; or al, 0x7d; ret 0xbcaa;
0xffffffff81ae035e: ret 0xcbff;
0xffffffff81ae036b: ret 0xf9ff;
0xffffffff81ae0378: ret 0xfdff;
0xffffffff81ae0384: ret 0xe6ff;
0xffffffff81ae039a: ret 0xa2ff;
0xffffffff81ae03a3: ret 0x3eff;
0xffffffff81ae03af: ret 0xb1ff;
0xffffffff81ae03c4: ret 0x9ff;
0xffffffff81ae03dc: ret 0xfcff;
0xffffffff81ae03df: ret 0x24ff;
0xffffffff81ae03f3: ret 0xe10d;
0xffffffff81ae0401: ret 0x68ff;
0xffffffff81ae05b9: ret 0x1eff;
0xffffffff81ae09d9: cli; xchg esp, eax; pop rdi; clc; iretd;
0xffffffff81ae09e1: hlt; stosb [rdi]; xchg esp, eax; pop rdi; clc; iretd;
0xffffffff81ae09e2: stosb [rdi]; xchg esp, eax; pop rdi; clc; iretd;
0xffffffff81ae09e3: xchg esp, eax; pop rdi; clc; iretd;
0xffffffff81ae0d36: pop rsp; or ebx, edx; or ah, bh; shl cl, cl; iretd;
0xffffffff81ae0f0a: ret 0x76ff;
0xffffffff81ae0f13: ret 0x574;
0xffffffff81ae236f: ret 0x1174;
0xffffffff81ae23b2: ret 0x6dff;
0xffffffff81ae26a9: ret 0x1274;
0xffffffff81ae29db: ret 0x74ff;
0xffffffff81ae2a0d: ret 0x6cff;
0xffffffff81ae2ebf: ret 0xa74;
0xffffffff81ae3387: ret 0x1374;
0xffffffff81ae51b4: ret 0xc56c;
0xffffffff81ae5530: ret 0x63ff;
0xffffffff81ae735e: data16 ret;
0xffffffff81ae83f3: fcomp st, qword ptr [rdi-0x56]; xchg esp, eax; or al, 0xd0; push 0xffffffffe3f77379; jmp far fword ptr [rsi+0x61];
0xffffffff81ae83f4: pop rdi; stosb [rdi]; xchg esp, eax; or al, 0xd0; push 0xffffffffe3f77379; jmp far fword ptr [rsi+0x61];
0xffffffff81ae83f5: stosb [rdi]; xchg esp, eax; or al, 0xd0; push 0xffffffffe3f77379; jmp far fword ptr [rsi+0x61];
0xffffffff81ae83f6: xchg esp, eax; or al, 0xd0; push 0xffffffffe3f77379; jmp far fword ptr [rsi+0x61];
0xffffffff81ae925d: ret 0x90ff;
0xffffffff81ae9293: ret 0x65d0;
0xffffffff81ae9294: ret 0x65d0;
0xffffffff81ae96bd: ret 0x70ff;
0xffffffff81ae96be: ret 0x70ff;
0xffffffff81ae9ff6: push 0x7409dd65; mov ebx, 0xc4f2a2eb; out dx, eax; pop rsp; or eax, 0x24ebbb74; jmp far fword ptr [rsi+0x65];
0xffffffff81ae9ffb: mov ebx, 0xc4f2a2eb; out dx, eax; pop rsp; or eax, 0x24ebbb74; jmp far fword ptr [rsi+0x65];
0xffffffff81aea000: out dx, eax; pop rsp; or eax, 0x24ebbb74; jmp far fword ptr [rsi+0x65];
0xffffffff81aea001: pop rsp; or eax, 0x24ebbb74; jmp far fword ptr [rsi+0x65];
0xffffffff81aeb8b4: ret 0x6c6c;
0xffffffff81aeb940: or [rdi+rdi*4-0x3d], esi; in eax, 0xa; lea esp, [rbp+0x71]; xchg esp, eax; or dh, [rdi+rdi*4-0x3d]; iretd;
0xffffffff81aeb944: in eax, 0xa; lea esp, [rbp+0x71]; xchg esp, eax; or dh, [rdi+rdi*4-0x3d]; iretd;
0xffffffff81aeb946: lea esp, [rbp+0x71]; xchg esp, eax; or dh, [rdi+rdi*4-0x3d]; iretd;
0xffffffff81aeb949: xchg esp, eax; or dh, [rdi+rdi*4-0x3d]; iretd;
0xffffffff81aeb98d: imul esp, [rbp-0x12], 0x71650d61; xchg esp, eax; or [rdi+rdi*4-0x3d], esi; iretd;
0xffffffff81aeb994: xchg esp, eax; or [rdi+rdi*4-0x3d], esi; iretd;
0xffffffff81aeba87: ret 0x6772;
0xffffffff81aecb1c: ret 0xe2ff;
0xffffffff81aecb52: ret 0xb74;
0xffffffff81aecb5b: ret 0xb7ff;
0xffffffff81aecb72: ret 0x8fff;
0xffffffff81aed2d8: ret 0x1dff;
0xffffffff81aed2ea: ret 0x974;
0xffffffff81aed30e: ret 0xe74;
0xffffffff81aedabd: ret 0x9aff;
0xffffffff81aede5d: ret 0xc74;
0xffffffff81aee47f: ret 0x8d74;
0xffffffff81aef339: ret 0xddff;
0xffffffff81aef349: ret 0xf74;
0xffffffff81aef5b9: ret 0x1074;
0xffffffff81aefe07: ret 0x73e0;
0xffffffff81af0050: ret 0x774;
0xffffffff81af00bc: ret 0xcc74;
0xffffffff81af0178: ret 0xd74;
0xffffffff81af16de: ret 0x2b72;
0xffffffff81af258f: data16 ret 0x5f5f;
0xffffffff81af2590: ret 0x5f5f;
0xffffffff81af2605: ret 0x6d5f;
0xffffffff81af2c55: ret 0x585f;
0xffffffff81af2cd1: ret 0x645f;
0xffffffff81af3414: ret 0x685f;
0xffffffff81af3424: ret 0x7068;
0xffffffff81af342e: ret 0xeb68;
0xffffffff81af344a: ret 0x6dfb;
0xffffffff81af38a0: ret 0xaa5f;
0xffffffff81af3941: ret 0x6fae;
0xffffffff81af3afe: ret 0xfe74;
0xffffffff81af40f8: ret 0x66fc;
0xffffffff81af49d6: ret 0xd4ff;
0xffffffff81af4b27: ret 0xd45f;
0xffffffff81af4bba: ret 0x5d5f;
0xffffffff81af4e3e: ret 0x99a1;
0xffffffff81af4e72: ret 0xbcaa;
0xffffffff81af55af: ret 0xacff;
0xffffffff81af5c05: ret 0x936c;
0xffffffff81af5ec4: add [rax], al; add [rax], al; xchg esp, eax; mov esi, 3; add [rax], al; iretd;
0xffffffff81af5ec6: add [rax], al; xchg esp, eax; mov esi, 3; add [rax], al; iretd;
0xffffffff81af5ec8: xchg esp, eax; mov esi, 3; add [rax], al; iretd;
0xffffffff81af5f71: ret 4;
0xffffffff81b61aff: add rsp, 0x10; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81b61b00: add esp, 0x10; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81b61b02: adc [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81b61b90: ret 0x4801;
0xffffffff81b61bdb: ret 0xd2e9;
0xffffffff81b61c0b: ret 0x59e9;
0xffffffff81b61c2e: ret 0x90f3;
0xffffffff81b61d1d: or [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81b61db3: ret 0xe281;
0xffffffff81b63500: ret 0x34f;
0xffffffff81b653c2: ret 0xff24;
0xffffffff81b65968: add [rax], al; add [rax], al; xchg esp, eax; int1; insd [rdi], dx; jmp rsp;
0xffffffff81b6596a: add [rax], al; xchg esp, eax; int1; insd [rdi], dx; jmp rsp;
0xffffffff81b6596c: xchg esp, eax; int1; insd [rdi], dx; jmp rsp;
0xffffffff81b663e8: add [rax], al; add [rax], al; xchg esp, eax; iretd;
0xffffffff81b663ea: add [rax], al; xchg esp, eax; iretd;
0xffffffff81b6667b: add [rdi+rdi*8+0x11f8ff6d], ah; xor eax, [rbp+0x680]; or [rax], al; add [rax], al; xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b66682: xor eax, [rbp+0x680]; or [rax], al; add [rax], al; xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b66686: add [rax], al; or [rax], al; add [rax], al; xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b66688: or [rax], al; add [rax], al; xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b6668a: add [rax], al; xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b6668c: xchg esp, eax; jmp far fword ptr [rbp-1];
0xffffffff81b66e41: insd [rdi], dx; pop rax; dec dword ptr [rip-0x37fffeac]; scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e42: pop rax; dec dword ptr [rip-0x37fffeac]; scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e43: dec dword ptr [rip-0x37fffeac]; scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e44: or eax, 0xc8000154; scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e47: add al, cl; scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e49: scasd [rdi]; xchg esp, eax; jmp rcx;
0xffffffff81b66e4a: xchg esp, eax; jmp rcx;
0xffffffff81b66fa8: push 0x4affa4b5; add r8, [rax]; push rax; out dx, eax; pop rsp; call rcx;
0xffffffff81b66fab: dec dword ptr [rdx+0x4e]; add eax, [rax]; push rax; out dx, eax; pop rsp; call rcx;
0xffffffff81b66fad: add r8, [rax]; push rax; out dx, eax; pop rsp; call rcx;
0xffffffff81b66fae: add eax, [rax]; push rax; out dx, eax; pop rsp; call rcx;
0xffffffff81b66faf: add [rax-0x11], dl; pop rsp; call rcx;
0xffffffff81b66fb0: push rax; out dx, eax; pop rsp; call rcx;
0xffffffff81b66fb1: out dx, eax; pop rsp; call rcx;
0xffffffff81b670b1: cmp edx, [rbp+0x30504ff]; add [rax], bl; cmp [rbp+0x2fa79ff], dl; add [rax], ah; leave; jmp far fword ptr [rsi];
0xffffffff81b670b7: add [rax], bl; cmp [rbp+0x2fa79ff], dl; add [rax], ah; leave; jmp far fword ptr [rsi];
0xffffffff81b670b9: cmp [rbp+0x2fa79ff], dl; add [rax], ah; leave; jmp far fword ptr [rsi];
0xffffffff81b670bf: add [rax], ah; leave; jmp far fword ptr [rsi];
0xffffffff81b670c1: leave; jmp far fword ptr [rsi];
0xffffffff81b67182: pop rsp; call qword ptr [rsi-0x67fffea0];
0xffffffff81b67186: add [rax], eax; cwde; out dx, eax; pop rsp; jmp rbx;
0xffffffff81b67188: cwde; out dx, eax; pop rsp; jmp rbx;
0xffffffff81b67189: out dx, eax; pop rsp; jmp rbx;
0xffffffff81b671af: add al, al; push rbx; pop rsp; inc dword ptr [rsi+0x38000160]; mov ds, [rbp-1]; iretd;
0xffffffff81b671b1: push rbx; pop rsp; inc dword ptr [rsi+0x38000160]; mov ds, [rbp-1]; iretd;
0xffffffff81b671b2: pop rsp; inc dword ptr [rsi+0x38000160]; mov ds, [rbp-1]; iretd;
0xffffffff81b671ec: ret 0x349;
0xffffffff81b672aa: pop rsp; call qword ptr [rsi+0x50000164];
0xffffffff81b6739a: xchg esp, eax; jmp far fword ptr [rsi+rbp*8+2];
0xffffffff81b6742a: xchg esp, eax; dec dword ptr [rip+0x400002ee]; push rdx; xchg ebp, eax; call far fword ptr [rcx];
0xffffffff81b674e7: add al, cl; pop rsp; push rdi; jmp qword ptr [rbp+0x47];
0xffffffff81b674e9: pop rsp; push rdi; jmp qword ptr [rbp+0x47];
0xffffffff81b67542: xchg esp, eax; jmp qword ptr [rdx-0x15];
0xffffffff81b675d2: pop rsp; call far fword ptr [rdx+0x61];
0xffffffff81b675f6: add [rax], eax; cmp dl, bl; xchg esp, eax; push qword ptr [rsi+rbp*8-0x255ffffe]; xchg esp, eax; jmp qword ptr [rcx-0x7fffd12];
0xffffffff81b675f8: cmp dl, bl; xchg esp, eax; push qword ptr [rsi+rbp*8-0x255ffffe]; xchg esp, eax; jmp qword ptr [rcx-0x7fffd12];
0xffffffff81b675fa: xchg esp, eax; push qword ptr [rsi+rbp*8-0x255ffffe]; xchg esp, eax; jmp qword ptr [rcx-0x7fffd12];
0xffffffff81b675fb: push qword ptr [rsi+rbp*8-0x255ffffe]; xchg esp, eax; jmp qword ptr [rcx-0x7fffd12];
0xffffffff81b67602: xchg esp, eax; jmp qword ptr [rcx-0x7fffd12];
0xffffffff81b676cf: add al, al; mov ebp, 0xecabff94; add al, [rax]; sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676d1: mov ebp, 0xecabff94; add al, [rax]; sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676d2: xchg esp, eax; jmp far fword ptr [rbx+0x280002ec];
0xffffffff81b676d4: stosd [rdi]; in al, dx; add al, [rax]; sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676d5: in al, dx; add al, [rax]; sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676d6: add al, [rax]; sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676d8: sub [rbx], cl; xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b676da: xchg esp, eax; call qword ptr [rsp+0x47200002];
0xffffffff81b6770c: xchg esp, ebp; add al, [rax]; and [rdx], bl; xchg ebp, eax; jmp far fword ptr [rax-0x17fffd10];
0xffffffff81b67732: xchg esp, eax; call far fword ptr [rsi+0x180002ec];
0xffffffff81b6773f: add [rax-0x32], dl; xchg esp, eax; jmp qword ptr [rdx+0x380002ec];
0xffffffff81b67742: xchg esp, eax; jmp qword ptr [rdx+0x380002ec];
0xffffffff81b67752: xchg esp, eax; jmp far fword ptr [rdx-0x67fffd14];
0xffffffff81b67765: ret 2;
0xffffffff81b6776c: ret 0x2e2;
0xffffffff81b67882: leave; call far fword ptr [rcx-0x47fffcbc];
0xffffffff81b6788a: leave; jmp far fword ptr [rdx-0x2ffffcbc];
0xffffffff81b678cf: add [rax-0x59], dl; leave; inc dword ptr [rbx+0x68000343]; cmpsd [rsi], [rdi]; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678d1: cmpsd [rsi], [rdi]; leave; inc dword ptr [rbx+0x68000343]; cmpsd [rsi], [rdi]; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678d2: leave; inc dword ptr [rbx+0x68000343]; cmpsd [rsi], [rdi]; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678d3: inc dword ptr [rbx+0x68000343]; cmpsd [rsi], [rdi]; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678d7: add [rax-0x59], ch; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678d8: push 0xffffffff94ffc9a7; add eax, [r8]; shl byte ptr [rdi+0x43d7ffc9], 3; add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678d9: cmpsd [rsi], [rdi]; leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678da: leave; call qword ptr [rbx+rax*2-0x583ffffd];
0xffffffff81b678dc: xchg esp, eax; add eax, [r8]; shl byte ptr [rdi+0x43d7ffc9], 3; add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678dd: add eax, [r8]; shl byte ptr [rdi+0x43d7ffc9], 3; add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678de: add eax, [rax]; shl byte ptr [rdi+0x43d7ffc9], 3; add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678df: add al, al; cmpsd [rsi], [rdi]; leave; call rdi;
0xffffffff81b678e0: shl byte ptr [rdi+0x43d7ffc9], 3; add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678e1: cmpsd [rsi], [rdi]; leave; call rdi;
0xffffffff81b678e2: leave; call rdi;
0xffffffff81b678e7: add [rax-0x59], bh; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678e9: cmpsd [rsi], [rdi]; leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678ea: leave; call far fword ptr [rbp-0x6ffffcbd];
0xffffffff81b678ec: popfq; add eax, [r8]; nop; cmpsd [rsi], [rdi]; leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b678ed: add eax, [r8]; nop; cmpsd [rsi], [rdi]; leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b678ee: add eax, [rax]; nop; cmpsd [rsi], [rdi]; leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b678f0: nop; cmpsd [rsi], [rdi]; leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b678f1: cmpsd [rsi], [rdi]; leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b678f2: leave; jmp far fword ptr [rsi+0x28000343];
0xffffffff81b67b51: ret 0xff6f;
0xffffffff81b67be8: ret 0x70e6;
0xffffffff81b67dbc: ret 0x1df;
0xffffffff81b68364: ret 0x19c;
0xffffffff81b683ac: ret 0x190;
0xffffffff81b6859c: ret 0x189;
0xffffffff81b68714: leave; xchg ebp, eax; add [rax], eax; clc; pop r14; jmp qword ptr [rax+0x61800001];
0xffffffff81b6877d: pop rsp; add [rax], eax; adc [rsi+rbx*2], ch; call qword ptr [rdx];
0xffffffff81b688bf: add al, ah; mov esp, [rbx+0x32840ff]; add al, cl; push rsp; pop rsi; jmp qword ptr [rdx+0x5e];
0xffffffff81b688c1: mov esp, [rbx+0x32840ff]; add al, cl; push rsp; pop rsi; jmp qword ptr [rdx+0x5e];
0xffffffff81b68bd9: ror dword ptr [rdx+0x7e], 4; fld st, qword ptr [rax]; add al, dh; lodsb [rsi]; pop rsp; jmp qword ptr [rsi];
0xffffffff81b68bdd: fld st, qword ptr [rax]; add al, dh; lodsb [rsi]; pop rsp; jmp qword ptr [rsi];
0xffffffff81b68bdf: add al, dh; lodsb [rsi]; pop rsp; jmp qword ptr [rsi];
0xffffffff81b68be1: lodsb [rsi]; pop rsp; jmp qword ptr [rsi];
0xffffffff81b68c3a: pop rsp; dec dword ptr [rbx+0x48]; add [rax], eax; add [rax+0x5c], ch; jmp far fword ptr [rsi+rax*2+0x78880001];
0xffffffff81b68c42: pop rsp; jmp far fword ptr [rsi+rax*2+0x78880001];
0xffffffff81b68c4f: add [rax+0x6f], dh; pop rsp; call qword ptr [rcx];
0xffffffff81b68c51: outsd dx, [rsi]; pop rsp; call qword ptr [rcx];
0xffffffff81b68c54: adc [rax+1], ecx; add [rax+0x6f], cl; pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c55: add [rax], rax; outsd dx, [rsi]; pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c56: add [rax], eax; outsd dx, [rsi]; pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c57: add [rax+0x6f], cl; pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c59: outsd dx, [rsi]; pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c5a: pop rsp; jmp far fword ptr [rcx+0x46];
0xffffffff81b68c5f: add [rax], dh; cdq; pop rsp; call rbx;
0xffffffff81b68c61: cdq; pop rsp; call rbx;
0xffffffff81b68c72: pop rsp; inc dword ptr [rdi+rax*2]; add [rax], eax; sbb [rcx+0x5c], dh; call far fword ptr [rbx];
0xffffffff81b68c9b: dec dword ptr [rbp+0x46]; add [rax], eax; mov al, [0xc8000146c5ff5c90]; nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68c9d: add [rax], r8d; mov al, [0xc8000146c5ff5c90]; nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68c9e: add [rax], eax; mov al, [0xc8000146c5ff5c90]; nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68ca0: mov al, [0xc8000146c5ff5c90]; nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68ca7: add al, cl; nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68ca9: nop; pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68caa: pop rsp; jmp far fword ptr [rdi-0x4ffffeba];
0xffffffff81b68cb7: add [rax-0x80], cl; pop rsp; dec dword ptr [rdi+rax*2+0x67600001]; pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68cba: pop rsp; dec dword ptr [rdi+rax*2+0x67600001]; pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68cbb: dec dword ptr [rdi+rax*2+0x67600001]; pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68cbc: mov [rdi+1], es; add [rax+0x67], ah; pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68cbf: add [rax+0x67], ah; pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68cc2: pop rsp; jmp qword ptr [rcx+0x46];
0xffffffff81b68ccc: cli; add [rax], r8d; push rax; pop sp; jmp rbx;
0xffffffff81b68ccd: add [rax], r8d; push rax; pop sp; jmp rbx;
0xffffffff81b68cce: add [rax], eax; push rax; pop sp; jmp rbx;
0xffffffff81b68ccf: add [rax+0x66], dl; pop rsp; jmp rbx;
0xffffffff81b68cd0: push rax; pop sp; jmp rbx;
0xffffffff81b68cd1: pop sp; jmp rbx;
0xffffffff81b68ce2: pop rsp; call rdi;
0xffffffff81b68f4c: pop rsp; out 2, al; add [rax+0x29], al; xchg ebp, eax; jmp rax;
0xffffffff81b690d2: pop rsp; jmp qword ptr [rdx-0x27fffebd];
0xffffffff81b69130: and byte ptr [rsi+0x7e], 0xff; leave; pop rdx; add al, [rax]; sbb [rcx+0x7e], ch; jmp rbp;
0xffffffff81b69134: leave; pop rdx; add al, [rax]; sbb [rcx+0x7e], ch; jmp rbp;
0xffffffff81b692d2: pop rsp; jmp far fword ptr [rsi+0x38000141];
0xffffffff81b694d9: ret 0xff77;
0xffffffff81b697b1: ret 0xff78;
0xffffffff81b6a73c: ret 0x2dd;
0xffffffff81b6a7c7: add [rax+0x34ff4d96], ch; leave; add [rax], al; mov al, 0x95; jmp far fword ptr [r8-0x37];
0xffffffff81b6a7cd: leave; add [rax], al; mov al, 0x95; jmp far fword ptr [r8-0x37];
0xffffffff81b6a7e6: add [rax], eax; mov [rbx], bl; pop rsp; call qword ptr [rdi];
0xffffffff81b6a7e8: mov [rbx], bl; pop rsp; call qword ptr [rdi];
0xffffffff81b6a92c: or [rdi-0x3f3fffff], ah; pop rsp; call far fword ptr [rdi+rbp+1];
0xffffffff81b6a932: pop rsp; call far fword ptr [rdi+rbp+1];
0xffffffff81b6a992: pop rdx; inc dword ptr [rsi+0x1f]; add [rax], eax; test al, 0xa1; pop rsp; call far fword ptr [rax];
0xffffffff81b6a993: inc dword ptr [rsi+0x1f]; add [rax], eax; test al, 0xa1; pop rsp; call far fword ptr [rax];
0xffffffff81b6a996: add [rax], eax; test al, 0xa1; pop rsp; call far fword ptr [rax];
0xffffffff81b6a998: test al, 0xa1; pop rsp; call far fword ptr [rax];
0xffffffff81b6ac86: add al, [rax]; push 0xffffffff88ff7d18; sub eax, [rdx]; add [rax-0x50], ah; xchg esp, eax; call qword ptr [rax];
0xffffffff81b6ac88: push 0xffffffff88ff7d18; sub eax, [rdx]; add [rax-0x50], ah; xchg esp, eax; call qword ptr [rax];
0xffffffff81b6ac8d: sub eax, [rdx]; add [rax-0x50], ah; xchg esp, eax; call qword ptr [rax];
0xffffffff81b6ac8f: add [rax-0x50], ah; xchg esp, eax; call qword ptr [rax];
0xffffffff81b6ac92: xchg esp, eax; call qword ptr [rax];
0xffffffff81b6ac94: adc [rcx-0x4f97fffe], bh; xchg esp, eax; push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac95: mov ecx, 0xb0680002; xchg esp, eax; push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac96: add al, [rax]; push 0xfffffffff5ff94b0; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac97: add [rax-0x50], ch; xchg esp, eax; push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac98: push 0xfffffffff5ff94b0; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac99: mov al, 0x94; push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac9a: xchg esp, eax; push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac9b: push rbp; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac9c: cmc; mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ac9d: mov eax, 0xb0a00002; xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6aca2: xchg esp, eax; jmp far fword ptr [rbx];
0xffffffff81b6ad3d: xor eax, 0x1b000001; pop rsp; jmp rcx;
0xffffffff81b6ad3e: add [rax], eax; add [rbx], bl; pop rsp; jmp rcx;
0xffffffff81b6ad40: add [rbx], bl; pop rsp; jmp rcx;
0xffffffff81b6ad5a: pop rsp; jmp qword ptr [rdi-0x6ffffed8];
0xffffffff81b6ae42: pop rsp; jmp qword ptr [rcx+0x78000127];
0xffffffff81b6ae7e: add al, [rax]; xor [rbx-0x68], bh; dec dword ptr [rax-0x77fffd27]; xchg esp, eax; cwde; call qword ptr [rcx+rbx*8+2];
0xffffffff81b6ae80: xor [rbx-0x68], bh; dec dword ptr [rax-0x77fffd27]; xchg esp, eax; cwde; call qword ptr [rcx+rbx*8+2];
0xffffffff81b6ae82: cwde; dec dword ptr [rax-0x77fffd27]; xchg esp, eax; cwde; call qword ptr [rcx+rbx*8+2];
0xffffffff81b6ae83: dec dword ptr [rax-0x77fffd27]; xchg esp, eax; cwde; call qword ptr [rcx+rbx*8+2];
0xffffffff81b6ae89: xchg esp, eax; cwde; call qword ptr [rcx+rbx*8+2];
0xffffffff81b6aed3: push qword ptr [rbx+rbp*2-0x3f17ffff]; pop rsp; jmp rcx;
0xffffffff81b6aeff: add [rax+0x7b], al; pop rsp; inc dword ptr [rax+rbp]; add [rax], eax; or [rax-0x5d], ch; call far fword ptr [rdx+rax];
0xffffffff81b6af02: pop rsp; inc dword ptr [rax+rbp]; add [rax], eax; or [rax-0x5d], ch; call far fword ptr [rdx+rax];
0xffffffff81b6afba: or eax, 0x1ce2500; add [rax+0x11ff94ac], al; mov ch, 2; add [rax-0x58], bh; xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6afbb: add [rip-0x7ffffe32], ah; lodsb [rsi]; xchg esp, eax; call qword ptr [rcx];
0xffffffff81b6afbc: and eax, 0x800001ce; lodsb [rsi]; xchg esp, eax; call qword ptr [rcx];
0xffffffff81b6afbf: add [rax+0x11ff94ac], al; mov ch, 2; add [rax-0x58], bh; xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6afc1: lodsb [rsi]; xchg esp, eax; call qword ptr [rcx];
0xffffffff81b6afc4: adc [rbp-0x5787fffe], esi; xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6afc5: mov ch, 2; add [rax-0x58], bh; xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6afc7: add [rax-0x58], bh; xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6afca: xchg esp, eax; jmp qword ptr [rbp+rsi*4+2];
0xffffffff81b6b01a: xchg esp, eax; dec dword ptr [rsi+rdi*4-0xd7ffffe]; xchg esp, eax; call far fword ptr [rsi+0x180002be];
0xffffffff81b6b01b: dec dword ptr [rsi+rdi*4-0xd7ffffe]; xchg esp, eax; call far fword ptr [rsi+0x180002be];
0xffffffff81b6b01d: mov esi, 0xf2800002; xchg esp, eax; call far fword ptr [rsi+0x180002be];
0xffffffff81b6b022: xchg esp, eax; call far fword ptr [rsi+0x180002be];
0xffffffff81b6b29a: pop rsp; push rdx; and eax, [rcx]; add al, al; test al, 0x5c; call far fword ptr [rax-0x37fffedb];
0xffffffff81b6b29e: add [rax], eax; shr byte ptr [rax+0x2598ff5c], 1; add al, cl; xchg edx, eax; pop rsp; call rsi;
0xffffffff81b6b2a0: shr byte ptr [rax+0x2598ff5c], 1; add al, cl; xchg edx, eax; pop rsp; call rsi;
0xffffffff81b6b2a2: pop rsp; call far fword ptr [rax-0x37fffedb];
0xffffffff81b6b2a4: cwde; and eax, 0x92c80001; pop rsp; call rsi;
0xffffffff81b6b2a5: and eax, 0x92c80001; pop rsp; call rsi;
0xffffffff81b6b2a7: add al, cl; xchg edx, eax; pop rsp; call rsi;
0xffffffff81b6b2a9: xchg edx, eax; pop rsp; call rsi;
0xffffffff81b6b2c2: pop rsp; jmp qword ptr [rsp-0x6bb7ffff];
0xffffffff81b6b2e9: ret 0xff6a;
0xffffffff81b6b35f: add [rax+0x16ff5150], dl; fld st, qword ptr [rax]; add [rax+0x7c], ch; pop rsp; jmp far fword ptr [rdx];
0xffffffff81b6b365: fld st, qword ptr [rax]; add [rax+0x7c], ch; pop rsp; jmp far fword ptr [rdx];
0xffffffff81b6b367: add [rax+0x7c], ch; pop rsp; jmp far fword ptr [rdx];
0xffffffff81b6b57c: xchg esp, eax; enter 2, 0xd0; add [rdi+0x2c8a6ff], edx; add [rax+2], ch; xchg edi, eax; jmp qword ptr [rax+rcx*8+2];
0xffffffff81b6b68a: pop rsp; call qword ptr [rdi+0x21];
0xffffffff81b6b6af: add al, ah; mov al, [0x765800012167ff5c]; pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6b1: mov al, [0x765800012167ff5c]; pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6b2: pop rsp; jmp qword ptr [rdi+0x21];
0xffffffff81b6b6b4: and [ecx], eax; add [rax+0x76], bl; pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6b5: and [rcx], eax; add [rax+0x76], bl; pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6b7: add [rax+0x76], bl; pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6ba: pop rsp; jmp far fword ptr [rsi+rbx+1];
0xffffffff81b6b6c2: pop rsp; call qword ptr [rbx-0x47fffee2];
0xffffffff81b6b6da: pop rsp; call far fword ptr [rsi+rbx+1];
0xffffffff81b6b811: xchg ecx, eax; pop rsp; inc dword ptr [rsi+rbx]; add [rax], eax; sub [rbp+0x5b], dl; call qword ptr [rdx];
0xffffffff81b6b812: pop rsp; inc dword ptr [rsi+rbx]; add [rax], eax; sub [rbp+0x5b], dl; call qword ptr [rdx];
0xffffffff81b6bace: add al, [rax]; mov al, 0x85; pop rsp; jmp far fword ptr [rdx];
0xffffffff81b6bad0: mov al, 0x85; pop rsp; jmp far fword ptr [rdx];
0xffffffff81b6bb14: ret 0x2f3;
0xffffffff81b6bbf5: and eax, 0x14680001; pop rsp; dec dword ptr [rdx+0x40000116]; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbf7: add [rax+0x14], ch; pop rsp; dec dword ptr [rdx+0x40000116]; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbf9: adc al, 0x5c; dec dword ptr [rdx+0x40000116]; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbfa: pop rsp; dec dword ptr [rdx+0x40000116]; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbfb: dec dword ptr [rdx+0x40000116]; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbfc: mov dl, [rsi]; add [rax], eax; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbfe: add [rax], eax; movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bbff: add [rax-0x5c], al; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bc01: movsb [rdi], [rsi]; pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bc02: pop rsp; jmp qword ptr [rax+0x1c];
0xffffffff81b6bc0f: add [rax+0x6e], dh; pop rsp; jmp qword ptr [rsi+0x1a];
0xffffffff81b6bc11: outsb dx, [rsi]; pop rsp; jmp qword ptr [rsi+0x1a];
0xffffffff81b6bc12: pop rsp; jmp qword ptr [rsi+0x1a];
0xffffffff81b6bde1: rcl byte ptr [rdx-1], cl; add esp, edi; add [rax], al; test al, 0xd2; push rdx; call rbp;
0xffffffff81b6bde4: add esp, edi; add [rax], al; test al, 0xd2; push rdx; call rbp;
0xffffffff81b6bf06: add al, [rax]; sbb [rax], ah; xchg esp, eax; jmp rbx;
0xffffffff81b6bf08: sbb [rax], ah; xchg esp, eax; jmp rbx;
0xffffffff81b6c08c: ret 0x16d;
0xffffffff81b6c149: ret 0xff4f;
0xffffffff81b6c212: pop rsp; jmp far fword ptr [rdi-0x7fffeec];
0xffffffff81b6c2bf: add [rax], dh; cwde; pop rsp; call qword ptr [rcx+0x38000115];
0xffffffff81b6c2c1: cwde; pop rsp; call qword ptr [rcx+0x38000115];
0xffffffff81b6c2c2: pop rsp; call qword ptr [rcx+0x38000115];
0xffffffff81b6c2c4: xchg ecx, eax; adc eax, 0xb7380001; xchg esp, eax; call far fword ptr [rax];
0xffffffff81b6c2c5: adc eax, 0xb7380001; xchg esp, eax; call far fword ptr [rax];
0xffffffff81b6c2ca: xchg esp, eax; call far fword ptr [rax];
0xffffffff81b6c42c: sbb esp, esi; add [rax], al; push rax; push rbp; push rsi; jmp qword ptr [rcx];
0xffffffff81b6c47f: add [rax], al; mul dword ptr [rbx+0x2f3ccff]; add al, bh; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c481: mul dword ptr [rbx+0x2f3ccff]; add al, bh; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c486: add al, [rax]; clc; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c487: add al, bh; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c488: clc; pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c489: pop rsp; movsb [rdi], [rsi]; jmp far fword ptr [rsi-9];
0xffffffff81b6c529: ret 0xff76;
0xffffffff81b6c5a7: add [rax-0x2e00a2d4], ch; sbb [rcx], eax; add [rax-0x7700a4e2], dl; add eax, 0xf5980001; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5ad: sbb [rcx], eax; add [rax-0x7700a4e2], dl; add eax, 0xf5980001; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5af: add [rax-0x7700a4e2], dl; add eax, 0xf5980001; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b2: pop rbx; dec dword ptr [rax-0x67fffefb]; cmc; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b3: dec dword ptr [rax-0x67fffefb]; cmc; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b4: mov [rip-0xa67ffff], al; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b5: add eax, 0xf5980001; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b6: add [rax], eax; cwde; cmc; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b8: cwde; cmc; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5b9: cmc; pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5ba: pop rsp; jmp qword ptr [rdx+0x13];
0xffffffff81b6c5cc: ret 0x122;
0xffffffff81b6c5d4: leave; and al, [rcx]; add [rax+0x7c], bh; pop rsi; call qword ptr [rcx+0x30000122];
0xffffffff81b6c654: mov esp, 0xa80002a7; push rax; xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c655: cmpsd [rsi], [rdi]; add al, [rax]; test al, 0x50; xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c656: add al, [rax]; test al, 0x50; xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c658: test al, 0x50; xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c659: push rax; xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c65a: xchg esp, eax; jmp far fword ptr [rcx-0x65];
0xffffffff81b6c684: adc ebp, [rax-0x2367fffe]; xchg esp, eax; jmp far fword ptr [rsi-0x6ffffd59];
0xffffffff81b6c68a: xchg esp, eax; jmp far fword ptr [rsi-0x6ffffd59];
0xffffffff81b6c7a4: mov gs, [rbx-0x16e7fffe]; xchg esp, eax; call far fword ptr [rbx+rbp*4-0x651ffffe];
0xffffffff81b6c7a5: stosd [rdi]; add al, [rax]; sbb cl, ch; xchg esp, eax; call far fword ptr [rbx+rbp*4-0x651ffffe];
0xffffffff81b6c7a6: add al, [rax]; sbb cl, ch; xchg esp, eax; call far fword ptr [rbx+rbp*4-0x651ffffe];
0xffffffff81b6c7a8: sbb cl, ch; xchg esp, eax; call far fword ptr [rbx+rbp*4-0x651ffffe];
0xffffffff81b6c7aa: xchg esp, eax; call far fword ptr [rbx+rbp*4-0x651ffffe];
0xffffffff81b6c7cc: and ah, [rcx+0x12900002]; xchg esp, eax; call far fword ptr [rcx-0x37fffd66];
0xffffffff81b6c7d2: xchg esp, eax; call far fword ptr [rcx-0x37fffd66];
0xffffffff81b6c7e7: add [rax-0x1b], bh; xchg esp, eax; inc dword ptr [rcx+0x2ad]; lahf; xchg ebp, eax; call qword ptr [rax-0x67fffd5e];
0xffffffff81b6c7ea: xchg esp, eax; inc dword ptr [rcx+0x2ad]; lahf; xchg ebp, eax; call qword ptr [rax-0x67fffd5e];
0xffffffff81b6c827: add [rax-0x15], bl; xchg esp, eax; call qword ptr [rcx-0x5b];
0xffffffff81b6c82a: xchg esp, eax; call qword ptr [rcx-0x5b];
0xffffffff81b6c836: add al, [rax]; cwde; fcom st, qword ptr [rdi+rdi*8+0x2a55a]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c837: add [rax+0x5aff94dc], bl; movsd [rdi], [rsi]; add al, [rax]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c838: cwde; fcom st, qword ptr [rdi+rdi*8+0x2a55a]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c839: fcom st, qword ptr [rdi+rdi*8+0x2a55a]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c83a: xchg esp, eax; call far fword ptr [rdx-0x5b];
0xffffffff81b6c83c: pop rdx; movsd [rdi], [rsi]; add al, [rax]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c83d: movsd [rdi], [rsi]; add al, [rax]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c83e: add al, [rax]; adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c840: adc dl, ah; xchg esp, eax; call rdx;
0xffffffff81b6c842: xchg esp, eax; call rdx;
0xffffffff81b6c852: xchg esp, eax; jmp qword ptr [rcx-0x5d];
0xffffffff81b6c872: xchg esp, eax; call qword ptr [rbp-0x5c];
0xffffffff81b6c887: add [rax-0x21], ch; xchg esp, eax; jmp far fword ptr [rbx+0x45400002];
0xffffffff81b6c88a: xchg esp, eax; jmp far fword ptr [rbx+0x45400002];
0xffffffff81b6c8d3: dec dword ptr [rax+rbp*4]; add al, [rax]; push 0xffffffff82ff9531; test eax, 0xd8600002; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8d4: or al, 0xa8; add al, [rax]; push 0xffffffff82ff9531; test eax, 0xd8600002; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8d6: add al, [rax]; push 0xffffffff82ff9531; test eax, 0xd8600002; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8d8: push 0xffffffff82ff9531; test eax, 0xd8600002; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8d9: xor [rbp+0x2a982ff], edx; add [rax-0x28], ah; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8dd: test eax, 0xd8600002; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8df: add [rax-0x28], ah; xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c8e2: xchg esp, eax; jmp far fword ptr [rsi];
0xffffffff81b6c959: in eax, dx; xchg esp, eax; call far fword ptr [rbx-0x58];
0xffffffff81b6c95a: xchg esp, eax; call far fword ptr [rbx-0x58];
0xffffffff81b6ca3c: ret 0x10c;
0xffffffff81b6cde2: xchg esp, eax; jmp rsp;
0xffffffff81b6d292: xchg esp, eax; call qword ptr [rcx];
0xffffffff81b6d361: ret 0xff72;
0xffffffff81b6d489: leave; jmp far fword ptr [r9-0x4fffff50];
0xffffffff81b6d554: mov esp, [rbx+0x79780000]; jmp rdi;
0xffffffff81b6d767: add [rax+0x72ffa39e], bh; fiadd st, word ptr [rdx]; add al, dl; xchg esp, eax; mov [0xa396280002de42ff], eax; jmp qword ptr [rdi];
0xffffffff81b6d768: mov eax, 0x72ffa39e; fiadd st, word ptr [rdx]; add al, dl; xchg esp, eax; mov [0xa396280002de42ff], eax; jmp qword ptr [rdi];
0xffffffff81b6d76d: fiadd st, word ptr [rdx]; add al, dl; xchg esp, eax; mov [0xa396280002de42ff], eax; jmp qword ptr [rdi];
0xffffffff81b6d76f: add al, dl; xchg esp, eax; mov [0xa396280002de42ff], eax; jmp qword ptr [rdi];
0xffffffff81b6d771: xchg esp, eax; mov [0xa396280002de42ff], eax; jmp qword ptr [rdi];
0xffffffff81b6d8ff: add [rax], dh; adc bl, [rbx-1]; sub esp, esi; add [rax], al; or [rbx+0x51], bh; jmp rsi;
0xffffffff81b6d901: adc bl, [rbx-1]; sub esp, esi; add [rax], al; or [rbx+0x51], bh; jmp rsi;
0xffffffff81b6d904: sub esp, esi; add [rax], al; or [rbx+0x51], bh; jmp rsi;
0xffffffff81b6d95e: add al, [rax]; ror byte ptr [rbp-0x6f2c006b], 1; add al, [rax]; test al, 0xe3; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d960: ror byte ptr [rbp-0x6f2c006b], 1; add al, [rax]; test al, 0xe3; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d964: rcl dword ptr [rax-0x1c57fffe], cl; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d965: nop; add al, [rax]; test al, 0xe3; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d966: add al, [rax]; test al, 0xe3; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d968: test al, 0xe3; xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d96a: xchg esp, eax; jmp far fword ptr [rax];
0xffffffff81b6d9af: add [rax+0x1c], al; pop rsp; jmp rbx;
0xffffffff81b6d9b2: pop rsp; jmp rbx;
0xffffffff81b6db03: add ch, dl; xchg esp, eax; add al, [rax]; test al, 0xc6; xchg esp, eax; jmp qword ptr [rbx+0x3c000294];
0xffffffff81b6db05: xchg esp, eax; add al, [rax]; test al, 0xc6; xchg esp, eax; jmp qword ptr [rbx+0x3c000294];
0xffffffff81b6db06: add al, [rax]; test al, 0xc6; xchg esp, eax; jmp qword ptr [rbx+0x3c000294];
0xffffffff81b6db08: test al, 0xc6; xchg esp, eax; jmp qword ptr [rbx+0x3c000294];
0xffffffff81b6db0a: xchg esp, eax; jmp qword ptr [rbx+0x3c000294];
0xffffffff81b6db1b: add dl, cl; xchg esp, eax; add al, [rax]; add bh, dh; lahf; jmp qword ptr [rdx+0x180002ce];
0xffffffff81b6db1d: xchg esp, eax; add al, [rax]; add bh, dh; lahf; jmp qword ptr [rdx+0x180002ce];
0xffffffff81b6dc54: cmp [rax+0x7a180002], ecx; xchg esp, eax; jmp qword ptr [rsi];
0xffffffff81b6dc5a: xchg esp, eax; jmp qword ptr [rsi];
0xffffffff81b6df97: add al, cl; int1; pop rsp; call qword ptr [rdx-0x5fffff06];
0xffffffff81b6df99: int1; pop rsp; call qword ptr [rdx-0x5fffff06];
0xffffffff81b6df9a: pop rsp; call qword ptr [rdx-0x5fffff06];
0xffffffff81b6dfa7: add [rax-0x21], cl; pop rsp; call qword ptr [rbx];
0xffffffff81b6dfe5: cli; add [rax], al; clc; out dx, eax; pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dfe6: add [rax], al; clc; out dx, eax; pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dfe7: add al, bh; out dx, eax; pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dfe8: clc; out dx, eax; pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dfe9: out dx, eax; pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dfea: pop rsp; jmp far fword ptr [rsp+rdi*8];
0xffffffff81b6dffa: pop rsp; call far fword ptr [rbx+rdi*8];
0xffffffff81b6e027: add [rax-0x22], ch; pop rsp; jmp qword ptr [rbx];
0xffffffff81b6e02a: pop rsp; jmp qword ptr [rbx];
0xffffffff81b6e032: pop rsp; call qword ptr [rdx];
0xffffffff81b6e03a: pop rsp; jmp rsi;
0xffffffff81b6e04f: add [rax-0x20], ah; pop rsp; jmp qword ptr [rcx-0x47ffff05];
0xffffffff81b6e052: pop rsp; jmp qword ptr [rcx-0x47ffff05];
0xffffffff81b6e134: ret 0;
0xffffffff81b6e17f: add al, al; pop rax; pop rsp; call far fword ptr [rsi+rsi*8];
0xffffffff81b6e181: pop rax; pop rsp; call far fword ptr [rsi+rsi*8];
0xffffffff81b6e182: pop rsp; call far fword ptr [rsi+rsi*8];
0xffffffff81b6e1a4: ret 0xd8;
0xffffffff81b6e31f: add [rax+0x2c], dl; pop rsp; call qword ptr [rbx];
0xffffffff81b6e32c: ret 0xd5;
0xffffffff81b6e3fc: ret 0xf8;
0xffffffff81b6e43a: pop rbp; dec dword ptr [rdi-6]; add [rax], al; and bh, bl; pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e43b: dec dword ptr [rdi-6]; add [rax], al; and bh, bl; pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e43d: cli; add [rax], al; and bh, bl; pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e43e: add [rax], al; and bh, bl; pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e440: and bh, bl; pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e442: pop rsp; jmp far fword ptr [rdi+rsi*8];
0xffffffff81b6e44a: pop rsp; call qword ptr [rbx-9];
0xffffffff81b6e489: ret 0xffa3;
0xffffffff81b6e4f8: or [rbx+0x735cff93], dl; add al, [rax]; adc byte ptr [rbx+0x7337ff93], 2; add al, ch; xchg esp, eax; jmp qword ptr [rdi+rdi*2];
0xffffffff81b6e4fe: add al, [rax]; adc byte ptr [rbx+0x7337ff93], 2; add al, ch; xchg esp, eax; jmp qword ptr [rdi+rdi*2];
0xffffffff81b6e500: adc byte ptr [rbx+0x7337ff93], 2; add al, ch; xchg esp, eax; jmp qword ptr [rdi+rdi*2];
0xffffffff81b6e507: add al, ch; xchg esp, eax; jmp qword ptr [rdi+rdi*2];
0xffffffff81b6e50a: xchg esp, eax; jmp qword ptr [rdi+rdi*2];
0xffffffff81b6e527: add al, bl; xchg esp, eax; call qword ptr [rdi+rdi*2];
0xffffffff81b6e529: xchg esp, eax; call qword ptr [rdi+rdi*2];
0xffffffff81b6e52a: xchg esp, eax; call qword ptr [rdi+rdi*2];
0xffffffff81b6e564: mov bh, 0x8b; add al, [rax]; mov [rcx], ch; xchg esp, eax; jmp rbp;
0xffffffff81b6e566: add al, [rax]; mov [rcx], ch; xchg esp, eax; jmp rbp;
0xffffffff81b6e568: mov [rcx], ch; xchg esp, eax; jmp rbp;
0xffffffff81b6e56a: xchg esp, eax; jmp rbp;
0xffffffff81b6e59f: add [rax+0x5d], ah; xchg esp, eax; call qword ptr [rdi*2-0x1a47fffe];
0xffffffff81b6e5a1: pop rbp; xchg esp, eax; call qword ptr [rdi*2-0x1a47fffe];
0xffffffff81b6e5a2: xchg esp, eax; call qword ptr [rdi*2-0x1a47fffe];
0xffffffff81b6e5bf: add al, al; push rbx; xchg esp, eax; call qword ptr [rdx+0x7800027d];
0xffffffff81b6e5c1: push rbx; xchg esp, eax; call qword ptr [rdx+0x7800027d];
0xffffffff81b6e5c2: xchg esp, eax; call qword ptr [rdx+0x7800027d];
0xffffffff81b6e5f2: xchg esp, eax; jmp qword ptr [rcx-0x67fffd8a];
0xffffffff81b6e5fe: add al, [rax]; mov al, [0x280002823fff9495]; xchg esp, eax; xchg esp, eax; jmp far fword ptr [rcx-0x7e];
0xffffffff81b6e600: mov al, [0x280002823fff9495]; xchg esp, eax; xchg esp, eax; jmp far fword ptr [rcx-0x7e];
0xffffffff81b6e607: add [rax], ch; xchg esp, eax; xchg esp, eax; jmp far fword ptr [rcx-0x7e];
0xffffffff81b6e609: xchg esp, eax; xchg esp, eax; jmp far fword ptr [rcx-0x7e];
0xffffffff81b6e60a: xchg esp, eax; jmp far fword ptr [rcx-0x7e];
0xffffffff81b6e611: push rcx; xchg esp, eax; call far fword ptr [rdx-0x17fffd83];
0xffffffff81b6e612: xchg esp, eax; call far fword ptr [rdx-0x17fffd83];
0xffffffff81b6e61a: xchg esp, eax; dec dword ptr [rbx+0x70000281]; rcl byte ptr [rbx+0x27aaeff], 0; sbb bl, al; xchg ebx, eax; jmp qword ptr [rbx-0x1ffffd88];
0xffffffff81b6e692: xchg esp, eax; jmp far fword ptr [rdi*2-0x3ce7fffe];
0xffffffff81b6e6a7: add [rax+0xe], ch; xchg esp, eax; call far fword ptr [rcx];
0xffffffff81b6e6aa: xchg esp, eax; call far fword ptr [rcx];
0xffffffff81b6e6ca: xchg esp, eax; call qword ptr [rsi];
0xffffffff81b6e6d6: add al, [rax]; enter 0x93c1, 0xff; or [rax+2], edi; add [rax+0x25], ah; xchg esp, eax; call qword ptr [rbp+0x28000275];
0xffffffff81b6e6d8: enter 0x93c1, 0xff; or [rax+2], edi; add [rax+0x25], ah; xchg esp, eax; call qword ptr [rbp+0x28000275];
0xffffffff81b6e6dc: or [rax+2], edi; add [rax+0x25], ah; xchg esp, eax; call qword ptr [rbp+0x28000275];
0xffffffff81b6e6df: add [rax+0x25], ah; xchg esp, eax; call qword ptr [rbp+0x28000275];
0xffffffff81b6e6e2: xchg esp, eax; call qword ptr [rbp+0x28000275];
0xffffffff81b6e751: ret 0xff8f;
0xffffffff81b6e7ec: leave; add r8b, [rax]; xor [rax+rdx*4], al; jmp qword ptr [rdi];
0xffffffff81b6eb89: ret 0xff93;
0xffffffff81b6ec34: pop rsp; insb [rdi], dx; add al, [rax]; sub [rsi-0x6d], ch; jmp qword ptr [rcx+0x6c];
0xffffffff81b6edc6: add al, [rax]; pop rax; leave; mov [0xa3c7700002cb37ff], eax; jmp qword ptr [rbp-0x35];
0xffffffff81b6edc8: pop rax; leave; mov [0xa3c7700002cb37ff], eax; jmp qword ptr [rbp-0x35];
0xffffffff81b6edc9: leave; mov [0xa3c7700002cb37ff], eax; jmp qword ptr [rbp-0x35];
0xffffffff81b6ee07: add al, cl; leave; mov [0xa3cf700002cadeff], eax; call qword ptr [rax];
0xffffffff81b6ee09: leave; mov [0xa3cf700002cadeff], eax; call qword ptr [rax];
0xffffffff81b6eed7: add [rax-0xd], cl; xchg esp, eax; push qword ptr [rdx+rdi*2-0x524ffffe]; outsb dx, [rsi]; jmp qword ptr [rdx+0x28000161];
0xffffffff81b6eeda: xchg esp, eax; push qword ptr [rdx+rdi*2-0x524ffffe]; outsb dx, [rsi]; jmp qword ptr [rdx+0x28000161];
0xffffffff81b6ef3d: xchg esp, eax; add al, [rax]; ror dl, 0xa3; call qword ptr [rbx-0x37];
0xffffffff81b6f74f: add [rax], dh; xchg esp, eax; fwait; call qword ptr [rbp-0x61];
0xffffffff81b6f751: xchg esp, eax; fwait; call qword ptr [rbp-0x61];
0xffffffff81b6f80f: add [rax+0x59ff5d86], dl; out dx, al; add [rax], al; or [rbx], bh; pop rsp; call rcx;
0xffffffff81b6f814: pop rcx; out dx, al; add [rax], al; or [rbx], bh; pop rsp; call rcx;
0xffffffff81b6f815: out dx, al; add [rax], al; or [rbx], bh; pop rsp; call rcx;
0xffffffff81b6f816: add [rax], al; or [rbx], bh; pop rsp; call rcx;
0xffffffff81b6f818: or [rbx], bh; pop rsp; call rcx;
0xffffffff81b6f832: pop rsp; push qword ptr [rbp-0x22]; add [rax], al; or [rax+0x58], ah; call far fword ptr [rsi+0x500000cb];
0xffffffff81b6f872: pop rsp; call qword ptr [rbp-0x20];
0xffffffff81b6fab4: sbb esi, ecx; add [rax], eax; pop rax; xchg esp, eax; insd [rdi], dx; jmp far fword ptr [rcx-0x3ffffeaf];
0xffffffff81b6fab6: add [rax], eax; pop rax; xchg esp, eax; insd [rdi], dx; jmp far fword ptr [rcx-0x3ffffeaf];
0xffffffff81b6fab8: pop rax; xchg esp, eax; insd [rdi], dx; jmp far fword ptr [rcx-0x3ffffeaf];
0xffffffff81b6fab9: xchg esp, eax; insd [rdi], dx; jmp far fword ptr [rcx-0x3ffffeaf];
0xffffffff81b6fb19: mov [rdi-1], dl; xchg esp, eax; ret;
0xffffffff81b6fbe3: dec esp; leave; add [rax], al; cwde; pop rcx; call far fword ptr [rbp+0x600000c9];
0xffffffff81b6fbe4: int3; leave; add [rax], al; cwde; pop rcx; call far fword ptr [rbp+0x600000c9];
0xffffffff81b6fbe5: leave; add [rax], al; cwde; pop rcx; call far fword ptr [rbp+0x600000c9];
0xffffffff81b6fd52: pop rsp; jmp rax;
0xffffffff81b6fdac: ret 0x2ae;
0xffffffff81b6feb4: xchg [rbx-0x2ff7fffe], esp; popfq; jmp far fword ptr [rbx+2];
0xffffffff81b6febd: mov [0xa23cff9dba800002], eax; add al, [rax]; clc; leave; popfq; call qword ptr [rsi];
0xffffffff81b6febe: add al, [rax]; cmp byte ptr [rdx-0x5dc30063], 2; add al, bh; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec0: cmp byte ptr [rdx-0x5dc30063], 2; add al, bh; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec1: mov edx, 0xa23cff9d; add al, [rax]; clc; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec4: cmp al, 0xa2; add al, [rax]; clc; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec6: add al, [rax]; clc; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec7: add al, bh; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec8: clc; leave; popfq; call qword ptr [rsi];
0xffffffff81b6fec9: leave; popfq; call qword ptr [rsi];
0xffffffff81b6fffc: ret 0x272;
0xffffffff81b70036: add [rax], al; test al, 0x3e; xchg esp, eax; call rax;
0xffffffff81b70038: test al, 0x3e; xchg esp, eax; call rax;
0xffffffff81b70039: xchg esp, eax; call rax;
0xffffffff81b7017a: xchg esp, eax; call qword ptr [rcx-0x4ffffd8f];
0xffffffff81b702b1: ret 0xff53;
0xffffffff81b713a1: ret 0xff95;
0xffffffff81b71774: stosd [rdi]; xchg esp, eax; add [rax], al; cmp dl, [rbx-1]; ret;
0xffffffff81b71775: xchg esp, eax; add [rax], al; cmp dl, [rbx-1]; ret;
0xffffffff81b7182b: dec esi; pop rsp; add [rax], al; rol byte ptr [rax-0x44470084], 1; add [rax+5], bh; jmp far fword ptr [r9+0x50];
0xffffffff81b7182d: pop rsp; add [rax], al; rol byte ptr [rax-0x44470084], 1; add [rax+5], bh; jmp far fword ptr [r9+0x50];
0xffffffff81b71857: add [rax+0x17ff4dd0], bl; pop rsp; add [rax], al; adc al, 0x4d; jmp far fword ptr [rdx];
0xffffffff81b7185d: pop rsp; add [rax], al; adc al, 0x4d; jmp far fword ptr [rdx];
0xffffffff81b71971: xor al, 0; lahf; pop rsp; add [rax], al; or [rbp-0x72], ch; jmp far fword ptr [rbx+rdx];
0xffffffff81b71972: xor al, 0; lahf; pop rsp; add [rax], al; or [rbp-0x72], ch; jmp far fword ptr [rbx+rdx];
0xffffffff81b71974: lahf; pop rsp; add [rax], al; or [rbp-0x72], ch; jmp far fword ptr [rbx+rdx];
0xffffffff81b71975: pop rsp; add [rax], al; or [rbp-0x72], ch; jmp far fword ptr [rbx+rdx];
0xffffffff81b71b74: adc esp, ebx; add [rax], al; test al, 0xf; dec dword ptr [esi-0x2fffff1e]; pop rax; jmp rcx;
0xffffffff81b71c51: pop rsp; jmp far fword ptr [ecx-0x57ffff18];
0xffffffff81b71d6e: add [rax], al; pop rsp; inc dword ptr [ecx-0x19]; add [rax], al; mov [rcx], dl; call qword ptr [eax-0x20];
0xffffffff81b71d71: pop rsp; inc dword ptr [ecx-0x19]; add [rax], al; mov [rcx], dl; call qword ptr [eax-0x20];
0xffffffff81b71e7c: mov cl, 0xe1; add [rax], eax; xor ah, dl; xchg esp, eax; jmp far fword ptr [rdx+rcx*2-0x70b7fffe];
0xffffffff81b71e7e: add [rax], eax; xor ah, dl; xchg esp, eax; jmp far fword ptr [rdx+rcx*2-0x70b7fffe];
0xffffffff81b71e80: xor ah, dl; xchg esp, eax; jmp far fword ptr [rdx+rcx*2-0x70b7fffe];
0xffffffff81b71e82: xchg esp, eax; jmp far fword ptr [rdx+rcx*2-0x70b7fffe];
0xffffffff81b71ea4: out dx, al; leave; add [rax], eax; push 0xffffffffd9ff7d0b; ret;
0xffffffff81b71ea5: leave; add [rax], eax; push 0xffffffffd9ff7d0b; ret;
0xffffffff81b71f76: add [rax], eax; test al, 0xa9; xchg esp, eax; jmp far fword ptr [rsi+0x53];
0xffffffff81b71f78: test al, 0xa9; xchg esp, eax; jmp far fword ptr [rsi+0x53];
0xffffffff81b71f7a: xchg esp, eax; jmp far fword ptr [rsi+0x53];
0xffffffff81b72124: ret 0x1c2;
0xffffffff81b7216c: xchg esp, eax; ret 1;
0xffffffff81b725e1: add cl, [rcx-1]; mov al, 0x3e; add [rax], al; sbb [rdi], dl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b725e4: mov al, 0x3e; add [rax], al; sbb [rdi], dl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b725e5: add [rax], al; sbb [rdi], dl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b725e6: add [rax], al; sbb [rdi], dl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b725e8: sbb [rdi], dl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b725f4: pop rsp; add [r8], al; or [rax], bl; jmp far fword ptr [r11];
0xffffffff81b7287e: add [rax], eax; shl byte ptr [rdx+0x58], 0xff; sbb [rbx-0x29080000], bl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b72880: shl byte ptr [rdx+0x58], 0xff; sbb [rbx-0x29080000], bl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b72884: sbb [rbx-0x29080000], bl; pop rsp; jmp far fword ptr [rcx];
0xffffffff81b7290a: xchg esp, eax; call far fword ptr [rdx+0x3d];
0xffffffff81b72a34: ret 0x204;
0xffffffff81b72d26: add al, [rax]; pop rsp; popfq; call qword ptr [rbp+0x70000272];
0xffffffff81b72d29: pop rsp; popfq; call qword ptr [rbp+0x70000272];
0xffffffff81b72dca: xchg esp, eax; call far fword ptr [rcx+0x3c];
0xffffffff81b731c4: ret 0x6a;
0xffffffff81b732b9: pop rsp; call qword ptr [rax-0x5fffffc5];
0xffffffff81b73514: ret 0x74;
0xffffffff81b7354f: add al, dl; xchg esp, eax; push rdx; jmp far fword ptr [rdx+0x74];
0xffffffff81b73551: xchg esp, eax; push rdx; jmp far fword ptr [rdx+0x74];
0xffffffff81b73691: push rcx; pop rsp; call far fword ptr [rax-0x27ffff5e];
0xffffffff81b73692: pop rsp; call far fword ptr [rax-0x27ffff5e];
0xffffffff81b7379d: cmp al, 0; add al, ah; push rcx; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b7379f: add al, ah; push rcx; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737a1: push rcx; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737a5: mov [0xa226ff5c3f080000], al; add [rax], al; nop; push rsi; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737a6: add [rax], al; or [rdi], bh; pop rsp; jmp qword ptr [rsi];
0xffffffff81b737a8: or [rdi], bh; pop rsp; jmp qword ptr [rsi];
0xffffffff81b737ae: add [rax], al; nop; push rsi; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737b0: nop; push rsi; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737b1: push rsi; pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737b2: pop rsp; call qword ptr [rcx-0x5e];
0xffffffff81b737ff: add [rax+0x47ff48cf], dh; sub al, 0; add [rax+0x6b], ch; xchg esp, eax; jmp rdi;
0xffffffff81b73805: sub al, 0; add [rax+0x6b], ch; xchg esp, eax; jmp rdi;
0xffffffff81b73807: add [rax+0x6b], ch; xchg esp, eax; jmp rdi;
0xffffffff81b7380a: xchg esp, eax; jmp rdi;
0xffffffff81b73837: add [rax+0x28], bl; xchg esp, eax; call qword ptr [rsi+rbp+2];
0xffffffff81b7383a: xchg esp, eax; call qword ptr [rsi+rbp+2];
0xffffffff81b73852: xchg esp, eax; call far fword ptr [rbx+rdi+2];
0xffffffff81b7385f: add [rax+0x7a], dh; xchg esp, eax; jmp rbx;
0xffffffff81b73862: xchg esp, eax; jmp rbx;
0xffffffff81b738e2: pop rsp; call far fword ptr [rbx-0x5c];
0xffffffff81b73c37: add [rax+0x46ffff00], ch; test [rax], eax; add [rax+0x2b], ah; xchg esp, eax; jmp far fword ptr [rdx+rbp+2];
0xffffffff81b73c3c: test [rax], r8d; add [rax+0x2b], ah; xchg esp, eax; jmp far fword ptr [rdx+rbp+2];
0xffffffff81b73c3d: test [rax], eax; add [rax+0x2b], ah; xchg esp, eax; jmp far fword ptr [rdx+rbp+2];
0xffffffff81b73c3f: add [rax+0x2b], ah; xchg esp, eax; jmp far fword ptr [rdx+rbp+2];
0xffffffff81b73c42: xchg esp, eax; jmp far fword ptr [rdx+rbp+2];
0xffffffff81b73d2c: ret 0x73;
0xffffffff81b73d5c: ret 0x35;
0xffffffff81b73e24: ret 0x194;
0xffffffff81b73e2f: add [rax-0x340083b4], ah; xchg esp, eax; add [rax], eax; fcom st, dword ptr [rbp+0x7c]; jmp rcx;
0xffffffff81b73e33: dec ebx; xchg esp, eax; add [rax], eax; fcom st, dword ptr [rbp+0x7c]; jmp rcx;
0xffffffff81b73e35: xchg esp, eax; add [rax], eax; fcom st, dword ptr [rbp+0x7c]; jmp rcx;
0xffffffff81b73e3d: xchg esp, eax; add [rax], eax; rcl byte ptr [rbx+0x7c], 1; call far fword ptr [rbx-0x6c];
0xffffffff81b7429c: ret 0x251;
0xffffffff81b74309: rcl byte ptr [rcx-1], 0x43; pop rsp; add [rax], al; adc cl, ah; push rcx; call rdx;
0xffffffff81b7430d: pop rsp; add [rax], al; adc cl, ah; push rcx; call rdx;
0xffffffff81b743de: add [rax], al; shr byte ptr [rip+0x2229ff94], 2; add [rax+0x2d], bh; xchg esp, eax; call qword ptr [rcx+0x22];
0xffffffff81b743e0: shr byte ptr [rip+0x2229ff94], 2; add [rax+0x2d], bh; xchg esp, eax; call qword ptr [rcx+0x22];
0xffffffff81b743e2: xchg esp, eax; jmp far fword ptr [rcx];
0xffffffff81b743e5: and al, [rdx]; add [rax+0x2d], bh; xchg esp, eax; call qword ptr [rcx+0x22];
0xffffffff81b743e7: add [rax+0x2d], bh; xchg esp, eax; call qword ptr [rcx+0x22];
0xffffffff81b743ea: xchg esp, eax; call qword ptr [rcx+0x22];
0xffffffff81b7461f: add al, dh; leave; push rax; call qword ptr [rbp+0x4c];
0xffffffff81b74621: leave; push rax; call qword ptr [rbp+0x4c];
0xffffffff81b74774: ret 0xf0;
0xffffffff81b74aa7: add [rax-0x4e], ch; pop rsp; call qword ptr [rbp-0x6d];
0xffffffff81b74aaa: pop rsp; call qword ptr [rbp-0x6d];
0xffffffff81b74ae4: ret 0x233;
0xffffffff81b74e81: ret 0xff90;
0xffffffff81b74f7c: ret 0x1f4;
0xffffffff81b751f9: pop rsp; xchg edx, eax; call far fword ptr [rsi];
0xffffffff81b75521: ret 0xff60;
0xffffffff81b75985: cmp al, 2; add al, cl; xchg esp, eax; mov al, [0x9b1b30000250e7ff]; jmp far fword ptr [rdx+0x3b];
0xffffffff81b75987: add al, cl; xchg esp, eax; mov al, [0x9b1b30000250e7ff]; jmp far fword ptr [rdx+0x3b];
0xffffffff81b75989: xchg esp, eax; mov al, [0x9b1b30000250e7ff]; jmp far fword ptr [rdx+0x3b];
0xffffffff81b75a41: ret 0xff55;
0xffffffff81b75a47: add [rax-0x57006bed], bl; or eax, [rdx]; add [rax+0x13], ah; xchg esp, eax; call rax;
0xffffffff81b75a4a: xchg esp, eax; jmp far fword ptr [rax+0x6000020b];
0xffffffff81b75a4d: or eax, [rdx]; add [rax+0x13], ah; xchg esp, eax; call rax;
0xffffffff81b75a4f: add [rax+0x13], ah; xchg esp, eax; call rax;
0xffffffff81b75a52: xchg esp, eax; call rax;
0xffffffff81b76052: imul edi, 0xc308; cmp cl, al; xchg esp, eax; jmp far fword ptr [rdx];
0xffffffff81b76054: or bl, al; add [rax], al; cmp cl, al; xchg esp, eax; jmp far fword ptr [rdx];
0xffffffff81b76056: add [rax], al; cmp cl, al; xchg esp, eax; jmp far fword ptr [rdx];
0xffffffff81b76058: cmp cl, al; xchg esp, eax; jmp far fword ptr [rdx];
0xffffffff81b7605a: xchg esp, eax; jmp far fword ptr [rdx];
0xffffffff81b7607c: or bh, [rax+rax]; adc [rsi], ah; pop rsp; jmp far fword ptr [rbx];
0xffffffff81b7607e: add [rax], al; adc [rsi], ah; pop rsp; jmp far fword ptr [rbx];
0xffffffff81b7607f: add [rax], dl; pop rsp; jmp far fword ptr [rbx];
0xffffffff81b76080: adc [rsi], ah; pop rsp; jmp far fword ptr [rbx];
0xffffffff81b76081: pop rsp; jmp far fword ptr [rbx];
0xffffffff81b7627c: leave; sbb [rax], al; add [rax-0x5a00b13e], ah; sbb [rax], al; add al, bh; ret 0xff4e;
0xffffffff81b76289: ret 0xff4e;
0xffffffff81b9ca78: and al, 1; inc dword ptr [rax]; add [rax], al; add [rax], al; xchg esp, eax; ret;
0xffffffff81b9ca7a: inc dword ptr [rax]; add [rax], al; add [rax], al; xchg esp, eax; ret;
0xffffffff81b9ca7c: add [rax], al; add [rax], al; xchg esp, eax; ret;
0xffffffff81b9ca7e: add [rax], al; xchg esp, eax; ret;
0xffffffff81b9dc78: ret 0xef20;
0xffffffff81ca3231: mov esp, esi; push rbx; mov rbx, rdi; push rcx; call qword ptr [0xffffffff81b63b10];
0xffffffff81ca325a: ret 0xe000;
0xffffffff81ca3274: ret 0x874;
0xffffffff81ca3768: xchg esp, eax; ret 0xd008;
0xffffffff81ca3769: ret 0xd008;
0xffffffff81ca385a: ret 0x1574;
0xffffffff81ca38bd: or ecx, [rbx-0x2dce03bb]; mov [rip-0x751f9], eax; leave; mov eax, edx; ret;
0xffffffff81ca38be: mov eax, [rbp-4]; xor edx, edx; mov [rip-0x751f9], eax; leave; mov eax, edx; ret;
0xffffffff81ca38c0: cld; xor edx, edx; mov [rip-0x751f9], eax; leave; mov eax, edx; ret;
0xffffffff81ca38c1: xor edx, edx; mov [rip-0x751f9], eax; leave; mov eax, edx; ret;
0xffffffff81ca38c3: mov [rip-0x751f9], eax; leave; mov eax, edx; ret;
0xffffffff81ca38c4: add eax, 0xfff8ae07; leave; mov eax, edx; ret;
0xffffffff81ca39a5: ret 0xaf65;
0xffffffff81ca39b2: add al, ch; push 0x58ff3c3a; pop rdx; leave; ret;
0xffffffff81ca39b4: push 0x58ff3c3a; pop rdx; leave; ret;
0xffffffff81ca39b5: cmp bh, [rdi+rdi*8]; pop rax; pop rdx; leave; ret;
0xffffffff81ca39b6: cmp al, 0xff; pop rax; pop rdx; leave; ret;
0xffffffff81ca3ea1: ret 0xbe08;
0xffffffff81ca4122: ret 0x8a40;
0xffffffff81ca418b: ret 0x6986;
0xffffffff81ca484b: add rsp, 0x88; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca484c: add esp, 0x88; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca4a9f: ret 0x6c98;
0xffffffff81ca4c99: ret 0xfbe8;
0xffffffff81ca500e: mov al, 0x66; cmp edx, 0x940f2000; shl dword ptr [rsi+0x3d], 0; adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca5010: cmp edx, 0x940f2000; shl dword ptr [rsi+0x3d], 0; adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca5013: and [rdi], cl; xchg esp, eax; shl dword ptr [rsi+0x3d], 0; adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca5015: xchg esp, eax; shl dword ptr [rsi+0x3d], 0; adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca5016: shl dword ptr [rsi+0x3d], 0; adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca501a: adc [rdi], cl; xchg esp, eax; ret 0xd108;
0xffffffff81ca501c: xchg esp, eax; ret 0xd108;
0xffffffff81ca501d: ret 0xd108;
0xffffffff81ca5046: ret 7;
0xffffffff81ca508b: ret 7;
0xffffffff81ca514a: ret 0xc189;
0xffffffff81ca516d: mov [rip+0x7c144], rax; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca516e: mov [rip+0x7c144], eax; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca516f: add eax, 0x7c144; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca5171: rol dword ptr [rdi], 0; add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca5174: add rsp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca5175: add esp, 0x70; pop rbx; pop r12; pop rbp; ret;
0xffffffff81ca52a5: mov byte ptr [rdx], 0xe8; mov edx, 0x89fffff2; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81ca52a6: add ch, al; mov edx, 0x89fffff2; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81ca52a8: mov edx, 0x89fffff2; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81ca52d4: ret 0xf49;
0xffffffff81ca555e: cmovne esp, edx; mov rdx, [rip-0x1449e8]; and rax, r12; lea rdx, [rdx+rax+0xfd8]; mov rdi, [rdx]; call qword ptr [0xffffffff81b63c00];
0xffffffff81ca556d: xchg esp, eax; add bl, al; sldt [rax]; mov rdi, [rdx]; call qword ptr [0xffffffff81b63c00];
0xffffffff81ca55f6: ret 0x4a8d;
0xffffffff81ca5671: ret 0xe2eb;
0xffffffff81ca5ea6: ret 0xfc85;
0xffffffff81ca5ee6: or dword ptr [rax-0x39], 0xf6e45e05; inc eax; pop rsp; add [rcx+0x3305c748], al; in al, 0xf6; jmp qword ptr [rax-0x397effa4];
0xffffffff81ca5eeb: in al, 0xf6; inc eax; pop rsp; add [rcx+0x3305c748], al; in al, 0xf6; jmp qword ptr [rax-0x397effa4];
0xffffffff81ca5eed: inc eax; pop rsp; add [rcx+0x3305c748], al; in al, 0xf6; jmp qword ptr [rax-0x397effa4];
0xffffffff81ca5eef: pop rsp; add [rcx+0x3305c748], al; in al, 0xf6; jmp qword ptr [rax-0x397effa4];
0xffffffff81ca6008: ret 0xff41;
0xffffffff81ca6009: ret 0xff41;
0xffffffff81ca60ea: ret 0x445c;
0xffffffff81ca670f: ret 0xce60;
0xffffffff81ca713b: ret 0xba48;
0xffffffff81ca7246: ret 0xd460;
0xffffffff81ca7259: pop rsp; cld; inc dword ptr [rax-0x29]; mov byte ptr [rcx-0x7afa38b8], 0x5d; cld; jmp qword ptr [rax+0x6c];
0xffffffff81ca72bd: ret 0x2148;
0xffffffff81ca733a: pop rsp; cld; jmp qword ptr [rax];
0xffffffff81ca7353: xchg ebp, eax; pop rsp; cld; jmp qword ptr [rax+0x4881c169];
0xffffffff81ca7354: pop rsp; cld; jmp qword ptr [rax+0x4881c169];
0xffffffff81ca735f: pop rsp; cld; jmp rax;
0xffffffff81ca76e2: ret 0x8fa1;
0xffffffff81ca77ec: ret 0x8d28;
0xffffffff81ca7adc: ret 0x58a;
0xffffffff81ca7cf3: nop; xchg esp, eax; add [rcx+0x3605c748], al; push rdx; cld; jmp qword ptr [rax+0x4881c178];
0xffffffff81ca7cf4: xchg esp, eax; add [rcx+0x3605c748], al; push rdx; cld; jmp qword ptr [rax+0x4881c178];
0xffffffff81ca7eb8: ret 0xa881;
0xffffffff81ca801a: ret 0xff81;
0xffffffff81ca80b6: ret 0xfc4d;
0xffffffff81ca8bb0: ret 0x3e60;
0xffffffff81ca8bb2: ret 0xe881;
0xffffffff81ca8d4a: ret 0xf682;
0xffffffff81ca8d9d: ret 0x141;
0xffffffff81ca8fd7: ret 0x5d81;
0xffffffff81ca9247: cmp rax, 0x1000; cmovb rax, rdx; mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca9248: cmp eax, 0x1000; cmovb rax, rdx; mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca924b: add [rax], al; cmovb rax, rdx; mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca924d: cmovb rax, rdx; mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca924e: cmovb eax, edx; mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca9251: mov [rip-0x84fff], eax; xor eax, eax; leave; ret;
0xffffffff81ca9252: add eax, 0xfff7b001; xor eax, eax; leave; ret;
0xffffffff81ca9253: add [rax-0x3fce0009], esi; leave; ret;
0xffffffff81ca9255: idiv edi; xor eax, eax; leave; ret;
0xffffffff81ca9457: xadd edx, esp; add al, 9; ror byte ptr [rcx+0x1fd37d05], 1; add [rax-0x75], cl; add eax, 0x7e70e; call rax;
0xffffffff81ca9782: ret 0x7e3;
0xffffffff81ca98e3: ret 0x394c;
0xffffffff81ca9ada: ret 0x7e0;
0xffffffff81ca9b5f: ret 0x7581;
0xffffffff81ca9c15: add bh, bh; rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff81ca9c7b: xor edx, edx; cmp word ptr [rbp-2], 0xaa55; sete dl; leave; mov eax, edx; ret;
0xffffffff81ca9c7d: cmp word ptr [rbp-2], 0xaa55; sete dl; leave; mov eax, edx; ret;
0xffffffff81ca9c81: push rbp; stosb [rdi]; sete dl; leave; mov eax, edx; ret;
0xffffffff81ca9c82: stosb [rdi]; sete dl; leave; mov eax, edx; ret;
0xffffffff81ca9c83: sete dl; leave; mov eax, edx; ret;
0xffffffff81ca9c84: xchg esp, eax; ret 0x89c9;
0xffffffff81ca9c85: ret 0x89c9;
0xffffffff81ca9cc9: fmul st, dword ptr [rax-0x7b]; fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc031;
0xffffffff81ca9ccc: fisttp dword ptr [rdi], st; xchg esp, eax; ret 0xc031;
0xffffffff81ca9cce: xchg esp, eax; ret 0xc031;
0xffffffff81ca9e8c: xchg esp, eax; and al, 0xc8; ret 0x4981;
0xffffffff81ca9fe4: or byte ptr [rax+0x2b], 0x3d; xchg esp, eax; imul ebp, ebx, 0xffffffff; add rdi, rbx; or rdi, 0x67; call qword ptr [0xffffffff81b63bf0];
0xffffffff81ca9fe8: xchg esp, eax; imul ebp, ebx, 0xffffffff; add rdi, rbx; or rdi, 0x67; call qword ptr [0xffffffff81b63bf0];
0xffffffff81caa03c: ret 0xc289;
0xffffffff81caa44d: ret 0xa820;
0xffffffff81caa455: ret 0x44c3;
0xffffffff81caa631: ret 0x2b48;
0xffffffff81caa757: ret 0xff3d;
0xffffffff81caa842: add eax, [rbx+0x415bffc8]; pop rsp; pop rbp; ret;
0xffffffff81caa844: enter 0x5bff, 0x41; pop rsp; pop rbp; ret;
0xffffffff81caa8ad: sar dword ptr [rip+0x5bb1ebff], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81caa900: ret 0x92e0;
0xffffffff81caa91d: ret 0xeb10;
0xffffffff81caa97f: ret 0xa4eb;
0xffffffff81caaa33: ret 0xe3eb;
0xffffffff81caaa8f: ret 0xf789;
0xffffffff81caaf07: ret 0x394d;
0xffffffff81caaf6d: mov edx, 0x415bff3d; pop rsp; pop rbp; ret;
0xffffffff81cab101: idiv edi; dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cab103: dec dword ptr [rax-0x77]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cab18c: ret 0xe810;
0xffffffff81cab1cb: cmp eax, 0xc7c748ff; xchg esp, eax; test eax, 0x72e881af; idiv bh; call far fword ptr [rbx+0x41];
0xffffffff81cab1d0: xchg esp, eax; test eax, 0x72e881af; idiv bh; call far fword ptr [rbx+0x41];
0xffffffff81cab2f2: ret 0x1084;
0xffffffff81cab347: ret 0x148;
0xffffffff81caba15: ret 0xa000;
0xffffffff81caba9d: add ebx, 0xae058b48; sub esp, edi; jmp far fword ptr [rax+0x48247410];
0xffffffff81cabaa2: scasb [rdi]; sub esp, edi; jmp far fword ptr [rax+0x48247410];
0xffffffff81cabaa3: sub esp, edi; jmp far fword ptr [rax+0x48247410];
0xffffffff81cabad5: sub esp, edi; jmp far fword ptr [rax-0x587bf0f0];
0xffffffff81cabb48: ret 0xbe81;
0xffffffff81cabb79: ret 0x4ec0;
0xffffffff81cabbbc: cwde; sub esp, edi; dec dword ptr [rax-0x75]; add eax, 0xffeb7481; call rax;
0xffffffff81cabbbd: sub esp, edi; dec dword ptr [rax-0x75]; add eax, 0xffeb7481; call rax;
0xffffffff81cabc04: sub rsp, r15; inc dword ptr [rbp-0x149e8b2e]; sbb [rcx], ch; ret 0xd189;
0xffffffff81cabc05: sub esp, edi; inc dword ptr [rbp-0x149e8b2e]; sbb [rcx], ch; ret 0xd189;
0xffffffff81cabc0f: ret 0xd189;
0xffffffff81cabca9: ret 0x71e8;
0xffffffff81cabcba: ret 0x78e0;
0xffffffff81cabe46: ret 0x8b49;
0xffffffff81cac367: ret 0xa981;
0xffffffff81cac4e1: ret 0xdb81;
0xffffffff81cac596: add [rip+0x840], al; mov [rip-0x3cb12], eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac597: add eax, 0x840; mov [rip-0x3cb12], eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac59a: add [rax], al; mov [rip-0x3cb12], eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac59c: mov [rip-0x3cb12], eax; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac59d: add eax, 0xfffc34ee; add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac5a2: add rsp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac5a3: add esp, 0x30; pop rbx; pop rbp; ret;
0xffffffff81cac5ed: scasd [rdi]; sub eax, 0xff3da465; leave; ret;
0xffffffff81cac5ee: sub eax, 0xff3da465; leave; ret;
0xffffffff81cac6cc: or dh, [rbp-0x63]; add rsp, 0x100; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cac6ce: popfq; add rsp, 0x100; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cac9ac: ret 0x3a19;
0xffffffff81cacaac: sbb esp, edi; jmp far fword ptr [rax-0x7faf8af8];
0xffffffff81cacc10: ret 0x7281;
0xffffffff81cacd4f: ret 0xf48;
0xffffffff81cad0cb: ret 0xe454;
0xffffffff81cad2a0: std; adc esp, edi; jmp qword ptr [rax];
0xffffffff81cad2a1: adc esp, edi; jmp qword ptr [rax];
0xffffffff81cadacc: ret 0x8349;
0xffffffff81cadbba: ret 0x7c00;
0xffffffff81cadc01: ret 0x7c04;
0xffffffff81cadffb: ret 0x7bfc;
0xffffffff81cae2bb: adc [rdi-0x7f0f00c9], ebp; or eax, 0xfffc01b2; or al, dh; or byte ptr [rip+0x1f9816], 8; leave; ret;
0xffffffff81cae2c1: or eax, 0xfffc01b2; or al, dh; or byte ptr [rip+0x1f9816], 8; leave; ret;
0xffffffff81cae2c6: or al, dh; or byte ptr [rip+0x1f9816], 8; leave; ret;
0xffffffff81cae2c8: or byte ptr [rip+0x1f9816], 8; leave; ret;
0xffffffff81cae434: adc esp, edi; call qword ptr [rax];
0xffffffff81cae4d7: ret 0x7c40;
0xffffffff81cae571: ret 0xdc6d;
0xffffffff81cae98e: ret 0xeceb;
0xffffffff81caeba8: ret 0x5b81;
0xffffffff81caecce: ret 0xcba0;
0xffffffff81caeceb: ret 0xcba8;
0xffffffff81caed01: ret 0xcbb0;
0xffffffff81caeeb5: ret 0x576;
0xffffffff81caeed8: ret 0x3949;
0xffffffff81caf055: dec dword ptr [rax-0x77]; add eax, 0x7fd33; xor eax, eax; leave; ret;
0xffffffff81caf056: mov [rip+0x7fd33], rax; xor eax, eax; leave; ret;
0xffffffff81caf057: mov [rip+0x7fd33], eax; xor eax, eax; leave; ret;
0xffffffff81caf058: add eax, 0x7fd33; xor eax, eax; leave; ret;
0xffffffff81caf07c: dec dword ptr [rax-0x77]; add eax, 0x7fd04; xor eax, eax; leave; ret;
0xffffffff81caf07d: mov [rip+0x7fd04], rax; xor eax, eax; leave; ret;
0xffffffff81caf07e: mov [rip+0x7fd04], eax; xor eax, eax; leave; ret;
0xffffffff81caf07f: add eax, 0x7fd04; xor eax, eax; leave; ret;
0xffffffff81caf197: ret 0xf797;
0xffffffff81caf46a: ret 0xeda0;
0xffffffff81caf491: sub [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81caf4ff: ret 0x2b4c;
0xffffffff81caf5f4: push r12; mov r12d, edi; mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5f5: push rsp; mov r12d, edi; mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5f6: mov r12d, edi; mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5f7: mov esp, edi; mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5f8: cld; mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5f9: mov edi, 0x2ff; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5fa: inc dword ptr [rdx]; add [rax], al; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5fb: add al, [rax]; add [rbx+0x48], dl; sub esp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5fc: add [rax], al; push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5fd: add [rbx+0x48], dl; sub esp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5fe: push rbx; sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf5ff: sub rsp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf600: sub esp, 0x48; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf6d1: ret 0x5c0;
0xffffffff81caf7c2: ret 0xd480;
0xffffffff81caf966: xor eax, eax; and edi, 0x600000; cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf967: rol byte ptr [rcx+0x600000e7], 0; cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf968: and edi, 0x600000; cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf969: out 0, eax; add [rax], ah; cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf96b: add [rax], ah; cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf96d: add [rcx+0x600000ff], al; add [rdi], cl; xchg esp, eax; ror cl, 0xc3; xor eax, eax; ret;
0xffffffff81caf96e: cmp edi, 0x600000; sete al; leave; ret;
0xffffffff81caf96f: inc dword ptr [rax]; add [rax], ah; sete al; leave; ret;
0xffffffff81caf971: add [rax], ah; sete al; leave; ret;
0xffffffff81caf973: add [rdi], cl; xchg esp, eax; ror cl, 0xc3; xor eax, eax; ret;
0xffffffff81caf974: sete al; leave; ret;
0xffffffff81caf975: xchg esp, eax; ror cl, 0xc3; xor eax, eax; ret;
0xffffffff81caf9ab: mov esp, edi; mov edi, 0x2ff; call qword ptr [0xffffffff81c26fa0];
0xffffffff81caf9b7: ret 0x2581;
0xffffffff81cafaf3: ret 0xf44;
0xffffffff81cafb02: ret 0x4118;
0xffffffff81cafd8a: ret 0x6858;
0xffffffff81caffce: in al, 0x74; add eax, 0x60e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81caffd0: add eax, 0x60e8; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81cb0033: ret 0xc381;
0xffffffff81cb0110: ret 0x5d5b;
0xffffffff81cb0122: ret 0xe083;
0xffffffff81cb0325: ret 0xba81;
0xffffffff81cb0416: rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cb0443: mov rdx, r12; mov rsi, rbx; sub rsp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0444: mov edx, esp; mov rsi, rbx; sub rsp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0446: mov rsi, rbx; sub rsp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0447: mov esi, ebx; sub rsp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0449: sub rsp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb044a: sub esp, 0x18; mov dword ptr [rbp-0x38], 0x40000003; mov dword ptr [rbp-0x30], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0544: ret 0x8181;
0xffffffff81cb0708: lea rcx, [rbx+8]; mov rsi, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0709: lea ecx, [rbx+8]; mov rsi, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb070c: mov rsi, rbx; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb070d: mov esi, ebx; sub rsp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb070f: sub rsp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0710: sub esp, 0x10; mov dword ptr [rbp-0x18], 0x40000000; mov dword ptr [rbp-0x10], 0; call qword ptr [0xffffffff81c26f98];
0xffffffff81cb0b15: cmp bh, bh; xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81cb0b17: xor eax, eax; add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81cb0be5: ret 0x6d1;
0xffffffff81cb1634: ret 0xc7eb;
0xffffffff81cb1950: ret 0x433;
0xffffffff81cb1985: ret 0x8e6;
0xffffffff81cb19ba: ret 0xf306;
0xffffffff81cb19ef: ret 0x8eb;
0xffffffff81cb1c4c: ret 0xb60f;
0xffffffff81cb2107: and [rax-0x77], cl; fcomp st, dword ptr [rbx+0x41]; pop rsp; sub rax, rcx; pop rbp; ret;
0xffffffff81cb210a: fcomp st, dword ptr [rbx+0x41]; pop rsp; sub rax, rcx; pop rbp; ret;
0xffffffff81cb210d: pop rsp; sub rax, rcx; pop rbp; ret;
0xffffffff81cb2165: ret 0xff39;
0xffffffff81cb2368: ret 0x8148;
0xffffffff81cb244e: pop rsp; pop rbp; sub rax, rdx; ret;
0xffffffff81cb247c: ret 0x4881;
0xffffffff81cb25b6: xor eax, 0x896681b6; xchg esp, eax; add eax, esp; add [rax], al; add bl, ch; iretd;
0xffffffff81cb25bb: xchg esp, eax; add eax, esp; add [rax], al; add bl, ch; iretd;
0xffffffff81cb2648: ret 0xe881;
0xffffffff81cb288b: ret 0xc8e8;
0xffffffff81cb2a5d: ret 0x21e8;
0xffffffff81cb2ae1: ret 0x72e8;
0xffffffff81cb2af0: ret 0x29f8;
0xffffffff81cb2bdf: ret 0x4c98;
0xffffffff81cb2c4e: ret 0xc801;
0xffffffff81cb2ca9: sub eax, 0xff3d3daa; pop rax; pop rdx; leave; ret;
0xffffffff81cb2cab: stosb [rdi]; cmp eax, 0x5a58ff3d; leave; ret;
0xffffffff81cb2cef: sub eax, 0xff3d3d64; pop rax; pop rdx; leave; ret;
0xffffffff81cb2cf1: cmp eax, 0x5a58ff3d; leave; ret;
0xffffffff81cb2cf2: cmp eax, 0x5a58ff3d; leave; ret;
0xffffffff81cb2d7a: ret 0x1c83;
0xffffffff81cb30f4: out 0x8e, eax; dec dword ptr [rax-0x77]; add eax, 0x7e6aa; leave; xor eax, eax; ret;
0xffffffff81cb30f6: dec dword ptr [rax-0x77]; add eax, 0x7e6aa; leave; xor eax, eax; ret;
0xffffffff81cb30f7: mov [rip+0x7e6aa], rax; leave; xor eax, eax; ret;
0xffffffff81cb30f8: mov [rip+0x7e6aa], eax; leave; xor eax, eax; ret;
0xffffffff81cb30f9: add eax, 0x7e6aa; leave; xor eax, eax; ret;
0xffffffff81cb3193: ret 0x3d38;
0xffffffff81cb3d7b: sub eax, 0xff39a64e; leave; xor eax, eax; ret;
0xffffffff81cb3d7e: cmpsb [rsi], [rdi]; cmp edi, edi; leave; xor eax, eax; ret;
0xffffffff81cb3d7f: cmp edi, edi; leave; xor eax, eax; ret;
0xffffffff81cb3d97: data16 ret 0x4881;
0xffffffff81cb3e7c: mov edx, 0xffffffea; leave; mov eax, edx; ret;
0xffffffff81cb40c8: ret 0x4c81;
0xffffffff81cb422d: ret 0xbf81;
0xffffffff81cb479e: ret 0xe400;
0xffffffff81cb4a07: sar byte ptr [rax+6], 0x89; add eax, 0x7d4b0; leave; mov eax, 1; ret;
0xffffffff81cb4a0a: mov [rip+0x7d4b0], eax; leave; mov eax, 1; ret;
0xffffffff81cb4a0b: add eax, 0x7d4b0; leave; mov eax, 1; ret;
0xffffffff81cb4b37: ret 0x1ce8;
0xffffffff81cb4cf4: sbb eax, 0x415bff3d; pop rsp; pop rbp; ret;
0xffffffff81cb4d54: ret 0xe2c1;
0xffffffff81cb4e23: cmp eax, 0xebc3ffff; fstp qword ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff81cb4e28: fstp qword ptr [rbx+0x41], st; pop rsp; pop rbp; ret;
0xffffffff81cb4e35: ret 0x2b80;
0xffffffff81cb4fd9: ret 0x4848;
0xffffffff81cb4fdd: ret 0x8a45;
0xffffffff81cb5029: xchg esp, eax; sti; jmp far fword ptr [rax+0x483c7410];
0xffffffff81cb50b8: leave; mov rdi, rbx; call qword ptr [0xffffffff81c27008];
0xffffffff81cb5493: ret 0x3d15;
0xffffffff81cb54bf: ret 0x386d;
0xffffffff81cb57d8: ret 0x1175;
0xffffffff81cb5a6d: ret 0x1520;
0xffffffff81cb5bfa: ret 0xb250;
0xffffffff81cb5cda: ret 0xeadb;
0xffffffff81cb5d63: ret 0x458a;
0xffffffff81cb5e75: ret 0x8381;
0xffffffff81cb5fe7: mov esp, edi; mov rdi, [rip-0x8f4a8]; push rbx; call rax;
0xffffffff81cb605d: ret 0xc389;
0xffffffff81cb6077: test byte ptr [rax-0x75], 0x3d; leave; or dh, bh; dec dword ptr [rax-0x75]; add eax, 0xfff70ab2; call rax;
0xffffffff81cb607b: leave; or dh, bh; dec dword ptr [rax-0x75]; add eax, 0xfff70ab2; call rax;
0xffffffff81cb64dd: ret 0x8981;
0xffffffff81cb662d: ret 0x1575;
0xffffffff81cb680f: ret 0xb981;
0xffffffff81cb687e: ret 0x1fd0;
0xffffffff81cb6a05: ret 0x3d80;
0xffffffff81cb6a3e: ret 0x1c75;
0xffffffff81cb6ae4: ret 0x7004;
0xffffffff81cb6b19: ret 0x7000;
0xffffffff81cb6c0a: ret 0xc781;
0xffffffff81cb6e91: ret 0xb8;
0xffffffff81cb7076: ret 0x70c0;
0xffffffff81cb71a5: ret 0x42c5;
0xffffffff81cb71c0: ret 0x42d5;
0xffffffff81cb7204: cmp rax, 0xfffffffffffff001; cmovb eax, ebx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff81cb7205: cmp eax, 0xfffff001; cmovb eax, ebx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff81cb720a: cmovb eax, ebx; add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff81cb720d: add rsp, 0x50; pop rbx; pop rbp; ret;
0xffffffff81cb720e: add esp, 0x50; pop rbx; pop rbp; ret;
0xffffffff81cb7748: ret 0x6581;
0xffffffff81cb7a37: ret 0x673;
0xffffffff81cb7ac6: pushfq; pop rsp; add [rax], al; leave; ret;
0xffffffff81cb7ac7: pop rsp; add [rax], al; leave; ret;
0xffffffff81cb7e0a: ret 0x7490;
0xffffffff81cb7ed2: ret 0xd021;
0xffffffff81cb81d2: add [rbp-0x3a], ah; add eax, 0x7e36477a; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81cb81d5: add eax, 0x7e36477a; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81cb8259: ret 0xeb81;
0xffffffff81cb825c: neg dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cb83ca: ret 0x8e96;
0xffffffff81cb855f: inc dword ptr [rbp-0x74f68a40]; cld; mov [rip-0x912cd], eax; leave; mov eax, 1; ret;
0xffffffff81cb8561: shl byte ptr [rbp+9], 0x8b; cld; mov [rip-0x912cd], eax; leave; mov eax, 1; ret;
0xffffffff81cb8563: or [rbx+0x589fc45], ecx; xor ebp, ebp; idiv bh; leave; mov eax, 1; ret;
0xffffffff81cb8564: mov eax, [rbp-4]; mov [rip-0x912cd], eax; leave; mov eax, 1; ret;
0xffffffff81cb8566: cld; mov [rip-0x912cd], eax; leave; mov eax, 1; ret;
0xffffffff81cb8567: mov [rip-0x912cd], eax; leave; mov eax, 1; ret;
0xffffffff81cb8568: add eax, 0xfff6ed33; leave; mov eax, 1; ret;
0xffffffff81cb8569: xor ebp, ebp; idiv bh; leave; mov eax, 1; ret;
0xffffffff81cb856a: in eax, dx; idiv bh; leave; mov eax, 1; ret;
0xffffffff81cb856b: idiv bh; leave; mov eax, 1; ret;
0xffffffff81cb8666: ret 0xf883;
0xffffffff81cb8863: or eax, 0xfffb5c08; or al, dh; or byte ptr [rip+0x1ef26c], 8; leave; ret;
0xffffffff81cb8864: or [rbx+rdi*8-1], bl; or al, dh; or byte ptr [rip+0x1ef26c], 8; leave; ret;
0xffffffff81cb8868: or al, dh; or byte ptr [rip+0x1ef26c], 8; leave; ret;
0xffffffff81cb886a: or byte ptr [rip+0x1ef26c], 8; leave; ret;
0xffffffff81cb886f: add [rax], cl; leave; ret;
0xffffffff81cb8b4c: ret 0x589;
0xffffffff81cb8b9a: ret 0x4804;
0xffffffff81cb8bb7: or dword ptr [rax-0x39], 0xb05571c6; sub eax, 0xff396b7c; leave; ret;
0xffffffff81cb8bbe: sub eax, 0xff396b7c; leave; ret;
0xffffffff81cb8bc1: imul edi, [rcx], 0xffffffff; leave; ret;
0xffffffff81cb8bc2: cmp edi, edi; leave; ret;
0xffffffff81cb8cac: add al, ch; xor ecx, [rdi]; add [rax], al; pop rax; leave; ret;
0xffffffff81cb8cae: xor ecx, [rdi]; add [rax], al; pop rax; leave; ret;
0xffffffff81cb8caf: sldt [rax]; pop rax; leave; ret;
0xffffffff81cb8cb0: add [rax], al; pop rax; leave; ret;
0xffffffff81cb8f51: xchg esp, eax; ret 0xe881;
0xffffffff81cb9390: ret 0xb470;
0xffffffff81cb94a4: ret 0x340;
0xffffffff81cb9505: ret 0x4181;
0xffffffff81cb9c03: leave; cmp eax, [rbx-1]; pop rbp; mov [rip+0x1fea79], rax; xor eax, eax; ret;
0xffffffff81cb9d94: ret 0xe883;
0xffffffff81cba06e: ret 0x4e3;
0xffffffff81cba244: ret 0xda80;
0xffffffff81cba2ee: ret 0x8081;
0xffffffff81cba2fb: ret 0xa7bc;
0xffffffff81cba3f8: ret 0xe0a0;
0xffffffff81cba59d: ret 0xafc8;
0xffffffff81cba76b: ret 0x773;
0xffffffff81cba7d2: ret 0xff3c;
0xffffffff81cba919: mov dword ptr [rip+0x2007cd], 1; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cba921: add [rax], al; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cbabd5: add ecx, 0x7be811ea; mov esi, 0x415bff3c; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cbabdb: mov esi, 0x415bff3c; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cbadf2: ret 0x4481;
0xffffffff81cbb193: add [rax], al; add cl, ch; pop rsp; add [rax], eax; add [rcx+0x63], cl; iretd;
0xffffffff81cbb195: add cl, ch; pop rsp; add [rax], eax; add [rcx+0x63], cl; iretd;
0xffffffff81cbb197: pop rsp; add [rax], eax; add [rcx+0x63], cl; iretd;
0xffffffff81cbb1af: ret 0x8d81;
0xffffffff81cbb371: ret 0xe560;
0xffffffff81cbb497: ret 0x5881;
0xffffffff81cbb677: ret 0x488d;
0xffffffff81cbb718: ret 0x4581;
0xffffffff81cbb7ca: ret 0x8e62;
0xffffffff81cbb7f5: ret 0x7481;
0xffffffff81cbbb92: ret 0xf4b8;
0xffffffff81cbbbaf: ret 0xe72;
0xffffffff81cbbc5d: ret 0xe1eb;
0xffffffff81cbbdcf: mov dword ptr [rax+9], 0x894881c3; in eax, 0xe8; xchg esp, eax; mov edx, 0xc031ff67; pop rbp; ret;
0xffffffff81cbbdd6: in eax, 0xe8; xchg esp, eax; mov edx, 0xc031ff67; pop rbp; ret;
0xffffffff81cbbdd8: xchg esp, eax; mov edx, 0xc031ff67; pop rbp; ret;
0xffffffff81cbbf89: ret 0xe8e0;
0xffffffff81cbc1bf: add rsp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cbc1c0: add esp, 0x50; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cbc3a1: add bl, ch; fnsave [rcx]; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81cbc3a3: fnsave [rcx]; ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81cbc3a4: xor eax, eax; mov rbx, [rbp-8]; leave; ret;
0xffffffff81cbc3a5: ror byte ptr [rax-0x75], 0x5d; clc; leave; ret;
0xffffffff81cbc3f2: sti; push qword ptr [rbx+6]; mov [rip-0x4c858], eax; leave; xor eax, eax; ret;
0xffffffff81cbc3f3: push qword ptr [rbx+6]; mov [rip-0x4c858], eax; leave; xor eax, eax; ret;
0xffffffff81cbc3f6: mov [rip-0x4c858], eax; leave; xor eax, eax; ret;
0xffffffff81cbc3f7: add eax, 0xfffb37a8; leave; xor eax, eax; ret;
0xffffffff81cbc40f: in eax, 0xe8; sbb esp, esp; push rbp; call far fword ptr [rbp-1];
0xffffffff81cbc411: sbb esp, esp; push rbp; call far fword ptr [rbp-1];
0xffffffff81cbc48c: ret 0x555;
0xffffffff81cbc4c5: rcr byte ptr [rbx+0x41], 1; pop rsp; pop rbp; ret;
0xffffffff81cbc5f9: test eax, 0x894881a0; in eax, 0xe8; pop rsp; push rax; call far fword ptr [rbp-0x3d];
0xffffffff81cbc5fe: in eax, 0xe8; pop rsp; push rax; call far fword ptr [rbp-0x3d];
0xffffffff81cbc600: pop rsp; push rax; call far fword ptr [rbp-0x3d];
0xffffffff81cbc636: ret 0xa8;
0xffffffff81cbc7bc: cdq; mov [0x41c0315b0b0fff3c], al; pop rsp; pop rbp; ret;
0xffffffff81cbc7bd: mov [0x41c0315b0b0fff3c], al; pop rsp; pop rbp; ret;
0xffffffff81cbc853: mov word ptr [rip+0x223c94], 0xffff; leave; mov eax, 1; ret;
0xffffffff81cbc856: xchg esp, eax; cmp al, 0x22; add bh, bh; dec ecx; mov eax, 1; ret;
0xffffffff81cbc85c: leave; mov eax, 1; ret;
0xffffffff81cbc8b8: or al, 0x43; dec dword ptr [rax-0x77]; add eax, 0xffea73d6; pop rax; leave; ret;
0xffffffff81cbc8b9: dec dword ptr [r8-0x77]; add eax, 0xffea73d6; pop rax; leave; ret;
0xffffffff81cbc8ba: dec dword ptr [rax-0x77]; add eax, 0xffea73d6; pop rax; leave; ret;
0xffffffff81cbc8bb: mov [rip-0x158c2a], rax; pop rax; leave; ret;
0xffffffff81cbc8bc: mov [rip-0x158c2a], eax; pop rax; leave; ret;
0xffffffff81cbc8bd: add eax, 0xffea73d6; pop rax; leave; ret;
0xffffffff81cbcabb: ret 0x67c;
0xffffffff81cbcb09: ret 0xae80;
0xffffffff81cbcb17: ret 0xae50;
0xffffffff81cbccec: adc eax, [rax]; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cbce3b: ret 0x1f78;
0xffffffff81cbce55: ret 0x1f68;
0xffffffff81cbce85: inc r14d; add eax, 0x223bdd; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce86: inc r14d; add eax, 0x223bdd; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce87: inc esi; add eax, 0x223bdd; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce89: add eax, 0x223bdd; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce8a: fnstsw [rbx]; and al, [rax]; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce8c: and al, [rax]; add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce8e: add [rcx-0x7d], al; leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbce91: leave; dec dword ptr [rax-0x39]; ret;
0xffffffff81cbd07c: stosd [rdi]; add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cbd07d: add rsp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cbd07e: add esp, 0x18; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cbd080: sbb [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81cbd0de: add rsp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81cbd0df: add esp, 0x18; pop rbx; pop rbp; ret;
0xffffffff81cbd3e2: ret 0xa94;
0xffffffff81cbd64a: ret 0x77e9;
0xffffffff81cbd760: ret 0xfff5;
0xffffffff81cbdc78: ret 0x4000;
0xffffffff81cbdd7a: ret 0x8440;
0xffffffff81cbde93: ret 0x3c8b;
0xffffffff81cbe382: ret 0x4e80;
0xffffffff81cbe726: fdiv st, qword ptr [rax-0x7cd4177f]; cmp al, 0xff; pop rax; leave; ret;
0xffffffff81cbe728: sub eax, 0xff3c832b; pop rax; leave; ret;
0xffffffff81cbe72b: cmp dword ptr [rdi+rdi*8], 0x58; leave; ret;
0xffffffff81cbe72c: cmp al, 0xff; pop rax; leave; ret;
0xffffffff81cbea7e: ret 0xebeb;
0xffffffff81cbea88: xor [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cbeab6: ret 0x20a0;
0xffffffff81cbec8a: ret 0x3945;
0xffffffff81cbecf8: ret 0x1fa0;
0xffffffff81cbedc1: ret 0x7d8b;
0xffffffff81cbf1e0: ret 0x4818;
0xffffffff81cbf322: ret 0xea49;
0xffffffff81cbf36c: ret 0x8341;
0xffffffff81cbf390: ret 0xfab0;
0xffffffff81cbf40e: ret 0x9848;
0xffffffff81cbf5d3: ret 0x8b42;
0xffffffff81cbf7f2: ret 0xe13d;
0xffffffff81cbfb01: sub esp, 8; sar rdi, 6; shl rdi, 0xc; add rdi, [rip-0x15ef93]; call r14;
0xffffffff81cbfbbb: ret 0xead1;
0xffffffff81cbfbd1: ret 0x5eb;
0xffffffff81cbfde7: mov [rbx+0x41], ebx; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cbfe4a: ret 0x508d;
0xffffffff81cbfe9e: ret 0xc68;
0xffffffff81cbff22: add [rbp+0xb], dh; shl rax, 0xc; mov [rip-0x8aad0], rax; leave; xor eax, eax; ret;
0xffffffff81cbff25: shl rax, 0xc; mov [rip-0x8aad0], rax; leave; xor eax, eax; ret;
0xffffffff81cbff26: shl eax, 0xc; mov [rip-0x8aad0], rax; leave; xor eax, eax; ret;
0xffffffff81cbff28: or al, 0x48; mov [rip-0x8aad0], eax; leave; xor eax, eax; ret;
0xffffffff81cbff29: mov [rip-0x8aad0], rax; leave; xor eax, eax; ret;
0xffffffff81cbff2a: mov [rip-0x8aad0], eax; leave; xor eax, eax; ret;
0xffffffff81cbff2b: add eax, 0xfff75530; leave; xor eax, eax; ret;
0xffffffff81cbff2d: push rbp; idiv edi; leave; xor eax, eax; ret;
0xffffffff81cbff2e: idiv edi; leave; xor eax, eax; ret;
0xffffffff81cbff30: leave; xor eax, eax; ret;
0xffffffff81cc009c: ret 0xb848;
0xffffffff81cc00b7: pop rsp; pop r13; mov [rip+0x220bff], rax; pop r14; pop rbp; ret;
0xffffffff81cc025b: shl byte ptr [rax+0x5b], 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cc0452: ret 0xfaf7;
0xffffffff81cc08e1: ficomp st, word ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cc0924: sub eax, 0xff38daa5; leave; ret;
0xffffffff81cc0928: cmp bh, bh; leave; ret;
0xffffffff81cc0af6: rcr byte ptr [rbx+0x41], 1; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cc0c6d: ret 0xfff;
0xffffffff81cc0eb6: ret 0xb0f4;
0xffffffff81cc0f6c: ret 0x8945;
0xffffffff81cc134c: ret 0xffff;
0xffffffff81cc15ad: or bh, [rax+0xa]; cmovbe eax, [rip-0x8b5fa]; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15ae: mov eax, 0xa; cmovbe eax, [rip-0x8b5fa]; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b1: add [rax], al; cmovbe eax, [rip-0x8b5fa]; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b2: add [rdi], cl; add eax, 0xfff74a06; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b3: cmovbe eax, [rip-0x8b5fa]; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b5: add eax, 0xfff74a06; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b7: idiv rdi; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15b8: idiv edi; mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15ba: mov [rip-0x8b600], eax; mov eax, 1; leave; ret;
0xffffffff81cc15bb: add eax, 0xfff74a00; mov eax, 1; leave; ret;
0xffffffff81cc15bd: idiv rdi; mov eax, 1; leave; ret;
0xffffffff81cc15be: idiv edi; mov eax, 1; leave; ret;
0xffffffff81cc15dd: add [rsi+0x1b8ff], ecx; add [rax], al; leave; ret;
0xffffffff81cc1690: ret 0x4830;
0xffffffff81cc1ae4: xchg esp, eax; or [rdi], al; add [rax], al; add [rax], ah; call far fword ptr [rbp+0x48];
0xffffffff81cc1c9a: ret 0x6de8;
0xffffffff81cc1cd0: ret 0x37e8;
0xffffffff81cc1eab: test eax, 0x8948ff8e; add eax, 0x70593; mov eax, 1; leave; ret;
0xffffffff81cc1ead: dec dword ptr [rax-0x77]; add eax, 0x70593; mov eax, 1; leave; ret;
0xffffffff81cc1eae: mov [rip+0x70593], rax; mov eax, 1; leave; ret;
0xffffffff81cc1eaf: mov [rip+0x70593], eax; mov eax, 1; leave; ret;
0xffffffff81cc1eb0: add eax, 0x70593; mov eax, 1; leave; ret;
0xffffffff81cc1f22: fild st, dword ptr [rax]; add [rax], al; add rsp, 0x18; leave; ret;
0xffffffff81cc1f24: add [rax], al; add rsp, 0x18; leave; ret;
0xffffffff81cc1fa8: pop rax; pop rdx; leave; ret;
0xffffffff81cc1fa9: pop rdx; leave; ret;
0xffffffff81cc1fc3: mov [rax-0x76b70072], ebp; add eax, 0x70482; mov eax, 1; leave; ret;
0xffffffff81cc1fc4: test al, 0x8e; dec dword ptr [rax-0x77]; add eax, 0x70482; mov eax, 1; leave; ret;
0xffffffff81cc1fc6: dec dword ptr [rax-0x77]; add eax, 0x70482; mov eax, 1; leave; ret;
0xffffffff81cc1fc7: mov [rip+0x70482], rax; mov eax, 1; leave; ret;
0xffffffff81cc1fc8: mov [rip+0x70482], eax; mov eax, 1; leave; ret;
0xffffffff81cc1fc9: add eax, 0x70482; mov eax, 1; leave; ret;
0xffffffff81cc1fcb: add al, 7; add [rax+1], bh; leave; ret;
0xffffffff81cc202f: mov esp, 0xe881c6fe; movsxd edi, [rsi-0x76b70001]; add eax, 0xfffade71; add rsp, 0x18; leave; ret;
0xffffffff81cc2030: inc dh; sub eax, 0xffffbe63; mov [rip-0x5218f], rax; add rsp, 0x18; leave; ret;
0xffffffff81cc2031: mov byte ptr [rcx-0x419c18], 0xff; mov [rip-0x5218f], rax; add rsp, 0x18; leave; ret;
0xffffffff81cc2032: sub eax, 0xffffbe63; mov [rip-0x5218f], rax; add rsp, 0x18; leave; ret;
0xffffffff81cc2034: movsxd edi, [rsi-0x76b70001]; add eax, 0xfffade71; add rsp, 0x18; leave; ret;
0xffffffff81cc2035: mov esi, 0x8948ffff; add eax, 0xfffade71; add rsp, 0x18; leave; ret;
0xffffffff81cc2037: dec dword ptr [rax-0x77]; add eax, 0xfffade71; add rsp, 0x18; leave; ret;
0xffffffff81cc2038: mov [rip-0x5218f], rax; add rsp, 0x18; leave; ret;
0xffffffff81cc2039: mov [rip-0x5218f], eax; add rsp, 0x18; leave; ret;
0xffffffff81cc203a: add eax, 0xfffade71; add rsp, 0x18; leave; ret;
0xffffffff81cc203f: add rsp, 0x18; leave; ret;
0xffffffff81cc2040: add esp, 0x18; leave; ret;
0xffffffff81cc2107: dec dword ptr [rax-0x77]; add eax, 0x70351; mov eax, 1; leave; ret;
0xffffffff81cc2108: mov [rip+0x70351], rax; mov eax, 1; leave; ret;
0xffffffff81cc2109: mov [rip+0x70351], eax; mov eax, 1; leave; ret;
0xffffffff81cc210a: add eax, 0x70351; mov eax, 1; leave; ret;
0xffffffff81cc210b: push rcx; add eax, [rdi]; add [rax+1], bh; leave; ret;
0xffffffff81cc2130: dec dword ptr [rax-0x77]; add eax, 0x70320; mov eax, 1; leave; ret;
0xffffffff81cc2131: mov [rip+0x70320], rax; mov eax, 1; leave; ret;
0xffffffff81cc2132: mov [rip+0x70320], eax; mov eax, 1; leave; ret;
0xffffffff81cc2133: add eax, 0x70320; mov eax, 1; leave; ret;
0xffffffff81cc2135: add eax, [rdi]; add [rax+1], bh; leave; ret;
0xffffffff81cc2137: add [rax+1], bh; leave; ret;
0xffffffff81cc21d5: ret 0xffbc;
0xffffffff81cc227d: ret 0xc3a;
0xffffffff81cc234a: ret 0x6600;
0xffffffff81cc267a: mov cl, 0x42; dec dword ptr [rax-0x77]; add eax, 0xfffad8c4; xor eax, eax; leave; ret;
0xffffffff81cc267c: dec dword ptr [rax-0x77]; add eax, 0xfffad8c4; xor eax, eax; leave; ret;
0xffffffff81cc267d: mov [rip-0x5273c], rax; xor eax, eax; leave; ret;
0xffffffff81cc267e: mov [rip-0x5273c], eax; xor eax, eax; leave; ret;
0xffffffff81cc267f: add eax, 0xfffad8c4; xor eax, eax; leave; ret;
0xffffffff81cc2684: xor eax, eax; leave; ret;
0xffffffff81cc290c: lodsb [rsi]; dec dword ptr [rax-0x77]; add eax, 0xffea15ca; pop rax; leave; ret;
0xffffffff81cc290e: dec dword ptr [rax-0x77]; add eax, 0xffea15ca; pop rax; leave; ret;
0xffffffff81cc290f: mov [rip-0x15ea36], rax; pop rax; leave; ret;
0xffffffff81cc2910: mov [rip-0x15ea36], eax; pop rax; leave; ret;
0xffffffff81cc2911: add eax, 0xffea15ca; pop rax; leave; ret;
0xffffffff81cc2926: add al, ch; mov esp, 0xe8000002; leave; add al, [rax]; add [rax-0x39], cl; ret 0x2291;
0xffffffff81cc2928: mov esp, 0xe8000002; leave; add al, [rax]; add [rax-0x39], cl; ret 0x2291;
0xffffffff81cc2929: add al, [rax]; add al, ch; leave; add al, [rax]; add [rax-0x39], cl; ret 0x2291;
0xffffffff81cc292b: add al, ch; leave; add al, [rax]; add [rax-0x39], cl; ret 0x2291;
0xffffffff81cc292d: leave; add al, [rax]; add [rax-0x39], cl; ret 0x2291;
0xffffffff81cc2933: ret 0x2291;
0xffffffff81cc2c3f: ret 0x2f49;
0xffffffff81cc2ed4: ret 0x6618;
0xffffffff81cc33a9: ret 0xa110;
0xffffffff81cc343a: ret 0x4b19;
0xffffffff81cc3773: ret 0x68d0;
0xffffffff81cc3aad: ret 0xbcbc;
0xffffffff81cc3aae: mov esp, 0xe881b1bc; leave; mov edx, 0xc748ff8e; ret 0xbcc5;
0xffffffff81cc3ab3: leave; mov edx, 0xc748ff8e; ret 0xbcc5;
0xffffffff81cc3ab9: ret 0xbcc5;
0xffffffff81cc3ae7: ret 0xbcca;
0xffffffff81cc3f4e: ret 0x7420;
0xffffffff81cc407a: ret 0x5297;
0xffffffff81cc4a14: ret 0x6940;
0xffffffff81cc4bbc: ret 0xe975;
0xffffffff81cc4c3f: ret 0x7e60;
0xffffffff81cc509b: ret 0x2e84;
0xffffffff81cc5190: ret 0xd089;
0xffffffff81cc5445: ret 0x4108;
0xffffffff81cc55e6: ret 0x4a02;
0xffffffff81cc5701: ret 0x870f;
0xffffffff81cc5872: ret 0x3ea7;
0xffffffff81cc588f: ret 0x1faa;
0xffffffff81cc5cab: mov ebx, 0x41c0315b; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cc5cd0: ret 0xa1c0;
0xffffffff81cc5cff: ret 0x11eb;
0xffffffff81cc5d60: pop rsp; fnstcw [rax]; call far fword ptr [rbp-0x3d];
0xffffffff81cc5d71: ret 0x2360;
0xffffffff81cc5d8e: ret 0x2372;
0xffffffff81cc5da8: ret 0x2384;
0xffffffff81cc5dc2: ret 0x2396;
0xffffffff81cc5dde: ret 0x23a8;
0xffffffff81cc5dfd: ret 0x23b4;
0xffffffff81cc5e1d: ret 0x23c5;
0xffffffff81cc5e3d: ret 0x23d3;
0xffffffff81cc5fcc: push rax; sbb [rax], al; add [rax-0x75], cl; clc; leave; ret;
0xffffffff81cc5fcd: sbb [rax], al; add [rax-0x75], cl; clc; leave; ret;
0xffffffff81cc5fce: add [rax], al; mov rax, [rbp-8]; leave; ret;
0xffffffff81cc5fcf: add [rax-0x75], cl; clc; leave; ret;
0xffffffff81cc5fd0: mov rax, [rbp-8]; leave; ret;
0xffffffff81cc5fd1: mov eax, [rbp-8]; leave; ret;
0xffffffff81cc6262: sbb [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cc643a: ret 0xe8c0;
0xffffffff81cc6495: ret 0x810;
0xffffffff81cc64c7: ret 0xe8be;
0xffffffff81cc6568: ret 0xb70;
0xffffffff81cc656b: sub eax, 0xff5af3a6; add rsp, 0x40; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cc656c: sub eax, 0xff5af3a6; add rsp, 0x40; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cc6572: add rsp, 0x40; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cc6573: add esp, 0x40; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81cc679c: ret 0xbfe8;
0xffffffff81cc692d: ret 0xff5b;
0xffffffff81cc692e: ret 0xff5b;
0xffffffff81cc6a9c: ret 0x3878;
0xffffffff81cc6ac4: add rsp, 0x60; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cc6ac5: add esp, 0x60; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cc6bb1: ret 0xc2ff;
0xffffffff81cc6bb3: ret 0x3489;
0xffffffff81cc6bb8: ret 0x81c3;
0xffffffff81cc6bd9: ret 0x39e0;
0xffffffff81cc6be4: ret 0xaf70;
0xffffffff81cc6bed: add rsp, 0x38; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cc6bee: add esp, 0x38; mov eax, ebx; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cc6c2e: or ebp, [rdx-0x34]; or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb865; pop rax; leave; ret;
0xffffffff81cc6c2f: push 0xffffffffffffffcc; or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb865; pop rax; leave; ret;
0xffffffff81cc6c30: int3; or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb865; pop rax; leave; ret;
0xffffffff81cc6c31: or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb865; pop rax; leave; ret;
0xffffffff81cc6c38: sub eax, 0xff5bb865; pop rax; leave; ret;
0xffffffff81cc6c96: sub eax, 0xff59b9f4; pop rax; leave; ret;
0xffffffff81cc6ce6: adc [rsi], bl; pop rsp; call far fword ptr [rdx-0x77];
0xffffffff81cc6ce8: pop rsp; call far fword ptr [rdx-0x77];
0xffffffff81cc6dae: add rsp, 0x38; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81cc6daf: add esp, 0x38; xor eax, eax; pop rbx; pop rbp; ret;
0xffffffff81cc6df0: int3; or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb6a5; pop rax; leave; ret;
0xffffffff81cc6df1: or dword ptr [rax-0x39], 0xb23a54c7; sub eax, 0xff5bb6a5; pop rax; leave; ret;
0xffffffff81cc6df8: sub eax, 0xff5bb6a5; pop rax; leave; ret;
0xffffffff81cc7200: push r8; bts [rip+0x6d2f5], rax; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7201: push rax; bts [rip+0x6d2f5], rax; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7203: bts [rip+0x6d2f5], rax; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7204: bts [rip+0x6d2f5], eax; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7205: stosd [rdi]; add eax, 0x6d2f5; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7206: add eax, 0x6d2f5; mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc7207: cmc; rol byte ptr [rsi], cl; add [rdx+1], bh; leave; mov eax, edx; ret;
0xffffffff81cc7208: rol byte ptr [rsi], cl; add [rdx+1], bh; leave; mov eax, edx; ret;
0xffffffff81cc720a: add [rdx+1], bh; leave; mov eax, edx; ret;
0xffffffff81cc720b: mov edx, 1; leave; mov eax, edx; ret;
0xffffffff81cc720c: add [rax], eax; add [rax], al; leave; mov eax, edx; ret;
0xffffffff81cc720e: add [rax], al; leave; mov eax, edx; ret;
0xffffffff81cc7210: leave; mov eax, edx; ret;
0xffffffff81cc73fa: ret 0x8de1;
0xffffffff81cc7550: ret 0x8747;
0xffffffff81cc768f: ret 0x87bb;
0xffffffff81cc7793: pop rsp; dec ecx; ret;
0xffffffff81cc77b1: ret 0x35be;
0xffffffff81cc7814: movsxd ebp, [rip-0x76feffde]; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cc7815: sub eax, 0x89010022; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cc78f7: ret 0x88f6;
0xffffffff81cc7944: ret 0x8924;
0xffffffff81cc795e: add [rbx+0x41], bl; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cc799f: ret 0x33be;
0xffffffff81cc79ba: ret 0x3cbe;
0xffffffff81cc79f0: ret 0x50be;
0xffffffff81cc7a0b: ret 0x59be;
0xffffffff81cc7a50: ret 0x9e57;
0xffffffff81cc7a6f: ret 0x9e69;
0xffffffff81cc7add: pop rsp; inc dword ptr [rbx+0x222b1a0d]; add [rdx], al; pop rbx; pop rbp; ret;
0xffffffff81cc7edf: ret 1;
0xffffffff81cc7ff3: ret 0xb32e;
0xffffffff81cc8015: ret 0xb33b;
0xffffffff81cc80c6: in eax, 0xe8; xchg esp, eax; fsub st, qword ptr [rsi-1]; pop rbp; ret;
0xffffffff81cc80c8: xchg esp, eax; fsub st, qword ptr [rsi-1]; pop rbp; ret;
0xffffffff81cc81b6: add [rax], al; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81cc825e: ret 6;
0xffffffff81cc836a: std; pop rsp; dec dword ptr [rax-0x77]; ret;
0xffffffff81cc836b: pop rsp; dec dword ptr [rax-0x77]; ret;
0xffffffff81cc83c4: ret 0xca83;
0xffffffff81cc88f6: ret 0xbef1;
0xffffffff81cc8909: ret 0x850e;
0xffffffff81cc8930: ret 0xc085;
0xffffffff81cc89a3: ret 0xcd9b;
0xffffffff81cc89e2: ret 0xb268;
0xffffffff81cc8a57: ret 0x293e;
0xffffffff81cc8ac6: ret 0x6659;
0xffffffff81cc8b3c: ret 0xff5e;
0xffffffff81cc8ee2: ret 0xb528;
0xffffffff81cc8f8c: ret 0x6349;
0xffffffff81cc9058: ret 0xc2c0;
0xffffffff81cc938b: ret 0x29b6;
0xffffffff81cc950b: leave; imul rcx, 0x1a0; lea rax, [rdi+rcx]; ret;
0xffffffff81cc96b8: cmp byte ptr [rdi+0x201], 0x49; sub esp, 0xa02000; and rdx, [rip-0x59cd4]; and rsi, 0xfffffffffffff000; mov rax, [rip-0x165a9a]; call rax;
0xffffffff81cc96bf: sub esp, 0xa02000; and rdx, [rip-0x59cd4]; and rsi, 0xfffffffffffff000; mov rax, [rip-0x165a9a]; call rax;
0xffffffff81cc9a62: ret 0x3a3e;
0xffffffff81cc9cec: ret 0xe539;
0xffffffff81cc9d07: ret 0xe57f;
0xffffffff81cc9d6a: ret 0xc0e8;
0xffffffff81cc9da0: ret 0x8ae8;
0xffffffff81cc9e5f: ret 0xe5d8;
0xffffffff81cc9e7a: ret 0xe5e2;
0xffffffff81cc9ecd: ret 0xd528;
0xffffffff81cc9f70: ret 0xd880;
0xffffffff81cca000: pop rsp; mov cl, 0x4a; dec dword ptr [rcx+0x5c415bd8]; pop rbp; ret;
0xffffffff81cca00e: ret 0xd890;
0xffffffff81cca0e4: ret 0xd300;
0xffffffff81cca111: ret 0x31c3;
0xffffffff81cca240: ret 0x5e25;
0xffffffff81cca286: ret 0x6ad8;
0xffffffff81ccab98: mov esp, es; or dword ptr [rax-0x77], 0xb5ede8e5; inc word ptr [rbp-0x76ea8b40]; ret 0xc748;
0xffffffff81ccae2b: ret 0xfde0;
0xffffffff81ccafb0: pop rsp; imul r15d, 0x415bd889; pop rsp; pop rbp; ret;
0xffffffff81ccafb1: imul r15d, 0x415bd889; pop rsp; pop rbp; ret;
0xffffffff81ccafb2: imul edi, 0x415bd889; pop rsp; pop rbp; ret;
0xffffffff81ccb1c1: ret 0x1630;
0xffffffff81ccb1fa: ret 0x1660;
0xffffffff81ccb295: in eax, 0x89; fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81ccb2a2: ret 0x5b80;
0xffffffff81ccb2cb: ret 0xeeeb;
0xffffffff81ccb3e5: ret 0xb9ad;
0xffffffff81ccb41c: ret 0xb99b;
0xffffffff81ccb52a: ret 0xb9bc;
0xffffffff81ccb533: ret 0xb98d;
0xffffffff81ccb63d: ret 0xf783;
0xffffffff81ccb709: mov ecx, 0x41c0315b; pop rsp; pop r13; pop rbp; ret;
0xffffffff81ccb7a6: ret 0xfd44;
0xffffffff81ccb7c1: ret 0x19e;
0xffffffff81ccb7fe: ret 0x27e;
0xffffffff81ccb81d: ret 0x279;
0xffffffff81ccb835: ret 0x9630;
0xffffffff81ccb868: ret 0x8d6;
0xffffffff81ccb8e9: ret 0xe168;
0xffffffff81ccb919: ret 0x3be8;
0xffffffff81ccb931: ret 0xf298;
0xffffffff81ccb961: ret 0x4ebc;
0xffffffff81ccb979: ret 0x50bf;
0xffffffff81ccba0d: ret 0x5534;
0xffffffff81ccbaa2: ret 0x553c;
0xffffffff81ccbb87: ret 0xedb8;
0xffffffff81ccbbb9: ret 0x88ce;
0xffffffff81ccbc52: ret 0x899c;
0xffffffff81ccbcbf: ret 0xbe52;
0xffffffff81ccbd10: ret 0xc61d;
0xffffffff81ccbeef: ret 0xe453;
0xffffffff81ccbf00: ret 0xe464;
0xffffffff81ccc1a8: ret 0xd184;
0xffffffff81ccc277: ret 0x1e80;
0xffffffff81ccc510: ret 0x20ba;
0xffffffff81ccc7ae: ret 0xbeee;
0xffffffff81ccc7da: ret 0x1674;
0xffffffff81cccbb6: ret 0xe5f2;
0xffffffff81cccc62: ret 0xe9cf;
0xffffffff81cccccd: ret 0xebcb;
0xffffffff81ccce50: ret 0x2150;
0xffffffff81cccefa: ret 0x2160;
0xffffffff81cccfed: ret 0x21a8;
0xffffffff81ccd084: ret 0x22b8;
0xffffffff81ccd189: ret 0x2520;
0xffffffff81ccd502: cmp eax, 0x69a58; add [rdi], cl; xchg esp, eax; ret;
0xffffffff81ccd507: add [rdi], cl; xchg esp, eax; ret;
0xffffffff81ccd81f: ret 0x696c;
0xffffffff81ccd861: leave; mov rax, 0xffffffff81a6696c; cmove rdx, rax; mov rax, rdx; ret;
0xffffffff81ccd881: ret 0x3d48;
0xffffffff81ccd99a: ror dword ptr [rax-0x77], 0x42; adc [rcx+0x224c2b0d], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81ccd99e: adc [rcx+0x224c2b0d], cl; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81ccdb4c: ret 0x65ef;
0xffffffff81ccdd06: ret 0xfff8;
0xffffffff81ccdd8a: ret 0x66ac;
0xffffffff81ccddc5: ret 0x2d93;
0xffffffff81ccddff: ret 0x2d99;
0xffffffff81ccdf4b: ret 0x450f;
0xffffffff81ccdf54: ret 0xf209;
0xffffffff81ccdf93: xchg esp, eax; ret 0x81b1;
0xffffffff81ccdf94: ret 0x81b1;
0xffffffff81cce2c6: ret 0xccd8;
0xffffffff81ccea1c: mov esi, 0x415bff78; pop rsp; pop r13; pop rbp; ret;
0xffffffff81ccea71: and byte ptr [rsi-0x2f007e3b], 0x49; mov esp, eax; mov rax, [r13]; mov rdi, r13; call rax;
0xffffffff81ccea78: mov esp, eax; mov rax, [r13]; mov rdi, r13; call rax;
0xffffffff81cceabb: ret 0x894c;
0xffffffff81cceb33: sub eax, 0xff3b7f20; mov eax, [rbp-4]; mov [rip-0x5e3da], eax; mov eax, 1; leave; ret;
0xffffffff81cceb37: cmp edi, edi; mov eax, [rbp-4]; mov [rip-0x5e3da], eax; mov eax, 1; leave; ret;
0xffffffff81cceb39: mov eax, [rbp-4]; mov [rip-0x5e3da], eax; mov eax, 1; leave; ret;
0xffffffff81cceb3b: cld; mov [rip-0x5e3da], eax; mov eax, 1; leave; ret;
0xffffffff81cceb3c: mov [rip-0x5e3da], eax; mov eax, 1; leave; ret;
0xffffffff81cceb3d: add eax, 0xfffa1c26; mov eax, 1; leave; ret;
0xffffffff81cceb42: mov eax, 1; leave; ret;
0xffffffff81cceb43: add [rax], eax; add [rax], al; leave; ret;
0xffffffff81cceb6c: ret 0xe8c1;
0xffffffff81ccec18: ret 0x3cff;
0xffffffff81ccec33: ret 0x3d5a;
0xffffffff81ccec4e: ret 0x3d65;
0xffffffff81ccec69: ret 0x3d9d;
0xffffffff81ccec84: ret 0x3dc6;
0xffffffff81ccec9f: ret 0x3dd2;
0xffffffff81ccecba: ret 0x3ddc;
0xffffffff81ccecd5: ret 0x3dec;
0xffffffff81ccecf0: ret 0x3dfb;
0xffffffff81cced0b: ret 0x407a;
0xffffffff81cced26: ret 0x40cc;
0xffffffff81cced41: ret 0x4114;
0xffffffff81cced7c: ret 0x4255;
0xffffffff81ccee36: ret 0x2880;
0xffffffff81ccefd5: ret 0x889;
0xffffffff81ccf308: mov [0xfff0013d485aff66], al; dec dword ptr [rdi]; fmul st, dword ptr [r9+0x5d8b48d8]; clc; leave; ret;
0xffffffff81ccf30c: cmp rax, 0xfffffffffffff001; cmovae ebx, eax; mov eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81ccf30d: cmp eax, 0xfffff001; cmovae ebx, eax; mov eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81ccf311: dec dword ptr [rdi]; fmul st, dword ptr [r9+0x5d8b48d8]; clc; leave; ret;
0xffffffff81ccf312: cmovae ebx, eax; mov eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81ccf313: fmul st, dword ptr [r9+0x5d8b48d8]; clc; leave; ret;
0xffffffff81ccf314: fmul st, dword ptr [rcx+0x5d8b48d8]; clc; leave; ret;
0xffffffff81ccf315: mov eax, ebx; mov rbx, [rbp-8]; leave; ret;
0xffffffff81ccf316: fmul st, dword ptr [rax-0x75]; pop rbp; clc; leave; ret;
0xffffffff81ccf320: ret 0x2948;
0xffffffff81ccf328: ret 0xb54f;
0xffffffff81ccf674: sub eax, 0xff6628a6; add rsp, 0x20; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81ccf677: sub [rsi-1], ah; add rsp, 0x20; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81ccf67a: add rsp, 0x20; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81ccf67b: add esp, 0x20; mov eax, ebx; pop rbx; pop rbp; ret;
0xffffffff81ccf6fc: ret 0x6c19;
0xffffffff81ccf756: ret 0x8944;
0xffffffff81ccf91a: ret 0xf8ef;
0xffffffff81ccfac6: ret 0xb081;
0xffffffff81ccfbae: ret 0x3181;
0xffffffff81ccfbf5: ret 0x8581;
0xffffffff81ccfc41: leave; pop rbx; mov eax, ecx; pop r12; pop rbp; ret;
0xffffffff81ccfd60: inc esi; add eax, 0x223880; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81ccfd62: add eax, 0x223880; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81ccfd65: and al, [rax]; add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81ccfd67: add [rbx+0x41], ebx; pop rsp; pop rbp; ret;
0xffffffff81ccfd88: ret 0x5381;
0xffffffff81ccfe02: leave; mov r8d, 4; mov esi, [rbx]; xor edi, edi; mov rax, [rax]; call rax;
0xffffffff81cd001a: ret 0x78a4;
0xffffffff81cd00c7: leave; mov r8d, 4; mov esi, ebx; xor edi, edi; mov rax, [rax]; call rax;
0xffffffff81cd00db: ret 0xeac1;
0xffffffff81cd015f: add dword ptr [rbp-0x7b], 0x310275e4; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81cd0162: in al, 0x75; add dh, [rcx]; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81cd0164: add dh, [rcx]; rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81cd0166: rcr byte ptr [rdx+0x5b], 0x41; pop rsp; pop rbp; ret;
0xffffffff81cd0199: ret 0x8b81;
0xffffffff81cd0292: ret 0x7948;
0xffffffff81cd02f2: ret 0x7988;
0xffffffff81cd02fc: xor edx, edx; leave; mov rax, rdx; ret;
0xffffffff81cd02fe: leave; mov rax, rdx; ret;
0xffffffff81cd040e: ret 0x809e;
0xffffffff81cd0449: ret 0x8092;
0xffffffff81cd0816: mov dword ptr [rip-0x71db8], 0xffffffff; add rsp, 0x100; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cd0820: add rsp, 0x100; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cd0821: add esp, 0x100; pop rbx; pop r12; pop rbp; ret;
0xffffffff81cd0824: add [rax], eax; add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81cd0826: add [rbx+0x41], bl; pop rsp; pop rbp; ret;
0xffffffff81cd0afc: ret 0x750f;
0xffffffff81cd0da9: pop rsp; cmp edi, edi; xor eax, eax; or dword ptr [rip+0x216fb3], 0x40; pop rbp; ret;
0xffffffff81cd0e21: pop rsp; cmp edi, edi; xor eax, eax; pop rbp; ret;
0xffffffff81cd0ffd: ret 0x1d;
0xffffffff81cd0ffe: ret 0x1d;
0xffffffff81cd1100: ret 0xb586;
0xffffffff81cd13b5: ret 0xe283;
0xffffffff81cd13c1: ret 0xc689;
0xffffffff81cd15ce: ret 0x4981;
0xffffffff81cd169e: ret 0x8941;
0xffffffff81cd1844: ret 0xf81;
0xffffffff81cd1856: ret 0xbb81;
0xffffffff81cd1ba4: mov [rip+0x23e8ffe9], ah; mov esp, 0x8948ff41; add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1ba5: and eax, 0x23e8ffe9; mov esp, 0x8948ff41; add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1baa: mov esp, 0x8948ff41; add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1bab: dec dword ptr [r8-0x77]; add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1bac: dec dword ptr [rax-0x77]; add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1bad: mov [rip-0x16da8c], rax; pop rax; leave; ret;
0xffffffff81cd1bae: mov [rip-0x16da8c], eax; pop rax; leave; ret;
0xffffffff81cd1baf: add eax, 0xffe92574; pop rax; leave; ret;
0xffffffff81cd1bb4: pop rax; leave; ret;
0xffffffff81cd1cc3: ret 0x6900;
0xffffffff81cd1ce3: ret 0x6b00;
0xffffffff81cd1d44: ret 0xfce0;
0xffffffff81cd1e2d: ror byte ptr [rax-0x7d], 0xc4; xor [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd1e2e: add rsp, 0x30; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81cd1e2f: add esp, 0x30; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81cd1e31: xor [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd2075: ret 0x1f90;
0xffffffff81cd2095: ret 0x2d30;
0xffffffff81cd20dd: ret 0xf7c0;
0xffffffff81cd2109: ret 0x37c2;
0xffffffff81cd210a: ret 0xff37;
0xffffffff81cd212c: ret 0x6990;
0xffffffff81cd213f: ret 0x9d10;
0xffffffff81cd21d2: ret 0x8420;
0xffffffff81cd21ed: ret 0x86b0;
0xffffffff81cd223e: ret 0x4e10;
0xffffffff81cd2259: ret 0x4bd0;
0xffffffff81cd227b: ret 0x7e00;
0xffffffff81cd22e7: mov dword ptr [rax+0x41], 0xcfe881b6; pop rsp; call far dword ptr [rbp-0x3d];
0xffffffff81cd22ee: pop rsp; call far dword ptr [rbp-0x3d];
0xffffffff81cd2337: add eax, 0x85ff8117; shl byte ptr [rdx+rax+0xf], 0xb; leave; ret;
0xffffffff81cd233c: shl byte ptr [rdx+rax+0xf], 0xb; leave; ret;
0xffffffff81cd266d: ret 0x85f0;
0xffffffff81cd26ad: ret 0x16a0;
0xffffffff81cd272b: pop rsp; mov ah, 0xb5; sub eax, 0xff41b09c; mov [rip-0x16e083], rax; leave; ret;
0xffffffff81cd272c: mov ah, 0xb5; sub eax, 0xff41b09c; mov [rip-0x16e083], rax; leave; ret;
0xffffffff81cd272e: sub eax, 0xff41b09c; mov [rip-0x16e083], rax; leave; ret;
0xffffffff81cd2730: pushfq; mov al, 0x41; dec dword ptr [rax-0x77]; add eax, 0xffe91f7d; leave; ret;
0xffffffff81cd2731: mov al, 0x41; dec dword ptr [rax-0x77]; add eax, 0xffe91f7d; leave; ret;
0xffffffff81cd2732: dec dword ptr [r8-0x77]; add eax, 0xffe91f7d; leave; ret;
0xffffffff81cd2733: dec dword ptr [rax-0x77]; add eax, 0xffe91f7d; leave; ret;
0xffffffff81cd2734: mov [rip-0x16e083], rax; leave; ret;
0xffffffff81cd2735: mov [rip-0x16e083], eax; leave; ret;
0xffffffff81cd2736: add eax, 0xffe91f7d; leave; ret;
0xffffffff81cd27dd: ret 0x1cc0;
0xffffffff81cd2882: ret 0x7390;
0xffffffff81cd288c: ret 0xff54;
0xffffffff81cd2a0b: ret 0xc0ff;
0xffffffff81cd2adf: ret 0xba;
0xffffffff81cd2aec: ret 0x158b;
0xffffffff81cd2b1c: inc dword ptr [rbp+0xf0274c0]; or ebp, eax; add al, [rax]; add [rax], al; leave; ret;
0xffffffff81cd2b20: add cl, [rdi]; or ebp, eax; add al, [rax]; add [rax], al; leave; ret;
0xffffffff81cd2b22: or ebp, eax; add al, [rax]; add [rax], al; leave; ret;
0xffffffff81cd2b24: add al, [rax]; add [rax], al; leave; ret;
0xffffffff81cd2b26: add [rax], al; leave; ret;
0xffffffff81cd2bda: ret 0x4688;
0xffffffff81cd2c77: ret 0x7398;
0xffffffff81cd2d4e: ret 0xc148;
0xffffffff81cd2d72: add [rcx], bh; push rbx; adc [rbx-0x31], dh; mov rbx, [rbp-8]; leave; ret;
0xffffffff81cd2d74: push rbx; adc [rbx-0x31], dh; mov rbx, [rbp-8]; leave; ret;
0xffffffff81cd2d75: adc [rbx-0x31], dh; mov rbx, [rbp-8]; leave; ret;
0xffffffff81cd2d78: mov rbx, [rbp-8]; leave; ret;
0xffffffff81cd2d79: mov ebx, [rbp-8]; leave; ret;
0xffffffff81cd2d7a: pop rbp; clc; leave; ret;
0xffffffff81cd2d7b: clc; leave; ret;
0xffffffff81cd2db6: ret 0xc983;
0xffffffff81cd2db8: leave; dec dword ptr [rdi]; mov ebp, 0xf9cde30d; dec dword ptr [rax-0x77]; ret 0xc183;
0xffffffff81cd2dc3: ret 0xc183;
0xffffffff81cd2fb6: ret 0x3460;
0xffffffff81cd2fdd: ret 0x1d80;
0xffffffff81cd2ff8: ret 0x1bd0;
0xffffffff81cd3033: ret 0x19d0;
0xffffffff81cd335b: ret 0x8fb0;
0xffffffff81cd3376: ret 0x8f30;
0xffffffff81cd3474: ret 0x50c0;
0xffffffff81cd384a: ret 0x7d40;
0xffffffff81cd3b2b: ret 0xc748;
0xffffffff81cd3be9: ret 0x6e60;
0xffffffff81cd402c: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cd40ee: ret 0x9830;
0xffffffff81cd4323: ret 0x7fa0;
0xffffffff81cd45da: ret 0x87ca;
0xffffffff81cd493c: ret 0x5389;
0xffffffff81cd4abb: ret 0xfa83;
0xffffffff81cd4cab: ret 0x87f;
0xffffffff81cd4cb5: ret 0xff48;
0xffffffff81cd4cbb: ret 0xe0eb;
0xffffffff81cd4d01: ret 0xd75;
0xffffffff81cd4d18: ret 0xbdeb;
0xffffffff81cd4d2b: ret 0x84fe;
0xffffffff81cd5b27: ret 0x538b;
0xffffffff81cd5b7d: add [rax], al; add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd5b7f: add [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd5dc1: ret 0x3145;
0xffffffff81cd61b0: ret 0xf8eb;
0xffffffff81cd63ec: ret 0xc129;
0xffffffff81cd6426: ret 0x558b;
0xffffffff81cd648f: ret 0xc166;
0xffffffff81cd65a7: ret 0x8d48;
0xffffffff81cd65df: ret 0x1b9;
0xffffffff81cd68b7: ret 0x8d4c;
0xffffffff81cd69ae: add al, ch; pop rsp; push 0xffffffff8948ff41; ret;
0xffffffff81cd69b0: pop rsp; push 0xffffffff8948ff41; ret;
0xffffffff81cd6a2b: ret 0x8348;
0xffffffff81cd6b37: mov esp, [rbp+0x10]; mov rdi, 0xffffffff81b601b8; or ebx, 0xffffffff; call r12;
0xffffffff81cd6bd2: mov esp, [rbp+0x10]; mov rdi, 0xffffffff81b601d8; or ebx, 0xffffffff; call r12;
0xffffffff81cd6c20: pop rbp; shl byte ptr [rbx+rdx+0x4c], 1; mov esp, [rbp+0x10]; mov rdi, 0xffffffff81b601e7; or ebx, 0xffffffff; call r12;
0xffffffff81cd6c21: shl byte ptr [rbx+rdx+0x4c], 1; mov esp, [rbp+0x10]; mov rdi, 0xffffffff81b601e7; or ebx, 0xffffffff; call r12;
0xffffffff81cd6c25: mov esp, [rbp+0x10]; mov rdi, 0xffffffff81b601e7; or ebx, 0xffffffff; call r12;
0xffffffff81cd70da: ret 0xd285;
0xffffffff81cd7180: ret 0xa4e0;
0xffffffff81cd7473: ret 0xe280;
0xffffffff81cd7a69: pop rsp; push rbp; ret;
0xffffffff81cd7b97: ret 0xf4c;
0xffffffff81cd7d4a: ret 0x4880;
0xffffffff81cd7e72: ret 0x14ff;
0xffffffff81cd7fdf: ret 0x48c3;
0xffffffff81cd8305: ret 0xff3f;
0xffffffff81cd8377: ret 0xdce8;
0xffffffff81cd8444: add rsp, 0x18; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81cd8445: add esp, 0x18; pop rbx; pop r12; pop r13; pop rbp; ret;
0xffffffff81cd8447: sbb [rbx+0x41], bl; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd84e3: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cd850e: ret 0x267d;
0xffffffff81cd85d0: ret 0x1976;
0xffffffff81cd875b: ret 0xf037;
0xffffffff81cd87d2: ret 0x1072;
0xffffffff81cd8bc1: ret 0x8949;
0xffffffff81cd8d90: ret 0x976;
0xffffffff81cd8d95: ret 0x3948;
0xffffffff81cd8e65: ret 0x676;
0xffffffff81cd8ed5: enter 0x5b5a, 0x41; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cd900d: ret 0x8b48;
0xffffffff81cd97de: ret 0xeb18;
0xffffffff81cd9a04: lea ebx, [rbx+0x41]; pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cd9a30: ret 0x74c8;
0xffffffff81cd9ad3: and cl, [rax-0x77]; add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cd9ad6: add ebx, [rbx+0x41]; pop rsp; pop rbp; ret;
0xffffffff81cd9b81: ret 0xf950;
0xffffffff81cd9bdd: fcomp st, dword ptr [rbx+0x41]; pop rsp; pop r13; pop rbp; ret;
0xffffffff81cd9bf7: ret 0x8548;
0xffffffff81cd9d38: mov esp, edx; push rbx; mov rbx, rcx; mov rdi, [rdi]; call qword ptr [0xffffffff81b63bd8];
0xffffffff81cda0ba: ret 0xe86a;
0xffffffff81cda1e2: ret 0x8948;
0xffffffff81cda263: pop rsp; pop r13; pop r14; pop r15; pop rbp; ret;
0xffffffff81cda3ce: pop rsp; pop r13; pop r14; pop rbp; ret;
0xffffffff81cda45b: pop rsp; pop r13; pop rbp; ret;
0xffffffff81cda8ee: ret 0xfd34;
0xffffffff81cdac32: ret 0xff5f;
0xffffffff81d20081: ret 0x81d5;
0xffffffff81d23185: ret 0x8366;
0xffffffff81d23193: ret 0x220f;
0xffffffff81d23199: ret 0xf766;
0xffffffff81d231aa: ret 0xb0ea;
0xffffffff81d23440: pop rsp; and al, 4; jmp qword ptr [rdi+0x66];
0xffffffff81d23452: ret 0xe91c;
0xffffffff81d23465: ret 0x661c;
0xffffffff81d23525: ret 0x8966;
0xffffffff81d2354e: add sp, 0x1c; pop bx; pop si; pop di; pop bp; data16 ret;
0xffffffff81d2354f: add esp, 0x1c; pop bx; pop si; pop di; pop bp; data16 ret;
0xffffffff81d23579: ret 0x6966;
0xffffffff81d235af: ret 0xb966;
0xffffffff81d2366b: mov dx, [eax*4+0xe0]; mov [rsi], dx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d2366c: mov dx, [rax*4+0xe0]; mov [rsi], dx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d2366d: mov edx, [rax*4+0xe0]; mov [rsi], dx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23672: add [rax], al; mov [rsi], dx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23674: mov [rsi], dx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23675: mov [rsi], edx; and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23677: and [rcx], al; mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23678: add [rdi+0x66], esp; mov eax, [rax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23679: mov ax, [eax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d2367a: mov ax, [rax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d2367b: mov eax, [rax*4+0xd4]; add sp, 0x58; data16 ret;
0xffffffff81d23680: add [rax], al; add sp, 0x58; data16 ret;
0xffffffff81d23682: add sp, 0x58; data16 ret;
0xffffffff81d23683: add esp, 0x58; data16 ret;
0xffffffff81d23775: add [rax], al; add sp, 0x2c; data16 ret;
0xffffffff81d23777: add sp, 0x2c; data16 ret;
0xffffffff81d23778: add esp, 0x2c; data16 ret;
0xffffffff81d237e4: ret 3;
0xffffffff81d238d3: ret 0xfffe;
0xffffffff81d23911: ret 0xb866;
0xffffffff81d2391a: mov eax, 0xffffdf12; out dx, eax; xor ax, ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d2391f: out dx, eax; xor ax, ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23920: xor ax, ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23921: xor eax, eax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23b39: add sp, 0x58; pop bx; pop si; pop di; pop bp; data16 ret;
0xffffffff81d23b3a: add esp, 0x58; pop bx; pop si; pop di; pop bp; data16 ret;
0xffffffff81d23b9f: setne al; movzx ax, al; neg ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba0: xchg ebp, eax; shl byte ptr [rsi+0xf], 0xb6; shl byte ptr [rsi-9], 0xd8; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba1: shl byte ptr [rsi+0xf], 0xb6; shl byte ptr [rsi-9], 0xd8; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba2: movzx ax, al; neg ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba3: movzx eax, al; neg ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba4: mov dh, 0xc0; neg ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba5: shl byte ptr [rsi-9], 0xd8; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba6: neg ax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba7: neg eax; add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23ba9: add sp, 0x58; pop bx; data16 ret;
0xffffffff81d23baa: add esp, 0x58; pop bx; data16 ret;
0xffffffff81d23ddb: ret 0xe28e;
0xffffffff81d27b08: ret 0xca92;
0xffffffff81d34b31: ret 0x81b3;
0xffffffff81d34d48: ret 0xb3a3;
0xffffffff81d35008: ret 0xb3a4;
0xffffffff81d39010: ret 0;
0xffffffff81d40ef6: inc dword ptr [rax]; push rax; sub esp, edx; cmp edi, 0x86ffffff; add byte ptr [rax], 0; ret 0x29;
0xffffffff81d40ef8: push rax; sub esp, edx; cmp edi, 0x86ffffff; add byte ptr [rax], 0; ret 0x29;
0xffffffff81d40ef9: sub esp, edx; cmp edi, 0x86ffffff; add byte ptr [rax], 0; ret 0x29;
0xffffffff81d40f04: ret 0x29;
0xffffffff81d42908: ret 0xcb1c;
0xffffffff81d5b251: ret 0x81ca;
0xffffffff81d5b279: ret 0x81d3;
0xffffffff81d5b5c8: ret 0xcb30;
0xffffffff81d5bb78: ret 0xd42f;
0xffffffff81d5bf10: ret 0xcc5c;
0xffffffff81d5c284: xchg esp, eax; and esi, esi; jmp rcx;
0xffffffff81d5c329: ret 0xfff7;
0xffffffff81d5c338: ret 0xf672;
0xffffffff81d5c382: idiv edi; leave; or dh, bh; jmp far fword ptr [rdi+0xb];
0xffffffff81d5c384: leave; or dh, bh; jmp far fword ptr [rdi+0xb];
0xffffffff81d5c3e2: idiv bh; mov esp, [rsi-0xa]; jmp far fword ptr [rcx-0x3500099a];
0xffffffff81d5c3e4: mov esp, [rsi-0xa]; jmp far fword ptr [rcx-0x3500099a];
0xffffffff81d5c4c4: add esp, edi; cmc; jmp far fword ptr [rdi];
0xffffffff81d5c508: ret 0xf652;
0xffffffff81d5c761: leave; idiv bh; int 0xf6; jmp qword ptr [rax+0x1ffff6d2];
0xffffffff81d5c78f: ret 0x126;
0xffffffff81d5c81d: ret 0x75cb;
0xffffffff81d5caed: mov ecx, 0x80a599a6; xchg esp, eax; xor [rdx-0xd65724e], esp; ret 0x44bc;
0xffffffff81d5caf2: xchg esp, eax; xor [rdx-0xd65724e], esp; ret 0x44bc;
0xffffffff81d5caf8: bnd ret 0x44bc;
0xffffffff81d5caf9: ret 0x44bc;
0xffffffff81d5cbb5: ret 0xe23;
0xffffffff81d5cbfe: ret 0x7783;
0xffffffff81d5cce0: ret 0x3df8;
0xffffffff81d5cdf4: ret 0x9e51;
0xffffffff81d5cdf8: ret 0x83a3;
0xffffffff81d5ce52: ret 0xff51;
0xffffffff81d5cf11: ret 0x4308;
0xffffffff81d5cf52: ret 0x3234;
0xffffffff81d5cfa1: mov esp, [rcx+rdx*8+0x16ac930]; mov eax, 0x321b33d6; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfa2: mov esp, [rcx+rdx*8+0x16ac930]; mov eax, 0x321b33d6; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfa7: push 1; mov eax, 0x321b33d6; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfa8: add [rax+0x321b33d6], edi; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfa9: mov eax, 0x321b33d6; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfac: sbb esi, [rdx]; xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5cfae: xchg esp, eax; movsb [rdi], [rsi]; pop rsi; ret;
0xffffffff81d5d1a5: ret 0xf82d;
0xffffffff81d5d1c1: ret 0x8ae5;
0xffffffff81d5d286: ret 0x9738;
0xffffffff81d5d3f8: ret 0x6a0f;
0xffffffff81d5d424: ret 0xc1a5;
0xffffffff81d5d47b: ret 0xa240;
0xffffffff81d5d4e6: ret 0x3fde;
0xffffffff81d5d72c: ret 0xc78d;
0xffffffff81d5d7f0: ret 0xde28;
0xffffffff81d5db39: ret 0xba83;
0xffffffff81d5dc64: ret 0xd814;
0xffffffff81d5dd29: ret 0xb76;
0xffffffff81d5de02: ret 0x1650;
0xffffffff81d5deaa: ret 0x56c;
0xffffffff81d5dfea: ret 0xbed9;
0xffffffff81d5e061: ret 0x8974;
0xffffffff81d5e072: ret 0x5163;
0xffffffff81d5e073: ret 0x5163;
0xffffffff81d5e0d0: ret 0x9ff3;
0xffffffff81d5e34d: ret 0x55c8;
0xffffffff81d5e38c: ret 0x9812;
0xffffffff81d5e4aa: ret 0xba41;
0xffffffff81d5e759: ret 0xfc65;
0xffffffff81d5e75a: ret 0xfc65;
0xffffffff81d5e77a: ret 0x4d71;
0xffffffff81d5e7da: ret 0x3c05;
0xffffffff81d5e81a: ret 0x3db2;
0xffffffff81d5e85b: ret 0xa167;
0xffffffff81d5e945: ret 0x29e3;
0xffffffff81d5e992: cwde; pop rsp; push rsi; ret;
0xffffffff81d5e993: pop rsp; push rsi; ret;
0xffffffff81d5e9c9: ret 0x8e16;
0xffffffff81d5eaa2: ret 0xdb99;
0xffffffff81d5ed45: ret 0x2008;
0xffffffff81d5edaa: ret 0xc456;
0xffffffff81d5ee50: pop rsp; sub eax, 0xdaa5e9ae; insb [rdi], dx; test eax, 0x4b54ba04; adc al, 0x90; iretd;
0xffffffff81d5f095: movsxd ebx, [rdx]; push rbp; leave; push 0xfffffffffaabf3ca; mov al, [0x73dffbeb6bc5237d]; iretd;
0xffffffff81d5f098: push rbp; leave; push 0xfffffffffaabf3ca; mov al, [0x73dffbeb6bc5237d]; iretd;
0xffffffff81d5f099: leave; push 0xfffffffffaabf3ca; mov al, [0x73dffbeb6bc5237d]; iretd;
0xffffffff81d5f675: ret 0xc608;
0xffffffff81d5f691: ret 0x790d;
0xffffffff81d5f6e9: ret 0xe9b;
0xffffffff81d5f6ef: ret 0xc7de;
0xffffffff81d5f74d: ret 0x1732;
0xffffffff81d5f887: ret 0x60c0;
0xffffffff81d5f906: ret 0x18aa;
0xffffffff81d5fb15: ret 0xabb8;
0xffffffff81d5fb59: sub rax, 0xffffffffc8cfa658; or eax, 0x81cae40b; push 0xffffffffffffffaf; pop rsp; iretd;
0xffffffff81d5fb5a: sub eax, 0xc8cfa658; or eax, 0x81cae40b; push 0xffffffffffffffaf; pop rsp; iretd;
0xffffffff81d5fb5f: or eax, 0x81cae40b; push 0xffffffffffffffaf; pop rsp; iretd;
0xffffffff81d5fb64: push 0xffffffffffffffaf; pop rsp; iretd;
0xffffffff81d5fb65: scasd [rdi]; pop rsp; iretd;
0xffffffff81d5fbd9: ret 0x4fbc;
0xffffffff81d5fc02: ret 0x33f0;
0xffffffff81d5fcf0: ret 0x7c59;
0xffffffff81d5fe4d: ret 0x1fe5;
0xffffffff81d5ff84: ret 0xe5b8;
0xffffffff81d60096: ret 0x4a8e;
0xffffffff81d60187: ret 0x30fe;
0xffffffff81d602e7: ret 0xae8;
0xffffffff81d602ef: ret 0x2e8;
0xffffffff81d602f7: ret 0xfae8;
0xffffffff81d60330: ret 0xc2e8;
0xffffffff81d60332: ret 0xcdc4;
0xffffffff81d60340: ret 0xb2e8;
0xffffffff81d6035e: ret 0x113b;
0xffffffff81d6036e: ret 0x498b;
0xffffffff81d6037c: ret 0xa4e5;
0xffffffff81d60553: ret 0x1ff2;
0xffffffff81d605d5: ret 0xa746;
0xffffffff81d60690: ret 0x44e7;
0xffffffff81d607c9: ret 0x2f34;
0xffffffff81d60894: ret 0x12d1;
0xffffffff81d60928: ret 0xcbbc;
0xffffffff81d60a7f: ret 0x8b89;
0xffffffff81d60bea: ret 0x8f41;
0xffffffff81d60d40: leave; call far fword ptr [rsi+0x1a7bc9cd];
0xffffffff81d60f1d: ret 0x51d7;
0xffffffff81d60f1e: ret 0x51d7;
0xffffffff81d610a2: ret 0xb12f;
0xffffffff81d612c7: ret 0xad94;
0xffffffff81d613d5: ret 0xe286;
0xffffffff81d614f7: ret 0xa655;
0xffffffff81d6150c: nop; cmp al, 0x51; mov esi, 0xbff27130; xchg ebp, eax; leave; iretd;
0xffffffff81d6150d: cmp al, 0x51; mov esi, 0xbff27130; xchg ebp, eax; leave; iretd;
0xffffffff81d6150e: push rcx; mov esi, 0xbff27130; xchg ebp, eax; leave; iretd;
0xffffffff81d6150f: mov esi, 0xbff27130; xchg ebp, eax; leave; iretd;
0xffffffff81d61514: xchg ebp, eax; leave; iretd;
0xffffffff81d61889: ret 0xf5f8;
0xffffffff81d6188a: ret 0xf5f8;
0xffffffff81d61979: ret 0x19c8;
0xffffffff81d619e0: ret 0xf5dd;
0xffffffff81d620ba: ret 0x10a1;
0xffffffff81d6216e: ret 0xe702;
0xffffffff81d62210: ret 0xfec;
0xffffffff81d62219: ret 0x29d0;
0xffffffff81d6228e: ret 0x1da8;
0xffffffff81d62459: ret 0x2ff8;
0xffffffff81d625c4: ret 0x77e6;
0xffffffff81d62626: ret 0x8238;
0xffffffff81d62627: ret 0x8238;
0xffffffff81d6262d: ret 0xc2ce;
0xffffffff81d6262f: ret 0xc65d;
0xffffffff81d62641: xchg esp, eax; mov eax, 0xa31fdea6; iretd;
0xffffffff81d6264b: ret 0x334f;
0xffffffff81d62827: ret 0xdb8;
0xffffffff81d62b3a: ret 0xbc2;
0xffffffff81d62b3b: ret 0xb20b;
0xffffffff81d62b42: ret 0xdf6b;
0xffffffff81d62c04: ret 0xa3aa;
0xffffffff81d62c32: ret 0x1b1a;
0xffffffff81d62dfc: ret 0x2d15;
0xffffffff81d62e53: ret 0x8c5;
0xffffffff81d62f0a: ret 0xf0ef;
0xffffffff81d62f1d: leave; jmp qword ptr [rdi+rdx*4];
0xffffffff81d62f2d: ret 0xe903;
0xffffffff81d63008: ret 0xc962;
0xffffffff81d63102: xchg esp, eax; mov esp, 0x87e3a5fb; mov ebp, 0x9c51472a; ret;
0xffffffff81d6344f: ret 0xd1f3;
0xffffffff81d635e7: cwde; shr byte ptr [rcx], cl; xchg esp, eax; push rdi; cmp bl, [r14-0x36a473b]; ret 0x18e8;
0xffffffff81d635e8: shr byte ptr [rcx], cl; xchg esp, eax; push rdi; cmp bl, [r14-0x36a473b]; ret 0x18e8;
0xffffffff81d635ea: xchg esp, eax; push rdi; cmp bl, [r14-0x36a473b]; ret 0x18e8;
0xffffffff81d635f3: ret 0x18e8;
0xffffffff81d636e5: ret 0x888f;
0xffffffff81d637c7: ret 0xc44c;
0xffffffff81d637f5: ret 0x1abb;
0xffffffff81d638e9: ret 0xd13a;
0xffffffff81d63a20: bnd ret 0xc975;
0xffffffff81d63a21: ret 0xc975;
0xffffffff81d63b91: leave; jmp far fword ptr [rdi];
0xffffffff81d63b94: ret 0x84e7;
0xffffffff81d63d50: ret 0xce7;
0xffffffff81d63e43: ret 0xf694;
0xffffffff81d63e52: ret 0xd314;
0xffffffff81d64224: xchg esp, eax; sar byte ptr [rcx], cl; xchg r11d, eax; ret;
0xffffffff81d64287: ret 0x698e;
0xffffffff81d644fb: ret 0x29a7;
0xffffffff81d64a06: ret 0xcc73;
0xffffffff81d64a83: ret 0x1710;
0xffffffff81d64c6e: ret 0x4e8d;
0xffffffff81d64e25: ret 0x3016;
0xffffffff81d64f9d: ret 0xfd3f;
0xffffffff81d65071: ret 0x938e;
0xffffffff81d650df: ret 0xe359;
0xffffffff81d65202: ret 0x1567;
0xffffffff81d6548c: ret 0x2ef4;
0xffffffff81d65ae1: ret 0x6d95;
0xffffffff81d65d60: ret 0x4266;
0xffffffff81d65d8f: xchg esp, eax; ret 0xe07c;
0xffffffff81d65d90: ret 0xe07c;
0xffffffff81d65e44: ret 0x9b3;
0xffffffff81d65f1d: pop rsp; shr dword ptr [rbp+0x42], cl; mov edi, 0x88a7b7bb; ret;
0xffffffff81d65ff7: xchg esp, eax; ret 0x3bf6;
0xffffffff81d65ff8: ret 0x3bf6;
0xffffffff81d663b3: ret 0xe9d9;
0xffffffff81d664aa: ret 0x9b29;
0xffffffff81d6666e: ret 0xa9fc;
0xffffffff81d666b0: ret 0x7cfc;
0xffffffff81d667d2: ret 0xc2ee;
0xffffffff81d667d4: ret 0x2e78;
0xffffffff81d667da: ret 0x5f8;
0xffffffff81d668bd: ret 0x35bf;
0xffffffff81d668cf: ret 0xc239;
0xffffffff81d668d1: ret 0xd67c;
0xffffffff81d66a59: ret 0x8b78;
0xffffffff81d66b41: push rsp; sbb esp, ebx; xor esp, [rax]; pop rdi; iretd;
0xffffffff81d66b42: sbb esp, ebx; xor esp, [rax]; pop rdi; iretd;
0xffffffff81d66ccc: mov esi, 0x77d9c29b; outsb dx, [rsi]; add byte ptr [rbx-0x79], 0x1b; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66ccf: fnstenv [rdi+0x6e]; add byte ptr [rbx-0x79], 0x1b; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd1: outsb dx, [rsi]; add byte ptr [rbx-0x79], 0x1b; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd2: add byte ptr [rbx-0x79], 0x1b; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd3: xchg [r11], ebx; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd4: xchg [rbx], ebx; xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd6: xchg esp, eax; scasd [rdi]; ret 0x2afd;
0xffffffff81d66cd9: ret 0x2afd;
0xffffffff81d66cdf: ret 0x6dfa;
0xffffffff81d66d07: ret 0xab38;
0xffffffff81d66d6f: pop rsp; clc; out dx, al; or [rbx+rbp*8-0x2de540c0], ecx; sbb [rdi+0x6f], spl; iretd;
0xffffffff81d66de3: outsb dx, [rsi]; cmpsd [rsi], [rdi]; fwait; xchg esp, eax; xor bh, [rbx]; ret 0x82df;
0xffffffff81d66de4: cmpsd [rsi], [rdi]; fwait; xchg esp, eax; xor bh, [rbx]; ret 0x82df;
0xffffffff81d66de5: fwait; xchg esp, eax; xor bh, [rbx]; ret 0x82df;
0xffffffff81d66de6: xchg esp, eax; xor bh, [rbx]; ret 0x82df;
0xffffffff81d66dea: ret 0x82df;
0xffffffff81d66e6d: ret 0xd6e0;
0xffffffff81d66f4c: pop rsp; mov ebx, 0x60dfa8c; ret;
0xffffffff81d67121: ret 0x1df8;
0xffffffff81d67383: ret 0xb5f8;
0xffffffff81d6740f: ret 0x173a;
0xffffffff81d67419: ret 0x5df9;
0xffffffff81d6742b: ret 0x3fbd;
0xffffffff81d676df: ret 0x9a1;
0xffffffff81d6770c: ret 0xd63f;
0xffffffff81d6786a: add cl, [rcx-0x4239f13d]; xchg esp, eax; ret 0xbfff;
0xffffffff81d67870: xchg esp, eax; ret 0xbfff;
0xffffffff81d67871: ret 0xbfff;
0xffffffff81d679bd: ret 0x85c7;
0xffffffff81d67ad1: ret 0xbd77;
0xffffffff81d67b74: ret 0x602e;
0xffffffff81d6802c: ret 0x70fa;
0xffffffff81d680ac: ret 0xbd07;
0xffffffff81d682b1: ret 0xd57d;
0xffffffff81d682fc: ret 0x2777;
0xffffffff81d68496: stc; cdq; pop rsp; jmp far fword ptr [rsi];
0xffffffff81d68497: cdq; pop rsp; jmp far fword ptr [rsi];
0xffffffff81d68549: ret 0xede9;
0xffffffff81d689c4: ret 0x5dfa;
0xffffffff81d68bbb: ret 0x96fc;
0xffffffff81d68d38: ret 0xc9de;
0xffffffff81d68f63: mov esp, ebx; sub [rsi+0x21ea945e], eax; mov [rdi], gs; ret;
0xffffffff81d6900b: ret 0xf81b;
0xffffffff81d69096: ret 0xee78;
0xffffffff81d69241: ret 0x83fe;
0xffffffff81d693b0: ret 0xd495;
0xffffffff81d694e6: ret 0xd4e8;
0xffffffff81d69749: xchg esp, eax; and al, 0x22; movsxd esp, [rax+0x7e809b94]; and [rbx+0x66e79dcd], eax; mov eax, 0x8ebc3551; ret;
0xffffffff81d6978a: xchg esp, eax; in eax, 0xe9; ret 0x8126;
0xffffffff81d69a10: ret 0xb81e;
0xffffffff81d69c03: ret 0xa714;
0xffffffff81d69c40: ret 0x4beb;
0xffffffff81d69d8d: ret 0xd547;
0xffffffff81d69dd7: ret 0x9d2b;
0xffffffff81d69ddb: ret 0x526d;
0xffffffff81d69ead: ret 0x6044;
0xffffffff81d6a083: ret 0xd010;
0xffffffff81d6a186: ret 0xea0e;
0xffffffff81d6a3f0: ret 0x14eb;
0xffffffff81d6a421: ret 0x950c;
0xffffffff81d6a4ce: ret 0x277;
0xffffffff81d6a52e: ret 0x94a9;
0xffffffff81d6a5e0: ret 0xdf64;
0xffffffff81d6a630: ret 0x5947;
0xffffffff81d6a6b4: ret 0x98ee;
0xffffffff81d6a740: ret 0x4cac;
0xffffffff81d6a75f: ret 0x4c58;
0xffffffff81d6a7b6: ret 0xdfa5;
0xffffffff81d6a822: ret 0x5edd;
0xffffffff81d6a82a: cmpsq [rsi], [rdi]; pop rsp; mov esp, 0x65da4d2d; popfq; adc [rdi+0x67230ec], ebx; ret 0xac7c;
0xffffffff81d6a82b: cmpsd [rsi], [rdi]; pop rsp; mov esp, 0x65da4d2d; popfq; adc [rdi+0x67230ec], ebx; ret 0xac7c;
0xffffffff81d6a82c: pop rsp; mov esp, 0x65da4d2d; popfq; adc [rdi+0x67230ec], ebx; ret 0xac7c;
0xffffffff81d6a8a5: ret 0xa9a;
0xffffffff81d6a908: ret 0x7edf;
0xffffffff81d6aafa: ret 0xfea6;
0xffffffff81d6abad: ret 0x6da6;
0xffffffff81d6ac51: ret 0x6daa;
0xffffffff81d6ac91: ret 0x5bd0;
0xffffffff81d6adfe: ret 0xdcb7;
0xffffffff81d6b797: ret 0x77f0;
0xffffffff81d6b798: ret 0x77f0;
0xffffffff81d6b99a: ret 0x71df;
0xffffffff81d6bacc: sti; pop rsp; dec dword ptr [rdx+rbx+0x68]; hlt; ret 0xea18;
0xffffffff81d6bacd: pop rsp; dec dword ptr [rdx+rbx+0x68]; hlt; ret 0xea18;
0xffffffff81d6bad3: ret 0xea18;
0xffffffff81d6bc2e: fistp qword ptr [rax-0x7a], st; xchg esp, eax; not byte ptr [rsi-0x69]; call qword ptr [rdi-0x4ab080d2];
0xffffffff81d6bc31: xchg esp, eax; not byte ptr [rsi-0x69]; call qword ptr [rdi-0x4ab080d2];
0xffffffff81d6bce5: ret 0x48c6;
0xffffffff81d6bfa5: ret 0xbf80;
0xffffffff81d6bfc5: ret 0xea38;
0xffffffff81d6c0ff: sbb esp, ebx; in eax, 0xbf; iretd;
0xffffffff81d6c1b3: ret 0x55e9;
0xffffffff81d6c1fd: ret 0xdd77;
0xffffffff81d6c26c: ret 0x9f5d;
0xffffffff81d6c6ff: ret 0x506f;
0xffffffff81d6c7da: ret 0xf070;
0xffffffff81d6c9ab: ret 0x9aa9;
0xffffffff81d6cb47: ret 0xfaba;
0xffffffff81d6cc1c: mov edi, gs; mov [0x10688453d0260fc7], al; push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc1d: out dx, eax; mov [0x10688453d0260fc7], al; push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc1e: mov [0x10688453d0260fc7], al; push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc23: push rbx; test [rax+0x10], ch; push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc24: test [rax+0x10], ch; push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc27: push rcx; mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc28: mov esp, [rdx-0x43]; scasb [rdi]; jmp qword ptr [rdi];
0xffffffff81d6cc45: ret 0xea25;
0xffffffff81d6ccc7: xor eax, 0x89d42481; pop rsp; ret;
0xffffffff81d6cede: ret 0x7b29;
0xffffffff81d6cf25: ret 0x6d5;
0xffffffff81d6d2fc: ret 0xc977;
0xffffffff81d6d319: ret 0x2ade;
0xffffffff81d6d322: ret 0xf82e;
0xffffffff81d6d370: ret 0x27c9;
0xffffffff81d6d374: ret 0xfc7e;
0xffffffff81d6d43c: ret 0x563e;
0xffffffff81d6d471: ret 0xb9f5;
0xffffffff81d6d53a: mov [r14], es; xor cl, bl; mov ebp, 0x759d4b33; push rdx; xchg esp, eax; iretd;
0xffffffff81d6d53b: mov [rsi], es; xor cl, bl; mov ebp, 0x759d4b33; push rdx; xchg esp, eax; iretd;
0xffffffff81d6d53d: xor cl, bl; mov ebp, 0x759d4b33; push rdx; xchg esp, eax; iretd;
0xffffffff81d6d53f: mov ebp, 0x759d4b33; push rdx; xchg esp, eax; iretd;
0xffffffff81d6d544: push rdx; xchg esp, eax; iretd;
0xffffffff81d6da4c: ret 0x934c;
0xffffffff81d6daac: ret 0xae40;
0xffffffff81d6db41: ret 0xa306;
0xffffffff81d6db53: ret 0x5c64;
0xffffffff81d6db64: ret 0x8126;
0xffffffff81d6db6e: ret 0x9841;
0xffffffff81d6dcb0: ret 0x7f87;
0xffffffff81d6dd7a: ret 0xd382;
0xffffffff81d6ddf5: ret 0xe45b;
0xffffffff81d6de6e: ret 0x689f;
0xffffffff81d6df27: ret 0xbeeb;
0xffffffff81d6e08a: ret 0xd6ac;
0xffffffff81d6e0d7: ret 0x83c9;
0xffffffff81d6e14a: ret 0x5b4b;
0xffffffff81d6e198: ret 0xc249;
0xffffffff81d6e468: ret 0xe910;
0xffffffff81d6e496: ret 0x259;
0xffffffff81d6e646: ret 0x5dea;
0xffffffff81d6e676: ret 0xb2e6;
0xffffffff81d6e7e1: ret 0xe55e;
0xffffffff81d6e83a: ret 0x8c6;
0xffffffff81d6e8e9: ret 0x5836;
0xffffffff81d6e9a6: ret 0xf62c;
0xffffffff81d6ea00: ret 0x7e2c;
0xffffffff81d6ea06: ret 0x1e2c;
0xffffffff81d6ea0b: ret 0x962c;
0xffffffff81d6ec92: ret 0xb456;
0xffffffff81d6ed2b: ret 0xa387;
0xffffffff81d6ee9c: ret 0xd43c;
0xffffffff81d6ef5a: ret 0xed1a;
0xffffffff81d6f08b: cmp [rax+0x67], edi; adc edx, [rdx+0x1d]; pop rsp; push 0x43c0691c; cld; call rsp;
0xffffffff81d6f08d: adc edx, [edx+0x1d]; pop rsp; push 0x43c0691c; cld; call rsp;
0xffffffff81d6f08e: adc edx, [rdx+0x1d]; pop rsp; push 0x43c0691c; cld; call rsp;
0xffffffff81d6f091: pop rsp; push 0x43c0691c; cld; call rsp;
0xffffffff81d6f117: ret 0x8fb2;
0xffffffff81d6f175: ret 0x74ae;
0xffffffff81d6f1fb: ret 0x3c86;
0xffffffff81d6f27b: xchg esp, eax; stc; push r14; or eax, [rbx+0x1f]; cmp ch, [rdx-0x546d44c2]; jmp qword ptr [rcx-0xdcc2d10];
0xffffffff81d6f2a4: ret 0xd4cb;
0xffffffff81d6f3bc: ret 0x5c32;
0xffffffff81d6f412: ret 0x13df;
0xffffffff81d6f690: ret 0x2cf;
0xffffffff81d6f6f9: ret 0xaaaf;
0xffffffff81d6f742: ret 0xdc52;
0xffffffff81d6f792: ret 0xc7ba;
0xffffffff81d6f90a: ret 0x36bf;
0xffffffff81d6fadf: leave; push 0xffffffff8037f73c; lahf; push rcx; cld; ret 0x65f2;
0xffffffff81d6faeb: ret 0x65f2;
0xffffffff81d6fb02: adc eax, 0xff48e42d; out dx, eax; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb03: sub eax, 0x4dff48e4; out dx, eax; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb04: in al, 0x48; dec dword ptr [rbp-0x11]; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb05: dec qword ptr [rbp-0x11]; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb06: dec dword ptr [rbp-0x11]; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb08: out dx, eax; cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb09: cmp [rdi+rdx*4+0x25], bh; xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb0d: xchg esp, eax; test dword ptr [rbx], 0xe7ae11ea; ret;
0xffffffff81d6fb69: ret 0x9b28;
0xffffffff81d6fb7d: ret 0x49e0;
0xffffffff81d6fc04: ret 0xfbde;
0xffffffff81d6ff90: ret 0x7979;
0xffffffff81d70027: ret 0xb32;
0xffffffff81d700be: ret 0xbcd;
0xffffffff81d700fe: ret 0xc454;
0xffffffff81d701a4: ret 0x380e;
0xffffffff81d701e2: pop rsp; and r15b, bl; sub [rdx-5], eax; test al, 0xfc; ret 0xfbe0;
0xffffffff81d701eb: ret 0xfbe0;
0xffffffff81d7022c: ret 0x7520;
0xffffffff81d702bc: ret 0xc7fa;
0xffffffff81d70526: ret 0xb5ac;
0xffffffff81d7059d: ret 0x915b;
0xffffffff81d706bb: ret 0xb9;
0xffffffff81d70833: ret 0x125a;
0xffffffff81d70ac0: ret 0x87ba;
0xffffffff81d70ba5: and eax, 0x1e0859a9; mov ah, 0x4b; leave; shl byte ptr [rbp+rcx+0x27], 1; or eax, 0x9a74ac69; iretd;
0xffffffff81d70ba6: test eax, 0xb41e0859; leave; shl byte ptr [rbp+rcx+0x27], 1; or eax, 0x9a74ac69; iretd;
0xffffffff81d70ba8: or [rsi], bl; mov ah, 0x4b; leave; shl byte ptr [rbp+rcx+0x27], 1; or eax, 0x9a74ac69; iretd;
0xffffffff81d70baa: mov ah, 0x4b; leave; shl byte ptr [rbp+rcx+0x27], 1; or eax, 0x9a74ac69; iretd;
0xffffffff81d70bac: leave; shl byte ptr [rbp+rcx+0x27], 1; or eax, 0x9a74ac69; iretd;
0xffffffff81d70c21: ret 0x8e17;
0xffffffff81d70c85: shl dword ptr [rdx], 1; mov cl, 0xa0; cmp edi, [rsi+0x5e0c7958]; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c87: mov cl, 0xa0; cmp edi, [rsi+0x5e0c7958]; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c89: cmp edi, [rsi+0x5e0c7958]; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c8a: mov esi, 0x5e0c7958; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c8d: or al, 0x5e; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c8e: pop rsi; fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c8f: fcom st, dword ptr [rdx+rax*8-0x6bcecc8c]; leave; ret;
0xffffffff81d70c90: xchg esp, eax; ret 0x3374;
0xffffffff81d70c91: ret 0x3374;
0xffffffff81d70c93: xor esi, [rcx]; xchg esp, eax; leave; ret;
0xffffffff81d70c95: xchg esp, eax; leave; ret;
0xffffffff81d70f40: ret 0xd9eb;
0xffffffff81d70fb5: ret 0x3eed;
0xffffffff81d7137a: ret 0x285d;
0xffffffff81d7143d: ret 0x44f7;
0xffffffff81d714b4: ret 0x211e;
0xffffffff81d7173c: ret 0xe741;
0xffffffff81d71e36: leave; hlt; mov cl, 0xb; movsb [rdi], [rsi]; ret;
0xffffffff81d71eac: ret 0xfcfe;
0xffffffff81d71fd7: sbb esp, edx; stosb [rdi]; neg dl; mov byte ptr [rdx+0x2fc002e2], 0xf0; sbb dh, [rdi+1]; ret;
0xffffffff81d7200b: ret 0x2c2f;
0xffffffff81d72063: ret 0x2f10;
0xffffffff81d72077: ret 0x2ccf;
0xffffffff81d7217a: ret 0xe3a7;
0xffffffff81d721d9: ret 0x5b11;
0xffffffff81d721f0: ret 0x8435;
0xffffffff81d722fa: leave; call far fword ptr [rdx-0x5ec82c1a];
0xffffffff81d7238e: data16 ret 0xbb16;
0xffffffff81d7238f: ret 0xbb16;
0xffffffff81d7240c: ret 0x27cc;
0xffffffff81d7250a: ret 0xae6e;
0xffffffff81d72543: insd [rdi], dx; pop rsp; iretd;
0xffffffff81d725e1: ret 0x6f01;
0xffffffff81d727d2: ret 0x527;
0xffffffff81d72972: adc al, 0x9e; xor eax, [rdi]; leave; ret;
0xffffffff81d72973: sahf; xor eax, [rdi]; leave; ret;
0xffffffff81d72974: xor eax, [rdi]; leave; ret;
0xffffffff81d72a17: ret 0x84cf;
0xffffffff81d72a45: mov esp, ebx; jmp qword ptr [rax+0x787602d];
0xffffffff81d72c0d: ret 0x4d8a;
0xffffffff81d72f4c: ret 0x7f80;
0xffffffff81d73017: ret 0xa33b;
0xffffffff81d730f7: ret 0xb446;
0xffffffff81d731a0: ret 0xf4d6;
0xffffffff81d734a5: ret 0x165c;
0xffffffff81d734cf: ret 0xa9f8;
0xffffffff81d735a4: ret 0xe1f0;
0xffffffff81d738a1: ret 0x3d2e;
0xffffffff81d73a0f: ret 0x38b4;
0xffffffff81d73a17: ret 0x72f5;
0xffffffff81d73a65: ret 0xd41b;
0xffffffff81d73bd3: ret 0x50b4;
0xffffffff81d73c8a: ret 0x1770;
0xffffffff81d73d8d: ret 0x205a;
0xffffffff81d73e01: ret 0xfe34;
0xffffffff81d73e20: ret 0x90c8;
0xffffffff81d73ec6: ret 0x738;
0xffffffff81d7413f: ret 0x4dd2;
0xffffffff81d74271: ret 0x2fbb;
0xffffffff81d74325: ret 0xdcea;
0xffffffff81d74326: ret 0xdcea;
0xffffffff81d7458b: ret 0xfa3f;
0xffffffff81d74590: ret 0x8d3;
0xffffffff81d745c6: ret 0x81ad;
0xffffffff81d74613: ret 0xaa37;
0xffffffff81d746ef: ret 0xde47;
0xffffffff81d74bce: ret 0x76df;
0xffffffff81d74c01: ret 0x580a;
0xffffffff81d74c4b: ret 0xd0e8;
0xffffffff81d74cd1: xchg esp, eax; ret 0xec;
0xffffffff81d74cd2: ret 0xec;
0xffffffff81d74cea: ret 0xdb92;
0xffffffff81d74d6f: ret 0x8a06;
0xffffffff81d74d9c: xchg esp, eax; ret 0xe18b;
0xffffffff81d74d9d: ret 0xe18b;
0xffffffff81d74e0f: ret 0x3a59;
0xffffffff81d74e1b: ret 0x8ea8;
0xffffffff81d74e6c: ret 0x51b6;
0xffffffff81d75094: ret 0x5013;
0xffffffff81d750ac: ret 0x9367;
0xffffffff81d750eb: sahf; pop rsp; xchg esi, eax; or eax, 0x99a51888; ret 0xdc94;
0xffffffff81d750ec: pop rsp; xchg esi, eax; or eax, 0x99a51888; ret 0xdc94;
0xffffffff81d750f3: ret 0xdc94;
0xffffffff81d7511d: ret 0x2221;
0xffffffff81d75131: ret 0xad8;
0xffffffff81d7513b: ret 0x71d3;
0xffffffff81d7518f: ret 0x9e9e;
0xffffffff81d751ea: cmpsb [rsi], [rdi]; outsd dx, [rsi]; xchg esp, eax; pop rdx; dec byte ptr [rbp-0x64ec3ef6]; iretd;
0xffffffff81d751eb: outsd dx, [rsi]; xchg esp, eax; pop rdx; dec byte ptr [rbp-0x64ec3ef6]; iretd;
0xffffffff81d751ec: xchg esp, eax; pop rdx; dec byte ptr [rbp-0x64ec3ef6]; iretd;
0xffffffff81d75491: ret 0x9fca;
0xffffffff81d75541: ret 0xd7ca;
0xffffffff81d756e3: ret 0x2887;
0xffffffff81d7581c: ret 0x916c;
0xffffffff81d7583b: ret 0x2503;
0xffffffff81d75a8f: ret 0xdf23;
0xffffffff81d75a93: ret 0x38d5;
0xffffffff81d75b5f: ret 0xcb8b;
0xffffffff81d75b84: ret 0xd3db;
0xffffffff81d75ba6: ret 0x4ab3;
0xffffffff81d75bf4: ret 0xe5ad;
0xffffffff81d75d96: ret 0xbad6;
0xffffffff81d75fda: ret 0x7d7a;
0xffffffff81d76003: ret 0xc594;
0xffffffff81d76089: ret 0x9557;
0xffffffff81d760aa: ret 0x9c5b;
0xffffffff81d7625d: ret 0xed41;
0xffffffff81d76328: ret 0xf2f1;
0xffffffff81d76384: ret 0x9171;
0xffffffff81d7646e: leave; rcl bh, 1; xchg edi, eax; ret;
0xffffffff81d76625: ret 0x75ec;
0xffffffff81d767dc: ret 0x6048;
0xffffffff81d7684d: ret 0x26e4;
0xffffffff81d7695a: ret 0x1b58;
0xffffffff81d76966: ret 0xa839;
0xffffffff81d76ae5: ret 0x1ede;
0xffffffff81d76cb6: ret 0x6de0;
0xffffffff81d76e1f: ret 0x2450;
0xffffffff81d76e20: ret 0x2450;
0xffffffff81d76ec4: movsxd eax, [rax-0x6a]; mov al, [0x4de3e8aee51f4a19]; add eax, 0x816e36c1; add edi, ebp; pop rsp; iretd;
0xffffffff81d76ec6: xchg esi, eax; mov al, [0x4de3e8aee51f4a19]; add eax, 0x816e36c1; add edi, ebp; pop rsp; iretd;
0xffffffff81d76ec7: mov al, [0x4de3e8aee51f4a19]; add eax, 0x816e36c1; add edi, ebp; pop rsp; iretd;
0xffffffff81d76ecf: add rax, 0xffffffff816e36c1; add edi, ebp; pop rsp; iretd;
0xffffffff81d76ed0: add eax, 0x816e36c1; add edi, ebp; pop rsp; iretd;
0xffffffff81d76ed5: add edi, ebp; pop rsp; iretd;
0xffffffff81d76ed6: std; pop rsp; iretd;
0xffffffff81d76ee1: ret 0xd6ca;
0xffffffff81d76fde: ret 0xe956;
0xffffffff81d77086: ret 0x2c5a;
0xffffffff81d77235: ret 0xe638;
0xffffffff81d77360: ret 0xedf7;
0xffffffff81d77442: ret 0x73a;
0xffffffff81d775bc: ret 0x7853;
0xffffffff81d77821: ret 0x18f8;
0xffffffff81d77855: pop rsp; stosd [rdi]; popfq; fcom st, st(7); mov sp, 0x10cf; iretd;
0xffffffff81d779d4: and al, 0x4b; push rsi; sub edi, [rsi-0x302197eb]; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779d5: push r14; sub edi, [rsi-0x302197eb]; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779d6: push rsi; sub edi, [rsi-0x302197eb]; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779d7: sub edi, [rsi-0x302197eb]; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779d8: mov esi, 0xcfde6815; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779db: fmulp st(7), st; mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779dd: mov esp, [rcx+0x78006743]; add [rdx+0x5f], ebp; ret 0x8e1d;
0xffffffff81d779e6: ret 0x8e1d;
0xffffffff81d779e7: ret 0x8e1d;
0xffffffff81d77b09: ret 0xe47;
0xffffffff81d77c10: ret 0xa8f5;
0xffffffff81d77c4d: ret 0xaa4a;
0xffffffff81d77cae: ret 0xf532;
0xffffffff81d77dd8: ret 0xe6a2;
0xffffffff81d77e63: pop rsp; ret 0x95e7;
0xffffffff81d77e64: ret 0x95e7;
0xffffffff81d77e9d: ret 0x4115;
0xffffffff81d77ea1: xchg esp, eax; mov al, [0xafc7c9bf3fc0b12f]; cmp eax, 0x528e3fa2; cmc; iretd;
0xffffffff81d77f3b: mov esp, eax; pop rbx; ret 0x2f01;
0xffffffff81d77f3e: ret 0x2f01;
0xffffffff81d77f9b: mov di, 0xc2ea; xor dword ptr [rcx*4+0x20187144], 0xffffffc8; add bh, [rbp-0x4018c6f]; or [rbx], esi; pop rsp; ret;
0xffffffff81d77f9e: ret 0x3483;
0xffffffff81d77f9f: xor dword ptr [rcx*4+0x20187144], 0xffffffc8; add bh, [rbp-0x4018c6f]; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fa1: lea eax, [rcx+rsi*2+0x18]; and al, cl; add bh, [rbp-0x4018c6f]; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fa5: and al, cl; add bh, [rbp-0x4018c6f]; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fa7: add bh, [rbp-0x4018c6f]; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fa8: mov ebp, 0xfbfe7391; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fac: sti; or [rbx], esi; pop rsp; ret;
0xffffffff81d77fad: or [rbx], esi; pop rsp; ret;
0xffffffff81d781d5: ret 0xc117;
0xffffffff81d78288: mov ebx, 0xd660798d; in eax, 0xc6; mov ah, 0x6e; xor [rip-0x49f5728e], dl; pop rsp; ret;
0xffffffff81d7828d: in eax, 0xc6; mov ah, 0x6e; xor [rip-0x49f5728e], dl; pop rsp; ret;
0xffffffff81d7828f: mov ah, 0x6e; xor [rip-0x49f5728e], dl; pop rsp; ret;
0xffffffff81d78290: outsb dx, [rsi]; xor [rip-0x49f5728e], dl; pop rsp; ret;
0xffffffff81d78291: xor [rip-0x49f5728e], dl; pop rsp; ret;
0xffffffff81d78292: adc eax, 0xb60a8d72; pop rsp; ret;
0xffffffff81d784dd: ret 0x6ba8;
0xffffffff81d7868b: leave; ret 0x58fd;
0xffffffff81d7868d: ret 0x58fd;
0xffffffff81d7870a: ret 0x453c;
0xffffffff81d78828: ret 0x58d7;
0xffffffff81d78cac: ret 0xd73c;
0xffffffff81d78ccc: ret 0xe780;
0xffffffff81d78d07: ret 0xed30;
0xffffffff81d78dd8: ret 0x75a;
0xffffffff81d78e10: ret 0x8c14;
0xffffffff81d79385: ret 0x1fc;
0xffffffff81d79413: cwde; adc esp, edi; sbb al, 0x65; mov fs, [rcx-6]; pushfq; call far fword ptr [rbp+0x78];
0xffffffff81d79414: adc esp, edi; sbb al, 0x65; mov fs, [rcx-6]; pushfq; call far fword ptr [rbp+0x78];
0xffffffff81d7947e: ret 0x6f55;
0xffffffff81d79506: ret 0xd0;
0xffffffff81d79528: pop rsp; pop rsi; cld; push rsi; sbb al, 0x2e; iretd;
0xffffffff81d79653: mov rdi, 0x9c50eea8a4d8c586; xchg esp, eax; ret;
0xffffffff81d79654: mov edi, 0xa4d8c586; test al, 0xee; push rax; pushfq; xchg esp, eax; ret;
0xffffffff81d79658: movsb [rdi], [rsi]; test al, 0xee; push rax; pushfq; xchg esp, eax; ret;
0xffffffff81d79659: test al, 0xee; push rax; pushfq; xchg esp, eax; ret;
0xffffffff81d7965a: out dx, al; push rax; pushfq; xchg esp, eax; ret;
0xffffffff81d7965b: push rax; pushfq; xchg esp, eax; ret;
0xffffffff81d7965c: pushfq; xchg esp, eax; ret;
0xffffffff81d79693: ret 0x84;
0xffffffff81d796d3: ret 0xd5e2;
0xffffffff81d79781: ret 0x1822;
0xffffffff81d79bbb: ret 0x688d;
0xffffffff81d79d1e: hlt; push rdx; pop rsp; xchg ecx, eax; mov edx, [rcx]; ret;
0xffffffff81d79d1f: push rdx; pop rsp; xchg ecx, eax; mov edx, [rcx]; ret;
0xffffffff81d79d20: pop rsp; xchg ecx, eax; mov edx, [rcx]; ret;
0xffffffff81d79e31: ret 0xe7b;
0xffffffff81d79f6c: ret 0x844e;
0xffffffff81d7a03a: ret 0x4c56;
0xffffffff81d7a161: ret 0x87a7;
0xffffffff81d7a1dc: ret 0xb46c;
0xffffffff81d7a2ee: ret 0xe5f8;
0xffffffff81d7a3f6: ret 0x1b13;
0xffffffff81d7a63e: pop rsp; cmp edi, edi; mov bpl, 0x51; xor [r10], r11b; ret 0x7308;
0xffffffff81d7a647: ret 0x7308;
0xffffffff81d7a7ec: mov esp, esp; ret;
0xffffffff81d7a894: ret 0x70f8;
0xffffffff81d7a8ee: leave; mov r14b, 0xaa; ret;
0xffffffff81d7aa73: ret 0x7dcf;
0xffffffff81d7aaf0: ret 0x4048;
0xffffffff81d7ac42: xchg edi, eax; cmp byte ptr [rip-0x5a07ab3f], 0xf2; and al, [rbp+0x2ea9d99e]; pop rsp; ret;
0xffffffff81d7ac43: cmp byte ptr [rip-0x5a07ab3f], 0xf2; and al, [rbp+0x2ea9d99e]; pop rsp; ret;
0xffffffff81d7ac45: rcl dword ptr [rax+rdi*8-0x5b], 0xf2; and al, [rbp+0x2ea9d99e]; pop rsp; ret;
0xffffffff81d7ac4a: and al, [rbp+0x2ea9d99e]; pop rsp; ret;
0xffffffff81d7adea: ret 0x40a5;
0xffffffff81d7ae01: ret 0xd474;
0xffffffff81d7b023: ret 0xe830;
0xffffffff81d7b0b8: pop rbx; and dword ptr [rbp-0x18], 0xa9d10807; and eax, 0x858053ac; mov esi, 0x81c94692; leave; ret;
0xffffffff81d7b0b9: and dword ptr [rbp-0x18], 0xa9d10807; and eax, 0x858053ac; mov esi, 0x81c94692; leave; ret;
0xffffffff81d7b0bd: or cl, dl; test eax, 0x8053ac25; test [rsi-0x7e36b96e], edi; leave; ret;
0xffffffff81d7b0be: shr dword ptr [rcx-0x7fac53db], 1; test [rsi-0x7e36b96e], edi; leave; ret;
0xffffffff81d7b0bf: test eax, 0x8053ac25; test [rsi-0x7e36b96e], edi; leave; ret;
0xffffffff81d7b0c0: and eax, 0x858053ac; mov esi, 0x81c94692; leave; ret;
0xffffffff81d7b0c1: lodsb [rsi]; push rbx; add byte ptr [rbp-0x36b96d42], 0x81; leave; ret;
0xffffffff81d7b0c2: push rbx; add byte ptr [rbp-0x36b96d42], 0x81; leave; ret;
0xffffffff81d7b0c3: add byte ptr [rbp-0x36b96d42], 0x81; leave; ret;
0xffffffff81d7b0c4: test [rsi-0x7e36b96e], edi; leave; ret;
0xffffffff81d7b0c5: mov esi, 0x81c94692; leave; ret;
0xffffffff81d7b248: ret 0xdefe;
0xffffffff81d7b3b1: ret 0x75c3;
0xffffffff81d7b4cb: stosd [rdi]; pop rsp; fdiv st, dword ptr [rdi+0x1b]; movsd [rdi], [rsi]; ret;
0xffffffff81d7b4cc: pop rsp; fdiv st, dword ptr [rdi+0x1b]; movsd [rdi], [rsi]; ret;
0xffffffff81d7b64a: ret 0x816a;
0xffffffff81d7b8a7: ret 0x7e56;
0xffffffff81d7b8f9: ret 0x5826;
0xffffffff81d7bbf7: ret 0xd87b;
0xffffffff81d7be20: ret 0x546;
0xffffffff81d7be55: ret 0x9634;
0xffffffff81d7c12f: ret 0x6bfb;
0xffffffff81d7c1b1: ret 0xec1d;
0xffffffff81d7c2ad: ret 0xfc7d;
0xffffffff81d7c2ae: ret 0xfc7d;
0xffffffff81d7c3ed: ret 0x63ae;
0xffffffff81d7c60b: mov dh, [rdx]; fbld st, tbyte ptr [rcx-0x78]; cmp esi, edx; xchg esp, eax; sub edx, [rdx-0x22259d7f]; ret 0x44b8;
0xffffffff81d7c60d: fbld st, tbyte ptr [rcx-0x78]; cmp esi, edx; xchg esp, eax; sub edx, [rdx-0x22259d7f]; ret 0x44b8;
0xffffffff81d7c612: cmp esi, edx; xchg esp, eax; sub edx, [rdx-0x22259d7f]; ret 0x44b8;
0xffffffff81d7c614: xchg esp, eax; sub edx, [rdx-0x22259d7f]; ret 0x44b8;
0xffffffff81d7c61b: ret 0x44b8;
0xffffffff81d7c68b: ret 0x5ca5;
0xffffffff81d7c766: ret 0x2f54;
0xffffffff81d7c815: ret 0xcd2c;
0xffffffff81d7c987: ret 0xdf57;
0xffffffff81d7ce2b: ret 0x3c6e;
0xffffffff81d7cfb9: hlt; test [rbp-0x12], cl; fidiv st, word ptr [rcx+0x4a6d7f51]; xor ebp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfba: test [rbp-0x12], cl; fidiv st, word ptr [rcx+0x4a6d7f51]; xor ebp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfbc: out dx, al; fidiv st, word ptr [rcx+0x4a6d7f51]; xor ebp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfbd: fidiv st, word ptr [rcx+0x4a6d7f51]; xor ebp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfc1: insd [rdi], dx; xor rbp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfc2: xor rbp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfc3: xor ebp, [rcx-0x32507e32]; leave; ret 0x4daf;
0xffffffff81d7cfc4: test eax, 0xcdaf81ce; leave; ret 0x4daf;
0xffffffff81d7cfc9: leave; ret 0x4daf;
0xffffffff81d7cfca: ret 0x4daf;
0xffffffff81d7d057: ret 0xaafb;
0xffffffff81d7d060: ret 0xb8a8;
0xffffffff81d7d1a9: ret 0x4f55;
0xffffffff81d7d28e: movsb [rdi], [rsi]; xchg esp, eax; ret;
0xffffffff81d7d2b0: ret 0xab60;
0xffffffff81d7d41f: ret 0xd6cc;
0xffffffff81d7d4fc: ret 0x3ff;
0xffffffff81d7d5ee: mov al, [0x3b19af8ad0aa050c]; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5ef: or al, 5; stosb [rdi]; ror byte ptr [rdx+0x453b19af], 1; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f0: add eax, 0xaf8ad0aa; sbb [rbx], edi; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f1: stosb [rdi]; ror byte ptr [rdx+0x453b19af], 1; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f2: ror byte ptr [rdx+0x453b19af], 1; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f3: mov ch, [rdi-0x6bac4e7]; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f4: scasd [rdi]; sbb [rbx], edi; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f5: sbb [rbx], edi; stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f6: cmp eax, [rbp-7]; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f8: stc; pop rsp; ret 0xfbf2;
0xffffffff81d7d5f9: pop rsp; ret 0xfbf2;
0xffffffff81d7d5fa: ret 0xfbf2;
0xffffffff81d7d67c: ret 0xae2;
0xffffffff81d7d734: ret 0xcc40;
0xffffffff81d7d794: ret 0x996b;
0xffffffff81d7d940: leave; ret 0x5bc8;
0xffffffff81d7da34: ret 0xa256;
0xffffffff81d7dcf2: ret 0x2b23;
0xffffffff81d7dd14: ret 0x2e63;
0xffffffff81d7ddca: leave; fld st, dword ptr [rdi]; iretd;
0xffffffff81d7ded8: ret 0x2c4d;
0xffffffff81d7defe: ret 0xff57;
0xffffffff81d7df08: ret 0xfd0f;
0xffffffff81d7dfa0: ret 0x314b;
0xffffffff81d7dfd3: ret 0x473a;
0xffffffff81d7e05a: ret 0x3964;
0xffffffff81d7e143: ret 0x752f;
0xffffffff81d7e279: ret 0x53ed;
0xffffffff81d7e2c1: ret 0x383b;
0xffffffff81d7e460: mov bl, 0xb0; xchg esp, eax; ret;
0xffffffff81d7e543: ret 0x82d;
0xffffffff81d7e6eb: ret 0xd600;
0xffffffff81d7ea45: ret 0xede3;
0xffffffff81d7eb29: pop rsp; push rdi; mov [0x97e4facda27ccfd1], al; mov dh, al; ret 0xd128;
0xffffffff81d7eb36: ret 0xd128;
0xffffffff81d7ed16: ret 0xb73b;
0xffffffff81d7ee72: ret 0xacc;
0xffffffff81d7eeac: ret 0xba3;
0xffffffff81d7f01a: ret 0x4f4a;
0xffffffff81d7f05b: insd [rdi], dx; pop rbx; pmuludq mm2, [rbp-0x6efa50bd]; sti; pop rsp; call qword ptr [rbx];
0xffffffff81d7f05c: pop rbx; pmuludq mm2, [rbp-0x6efa50bd]; sti; pop rsp; call qword ptr [rbx];
0xffffffff81d7f05d: pmuludq mm2, [rbp-0x6efa50bd]; sti; pop rsp; call qword ptr [rbx];
0xffffffff81d7f063: xchg ecx, eax; sti; pop rsp; call qword ptr [rbx];
0xffffffff81d7f064: sti; pop rsp; call qword ptr [rbx];
0xffffffff81d7f086: ret 0xb40c;
0xffffffff81d7f0c4: ret 0x5dad;
0xffffffff81d7f2d0: push rdi; sub bl, [rbp-0x3d]; sti; sub esp, edi; xchg esi, eax; ret;
0xffffffff81d7f2d1: sub bl, [rbp-0x3d]; sti; sub esp, edi; xchg esi, eax; ret;
0xffffffff81d7f2d4: sti; sub esp, edi; xchg esi, eax; ret;
0xffffffff81d7f2d5: sub esp, edi; xchg esi, eax; ret;
0xffffffff81d7f34d: ret 0x514e;
0xffffffff81d7f4bc: ret 0x1607;
0xffffffff81d7f4c6: popfq; xor al, [rcx+0x2010ae6c]; xchg esp, eax; iretd;
0xffffffff81d7f4c7: xor al, [rcx+0x2010ae6c]; xchg esp, eax; iretd;
0xffffffff81d7f4c9: insb [rdi], dx; scasb [rdi]; adc [rax], ah; xchg esp, eax; iretd;
0xffffffff81d7f4ca: scasb [rdi]; adc [rax], ah; xchg esp, eax; iretd;
0xffffffff81d7f4cb: adc [rax], ah; xchg esp, eax; iretd;
0xffffffff81d7f5a4: ret 0xe03b;
0xffffffff81d7f609: mov spl, 0xd1; pop rsp; cdq; ret;
0xffffffff81d7f60a: mov ah, 0xd1; pop rsp; cdq; ret;
0xffffffff81d7f60c: pop rsp; cdq; ret;
0xffffffff81d7f731: ret 0x6697;
0xffffffff81d7f75c: ret 0xd90e;
0xffffffff81d7f817: ret 0x6425;
0xffffffff81d7f955: ret 0xb5ed;
0xffffffff81d7f961: ret 0x9664;
0xffffffff81d7fa63: ret 0xb086;
0xffffffff81d7fb55: shr byte ptr [rip-0x3c0b9e3f], cl; xchg edi, eax; pop rsp; fimul st, word ptr [rsi+0x73ef2119]; cmpsd [rsi], [rdi]; ret;
0xffffffff81d7fb56: sub eax, 0xc3f461c1; xchg edi, eax; pop rsp; fimul st, word ptr [rsi+0x73ef2119]; cmpsd [rsi], [rdi]; ret;
0xffffffff81d7fb57: shl dword ptr [rcx-0xc], 0xc3; xchg edi, eax; pop rsp; fimul st, word ptr [rsi+0x73ef2119]; cmpsd [rsi], [rdi]; ret;
0xffffffff81d7fb5b: xchg edi, eax; pop rsp; fimul st, word ptr [rsi+0x73ef2119]; cmpsd [rsi], [rdi]; ret;
0xffffffff81d7fb5c: pop rsp; fimul st, word ptr [rsi+0x73ef2119]; cmpsd [rsi], [rdi]; ret;
0xffffffff81d7fb71: ret 0x6d07;
0xffffffff81d7fedb: ret 0xb063;
0xffffffff81d7ffa2: ret 0x9c97;
0xffffffff81d8000a: ret 0x5e97;
0xffffffff81d80157: ret 0x79d4;
0xffffffff81d801c9: ret 0x927a;
0xffffffff81d802b7: ret 0x1688;
0xffffffff81d802c7: ret 0x4e20;
0xffffffff81d80347: ret 0x3ed;
0xffffffff81d80478: ret 0x422f;
0xffffffff81d80657: xchg esp, eax; adc bl, [rax-0x31]; int3; fcom st, dword ptr [rax]; ret;
0xffffffff81d80664: sub eax, 0xe9b26745; xchg [rdx+0x6da18848], esp; iretq;
0xffffffff81d80667: mov dl, 0xe9; xchg [rdx+0x6da18848], esp; iretq;
0xffffffff81d80669: xchg [rdx+0x6da18848], esp; iretq;
0xffffffff81d806c2: ret 0xf877;
0xffffffff81d8083e: ret 0xd809;
0xffffffff81d80920: ret 0x593f;
0xffffffff81d80a9e: ret 0x59da;
0xffffffff81d80b0d: ret 0xc9dd;
0xffffffff81d80cb3: ret 0x67b7;
0xffffffff81d80de1: ret 0xcfbc;
0xffffffff81d80f89: ret 0x446d;
0xffffffff81d80fb2: sub esp, esp; or al, 0xef; push rbp; mov al, 0xf7; adc bh, ch; ret 0x517b;
0xffffffff81d81056: ret 0xc03f;
0xffffffff81d81128: ret 0xa999;
0xffffffff81d8112f: ret 0x7115;
0xffffffff81d811f1: leave; pop rsi; mov esp, [rsi]; or eax, 0x4dfea546; movsb [rdi], [rsi]; ret 0x8c60;
0xffffffff81d811f2: leave; pop rsi; mov esp, [rsi]; or eax, 0x4dfea546; movsb [rdi], [rsi]; ret 0x8c60;
0xffffffff81d811f3: pop rsi; mov esp, [rsi]; or eax, 0x4dfea546; movsb [rdi], [rsi]; ret 0x8c60;
0xffffffff81d811f4: mov esp, [rsi]; or eax, 0x4dfea546; movsb [rdi], [rsi]; ret 0x8c60;
0xffffffff81d811fd: ret 0x8c60;
0xffffffff81d81334: ret 0x26a3;
0xffffffff81d81414: ret 0xf64a;
0xffffffff81d81417: ret 0x425f;
0xffffffff81d8146c: ret 0x24ba;
0xffffffff81d8151f: ret 0xe87b;
0xffffffff81d81704: ret 0xa1c4;
0xffffffff81d81720: ret 0xa03f;
0xffffffff81d81784: ret 0xa822;
0xffffffff81d81803: ret 0xddba;
0xffffffff81d81831: xor cl, [rbx]; setae [rax]; leave; iretd;
0xffffffff81d81833: setae [rax]; leave; iretd;
0xffffffff81d818ed: xchg esp, eax; shr dword ptr [rsi-2], 1; xchg ecx, eax; iretd;
0xffffffff81d819b1: ret 0x64b2;
0xffffffff81d81a97: ret 0xe414;
0xffffffff81d81ae8: ret 0x28f2;
0xffffffff81d81b2d: ret 0x5c07;
0xffffffff81d81b51: ret 0xce74;
0xffffffff81d81b5c: ret 0x59ee;
0xffffffff81d81c39: ret 0xc3e9;
0xffffffff81d81d14: adc bl, [rbp+0x2d7470b9]; cmp eax, 0x6b4ffeab; leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d15: adc bl, [rbp+0x2d7470b9]; cmp eax, 0x6b4ffeab; leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d1b: cmp eax, 0x6b4ffeab; leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d1c: stosd [rdi]; dec byte ptr [rdi+0x6b]; leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d1d: dec byte ptr [rdi+0x6b]; leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d20: leave; adc eax, 0x354a4b5d; sub al, 0x25; ret 0xb11d;
0xffffffff81d81d28: ret 0xb11d;
0xffffffff81d81da9: ret 0xd740;
0xffffffff81d81ef7: ret 0xc8f0;
0xffffffff81d81f1b: ret 0xd674;
0xffffffff81d8208e: ret 0xc765;
0xffffffff81d824d8: ret 0x17b7;
0xffffffff81d82baa: ret 0x315d;
0xffffffff81d82d09: ret 0x8b;
0xffffffff81d82d4a: sbb [rax-0x6c98b4c], edi; leave; mov [rax], dh; pop qword ptr [rbp+0x7fd699cf]; fbstp tbyte ptr [rsi], st; ret;
0xffffffff81d82d4b: mov eax, 0xf93674b4; leave; mov [rax], dh; pop qword ptr [rbp+0x7fd699cf]; fbstp tbyte ptr [rsi], st; ret;
0xffffffff81d82d4e: stc; leave; mov [rax], dh; pop qword ptr [rbp+0x7fd699cf]; fbstp tbyte ptr [rsi], st; ret;
0xffffffff81d82d4f: stc; leave; mov [rax], dh; pop qword ptr [rbp+0x7fd699cf]; fbstp tbyte ptr [rsi], st; ret;
0xffffffff81d82d50: leave; mov [rax], dh; pop qword ptr [rbp+0x7fd699cf]; fbstp tbyte ptr [rsi], st; ret;
0xffffffff81d82e18: ret 0x4127;
0xffffffff81d82eff: ret 0x9b3d;
0xffffffff81d82fb4: ret 0x3408;
0xffffffff81d8304f: ret 0xba20;
0xffffffff81d8308c: ret 0x99d1;
0xffffffff81d831a8: ret 0x96fd;
0xffffffff81d832d7: ret 0x6545;
0xffffffff81d83675: ret 0xc979;
0xffffffff81d83683: ret 0xbbcc;
0xffffffff81d83746: ret 0xe44;
0xffffffff81d83767: add esp, edi; ret;
0xffffffff81d83993: ret 0xadfb;
0xffffffff81d83a80: ret 0x1a11;
0xffffffff81d83aac: ret 0xe986;
0xffffffff81d83bbc: ret 0x34e2;
0xffffffff81d83cfe: ret 0xc4c2;
0xffffffff81d83cff: ret 0x83c4;
0xffffffff81d83e28: ret 0x699;
0xffffffff81d83f55: ret 0xb581;
0xffffffff81d84014: ret 0xe05a;
0xffffffff81d8412a: ret 0xca18;
0xffffffff81d8427d: ret 0x44a;
0xffffffff81d84560: ret 0x8d0a;
0xffffffff81d8456b: ret 0x9bbe;
0xffffffff81d84600: ret 0xd1f6;
0xffffffff81d84670: ret 0x9cec;
0xffffffff81d8491a: ret 0xf14;
0xffffffff81d84990: ret 0x3c82;
0xffffffff81d84993: fcmove st, st(0); leave; sti; sbb edi, esp; iretd;
0xffffffff81d84995: leave; sti; sbb edi, esp; iretd;
0xffffffff81d84a26: ret 0x205b;
0xffffffff81d84ad8: xchg esp, eax; pop rax; xlat [rbx]; mov ebp, 0x5fc94f03; xchg edx, eax; ret 0x4e92;
0xffffffff81d84ade: leave; pop rdi; xchg edx, eax; ret 0x4e92;
0xffffffff81d84ae1: ret 0x4e92;
0xffffffff81d84d41: ret 0x3a8c;
0xffffffff81d84d45: ret 0xc71d;
0xffffffff81d84f80: ret 0xf26c;
0xffffffff81d8514a: ret 0x16d6;
0xffffffff81d85232: ret 0x8cb0;
0xffffffff81d85273: ret 0x631b;
0xffffffff81d85283: ret 0xc6f;
0xffffffff81d85323: ret 0x1af2;
0xffffffff81d8532d: ret 0x2429;
0xffffffff81d853cb: ret 0x1958;
0xffffffff81d85401: ret 0x1e26;
0xffffffff81d8557f: ret 0x5bc1;
0xffffffff81d8592e: ret 0xc9d5;
0xffffffff81d85a70: ret 0x9248;
0xffffffff81d85a99: ret 0x66e0;
0xffffffff81d85aa9: ret 0x2d72;
0xffffffff81d85ad6: ret 0x8e34;
0xffffffff81d85d77: ret 0x5b22;
0xffffffff81d85dfd: leave; fist dword ptr [rax+0x64], st; iretd;
0xffffffff81d85e08: ret 0x777c;
0xffffffff81d85e53: ret 0x1390;
0xffffffff81d85ee0: ret 0xa9a0;
0xffffffff81d85f95: ret 0xa03e;
0xffffffff81d8600b: ret 0xa092;
0xffffffff81d8615b: ret 0xf93c;
0xffffffff81d86351: ret 0x7748;
0xffffffff81d86380: ret 0xc3a7;
0xffffffff81d864eb: leave; pop rsi; pop rsi; out dx, al; ret;
0xffffffff81d8650e: ret 0xfa88;
0xffffffff81d8660d: ret 0x77b4;
0xffffffff81d86682: ret 0x7903;
0xffffffff81d8671b: ret 0x1ba5;
0xffffffff81d8683f: ret 0x96a6;
0xffffffff81d86923: ret 0x9d1b;
0xffffffff81d86a99: sub esp, edi; lodsb [rsi]; add al, 0xb5; test eax, 0x52cbd78a; mov dh, 0x2b; ret;
0xffffffff81d86ccf: ret 0x4a29;
0xffffffff81d86d40: ret 0x1db8;
0xffffffff81d86e14: ret 0x90c7;
0xffffffff81d8700f: ret 0x9e13;
0xffffffff81d87050: xchg esp, eax; ret 0x8713;
0xffffffff81d87052: ret 0x8713;
0xffffffff81d870ac: ret 0x4a7b;
0xffffffff81d87185: ret 0x1f7a;
0xffffffff81d87186: ret 0x1f7a;
0xffffffff81d8718c: ret 0xe928;
0xffffffff81d871e5: ret 0x4d80;
0xffffffff81d87276: ret 0xd83b;
0xffffffff81d8730c: ret 0xeac3;
0xffffffff81d87399: ret 0x77ec;
0xffffffff81d8740c: ret 0x5bfa;
0xffffffff81d87545: ret 0x32ea;
0xffffffff81d87774: ret 0x186;
0xffffffff81d877c3: ret 0xb60b;
0xffffffff81d87812: ret 0x24d9;
0xffffffff81d8786d: ret 0x29cc;
0xffffffff81d87932: ret 0x2d98;
0xffffffff81d87a1c: ret 0xf007;
0xffffffff81d87b41: leave; fistp word ptr [rax], st; xchg edx, eax; jmp far fword ptr [rdi-0x419006df];
0xffffffff81d87bf5: ret 0x2546;
0xffffffff81d87d1f: ret 0xc986;
0xffffffff81d87e29: ret 0x8caf;
0xffffffff81d87e9b: ret 0x1b22;
0xffffffff81d87fca: pop rsp; lodsb [rsi]; ret;
0xffffffff81d87ffb: ret 0x5f41;
0xffffffff81d88039: ret 0x607e;
0xffffffff81d8803a: ret 0x607e;
0xffffffff81d8806f: ret 0x2dd9;
0xffffffff81d880f1: ret 0x32f2;
0xffffffff81d8812e: push 0x3c996e6f; cmp cl, [rip+0x20ed6e11]; int3; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88132: cmp al, 0x3a; or eax, 0x20ed6e11; int3; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88133: cmp cl, [rip+0x20ed6e11]; int3; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88134: or eax, 0x20ed6e11; int3; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88135: adc [rsi-0x13], ebp; and ah, cl; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88136: outsb dx, [rsi]; in eax, dx; and ah, cl; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88137: in eax, dx; and ah, cl; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88138: and ah, cl; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d88139: int3; pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d8813a: pop rsp; pop rax; ret 0xc2a4;
0xffffffff81d8813c: ret 0xc2a4;
0xffffffff81d8813e: ret 0x3657;
0xffffffff81d88183: ret 0xbf83;
0xffffffff81d8828e: ret 0xd622;
0xffffffff81d882a3: ret 0xede8;
0xffffffff81d8831d: pop rsp; mov rsi, 0xbd166e4e65386e62; adc [rax+0x57], ax; fwait; xchg ebx, eax; iretd;
0xffffffff81d88477: ret 0x74cb;
0xffffffff81d8852b: ret 0xf7e8;
0xffffffff81d885bb: ret 0x1576;
0xffffffff81d88618: ret 0x6d9c;
0xffffffff81d88659: ret 0xe516;
0xffffffff81d88678: ret 0xe2f9;
0xffffffff81d88753: ret 0x8fd6;
0xffffffff81d888d4: ret 0x6951;
0xffffffff81d8890b: ret 0x4b3a;
0xffffffff81d88911: ret 0x51af;
0xffffffff81d8896a: mov esp, fs; mov eax, [0x59de480715cf0f08]; mov al, 0x38; scasd [rdi]; iretd;
0xffffffff81d889e6: ret 0xc92a;
0xffffffff81d88b4d: ret 0xdf77;
0xffffffff81d88bd5: ret 0x7e19;
0xffffffff81d88d6a: ret 0x1371;
0xffffffff81d88db9: ret 0x114c;
0xffffffff81d88dd5: ret 0xf692;
0xffffffff81d88e10: ret 0x8c10;
0xffffffff81d88e24: ret 0xbe90;
0xffffffff81d88e97: ret 0x64a3;
0xffffffff81d8903a: ret 0xee9e;
0xffffffff81d89058: ret 0x43c8;
0xffffffff81d891db: ret 0xf832;
0xffffffff81d89223: ret 0xeb6;
0xffffffff81d893ed: ret 0xea8c;
0xffffffff81d8943e: ret 0x21f6;
0xffffffff81d8968a: ret 0x70ba;
0xffffffff81d896da: ret 0xeb36;
0xffffffff81d896f9: ret 0x630f;
0xffffffff81d89981: ret 0xfa0a;
0xffffffff81d8998e: ret 0xf64f;
0xffffffff81d89b7e: ret 0xcb92;
0xffffffff81d89cbf: ret 0x926b;
0xffffffff81d89de5: ret 0xbd41;
0xffffffff81d89f27: ret 0xfdec;
0xffffffff81d89fc8: ret 0x6811;
0xffffffff81d8a07b: ret 0xfa60;
0xffffffff81d8a1ab: ret 0x53e4;
0xffffffff81d8a2b6: ret 0x4ee8;
0xffffffff81d8a36f: ret 0x1a80;
0xffffffff81d8a3d7: ret 0x2156;
0xffffffff81d8a7c1: ret 0x1234;
0xffffffff81d8a7ea: ret 0x48b;
0xffffffff81d8a938: ret 0x2096;
0xffffffff81d8aa09: ret 0xa1f1;
0xffffffff81d8ab0f: ret 0xd616;
0xffffffff81d8acdd: ret 0xbc36;
0xffffffff81d8b013: ret 0x21a9;
0xffffffff81d8b139: ret 0x2746;
0xffffffff81d8b237: ret 0xb58f;
0xffffffff81d8b3bf: ret 0x8c2f;
0xffffffff81d8b46b: ret 0x42e7;
0xffffffff81d8b627: ret 0xe573;
0xffffffff81d8b7f4: ret 0x1784;
0xffffffff81d8b89a: ret 0x9adf;
0xffffffff81d8b8a5: ret 0xbd28;
0xffffffff81d8b8fb: ret 0x6a73;
0xffffffff81d8bab7: ret 0xdd2b;
0xffffffff81d8bb6f: cwde; pop rsp; out dx, eax; iretd;
0xffffffff81d8bb70: pop rsp; out dx, eax; iretd;
0xffffffff81d8bb9e: ret 0x761a;
0xffffffff81d8bcaa: ret 0x5bba;
0xffffffff81d8be07: ret 0xd05d;
0xffffffff81d8be82: ret 0x2833;
0xffffffff81d8becc: ret 0x2748;
0xffffffff81d8c05c: ret 0xc234;
0xffffffff81d8c05e: ret 0xc3f2;
0xffffffff81d8c09d: xchg esp, eax; or al, cl; sub [rip-0x718b44c6], edx; syscall;
0xffffffff81d8c0ed: ret 0x7af2;
0xffffffff81d8c237: ret 0x572;
0xffffffff81d8c25b: ret 0xbd06;
0xffffffff81d8c32b: ret 0x4557;
0xffffffff81d8c399: ret 0x9bf0;
0xffffffff81d8c45d: ret 0xdba5;
0xffffffff81d8c60c: ret 0x2c22;
0xffffffff81d8c69f: ret 0xf6b9;
0xffffffff81d8c6ca: ret 0x1ae8;
0xffffffff81d8c6d7: ret 0x315f;
0xffffffff81d8c7b0: clc; mov edi, 0x2ee6ec4a; xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8c7b1: mov edi, 0x2ee6ec4a; xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8c7b3: in al, dx; out 0x2e, al; xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8c7b4: out 0x2e, al; xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8c7b5: xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8c7b6: xchg esp, eax; out dx, eax; or dword ptr [rbp-0x61], 0x76; ret;
0xffffffff81d8ca1a: ret 0x788e;
0xffffffff81d8cae7: ret 0xc530;
0xffffffff81d8cb76: ret 0xb1f3;
0xffffffff81d8cc29: ret 0x79e1;
0xffffffff81d8cd6a: xchg esi, eax; xchg esp, eax; or dl, [rax+0x5d9a52f2]; iretd;
0xffffffff81d8cd6b: xchg esp, eax; or dl, [rax+0x5d9a52f2]; iretd;
0xffffffff81d8ce4f: ret 0x32ad;
0xffffffff81d8cf7e: ret 0x1679;
0xffffffff81d8d19b: ret 0x8d1f;
0xffffffff81d8d1bd: ret 0x99ac;
0xffffffff81d8d636: ret 0x5a0a;
0xffffffff81d8d6d2: ret 0x18db;
0xffffffff81d8d852: ret 0xa60e;
0xffffffff81d8d861: ret 0x76ec;
0xffffffff81d8e26b: ret 0x7d70;
0xffffffff81d8e310: ret 0x5291;
0xffffffff81d8e49d: ret 0xb2e5;
0xffffffff81d8e49e: ret 0xb2e5;
0xffffffff81d8e4e7: pop rsp; test [rsi+0x6e6f55df], ah; test al, 0x79; ret 0x94f7;
0xffffffff81d8e4f0: ret 0x94f7;
0xffffffff81d8e5e3: adc esp, 0xffffffb1; adc [rsi+0x27], esp; mov edi, 0xde695e32; mov dl, 0x28; ret;
0xffffffff81d8e798: sahf; leave; jmp far fword ptr [rbx+0x44b92d81];
0xffffffff81d8e799: leave; jmp far fword ptr [rbx+0x44b92d81];
0xffffffff81d8e7bb: ret 0x72e0;
0xffffffff81d8e8b2: ret 0x3e32;
0xffffffff81d8eb04: leave; fsub st, dword ptr [rdx]; xor bh, cl; xor bl, al; and edi, [rax-0x50]; ret 0xdf50;
0xffffffff81d8eb15: ret 0x2760;
0xffffffff81d8ebf7: ret 0xfa14;
0xffffffff81d8ecf2: ret 0x4fcd;
0xffffffff81d8f0de: ret 0x8d8;
0xffffffff81d8f1b2: ret 0xe068;
0xffffffff81d8f372: ret 0xcaff;
0xffffffff81d8f6ae: ret 0x4157;
0xffffffff81d8f79e: ret 0xa63e;
0xffffffff81d8fab3: ret 0x48d8;
0xffffffff81d8fad6: mov eax, [0x28c4bc5716ed0fcf]; xchg esp, eax; cdq; iretd;
0xffffffff81d8fadf: xchg esp, eax; cdq; iretd;
0xffffffff81d90033: ret 0xa650;
0xffffffff81d90034: ret 0xa650;
0xffffffff81d9005a: ret 0x9d98;
0xffffffff81d9007e: ret 0xac7c;
0xffffffff81d900d4: ret 0xa45e;
0xffffffff81d90104: ret 0x252a;
0xffffffff81d90274: ret 0x2813;
0xffffffff81d902a6: ret 0x463a;
0xffffffff81d90660: ret 0x52d7;
0xffffffff81d90914: ret 0x420b;
0xffffffff81d90939: ret 0x385;
0xffffffff81d909ed: ret 0x829d;
0xffffffff81d90aa3: ret 0x365f;
0xffffffff81d90ba7: ret 0x6e95;
0xffffffff81d90eb5: ret 0x4403;
0xffffffff81d91128: ret 0x9cd0;
0xffffffff81d911de: pop rsp; mov bl, 0x1e; sbb [rip-0x30ea2cb4], edi; rep ret;
0xffffffff81d911f7: ret 0x51c3;
0xffffffff81d91310: ret 0xa4dd;
0xffffffff81d915cb: ret 0xc898;
0xffffffff81d915ea: ret 0x9249;
0xffffffff81d91665: ret 0x5286;
0xffffffff81d916b8: ret 0x6fd4;
0xffffffff81d917f4: ret 0xb4d0;
0xffffffff81d91bbc: ret 0x6b3a;
0xffffffff81d91e94: ret 0x70c9;
0xffffffff81d91fcc: ret 0xa87b;
0xffffffff81d920bb: ret 0x9b39;
0xffffffff81d92473: ret 0x47cd;
0xffffffff81d924cd: xor dh, [rsi+rdx*8-0x2ec77b39]; mov [rdx], fs; adc eax, 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924ce: mov ah, 0xd6; mov dword ptr [rax+rdi+0x15228cd1], 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924d0: mov dword ptr [rax+rdi+0x15228cd1], 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924d2: cmp cl, dl; mov [rdx], fs; adc eax, 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924d4: mov [rdx], fs; adc eax, 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924d5: and dl, [rip-0x7aef3888]; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924d6: adc eax, 0x8510c778; mov al, 0x5f; pop rsp; ret;
0xffffffff81d924db: mov al, 0x5f; pop rsp; ret;
0xffffffff81d924dc: pop rdi; pop rsp; ret;
0xffffffff81d926bc: ret 0x159c;
0xffffffff81d92735: ret 0xacc7;
0xffffffff81d927d7: xchg [rsi+rax+0x7f], esp; imul ebp, [rdi], 0xfffffff8; add edi, [rip-0x2eb91089]; mov dl, [rsi]; pop r13; iretd;
0xffffffff81d92810: ret 0xe751;
0xffffffff81d92836: ret 0x7f96;
0xffffffff81d92899: ret 0x5d4b;
0xffffffff81d92960: ret 0xee54;
0xffffffff81d92a47: stc; leave; sbb eax, 0x16a013e9; mov dl, 0xe2; int 0x16; ret 0x5bc5;
0xffffffff81d92a48: leave; sbb eax, 0x16a013e9; mov dl, 0xe2; int 0x16; ret 0x5bc5;
0xffffffff81d92a52: ret 0x5bc5;
0xffffffff81d92ad8: ret 0xe395;
0xffffffff81d92ae7: ret 0xfc61;
0xffffffff81d92b9b: ret 0xb8cf;
0xffffffff81d92c17: ret 0x429b;
0xffffffff81d92c2d: ret 0xc2db;
0xffffffff81d92c2f: ret 0xc23b;
0xffffffff81d92c31: ret 0xc2bb;
0xffffffff81d92c33: ret 0xc27b;
0xffffffff81d92c35: ret 0xc2fb;
0xffffffff81d92c37: ret 0xe16a;
0xffffffff81d92c68: ret 0x6166;
0xffffffff81d92c7b: ret 0x614e;
0xffffffff81d92c88: ret 0x217e;
0xffffffff81d92cc6: ret 0xe155;
0xffffffff81d92cdc: ret 0xa13d;
0xffffffff81d92cf6: ret 0x8133;
0xffffffff81d92d82: ret 0x675e;
0xffffffff81d92e58: ret 0xb2ae;
0xffffffff81d92ec9: adc ah, [rbx]; popfq; leave; or eax, 0x43755ed9; mov edi, 0x91629548; ret;
0xffffffff81d92ecb: popfq; leave; or eax, 0x43755ed9; mov edi, 0x91629548; ret;
0xffffffff81d92ecc: leave; or eax, 0x43755ed9; mov edi, 0x91629548; ret;
0xffffffff81d92f39: ret 0xddf3;
0xffffffff81d9305b: ret 0x8d46;
0xffffffff81d9311a: ret 0x9255;
0xffffffff81d9333c: ret 0xe6d2;
0xffffffff81d933a1: ret 0xf29a;
0xffffffff81d934e7: ret 0xf49a;
0xffffffff81d9373f: add esp, ebx; ret 0xfa6;
0xffffffff81d93741: ret 0xfa6;
0xffffffff81d93777: ret 0xde6f;
0xffffffff81d93793: pop rsp; mov r8, 0x57e95feb8a5ae1e6; ret;
0xffffffff81d937bd: ret 0x150c;
0xffffffff81d938e4: ret 0x1313;
0xffffffff81d93979: pop rsp; sbb cl, [rcx+0x730da89]; xor [rip+0x12195487], ecx; cmpsb [rsi], [rdi]; and eax, 0xccb091c4; iretd;
0xffffffff81d939ab: ret 0x781b;
0xffffffff81d93d24: ret 0x6098;
0xffffffff81d93d25: ret 0x6098;
0xffffffff81d9446c: ret 0xbf79;
0xffffffff81d9451d: ret 0x1a4a;
0xffffffff81d94529: sti; test eax, 0xe89aabdd; pmaxub mm3, [rsi-0x30]; pop rsp; call qword ptr [rcx-0x14020e1a];
0xffffffff81d9452a: test eax, 0xe89aabdd; pmaxub mm3, [rsi-0x30]; pop rsp; call qword ptr [rcx-0x14020e1a];
0xffffffff81d9452f: pmaxub mm3, [rsi-0x30]; pop rsp; call qword ptr [rcx-0x14020e1a];
0xffffffff81d94530: ficomp st, word ptr [rsi-0x30]; pop rsp; call qword ptr [rcx-0x14020e1a];
0xffffffff81d94533: pop rsp; call qword ptr [rcx-0x14020e1a];
0xffffffff81d945e1: ret 0x69ef;
0xffffffff81d947e1: ret 0xe5df;
0xffffffff81d9486f: adc esp, ebx; fidiv st, dword ptr [rbx+0x643c7b3f]; push rbx; iretd;
0xffffffff81d948c0: ret 0xbcce;
0xffffffff81d94911: xchg esp, eax; push rbp; int3; mov eax, 0x9e6d5ac5; ret 0xaf14;
0xffffffff81d94919: ret 0xaf14;
0xffffffff81d94944: ret 0xb472;
0xffffffff81d94c10: leave; xor [rbx+0x34], ebx; fst qword ptr [rbx+0xd95574b], st; mov esi, 0xf57b69ac; scasb [rdi]; iretd;
0xffffffff81d94ee7: leave; pop rdi; xlat [rbx]; iretd;
0xffffffff81d94fcc: ret 0xf31c;
0xffffffff81d95168: and edi, ebp; xchg esp, eax; fisubr st, word ptr [rdi+0x53da9bd9]; vpsubq ymm7, ymm0, [rsi+0x3b4620ba]; ret;
0xffffffff81d95169: out dx, eax; xchg esp, eax; fisubr st, word ptr [rdi+0x53da9bd9]; vpsubq ymm7, ymm0, [rsi+0x3b4620ba]; ret;
0xffffffff81d9516a: xchg esp, eax; fisubr st, word ptr [rdi+0x53da9bd9]; vpsubq ymm7, ymm0, [rsi+0x3b4620ba]; ret;
0xffffffff81d95263: ret 0xbf09;
0xffffffff81d95337: ret 0xe797;
0xffffffff81d95353: ret 0x74e3;
0xffffffff81d953cc: int3; fnsave [rsi+rbp*2-0x543b8971]; leave; mov es, [rcx]; sbb edi, ebp; jmp rbx;
0xffffffff81d953cd: fnsave [rsi+rbp*2-0x543b8971]; leave; mov es, [rcx]; sbb edi, ebp; jmp rbx;
0xffffffff81d953d3: stosd [rdi]; leave; mov es, [rcx]; sbb edi, ebp; jmp rbx;
0xffffffff81d953d4: leave; mov es, [rcx]; sbb edi, ebp; jmp rbx;
0xffffffff81d95420: ret 0x79d;
0xffffffff81d95492: ret 0xc3fc;
0xffffffff81d955c9: ret 0xd9c3;
0xffffffff81d95662: ret 0x94cb;
0xffffffff81d95857: ret 0xdf8a;
0xffffffff81d959d7: ret 0xf9d7;
0xffffffff81d95acb: ret 0x6d74;
0xffffffff81d95acc: ret 0x6d74;
0xffffffff81d95b7b: xor dl, [rdi-0x482b8f9c]; mov edx, 0x1f872411; xchg esp, eax; mov edi, 0x41b8b248; call rcx;
0xffffffff81d95b81: mov edx, 0x1f872411; xchg esp, eax; mov edi, 0x41b8b248; call rcx;
0xffffffff81d95b84: xchg [rdi], ebx; xchg esp, eax; mov edi, 0x41b8b248; call rcx;
0xffffffff81d95b86: xchg esp, eax; mov edi, 0x41b8b248; call rcx;
0xffffffff81d95e0b: ret 0x9ba4;
0xffffffff81d95e56: ret 0xb078;
0xffffffff81d95e61: ret 0xf06a;
0xffffffff81d95f65: ret 0x19f;
0xffffffff81d95fdb: ret 0x1e50;
0xffffffff81d96377: ret 0x39d8;
0xffffffff81d963a7: ret 0x16d8;
0xffffffff81d964cd: ret 0xee0d;
0xffffffff81d968b7: ret 0x707b;
0xffffffff81d968c2: ret 0x5dc;
0xffffffff81d968f3: ret 0xb001;
0xffffffff81d96a3f: ret 0xe403;
0xffffffff81d96bcc: ret 0xb01f;
0xffffffff81d96c53: add esp, esi; iretd;
0xffffffff81d96d0a: ret 0x8f9b;
0xffffffff81d96d48: ret 0x7601;
0xffffffff81d96e02: ret 0x3a0f;
0xffffffff81d97128: ret 0xf04a;
0xffffffff81d97251: ret 0x7079;
0xffffffff81d97374: ret 0xc07b;
0xffffffff81d9752e: ret 0xfa09;
0xffffffff81d977d6: ret 0x1cd3;
0xffffffff81d97813: ret 0x4607;
0xffffffff81d97a26: ret 0x9eff;
0xffffffff81d97b15: ret 0x2e0f;
0xffffffff81d97dae: xchg esp, eax; mov esi, esp; int 0x71; in eax, 0xca; sub eax, [rsi+rcx*8+0x69f8fbf6]; iretd;
0xffffffff81d97fc9: ret 0xf33;
0xffffffff81d98071: ret 0xedfc;
0xffffffff81d9807b: stosb [rdi]; sub edi, ecx; xchg esp, eax; pop rsi; mov [rax], esi; iretd;
0xffffffff81d9807c: sub edi, ecx; xchg esp, eax; pop rsi; mov [rax], esi; iretd;
0xffffffff81d9807e: xchg esp, eax; pop rsi; mov [rax], esi; iretd;
0xffffffff81d980c6: ret 0x1da9;
0xffffffff81d98159: ret 0xc28;
0xffffffff81d981b8: add esp, esi; outsd dx, [rsi]; mov ch, ch; insd [rdi], dx; add byte ptr [rbx+0x46f70c51], 0x98; call far fword ptr [rdx-0x41];
0xffffffff81d981b9: add esp, esi; outsd dx, [rsi]; mov ch, ch; insd [rdi], dx; add byte ptr [rbx+0x46f70c51], 0x98; call far fword ptr [rdx-0x41];
0xffffffff81d98223: ret 0x6ebb;
0xffffffff81d98257: ret 0xd63e;
0xffffffff81d982d8: ret 0x79bc;
0xffffffff81d98392: ret 0xf37c;
0xffffffff81d983ec: sbb cl, ah; cmpsd [rsi], [rdi]; xor al, 0xa9; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983ed: int3; cmpsd [rsi], [rdi]; xor al, 0xa9; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983ee: cmpsd [rsi], [rdi]; xor al, 0xa9; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983ef: xor al, 0xa9; out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983f0: test eax, 0x3ed4e72e; xchg esp, eax; ret;
0xffffffff81d983f1: out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983f2: out 0xd4, eax; xchg esp, eax; ret;
0xffffffff81d983f4: xchg esp, eax; ret;
0xffffffff81d987ad: ret 0xf882;
0xffffffff81d98807: ret 0x9f79;
0xffffffff81d989ec: ret 0x81f9;
0xffffffff81d98b85: ret 0x1a88;
0xffffffff81d98da2: ret 0x800a;
0xffffffff81d98ff1: ret 0x6d8;
0xffffffff81d9913c: ret 0x5a25;
0xffffffff81d992a8: cdq; leave; and dword ptr [rax-0x4c], 0x13; iretd;
0xffffffff81d992a9: leave; and dword ptr [rax-0x4c], 0x13; iretd;
0xffffffff81d9967b: ret 0xfe4a;
0xffffffff81d99848: ret 0x396d;
0xffffffff81d99849: ret 0x396d;
0xffffffff81d998d6: ret 0xc4d8;
0xffffffff81d99aad: ret 0x4392;
0xffffffff81d99b43: ret 0x962f;
0xffffffff81d99c78: mov esp, [rcx-0x544b6bc1]; adc ch, [rcx]; or ah, ch; out 0x17, al; iretd;
0xffffffff81d99c7b: xchg esp, eax; mov ah, 0xab; adc ch, [rcx]; or ah, ch; out 0x17, al; iretd;
0xffffffff81d9a02a: ret 0x185f;
0xffffffff81d9a039: ret 0xd113;
0xffffffff81d9a063: ret 0x1369;
0xffffffff81d9a0ff: ret 0x445f;
0xffffffff81d9a11a: ret 0xeb57;
0xffffffff81d9a2ec: ret 0x2d1;
0xffffffff81d9a35d: ret 0xcc1e;
0xffffffff81d9a6d6: ret 0xc713;
0xffffffff81d9a8fe: ret 0x32f1;
0xffffffff81d9a934: ret 0xef7e;
0xffffffff81d9a935: ret 0xef7e;
0xffffffff81d9a956: ret 0x5d88;
0xffffffff81d9aa83: ret 0xc1ee;
0xffffffff81d9ab01: pop rsp; test eax, 0x69cdeab7; dec dword ptr [rdi+0x59573b74]; iretd;
0xffffffff81d9ab3f: ret 0xc71f;
0xffffffff81d9ad2c: ret 0x753b;
0xffffffff81d9adef: in al, dx; mov ah, 0x13; xchg esp, eax; cdq; adc [rcx-0x7a], eax; iretd;
0xffffffff81d9adf0: mov ah, 0x13; xchg esp, eax; cdq; adc [rcx-0x7a], eax; iretd;
0xffffffff81d9adf2: xchg esp, eax; cdq; adc [rcx-0x7a], eax; iretd;
0xffffffff81d9b0e2: ret 0x46df;
0xffffffff81d9b128: ret 0xdf68;
0xffffffff81d9b148: ret 0xbd1b;
0xffffffff81d9b2c7: ret 0xcf72;
0xffffffff81d9b454: ret 0x7fcf;
0xffffffff81d9b464: and dh, ah; pop rsp; out dx, al; cmp ecx, [rdx+0x37]; mov ecx, 0xdf2621c; ret;
0xffffffff81d9b466: pop rsp; out dx, al; cmp ecx, [rdx+0x37]; mov ecx, 0xdf2621c; ret;
0xffffffff81d9b95a: ret 0x675a;
0xffffffff81d9bb1e: ret 0x32b8;
0xffffffff81d9bba7: fbld st, tbyte ptr [rax+0x42eddb6c]; fadd st, qword ptr [rsi-0x56]; sbb esp, 0x1b; ret;
0xffffffff81d9bba9: insb [rdi], dx; fucomi st, st(5); fadd st, qword ptr [rsi-0x56]; sbb esp, 0x1b; ret;
0xffffffff81d9bbaa: fucomi st, st(5); fadd st, qword ptr [rsi-0x56]; sbb esp, 0x1b; ret;
0xffffffff81d9bbab: in eax, dx; fadd st, qword ptr [rsi-0x56]; sbb esp, 0x1b; ret;
0xffffffff81d9bbad: fadd st, qword ptr [rsi-0x56]; sbb esp, 0x1b; ret;
0xffffffff81d9bbaf: stosb [rdi]; sbb esp, 0x1b; ret;
0xffffffff81d9bbb0: sbb esp, 0x1b; ret;
0xffffffff81d9bc3b: ret 0xe21a;
0xffffffff81d9bd7d: leave; shl byte ptr [rax], 1; and eax, 0x8f9e73e8; sub al, 0x80; mov ds, [rdi-0x6e]; ret;
0xffffffff81d9bda3: ret 0xa2bb;
0xffffffff81d9bdc1: ret 0x10ac;
0xffffffff81d9c112: ret 0x88fb;
0xffffffff81d9c320: ret 0x7fc7;
0xffffffff81d9c325: ret 0x3ff6;
0xffffffff81d9c3e1: ret 0x74fa;
0xffffffff81d9c43e: ret 0xc248;
0xffffffff81d9c440: ret 0x7ffa;
0xffffffff81d9c649: ret 0xb67e;
0xffffffff81d9c69c: ret 0xc1db;
0xffffffff81d9c69e: ret 0xc1db;
0xffffffff81d9c6a9: ret 0xc063;
0xffffffff81d9c7cd: ret 0xc03b;
0xffffffff81d9c956: ret 0x8a57;
0xffffffff81d9c9bd: ret 0x1a54;
0xffffffff81d9d0c2: ret 0x341e;
0xffffffff81d9d119: ret 0x90ae;
0xffffffff81d9d2b4: ret 0xf18d;
0xffffffff81d9d2bf: ret 0x6f42;
0xffffffff81d9d30b: ret 0xc3fd;
0xffffffff81d9d80e: ret 0x6d11;
0xffffffff81d9d8fa: sub esp, edx; push 0xffffffffffffffe1; pop rsi; add ebx, [rdx+0x18]; cmpsb [rsi], [rdi]; iretd;
0xffffffff81d9d979: ret 0x4315;
0xffffffff81d9daa1: ret 0x1071;
0xffffffff81d9db49: ret 0x1ebc;
0xffffffff81d9dbd7: ret 0xd106;
0xffffffff81d9e0c2: ret 0x5c99;
0xffffffff81d9e100: ret 0x3622;
0xffffffff81d9e2e5: ret 0xfdc1;
0xffffffff81d9e3c1: ret 0xef3a;
0xffffffff81d9e459: ret 0xa482;
0xffffffff81d9e497: ret 0x2fdb;
0xffffffff81d9e60f: ret 0x8c57;
0xffffffff81d9e698: ret 0x7d16;
0xffffffff81d9e75a: pop rsp; mov edi, 0x799c04ee; leave; ret 0xd381;
0xffffffff81d9e75b: mov edi, 0x799c04ee; leave; ret 0xd381;
0xffffffff81d9e760: leave; ret 0xd381;
0xffffffff81d9e761: ret 0xd381;
0xffffffff81d9e868: ret 0x7d66;
0xffffffff81d9e900: and eax, 0xcab0f061; mov ch, [rip+0x2ef092e1]; imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e903: mov al, 0xca; mov ch, [rip+0x2ef092e1]; imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e905: mov ch, [rip+0x2ef092e1]; imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e906: sub eax, 0x2ef092e1; imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e90a: imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e90b: imul ebp, [rdx+0x52], 0x28; pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e90f: pop rsp; push rbp; ret 0x6356;
0xffffffff81d9e911: ret 0x6356;
0xffffffff81d9e9c8: pop rsp; push rbp; dec byte ptr [rsi]; iretd;
0xffffffff81d9eed6: ret 0x8c49;
0xffffffff81d9ef8d: xchg [rcx+0x6f], esp; mov dl, 3; ret;
0xffffffff81d9ef93: ret 0x679c;
0xffffffff81d9ef96: ret 0x86f4;
0xffffffff81d9ef97: ret 0x86f4;
0xffffffff81d9efa5: xchg esp, eax; cmp qword ptr [rdi], 0x7c; rcpps xmm4, xmm5; ret 0xc3cc;
0xffffffff81d9efad: ret 0xc3cc;
0xffffffff81d9f3f9: mov [0x7af0dfe210710943], eax; pop rsp; syscall;
0xffffffff81d9f402: pop rsp; syscall;
0xffffffff81d9f49e: ret 0x3cb7;
0xffffffff81d9f592: ret 0x7a0;
0xffffffff81d9f593: ret 0x7a0;
0xffffffff81d9f633: ret 0x94c0;
0xffffffff81d9f661: ret 0x6746;
0xffffffff81d9f99c: ret 0x8038;
0xffffffff81d9fb51: leave; int1; cmp edi, [rdi-0x189324bc]; mov eax, 0x438c77ab; ret 0x8fbb;
0xffffffff81d9fb5e: ret 0x8fbb;
0xffffffff81d9fbcc: ret 0xbc18;
0xffffffff81d9fbda: ret 0xe8a4;
0xffffffff81da00a0: ret 0x8d67;
0xffffffff81da027b: ret 0x90e7;
0xffffffff81da02b5: ret 0xf5b;
0xffffffff81da0490: ret 0x56b6;
0xffffffff81da053b: pop rdi; leave; sar byte ptr [rbp-0x7a], cl; fcomp st, st(5); ret 0x9401;
0xffffffff81da053c: leave; sar byte ptr [rbp-0x7a], cl; fcomp st, st(5); ret 0x9401;
0xffffffff81da0542: ret 0x9401;
0xffffffff81da086a: ret 0x537a;
0xffffffff81da0902: xchg [rsi-0x15], ebp; mov al, [0xfdf82d0d4c33b3ba]; cmp [rsp+rax*4+0x5b], al; leave; clc; ret 0xc044;
0xffffffff81da0905: mov al, [0xfdf82d0d4c33b3ba]; cmp [rsp+rax*4+0x5b], al; leave; clc; ret 0xc044;
0xffffffff81da090c: clc; std; cmp [rsp+rax*4+0x5b], al; leave; clc; ret 0xc044;
0xffffffff81da090d: std; cmp [rsp+rax*4+0x5b], al; leave; clc; ret 0xc044;
0xffffffff81da090e: cmp [rsp+rax*4+0x5b], al; leave; clc; ret 0xc044;
0xffffffff81da0911: pop rbx; leave; clc; ret 0xc044;
0xffffffff81da0912: leave; clc; ret 0xc044;
0xffffffff81da0914: ret 0xc044;
0xffffffff81da0de1: ret 0x433f;
0xffffffff81da0f74: ret 0x7d94;
0xffffffff81da0fa8: ret 0x9dff;
0xffffffff81da1033: ret 0xe500;
0xffffffff81da1303: ret 0x4712;
0xffffffff81da1610: ret 0x77d9;
0xffffffff81da1670: ret 0x1e38;
0xffffffff81da167d: ret 0x4c63;
0xffffffff81da16a8: ret 0x56de;
0xffffffff81da17ac: push rcx; cmp eax, 0x3bb3581f; xchg esp, eax; out dx, eax; ret;
0xffffffff81da17ad: cmp eax, 0x3bb3581f; xchg esp, eax; out dx, eax; ret;
0xffffffff81da17af: pop rax; mov bl, 0x3b; xchg esp, eax; out dx, eax; ret;
0xffffffff81da17b0: mov bl, 0x3b; xchg esp, eax; out dx, eax; ret;
0xffffffff81da1950: ret 0x83da;
0xffffffff81da1b94: ret 0xfd05;
0xffffffff81da1bf1: ret 0x66f8;
0xffffffff81da1c15: ret 0x86bf;
0xffffffff81da1c8c: ret 0x9ba0;
0xffffffff81da1d78: ret 0xfba6;
0xffffffff81da1e23: ret 0xdc71;
0xffffffff81da1e3d: ret 0x2359;
0xffffffff81da2001: ret 0xea21;
0xffffffff81da2189: lea edi, [rdi+0x4f]; enter 0x20b, 0xa8; leave; or al, 0x8f; iretd;
0xffffffff81da218c: enter 0x20b, 0xa8; leave; or al, 0x8f; iretd;
0xffffffff81da218d: or eax, [rdx]; test al, 0x43; leave; or al, 0x8f; iretd;
0xffffffff81da218f: test al, 0x43; leave; or al, 0x8f; iretd;
0xffffffff81da2191: leave; or al, 0x8f; iretd;
0xffffffff81da21e8: ret 0xc370;
0xffffffff81da2417: ret 0x9835;
0xffffffff81da2758: movsb [rdi], [rsi]; scasb [rdi]; xchg esi, eax; xor [rdx+rbp*8-0x73eb9350], dh; leave; iretd;
0xffffffff81da2759: scasb [rdi]; xchg esi, eax; xor [rdx+rbp*8-0x73eb9350], dh; leave; iretd;
0xffffffff81da275a: xchg esi, eax; xor [rdx+rbp*8-0x73eb9350], dh; leave; iretd;
0xffffffff81da275b: xor [rdx+rbp*8-0x73eb9350], dh; leave; iretd;
0xffffffff81da275c: mov ah, 0xea; mov al, 0x6c; adc al, 0x8c; leave; iretd;
0xffffffff81da275e: mov al, 0x6c; adc al, 0x8c; leave; iretd;
0xffffffff81da275f: insb [rdi], dx; adc al, 0x8c; leave; iretd;
0xffffffff81da2760: adc al, 0x8c; leave; iretd;
0xffffffff81da27c7: ret 0xab63;
0xffffffff81da282c: ret 0xb0c;
0xffffffff81da282f: ret 0x1e11;
0xffffffff81da2897: ret 0x2466;
0xffffffff81da289a: ret 0x60c5;
0xffffffff81da29e5: ret 0xc088;
0xffffffff81da2a87: leave; adc al, [rdx]; iretd;
0xffffffff81da2ba1: ret 0x4471;
0xffffffff81da2d9c: ret 0xe994;
0xffffffff81da2e3a: ret 0xa294;
0xffffffff81da2f4a: leave; sub al, al; cli; insd [rdi], dx; ret 0x2c34;
0xffffffff81da2f4f: ret 0x2c34;
0xffffffff81da3104: ret 0x14c8;
0xffffffff81da32d5: ret 0x59ff;
0xffffffff81da32dd: ret 0x835e;
0xffffffff81da33ee: pop rsp; sbb esi, [rax+0x7f]; and [rdi+rax*4-0x509ea6a9], al; or ch, cl; fnsave [rax+0x7b]; ret;
0xffffffff81da34cb: ret 0x32e;
0xffffffff81da34f1: ret 0x5c23;
0xffffffff81da352f: and bh, 0x54; pop rsp; sub eax, 0xa0697e50; cmp [rdx], eax; fidiv st, dword ptr [rbp-0x481a2090]; ret;
0xffffffff81da3530: out 0x54, eax; pop rsp; sub eax, 0xa0697e50; cmp [rdx], eax; fidiv st, dword ptr [rbp-0x481a2090]; ret;
0xffffffff81da3531: push rsp; pop rsp; sub eax, 0xa0697e50; cmp [rdx], eax; fidiv st, dword ptr [rbp-0x481a2090]; ret;
0xffffffff81da3532: pop rsp; sub eax, 0xa0697e50; cmp [rdx], eax; fidiv st, dword ptr [rbp-0x481a2090]; ret;
0xffffffff81da3662: ret 0x92d3;
0xffffffff81da36a7: ret 0xbdac;
0xffffffff81da3710: ret 0xb3bb;
0xffffffff81da372f: ret 0x33f5;
0xffffffff81da373e: pop rsp; or eax, 0xde4bdfd9; mov [0x27e384dce7f4fef8], eax; ret 0x878;
0xffffffff81da374d: ret 0x878;
0xffffffff81da37dd: ret 0x200f;
0xffffffff81da385d: ret 0x3fbf;
0xffffffff81da3900: ret 0x43ff;
0xffffffff81da3918: sub eax, esi; sub esp, esi; stc; xor edi, [rbx+rax*2]; ret 0x704e;
0xffffffff81da391a: sub esp, esi; stc; xor edi, [rbx+rax*2]; ret 0x704e;
0xffffffff81da3921: ret 0x704e;
0xffffffff81da3943: ret 0x525c;
0xffffffff81da3a11: ret 0x20e7;
0xffffffff81da3a35: ret 0x7d7d;
0xffffffff81da3ad5: ret 0xa79e;
0xffffffff81da3b7f: ret 0x98ff;
0xffffffff81da3c77: ret 0x9a3b;
0xffffffff81da3e0b: ret 0x5d67;
0xffffffff81da3e65: int 0x42; xchg esp, eax; ret;
0xffffffff81da3ec4: ret 0xea14;
0xffffffff81da3f66: ret 0x267f;
0xffffffff81da4138: ret 0x3c7;
0xffffffff81da4165: pop rsp; push rax; ret;
0xffffffff81da438c: ret 0xbfe3;
0xffffffff81da4553: ret 0x1713;
0xffffffff81da4606: xor bl, dh; cmp ah, [rdx]; pop rsp; stosd [rdi]; ret;
0xffffffff81da4608: cmp ah, [rdx]; pop rsp; stosd [rdi]; ret;
0xffffffff81da460a: pop rsp; stosd [rdi]; ret;
0xffffffff81da4726: ret 0x29b7;
0xffffffff81da4727: ret 0x29b7;
0xffffffff81da4917: ret 0xe5e8;
0xffffffff81da4954: ret 0x4819;
0xffffffff81da4a60: ret 0xca5b;
0xffffffff81da4c62: ret 0x91c;
0xffffffff81da507d: ret 0x143f;
0xffffffff81da5193: ret 0x11aa;
0xffffffff81da51f2: ret 0x9db3;
0xffffffff81da5309: ret 0x7c62;
0xffffffff81da5372: pop rsp; fbstp tbyte ptr [rbp-0x3040683e], st; test al, 0x7b; and [rbx+rax*8-0x5e], ah; ret 0xde66;
0xffffffff81da5375: ret 0xbf97;
0xffffffff81da5376: ret 0xbf97;
0xffffffff81da5381: ret 0xde66;
0xffffffff81da53c4: xor ebp, [rdi]; pop rsp; mov dh, 0x6a; iretd;
0xffffffff81da53c6: pop rsp; mov dh, 0x6a; iretd;
0xffffffff81da5523: ret 0x92b2;
0xffffffff81da5574: ret 0x717;
0xffffffff81da5575: ret 0x717;
0xffffffff81da57e9: ret 0xaf27;
0xffffffff81da5915: ret 0x2eac;
0xffffffff81da5923: ret 0x3c53;
0xffffffff81da5a14: pop rsp; mov edi, 0x451fd966; ret;
0xffffffff81da5b0c: cmp eax, 0x7d47d617; push rbp; cmp eax, 0x55b4669f; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b11: push rbp; cmp eax, 0x55b4669f; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b12: cmp eax, 0x55b4669f; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b13: lahf; mov ah, 0x55; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b15: mov ah, 0x55; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b16: push rbp; cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b17: cmp eax, 0xfd5f3c55; xchg esp, eax; iretd;
0xffffffff81da5b18: push rbp; cmp al, 0x5f; std; xchg esp, eax; iretd;
0xffffffff81da5b19: cmp al, 0x5f; std; xchg esp, eax; iretd;
0xffffffff81da5b1a: pop rdi; std; xchg esp, eax; iretd;
0xffffffff81da5e3c: ret 0xce3a;
0xffffffff81da6297: fisttp word ptr [rdi+0x3a9a61e9], st; pop rsp; sbb edi, ebp; fldcw [rdi]; iretd;
0xffffffff81da629e: pop rsp; sbb edi, ebp; fldcw [rdi]; iretd;
0xffffffff81da638f: ret 0xbfa1;
0xffffffff81da6512: ret 0x4737;
0xffffffff81da6735: ret 0x5ace;
0xffffffff81da679e: ret 0xcb47;
0xffffffff81da6800: ret 0xb144;
0xffffffff81da68d2: ret 0x3884;
0xffffffff81da6945: ret 0x4f75;
0xffffffff81da6a2a: ret 0x979d;
0xffffffff81da6b18: ret 0x2978;
0xffffffff81da6b37: ret 0x3b7c;
0xffffffff81da6b6d: ret 0x1578;
0xffffffff81da6b77: ret 0xc978;
0xffffffff81da6c85: ret 0x4e78;
0xffffffff81da6cb6: ret 0x8258;
0xffffffff81da6cea: ret 0xd2b8;
0xffffffff81da6ceb: ret 0xd2b8;
0xffffffff81da6d0e: xchg esp, eax; call rsp;
0xffffffff81da6d1e: xchg esp, eax; stc; ret;
0xffffffff81da6d51: ret 0xd5b8;
0xffffffff81da6d67: ret 0xc63a;
0xffffffff81da6d72: ret 0x127e;
0xffffffff81da6d73: ret 0x127e;
0xffffffff81da6e64: ret 0x29b8;
0xffffffff81da6f8a: ret 0xc2b8;
0xffffffff81da6f8b: ret 0xc2b8;
0xffffffff81da6f8d: ret 0xca75;
0xffffffff81da6fc4: ret 0xda4e;
0xffffffff81da7014: ret 0xdd7d;
0xffffffff81da7131: ret 0x867e;
0xffffffff81da7291: ret 0x635e;
0xffffffff81da72a3: ret 0x711e;
0xffffffff81da757e: ret 0x7de8;
0xffffffff81da758b: ret 0xfdb8;
0xffffffff81da758c: ret 0xfdb8;
0xffffffff81da75f4: bnd ret 0x11ce;
0xffffffff81da75f5: ret 0x11ce;
0xffffffff81da763c: bnd ret 0xf21b;
0xffffffff81da763d: ret 0xf21b;
0xffffffff81da7661: xchg esp, edi; test eax, 0xdc84f0bc; pushfq; ret 0x6ff9;
0xffffffff81da7669: ret 0x6ff9;
0xffffffff81da76d9: ret 0xdcff;
0xffffffff81da7821: ret 0xd9fe;
0xffffffff81da78eb: ret 0xb53e;
0xffffffff81da7903: pop rsp; mov dh, 0x78; adc [rax-0x1ff6a627], dl; call far fword ptr [rcx+0x2b];
0xffffffff81da7957: ret 0xdc38;
0xffffffff81da797e: sub esp, 0xd; ret;
0xffffffff81da7a0b: ret 0x71ef;
0xffffffff81da7c12: ret 0x9207;
0xffffffff81da7c8a: ret 0xebfc;
0xffffffff81da8043: ret 0xaa52;
0xffffffff81da808d: ret 0xbbee;
0xffffffff81da80ad: imul byte ptr [rsi-0x1217f22b]; xor ebx, esp; sub [rdi+0x61ff0afd], edi; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b0: or eax, 0xdc33ede8; sub [rdi+0x61ff0afd], edi; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b2: in eax, dx; xor ebx, esp; sub [rdi+0x61ff0afd], edi; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b3: xor ebx, esp; sub [rdi+0x61ff0afd], edi; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b4: fsubr st, qword ptr [rcx]; mov edi, 0x61ff0afd; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b5: sub [rdi+0x61ff0afd], edi; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80b6: mov edi, 0x61ff0afd; sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80bb: sub esp, edi; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80bc: cld; xchg [rsi-0x34], esp; iretd;
0xffffffff81da80bd: xchg [rsi-0x34], esp; iretd;
0xffffffff81da8124: ret 0x9745;
0xffffffff81da8142: ret 0x1dfa;
0xffffffff81da8157: ret 0x1b79;
0xffffffff81da8201: ret 0x14e2;
0xffffffff81da8253: ret 0xe3c4;
0xffffffff81da82b7: ret 0x6f77;
0xffffffff81da8464: ret 0xf806;
0xffffffff81da847d: ret 0x4878;
0xffffffff81da854d: ret 0x44f8;
0xffffffff81da85a9: ret 0x1bb8;
0xffffffff81da865f: pop rsp; pop rax; jmp qword ptr [rbx];
0xffffffff81da86fe: cmp edx, [rsi+rax-5]; xchg esp, eax; iretd;
0xffffffff81da8701: sti; xchg esp, eax; iretd;
0xffffffff81da87b2: fisttp word ptr [rip-0x3ea4b070], st; leave; rcr dword ptr [rdx+0x19], cl; stc; xchg esi, eax; iretd;
0xffffffff81da87b3: or eax, 0xc15b4f90; leave; rcr dword ptr [rdx+0x19], cl; stc; xchg esi, eax; iretd;
0xffffffff81da87b8: leave; rcr dword ptr [rdx+0x19], cl; stc; xchg esi, eax; iretd;
0xffffffff81da87ca: ret 0x62ce;
0xffffffff81da88c9: ret 0x20ea;
0xffffffff81da8a02: ret 0xda04;
0xffffffff81da8a49: ret 0x11d9;
0xffffffff81da8b7b: ret 0xacfa;
0xffffffff81da8c1f: mov ch, [rax+rax*8+0x4d]; xchg ebx, esp; iretd;
0xffffffff81da8d0c: ret 0xbbfa;
0xffffffff81da8ed3: ret 0xed87;
0xffffffff81da8f0a: leave; xchg [rax+0x38ba00bd], ebx; mov [0xbd0ec37a07f248ae], eax; push rbx; std; iretd;
0xffffffff81da8f7c: xchg ecx, ebx; imul ecx, [rbx], 0xffffffa1; push rdi; pop rsp; fnsave [r15]; ret;
0xffffffff81da8f7e: imul ecx, [rbx], 0xffffffa1; push rdi; pop rsp; fnsave [r15]; ret;
0xffffffff81da8f81: push rdi; pop rsp; fnsave [r15]; ret;
0xffffffff81da8f82: pop rsp; fnsave [r15]; ret;
0xffffffff81da8fa3: ret 0x8fa5;
0xffffffff81da9068: ret 0x6fa;
0xffffffff81da92c4: adc esp, edx; cmp [rdi], ah; pop rcx; pop rsi; and bh, al; jmp far fword ptr [rdi-0x77];
0xffffffff81da92cd: outsd dx, [rsi]; mov [rdx], eax; leave; fist word ptr [rbx], st; movsxd ebx, esp; ret;
0xffffffff81da92ce: mov [rdx], eax; leave; fist word ptr [rbx], st; movsxd ebx, esp; ret;
0xffffffff81da92d0: leave; fist word ptr [rbx], st; movsxd ebx, esp; ret;
0xffffffff81da94de: ret 0x52cc;
0xffffffff81da9526: ret 0x1fbf;
0xffffffff81da95dd: ret 0xbeb9;
0xffffffff81da9674: ret 0x1be5;
0xffffffff81da969a: test [rip+0xc9c1bed], ch; mov ecx, 0xfcb97d6; pop rsp; or edi, [rdi+rdi*8]; sbb [rbp-0xd], eax; iretd;
0xffffffff81da969b: sub eax, 0xc9c1bed; mov ecx, 0xfcb97d6; pop rsp; or edi, [rdi+rdi*8]; sbb [rbp-0xd], eax; iretd;
0xffffffff81da96a0: mov ecx, 0xfcb97d6; pop rsp; or edi, [rdi+rdi*8]; sbb [rbp-0xd], eax; iretd;
0xffffffff81da96a5: pop rsp; or edi, [rdi+rdi*8]; sbb [rbp-0xd], eax; iretd;
0xffffffff81da9788: ret 0xcd5f;
0xffffffff81da9860: pop rsp; pushfq; ret 0x7a1d;
0xffffffff81da9862: ret 0x7a1d;
0xffffffff81da986e: leave; push rsp; clc; push rcx; sbb eax, 0xf2c02790; ret;
0xffffffff81da9aa9: ret 0xd3e;
0xffffffff81da9cd3: ret 0x1dc9;
0xffffffff81da9e20: xchg esp, eax; mov [0x1759b8d8f59b4f24], eax; movsb [rdi], [rsi]; sub [rdx], ebx; iretd;
0xffffffff81da9e6b: ret 0x1d9c;
0xffffffff81da9f64: ret 0x19a6;
0xffffffff81da9fda: vpcmpgtw xmm11, xmm4, [rdx-0xe]; mov esp, [rcx+9]; or bh, [rdx+0x53]; movsb [rdi], [rsi]; sub eax, 0x3b7de545; ret;
0xffffffff81da9fdf: mov esp, [rcx+9]; or bh, [rdx+0x53]; movsb [rdi], [rsi]; sub eax, 0x3b7de545; ret;
0xffffffff81daa01d: mov esp, esi; iretd;
0xffffffff81daa130: ret 0xa14;
0xffffffff81daa3eb: ret 0x3986;
0xffffffff81daa4e3: ret 0xe619;
0xffffffff81daa58d: ret 0x5fac;
0xffffffff81daa58e: lodsb [rsi]; pop rdi; movsxd ebp, [rbx+5]; xchg esp, eax; ret 0xe401;
0xffffffff81daa58f: pop rdi; movsxd ebp, [rbx+5]; xchg esp, eax; ret 0xe401;
0xffffffff81daa590: movsxd ebp, [rbx+5]; xchg esp, eax; ret 0xe401;
0xffffffff81daa593: xchg esp, eax; ret 0xe401;
0xffffffff81daa594: ret 0xe401;
0xffffffff81daa6f6: ret 0xac26;
0xffffffff81daa750: ret 0x9f3a;
0xffffffff81daa757: ret 0xa70c;
0xffffffff81daa77f: ret 0x4f38;
0xffffffff81daa7d5: ret 0x4207;
0xffffffff81daa8b6: ret 0xacfb;
0xffffffff81daa93a: ret 0x28d;
0xffffffff81daaa94: ret 0xb914;
0xffffffff81daac22: ret 0x5561;
0xffffffff81daac2e: ret 0xaa51;
0xffffffff81daad5f: ret 0x70c1;
0xffffffff81daadaa: ret 0x4363;
0xffffffff81daae39: leave; mov r14d, 0xa40b3920; outsb dx, [rsi]; ret;
0xffffffff81daae4b: ret 0x98f8;
0xffffffff81daae73: ret 0x65e0;
0xffffffff81dab0f2: ret 0x94fa;
0xffffffff81dab112: ret 0x5bc8;
0xffffffff81dab1bf: ret 0x2376;
0xffffffff81dab4c1: ret 0x76de;
0xffffffff81dab8af: ret 0x33f2;
0xffffffff81dabf64: ret 0xee1c;
0xffffffff81dabf67: ret 0xf3e0;
0xffffffff81dac036: ret 0xc5c1;
0xffffffff81dac0c9: sbb esp, ebp; sbb eax, 0x2a2367e9; mov bh, 0x8e; fwait; ret;
0xffffffff81dac1ff: ret 0x8eb0;
0xffffffff81dac282: ret 0x50d9;
0xffffffff81dac29d: ret 0xb656;
0xffffffff81dac437: ret 0x7f0c;
0xffffffff81dac6ed: ret 0x136b;
0xffffffff81dac7a1: ret 0xd488;
0xffffffff81dac808: ret 0x984e;
0xffffffff81dac885: mov ebx, 0x7bb47dd7; cmp eax, 0xa259d656; mov dl, 0xe6; in al, dx; leave; ret;
0xffffffff81dac888: mov ah, 0x7b; cmp eax, 0xa259d656; mov dl, 0xe6; in al, dx; leave; ret;
0xffffffff81dac88a: cmp eax, 0xa259d656; mov dl, 0xe6; in al, dx; leave; ret;
0xffffffff81dac88f: mov dl, 0xe6; in al, dx; leave; ret;
0xffffffff81dac890: out 0xec, al; leave; ret;
0xffffffff81dac891: in al, dx; leave; ret;
0xffffffff81daca0f: ret 0x6ce2;
0xffffffff81dacab5: pop rsp; nop; sub [rbx-0x4d3b6326], dl; rcl ebp, cl; ret 0x2e9f;
0xffffffff81dacac1: ret 0x2e9f;
0xffffffff81dacb13: ret 0x4e26;
0xffffffff81dacd4e: ret 0x7d2b;
0xffffffff81dacdb2: ret 0xe41a;
0xffffffff81dacf14: ret 0x6736;
0xffffffff81dacf76: ret 0x22db;
0xffffffff81dad0c8: ret 0xf347;
0xffffffff81dad19e: ret 0x53f2;
0xffffffff81dad232: ret 0x876d;
0xffffffff81dad285: ret 0x7c7c;
0xffffffff81dad293: ret 0x290f;
0xffffffff81dad362: ret 0x227;
0xffffffff81dad618: ret 0x28a2;
0xffffffff81dad624: ret 0x38fb;
0xffffffff81dad775: mov ebx, 0x8d66c5fc; pop rsp; ret;
0xffffffff81dad7e7: ret 0x67c9;
0xffffffff81dad7ff: ret 0x25e4;
0xffffffff81dad816: ret 0xb289;
0xffffffff81dad859: ret 0x2089;
0xffffffff81dad964: ret 0xa0c5;
0xffffffff81dadb2a: ret 0xb57e;
0xffffffff81dadd02: ret 0xd404;
0xffffffff81dadef8: ret 0xc4b8;
0xffffffff81dadf28: ret 0xdaa3;
0xffffffff81dadfca: ret 0xcce0;
0xffffffff81dae083: ret 0xb14c;
0xffffffff81dae11f: ret 0x2fb8;
0xffffffff81dae131: ret 0xc27e;
0xffffffff81dae133: ret 0x288e;
0xffffffff81dae1d8: ret 0x4349;
0xffffffff81dae28d: ret 0xbda3;
0xffffffff81dae385: cmp [rdi+0x380536b2], al; xchg esp, eax; mov esp, 0x2870bafb; lahf; sub eax, 0x8737795b; ret;
0xffffffff81dae38b: xchg esp, eax; mov esp, 0x2870bafb; lahf; sub eax, 0x8737795b; ret;
0xffffffff81dae445: data16 ret 0x4629;
0xffffffff81dae446: ret 0x4629;
0xffffffff81dae646: ret 0x3e87;
0xffffffff81dae723: ret 0x9137;
0xffffffff81dae8e7: ret 0x1627;
0xffffffff81dae9b2: ret 0x5ea;
0xffffffff81daeb74: ret 0xf0db;
0xffffffff81daec8b: ret 0xd598;
0xffffffff81daed1b: ret 0xb657;
0xffffffff81daee71: ret 0xee2c;
0xffffffff81daee8b: ret 0xde2c;
0xffffffff81daf01f: ret 0xe5eb;
0xffffffff81daf108: ret 0xb556;
0xffffffff81daf123: ret 0x4626;
0xffffffff81daf124: ret 0x366c;
0xffffffff81daf126: ret 0x366c;
0xffffffff81daf128: ret 0x261a;
0xffffffff81daf129: ret 0x261a;
0xffffffff81daf174: ret 0xab1e;
0xffffffff81daf18a: stc; pop rcx; leave; xchg ecx, eax; lahf; ret 0xef87;
0xffffffff81daf18b: pop rcx; leave; xchg ecx, eax; lahf; ret 0xef87;
0xffffffff81daf18c: leave; xchg ecx, eax; lahf; ret 0xef87;
0xffffffff81daf18f: ret 0xef87;
0xffffffff81daf291: ret 0xa407;
0xffffffff81daf388: ret 0xf18b;
0xffffffff81daf4ce: ret 0xcd33;
0xffffffff81daf669: ret 0xc091;
0xffffffff81daf714: ret 0xbfcb;
0xffffffff81daf90f: ret 0xe845;
0xffffffff81dafab1: ret 0x898b;
0xffffffff81dafaea: ret 0xcce;
0xffffffff81dafc28: ret 0x9ea5;
0xffffffff81dafc3b: ret 0xa577;
0xffffffff81dafe37: ret 0x9800;
0xffffffff81daffac: ret 0x9165;
0xffffffff81db0195: ret 0x99ba;
0xffffffff81db05fd: ret 0x289c;
0xffffffff81db05fe: ret 0x289c;
0xffffffff81db09a7: ret 0x7913;
0xffffffff81db09fd: ret 0x8a71;
0xffffffff81db0c22: ret 0xdaaf;
0xffffffff81db0dc8: ret 0x77d5;
0xffffffff81db0e1d: ret 0x73f9;
0xffffffff81db10d4: ret 0xaccc;
0xffffffff81db1185: ret 0x2a05;
0xffffffff81db1244: ret 0x90c0;
0xffffffff81db1312: ret 0x63ea;
0xffffffff81db141b: ret 0x5e6d;
0xffffffff81db14a8: ret 0x724d;
0xffffffff81db14b3: ret 0xe0f2;
0xffffffff81db1579: ret 0x5603;
0xffffffff81db16a8: sub dh, cl; lodsb [rsi]; pop rsp; cmc; movsb [rdi], [rsi]; ret;
0xffffffff81db16a9: int1; lodsb [rsi]; pop rsp; cmc; movsb [rdi], [rsi]; ret;
0xffffffff81db16aa: lodsb [rsi]; pop rsp; cmc; movsb [rdi], [rsi]; ret;
0xffffffff81db16ab: pop rsp; cmc; movsb [rdi], [rsi]; ret;
0xffffffff81db16da: ret 0x7538;
0xffffffff81db17e1: xchg [rdx], al; leave; add esp, edi; ret 0x48b8;
0xffffffff81db17e3: leave; add esp, edi; ret 0x48b8;
0xffffffff81db17e4: leave; add esp, edi; ret 0x48b8;
0xffffffff81db17e5: add esp, edi; ret 0x48b8;
0xffffffff81db17e7: ret 0x48b8;
0xffffffff81db1801: ret 0x9c9a;
0xffffffff81db19cf: adc esp, ebx; iretd;
0xffffffff81db19f0: ret 0xd798;
0xffffffff81db1a5b: leave; test ecx, esi; adc ecx, ebx; mov bl, 0x9c; ficom st, word ptr [rbp+rbp*8+0x64]; iretd;
0xffffffff81db1aab: ret 0xd624;
0xffffffff81db1fcf: ret 0x91f5;
0xffffffff81db2166: ret 0x8c04;
0xffffffff81db219c: ret 0x9749;
0xffffffff81db243b: data16 ret;
0xffffffff81db2472: ret 0x6034;
0xffffffff81db2609: xchg esp, eax; xchg ecx, eax; insb [rdi], dx; cmp [rbp+0x70], edi; ret 0x6661;
0xffffffff81db2610: ret 0x6661;
0xffffffff81db263e: ret 0x5a91;
0xffffffff81db26eb: xchg esp, eax; movsxd esp, [rcx]; adc [rsi-0x59a68dc5], ah; add bh, cl; add eax, 0xe40c3bba; ret 0xdee2;
0xffffffff81db26fb: ret 0xdee2;
0xffffffff81db27d9: ret 0xab93;
0xffffffff81db28f7: ret 0xa2f1;
0xffffffff81db29c0: ret 0xe671;
0xffffffff81db2ab5: ret 0x25b2;
0xffffffff81db2b14: ret 0x330c;
0xffffffff81db2c11: ret 0xc488;
0xffffffff81db2c5f: xchg esp, eax; mov ecx, 0xd16a939c; ret 0x1e18;
0xffffffff81db2c65: ret 0x1e18;
0xffffffff81db2c96: ret 0xe79b;
0xffffffff81db2e03: ret 0x74eb;
0xffffffff81db2e2e: ret 0x5ce0;
0xffffffff81db30fb: int1; mov [0x287be52c91c0b03f], al; and eax, 0x22be6e2a; and eax, 0x59906226; leave; ret;
0xffffffff81db30fc: mov [0x287be52c91c0b03f], al; and eax, 0x22be6e2a; and eax, 0x59906226; leave; ret;
0xffffffff81db30ff: rcl byte ptr [rcx+0x287be52c], 0x25; sub ch, [rsi-0x42]; and ah, [rip+0x59906226]; leave; ret;
0xffffffff81db3102: in eax, 0x7b; sub [rip+0x22be6e2a], ah; and eax, 0x59906226; leave; ret;
0xffffffff81db3104: sub [rip+0x22be6e2a], ah; and eax, 0x59906226; leave; ret;
0xffffffff81db3105: and eax, 0x22be6e2a; and eax, 0x59906226; leave; ret;
0xffffffff81db3106: sub ch, [rsi-0x42]; and ah, [rip+0x59906226]; leave; ret;
0xffffffff81db3107: outsb dx, [rsi]; mov esi, 0x62262522; nop; pop rcx; leave; ret;
0xffffffff81db3108: mov esi, 0x62262522; nop; pop rcx; leave; ret;
0xffffffff81db3109: and ah, [rip+0x59906226]; leave; ret;
0xffffffff81db310a: and eax, 0x59906226; leave; ret;
0xffffffff81db310d: nop; pop rcx; leave; ret;
0xffffffff81db310e: pop rcx; leave; ret;
0xffffffff81db3172: ret 0xe5f4;
0xffffffff81db32e6: ret 0x5d6f;
0xffffffff81db3469: ret 0xb0af;
0xffffffff81db371f: ret 0xc5f0;
0xffffffff81db387e: and al, bh; pushfq; pop rsp; add dword ptr gs:[rbx], 0x9f69b843; hlt; ret;
0xffffffff81db3880: pushfq; pop rsp; add dword ptr gs:[rbx], 0x9f69b843; hlt; ret;
0xffffffff81db3881: pop rsp; add dword ptr gs:[rbx], 0x9f69b843; hlt; ret;
0xffffffff81db38b8: sbb ch, [rcx-0x1b]; xchg esp, eax; ret 0x7d0a;
0xffffffff81db38bb: xchg esp, eax; ret 0x7d0a;
0xffffffff81db38bc: ret 0x7d0a;
0xffffffff81db39ac: ret 0x6d24;
0xffffffff81db3a88: ret 0xdbdc;
0xffffffff81db3db5: ret 0x2cfe;
0xffffffff81db3e07: ret 0xb017;
0xffffffff81db3e18: ret 0xb8b;
0xffffffff81db3e59: ret 0x70b8;
0xffffffff81db3f4e: ret 0xe234;
0xffffffff81db3fad: ret 0xf808;
0xffffffff81db4284: ret 0xefc8;
0xffffffff81db4343: ret 0xb645;
0xffffffff81db43db: ret 0xd04c;
0xffffffff81db4438: ret 0x1752;
0xffffffff81db444d: ret 0x8a34;
0xffffffff81db48bd: pop rsp; ret 0x2687;
0xffffffff81db48be: ret 0x2687;
0xffffffff81db49a1: ret 0xb7ce;
0xffffffff81db4b23: clc; xchg esp, eax; iretd;
0xffffffff81db4c8e: ret 0xa249;
0xffffffff81db4e0b: ret 0xbece;
0xffffffff81db4e8c: ret 0x594f;
0xffffffff81db503a: ret 0x58c7;
0xffffffff81db51d4: ret 0x8a6a;
0xffffffff81db51f7: ret 0xb713;
0xffffffff81db5215: ret 0x7e61;
0xffffffff81db5378: mov al, 0x6f; mov esp, [rdi]; ret;
0xffffffff81db5379: outsd dx, [rsi]; mov esp, [rdi]; ret;
0xffffffff81db537a: mov esp, [rdi]; ret;
0xffffffff81db5438: ret 0x6f4e;
0xffffffff81db55d2: ret 0xa662;
0xffffffff81db55e7: ret 0xc5;
0xffffffff81db57ec: ret 0xbc6c;
0xffffffff81db5822: ret 0x60e3;
0xffffffff81db5937: ret 0xc84e;
0xffffffff81db596d: ret 0x177d;
0xffffffff81db5b1d: ret 0x38bc;
0xffffffff81db5b8f: ret 0x3d78;
0xffffffff81db5c0b: ret 0x709d;
0xffffffff81db5c7b: ret 0x2726;
0xffffffff81db5d05: ret 0xe098;
0xffffffff81db5fa8: ret 0x6556;
0xffffffff81db622a: ret 0xcc47;
0xffffffff81db6289: ret 0x6f32;
0xffffffff81db62eb: bnd ret 0x39ed;
0xffffffff81db62ec: ret 0x39ed;
0xffffffff81db6375: ret 0xde62;
0xffffffff81db64fa: ret 0xe22f;
0xffffffff81db6513: ret 0x9cbb;
0xffffffff81db651e: ret 0x89e4;
0xffffffff81db655d: ret 0xadf0;
0xffffffff81db65bf: ret 0x94d1;
0xffffffff81db65ff: ret 0x831e;
0xffffffff81db6712: ret 0x4ac2;
0xffffffff81db6713: ret 0x8f4a;
0xffffffff81db6728: ret 0x8058;
0xffffffff81db67c6: ret 0xe98b;
0xffffffff81db6845: ret 0x7488;
0xffffffff81db68ec: ret 0xcc2a;
0xffffffff81db6b4d: ret 0xf60;
0xffffffff81db6c52: ret 0x3187;
0xffffffff81db6c60: ret 0xe0bf;
0xffffffff81db6cdd: inc dl; mov cl, [rax]; pop rsp; ret 0x7db1;
0xffffffff81db6cde: ret 0x88a;
0xffffffff81db6cdf: mov cl, [rax]; pop rsp; ret 0x7db1;
0xffffffff81db6ce1: pop rsp; ret 0x7db1;
0xffffffff81db6d79: ret 0x706d;
0xffffffff81db6e06: ret 0xf86a;
0xffffffff81db6ea7: ret 0x761b;
0xffffffff81db6f55: ret 0x66de;
0xffffffff81db6fd3: ret 0xa0f2;
0xffffffff81db70ac: or eax, 0x13f99dae; leave; ret;
0xffffffff81db71a7: ret 0xbae2;
0xffffffff81db7296: ret 0xe9a3;
0xffffffff81db73eb: ret 0x7df8;
0xffffffff81db7677: ret 0xfb46;
0xffffffff81db767a: cld; pop rsp; sub eax, 0xe6dbcf04; cmp [rdi+rbp*4-0x1b], edx; add [rdi+0x42fea4d], esi; iretd;
0xffffffff81db767b: pop rsp; sub eax, 0xe6dbcf04; cmp [rdi+rbp*4-0x1b], edx; add [rdi+0x42fea4d], esi; iretd;
0xffffffff81db792b: ret 0x8ed3;
0xffffffff81db792c: ret 0x8ed3;
0xffffffff81db7b72: ret 0x2f9d;
0xffffffff81db7b83: ret 0xd45d;
0xffffffff81db7bce: ret 0xca6a;
0xffffffff81db7d19: ret 0x3b4c;
0xffffffff81db7f24: ret 0xa473;
0xffffffff81db8105: ret 0x63c8;
0xffffffff81db81ce: ret 0x3a57;
0xffffffff81db8207: ret 0xd8a3;
0xffffffff81db8208: ret 0xd8a3;
0xffffffff81db8287: cdq; insd [rdi], dx; xchg ebp, eax; xchg ebx, esp; iretd;
0xffffffff81db8288: insd [rdi], dx; xchg ebp, eax; xchg ebx, esp; iretd;
0xffffffff81db8289: xchg ebp, eax; xchg ebx, esp; iretd;
0xffffffff81db828a: xchg ebx, esp; iretd;
0xffffffff81db830d: ret 0x9787;
0xffffffff81db83af: ret 0x96f;
0xffffffff81db85dd: ret 0x2943;
0xffffffff81db869d: ret 0x7213;
0xffffffff81db86af: ret 0xa855;
0xffffffff81db8864: ret 0x7363;
0xffffffff81db8865: ret 0x7363;
0xffffffff81db88f8: ret 0x6b12;
0xffffffff81db890a: ror bl, 1; pop rsp; sbb al, 0x6b; cmp byte ptr [rcx+0x29], 0x25; or cl, [rbx+0x475313ec]; ret;
0xffffffff81db890c: pop rsp; sbb al, 0x6b; cmp byte ptr [rcx+0x29], 0x25; or cl, [rbx+0x475313ec]; ret;
0xffffffff81db898a: ret 0xa460;
0xffffffff81db8c0b: ret 0x89a2;
0xffffffff81db8ca7: data16 ret 0x7842;
0xffffffff81db8ca8: ret 0x7842;
0xffffffff81db8e82: ret 0x9674;
0xffffffff81db8fed: ret 0x980f;
0xffffffff81db9001: ret 0xbba4;
0xffffffff81db9081: ret 0xfc38;
0xffffffff81db9231: ret 0x16b0;
0xffffffff81db9235: mov esi, 0x50859f47; pop rsp; xchg ecx, eax; cli; movsxd esp, [rcx+rbp*8]; ret;
0xffffffff81db9239: push rax; pop rsp; xchg ecx, eax; cli; movsxd esp, [rcx+rbp*8]; ret;
0xffffffff81db923a: pop rsp; xchg ecx, eax; cli; movsxd esp, [rcx+rbp*8]; ret;
0xffffffff81db92f3: pop rsp; in eax, 0x6a; dec eax; movsb [rdi], [rsi]; xchg ebx, eax; ret;
0xffffffff81db9340: ret 0xa68a;
0xffffffff81db934f: ret 0x7dd2;
0xffffffff81db9385: ret 0xda49;
0xffffffff81db93c8: ret 0xb8df;
0xffffffff81db95e0: ret 0xa8bd;
0xffffffff81db9614: ret 0x39a0;
0xffffffff81db985e: ret 0x1d7f;
0xffffffff81db9b0e: ret 0x507b;
0xffffffff81db9e3b: enter 0xab43, 0x90; sbb esp, edx; sub cl, al; ret 0x4a98;
0xffffffff81db9e3d: stosd [rdi]; nop; sbb esp, edx; sub cl, al; ret 0x4a98;
0xffffffff81db9e3e: nop; sbb esp, edx; sub cl, al; ret 0x4a98;
0xffffffff81db9e3f: sbb esp, edx; sub cl, al; ret 0x4a98;
0xffffffff81db9e43: ret 0x4a98;
0xffffffff81dba06f: ret 0xf422;
0xffffffff81dba092: ret 0xa10b;
0xffffffff81dba483: ret 0x8dce;
0xffffffff81dba4e3: ret 0xecbf;
0xffffffff81dba4e4: ret 0xecbf;
0xffffffff81dba51f: ret 0x8cff;
0xffffffff81dba761: ret 0x55e4;
0xffffffff81dba79b: ret 0x2634;
0xffffffff81dba933: ret 0x16af;
0xffffffff81dbacd1: ret 0x8a9f;
0xffffffff81dbade7: ret 0xc6eb;
0xffffffff81dbae64: ret 0xe29c;
0xffffffff81dbafba: ret 0x40b1;
0xffffffff81dbb13b: ret 0xeed3;
0xffffffff81dbb398: ret 0x1629;
0xffffffff81dbb46f: pop rsp; sub [rax], edi; lodsd [rsi]; stosd [rdi]; out dx, eax; ret;
0xffffffff81dbb47f: ret 0xbed3;
0xffffffff81dbb4e4: ret 0x6942;
0xffffffff81dbb59a: bnd ret 0x50b6;
0xffffffff81dbb59b: ret 0x50b6;
0xffffffff81dbb7e2: ret 0x6cf6;
0xffffffff81dbb937: ret 0xdbbe;
0xffffffff81dbbad0: xchg [rbp+0x767bf6e8], esp; ret;
0xffffffff81dbbb62: ret 0x296c;
0xffffffff81dbbbcb: ret 0xdb28;
0xffffffff81dbbdf3: ret 0xb462;
0xffffffff81dbbe85: ret 0x53db;
0xffffffff81dbbf63: ret 0x6614;
0xffffffff81dbbf85: ret 0x6245;
0xffffffff81dbc17b: dec byte ptr [rdx+0x22d5cc02]; or eax, 0x2718e92e; movsd [rdi], [rsi]; mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc180: and cl, [rip+0x2718e92e]; movsd [rdi], [rsi]; mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc181: or eax, 0x2718e92e; movsd [rdi], [rsi]; mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc184: sbb [rdi], ah; movsd [rdi], [rsi]; mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc186: movsd [rdi], [rsi]; mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc187: mov [rcx-0x3c15e307], ah; xchg esp, eax; iretd;
0xffffffff81dbc344: ret 0xba8c;
0xffffffff81dbc4af: ret 0x1c5b;
0xffffffff81dbc616: ret 0x9400;
0xffffffff81dbc6d1: ret 0x7a17;
0xffffffff81dbc969: ret 0x611;
0xffffffff81dbc96a: ret 0x611;
0xffffffff81dbc9c2: ret 0x8cc4;
0xffffffff81dbc9e4: ret 0x82ab;
0xffffffff81dbca39: ret 0x5e75;
0xffffffff81dbca55: ret 0xc197;
0xffffffff81dbca73: ret 0x9b89;
0xffffffff81dbca98: ret 0x2d3;
0xffffffff81dbcae0: adc esp, esp; rcr dword ptr [rsi], 1; mov edi, 0xc3a0660; add [rip-0x2bfee22a], ah; iretd;
0xffffffff81dbcaed: add esp, edx; iretd;
0xffffffff81dbcc65: ret 0x696b;
0xffffffff81dbcc6c: ret 0xf937;
0xffffffff81dbcec5: ret 0xc270;
0xffffffff81dbcec7: ret 0xac3d;
0xffffffff81dbcfc7: ret 0x7321;
0xffffffff81dbcfc8: ret 0x7321;
0xffffffff81dbcfda: ret 0x80a0;
0xffffffff81dbd245: ret 0xb10d;
0xffffffff81dbd250: ret 0x472e;
0xffffffff81dbd34d: ret 0xc1d4;
0xffffffff81dbd37f: ret 0x324e;
0xffffffff81dbd513: data16 ret 0x145c;
0xffffffff81dbd514: ret 0x145c;
0xffffffff81dbd623: ret 0x6955;
0xffffffff81dbd7cd: ret 0xb952;
0xffffffff81dbd923: ret 0xade4;
0xffffffff81dbd94d: ret 0xb1a5;
0xffffffff81dbda8a: ret 0x257f;
0xffffffff81dbdaa6: ret 0xff44;
0xffffffff81dbdab7: ret 0x8e81;
0xffffffff81dbdc7c: ret 0x5f2d;
0xffffffff81dbdf32: ret 0x6859;
0xffffffff81dbe0f1: ret 0x949f;
0xffffffff81dbe131: ret 0x3fb0;
0xffffffff81dbe392: ret 0x86ee;
0xffffffff81dbe40f: ret 0x30cb;
0xffffffff81dbe421: ret 0x492;
0xffffffff81dbe67a: ret 0x1964;
0xffffffff81dbe6d2: ret 0xb2a8;
0xffffffff81dbe700: ret 0x4b1d;
0xffffffff81dbe722: xchg esp, eax; clc; shl byte ptr [rbp+0x4141a4f2], cl; or dl, [rax+0x34]; mov [0x94c6a383bc08f1de], eax; ret 0x27a;
0xffffffff81dbe736: xchg esp, eax; ret 0x27a;
0xffffffff81dbe968: xchg ebx, eax; rcr byte ptr [rsi+0x65026fa3], 1; scasd [rdi]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe969: rcr byte ptr [rsi+0x65026fa3], 1; scasd [rdi]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe96c: outsd dx, [rsi]; add ah, [rbp-0x51]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe96d: add ah, [rbp-0x51]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe96e: scasd es:[rdi]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe96f: scasd [rdi]; leave; or eax, 0xea37420f; ret;
0xffffffff81dbe970: leave; or eax, 0xea37420f; ret;
0xffffffff81dbeaa5: ret 0x90b4;
0xffffffff81dbebba: ret 0x7e3a;
0xffffffff81dbec74: ret 0xcff5;
0xffffffff81dbee7e: ret 0x7130;
0xffffffff81dbeebc: ret 0x581b;
0xffffffff81dbeffb: ret 0x9e8c;
0xffffffff81dbf095: ret 0x17b;
0xffffffff81dbf0ec: ret 0x4a08;
0xffffffff81dbf13e: ret 0x1fbd;
0xffffffff81dbf304: ret 0xce64;
0xffffffff81dbf603: ret 0xb433;
0xffffffff81dbf838: ret 0x7e13;
0xffffffff81dbf87b: stosd [rdi]; mov esp, esp; test eax, 0x794c9eda; iretd;
0xffffffff81dbf87c: mov esp, esp; test eax, 0x794c9eda; iretd;
0xffffffff81dbfa7f: ret 0x5a8;
0xffffffff81dbfad1: ret 0xe08b;
0xffffffff81dbfc2d: ret 0x7f65;
0xffffffff81dbfca8: ret 0xf4a9;
0xffffffff81dbfdc0: xchg esp, eax; popfq; ret 0xafc6;
0xffffffff81dbfdc2: ret 0xafc6;
0xffffffff81dbfde4: ret 0xb7f0;
0xffffffff81dbfeb2: ret 0x3ae3;
0xffffffff81dbff1b: ret 0x725d;
0xffffffff81dbff65: ret 0x1a4f;
0xffffffff81dbff8c: ret 0x13c6;
0xffffffff81dc0091: ret 0x6d1c;
0xffffffff81dc00d2: ret 0x16bb;
0xffffffff81dc014e: ret 0x3967;
0xffffffff81dc03d8: ret 0xdd05;
0xffffffff81dc0486: ret 0x5d97;
0xffffffff81dc0543: xchg esp, eax; ret 0x5807;
0xffffffff81dc0544: ret 0x5807;
0xffffffff81dc05b6: ret 0xa2e8;
0xffffffff81dc0733: ret 0x6e88;
0xffffffff81dc07b0: ret 0x44ea;
0xffffffff81dc0c05: adc eax, 0xa944300d; xor dword ptr [rdx], 0xffffffbe; xchg esp, eax; ret 0x6caf;
0xffffffff81dc0c0a: xor dword ptr [rdx], 0xffffffbe; xchg esp, eax; ret 0x6caf;
0xffffffff81dc0c0d: xchg esp, eax; ret 0x6caf;
0xffffffff81dc0c0e: ret 0x6caf;
0xffffffff81dc0d9e: ret 0x553f;
0xffffffff81dc0e6d: ret 0x26c2;
0xffffffff81dc0e6e: ret 0xcf26;
0xffffffff81dc114b: ret 0xc927;
0xffffffff81dc114c: ret 0xc927;
0xffffffff81dc11fa: ret 0x946d;
0xffffffff81dc131e: ret 0xd688;
0xffffffff81dc15f0: mov [0xc6ed246bed4ce1ed], al; hlt; pop rsp; add esp, eax; insd [rdi], dx; iretd;
0xffffffff81dc15f9: hlt; pop rsp; add esp, eax; insd [rdi], dx; iretd;
0xffffffff81dc15fa: pop rsp; add esp, eax; insd [rdi], dx; iretd;
0xffffffff81dc15fb: add esp, eax; insd [rdi], dx; iretd;
0xffffffff81dc1635: ret 0x51ed;
0xffffffff81dc16e4: ret 0x76f2;
0xffffffff81dc176d: ret 0x777d;
0xffffffff81dc177d: ret 0x9c18;
0xffffffff81dc198f: ret 0xab1f;
0xffffffff81dc1a1a: ret 0x6f4;
0xffffffff81dc1a6d: ret 0xdf50;
0xffffffff81dc1a98: ret 0xafcc;
0xffffffff81dc1a9c: ret 0x24ac;
0xffffffff81dc1b68: ret 0xdcf5;
0xffffffff81dc1c0e: ret 0x2c2;
0xffffffff81dc1c0f: ret 0xa502;
0xffffffff81dc1c58: ret 0xddf8;
0xffffffff81dc1cea: ret 0x676a;
0xffffffff81dc1cfe: ret 0x2d88;
0xffffffff81dc1e3b: ret 0x6dd7;
0xffffffff81dc1e4b: ret 0x655e;
0xffffffff81dc1f3b: ret 0x759f;
0xffffffff81dc20d3: xchg esp, eax; mov al, [0x7b7f8787a3418492]; rcl dword ptr [rbp+0x2b07f1b4], 1; xchg r8, rax; cmpsd [rsi], [rdi]; ret 0xba4a;
0xffffffff81dc237f: xchg esp, eax; sbb [rsi+rdi], bh; ret 0x729e;
0xffffffff81dc2382: ret 0x729e;
0xffffffff81dc2384: ret 0x729e;
0xffffffff81dc23a9: ret 0x800b;
0xffffffff81dc23fc: ret 0xce16;
0xffffffff81dc2422: ret 0x68e7;
0xffffffff81dc2493: cmp eax, 0x1cd0a20a; cmpsd [rsi], [rdi]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc2494: or ah, [rdx-0x58d1e330]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc2496: rcr byte ptr [rsi+rbp], 1; cmpsd [rsi], [rdi]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc2497: sbb al, 0x2e; cmpsd [rsi], [rdi]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc2498: cmpsd [rsi], [rdi]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc2499: cmpsd [rsi], [rdi]; sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc249a: sub rsp, rsi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc249b: sub esp, esi; add al, [rbx+rax-0x12]; push rsp; iretd;
0xffffffff81dc271f: ret 0xe7f6;
0xffffffff81dc2926: ret 0x8b33;
0xffffffff81dc2a3d: ret 0xa428;
0xffffffff81dc2d48: ret 0x5366;
0xffffffff81dc2fd2: pop rsp; imul edx, [rip-0x68d69575], 0x1c; jmp far fword ptr [rax];
0xffffffff81dc3182: ret 0x6300;
0xffffffff81dc31d1: ret 0x2c1a;
0xffffffff81dc3442: ret 0x260a;
0xffffffff81dc37b6: ret 0x580;
0xffffffff81dc3966: ret 0x1b8;
0xffffffff81dc3ad3: fwait; pop rsp; movsxd eax, [rsp+rdi*4-0x6d]; iretd;
0xffffffff81dc3ad4: fwait; pop rsp; movsxd eax, [rsp+rdi*4-0x6d]; iretd;
0xffffffff81dc3ad5: pop rsp; movsxd eax, [rsp+rdi*4-0x6d]; iretd;
0xffffffff81dc3af0: ret 0xd289;
0xffffffff81dc3b1a: ret 0xf4cf;
0xffffffff81dc3fde: ret 0x892e;
0xffffffff81dc4272: ret 0x739a;
0xffffffff81dc4364: ret 0x729a;
0xffffffff81dc44cd: ret 0x6ddf;
0xffffffff81dc4652: leave; cmp eax, 0x40890e4; ret;
0xffffffff81dc48bf: ret 0xbada;
0xffffffff81dc48c6: ret 0x694;
0xffffffff81dc49d9: ret 0x46f8;
0xffffffff81dc4aa8: ret 0x7387;
0xffffffff81dc4b93: ret 0x7977;
0xffffffff81dc4c27: ret 0x5a6a;
0xffffffff81dc4c34: ret 0xa484;
0xffffffff81dc4c42: ret 0xc2f2;
0xffffffff81dc4c43: bnd ret 0x2482;
0xffffffff81dc4c44: ret 0x2482;
0xffffffff81dc4d42: ret 0x1379;
0xffffffff81dc4d5d: ret 0xf1d8;
0xffffffff81dc4d96: ret 0x1f74;
0xffffffff81dc4e04: ret 0x567d;
0xffffffff81dc4f93: pop rsp; add edx, [rax-0x18616e19]; ret;
0xffffffff81dc501c: ret 0xed8d;
0xffffffff81dc50a5: ret 0xf94c;
0xffffffff81dc5118: ret 0xf023;
0xffffffff81dc5148: ret 0x7821;
0xffffffff81dc5155: ret 0x4dd9;
0xffffffff81dc51be: mov fs, [rbx-0x5733df13]; mov ebx, 0xa075da33; pop rsp; ret 0x1040;
0xffffffff81dc51c4: mov ebx, 0xa075da33; pop rsp; ret 0x1040;
0xffffffff81dc51c6: fidiv st, dword ptr [rbp-0x60]; pop rsp; ret 0x1040;
0xffffffff81dc51c9: pop rsp; ret 0x1040;
0xffffffff81dc51ca: ret 0x1040;
0xffffffff81dc531b: ret 0x9b99;
0xffffffff81dc5682: ret 0x67ee;
0xffffffff81dc5686: ret 0x9deb;
0xffffffff81dc56ac: ret 0xcecc;
0xffffffff81dc595c: pop rsp; sub eax, [rsi-0x3c]; ret;
0xffffffff81dc597c: cmp eax, 0xf090cc6b; test dword ptr [rbp+0x3aa32381], 0xef43d454; pop rsp; sbb dl, bl; ret;
0xffffffff81dc5981: test dword ptr [rbp+0x3aa32381], 0xef43d454; pop rsp; sbb dl, bl; ret;
0xffffffff81dc5983: and dword ptr [rbx], 0xd4543aa3; out dx, eax; pop rsp; sbb dl, bl; ret;
0xffffffff81dc5984: and esp, [rbx+0x43d4543a]; out dx, eax; pop rsp; sbb dl, bl; ret;
0xffffffff81dc5986: cmp dl, [rsp+rdx*8+0x43]; out dx, eax; pop rsp; sbb dl, bl; ret;
0xffffffff81dc598a: out dx, eax; pop rsp; sbb dl, bl; ret;
0xffffffff81dc598b: pop rsp; sbb dl, bl; ret;
0xffffffff81dc5a2f: ret 0xf977;
0xffffffff81dc5c10: ret 0xaca9;
0xffffffff81dc5f5c: ret 0x8f02;
0xffffffff81dc6083: ret 0x3acd;
0xffffffff81dc608d: ret 0x49a6;
0xffffffff81dc60e0: ret 0x23b;
0xffffffff81dc61db: ret 0x4884;
0xffffffff81dc6222: ret 0xb3fa;
0xffffffff81dc62e8: ret 0xae2d;
0xffffffff81dc65a4: ret 0x5c0e;
0xffffffff81dc6ade: xchg esp, eax; ret 0x601f;
0xffffffff81dc6adf: ret 0x601f;
0xffffffff81dc6edf: ret 0xdc7f;
0xffffffff81dc6fcb: ret 0xe197;
0xffffffff81dc7254: ret 0xb538;
0xffffffff81dc743e: ret 0xff9f;
0xffffffff81dc76bd: ret 0x3317;
0xffffffff81dc77d7: ret 0x6720;
0xffffffff81dc7830: ret 0x74f4;
0xffffffff81dc7834: ret 0xebf1;
0xffffffff81dc7aea: ret 0xa40b;
0xffffffff81dc7b5c: ret 0x2fdc;
0xffffffff81dc7bba: ret 0x378a;
0xffffffff81dc7bd7: sub esp, 0xffffff9a; iretd;
0xffffffff81dc7c1c: ret 0x9ca7;
0xffffffff81dc7c31: ret 0xec86;
0xffffffff81dc7d67: ret 0xad61;
0xffffffff81dc7e77: ret 0x14fb;
0xffffffff81dc7e88: leave; sub edx, [rax+0x775b67ef]; iretd;
0xffffffff81dc7ea7: pop rsp; sbb eax, 0x36659132; iretd;
0xffffffff81dc7fa5: xchg esp, eax; cmp eax, 0xe25e7a43; mov eax, 0xf26e7a50; ret 0x7a50;
0xffffffff81dc7faf: bnd ret 0x7a50;
0xffffffff81dc7fb0: ret 0x7a50;
0xffffffff81dc804d: ret 0x2b79;
0xffffffff81dc8229: ret 0xf2eb;
0xffffffff81dc8233: ret 0xf46b;
0xffffffff81dc8342: ret 0x4be7;
0xffffffff81dc8406: xor dl, [rdi+r9*8+0xb13865e]; adc [rcx], cl; sbb esp, edi; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc8407: xor dl, [rdi+rcx*8+0xb13865e]; adc [rcx], cl; sbb esp, edi; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc840c: adc ecx, [rbx]; adc [rcx], cl; sbb esp, edi; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc840d: or edx, [rax]; or [rcx], ebx; cld; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc840e: adc [rcx], cl; sbb esp, edi; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc840f: or [rcx], ebx; cld; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc8410: sbb esp, edi; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc8411: cld; mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc8412: mov [0x74555b18381c415f], al; pop rsp; ret;
0xffffffff81dc84b6: ret 0x3487;
0xffffffff81dc8574: xchg edi, eax; xchg esp, eax; mov esi, ebx; clc; ret;
0xffffffff81dc8575: xchg esp, eax; mov esi, ebx; clc; ret;
0xffffffff81dc8798: ret 0x3013;
0xffffffff81dc8982: ret 0x9b54;
0xffffffff81dc89ab: ret 0xf7e7;
0xffffffff81dc89c4: ret 0x1f9c;
0xffffffff81dc89f3: ret 0x912;
0xffffffff81dc8a5b: ret 0x73c;
0xffffffff81dc8c62: ret 0x6876;
0xffffffff81dc8cab: leave; ret 0xf0f2;
0xffffffff81dc8cac: ret 0xf0f2;
0xffffffff81dc8d37: ret 0x4f0d;
0xffffffff81dc8e43: ret 0x5f7b;
0xffffffff81dc8f64: ret 0x38a7;
0xffffffff81dc90b8: ret 0x54c6;
0xffffffff81dc922c: ret 0xfafc;
0xffffffff81dc9277: ret 0xdaf9;
0xffffffff81dc92d4: pop rsp; sub [rax+4], al; ret 0x918e;
0xffffffff81dc92d9: ret 0x918e;
0xffffffff81dc9362: ret 0xc22f;
0xffffffff81dc9364: ret 0x1bcf;
0xffffffff81dc941c: ret 0x32c0;
0xffffffff81dc94ea: ret 0xfc40;
0xffffffff81dc952d: ret 0xf575;
0xffffffff81dc95e6: ret 0xae03;
0xffffffff81dc9611: ret 0x57e5;
0xffffffff81dc97f6: ret 0x7f24;
0xffffffff81dc98b5: ret 0x918d;
0xffffffff81dc990a: ret 0xf5aa;
0xffffffff81dc9a4c: ret 0xa430;
0xffffffff81dc9b46: ret 0xfe29;
0xffffffff81dc9f0b: ret 0x565e;
0xffffffff81dc9f1f: or eax, 0x199e7f99; and ebp, 0x495cd71d; push rax; pop rsp; ret;
0xffffffff81dc9f22: sahf; sbb [rcx+0x5cd71de5], eax; push r8; pop rsp; ret;
0xffffffff81dc9f23: sbb [rcx+0x5cd71de5], eax; push r8; pop rsp; ret;
0xffffffff81dc9f24: and ebp, 0x495cd71d; push rax; pop rsp; ret;
0xffffffff81dc9f25: in eax, 0x1d; xlat [rbx]; pop rsp; push r8; pop rsp; ret;
0xffffffff81dc9f26: sbb eax, 0x50495cd7; pop rsp; ret;
0xffffffff81dc9f27: xlat [rbx]; pop rsp; push r8; pop rsp; ret;
0xffffffff81dc9f28: pop rsp; push r8; pop rsp; ret;
0xffffffff81dc9f29: push r8; pop rsp; ret;
0xffffffff81dc9f2a: push rax; pop rsp; ret;
0xffffffff81dc9f63: ret 0x5667;
0xffffffff81dca0c1: ret 0x438a;
0xffffffff81dca0d4: ret 0xeee7;
0xffffffff81dca0e9: ret 0x92cc;
0xffffffff81dca1f1: ret 0xcc8e;
0xffffffff81dca272: ret 0x59df;
0xffffffff81dca37a: xchg esp, eax; cld; ret 0xee0b;
0xffffffff81dca37d: ret 0xee0b;
0xffffffff81dca39e: xchg esp, eax; mov bl, 0x77; mov edi, ecx; xor eax, 0x5c0e50; mov edx, 0x6801616b; iretd;
0xffffffff81dca3a6: pop rsp; add [rdx+0x6801616b], bh; iretd;
0xffffffff81dca45e: leave; insb [rdi], dx; in al, dx; iretd;
0xffffffff81dca72a: ret 0xcee8;
0xffffffff81dca742: ret 0x6734;
0xffffffff81dca77e: ret 0xde44;
0xffffffff81dca793: fistp qword ptr [rax+0x5d], st; insb [rdi], dx; push rbp; fadd st, st(3); pop rsp; ret 0xe9ad;
0xffffffff81dca795: pop rbp; insb [rdi], dx; push rbp; fadd st, st(3); pop rsp; ret 0xe9ad;
0xffffffff81dca796: insb [rdi], dx; push rbp; fadd st, st(3); pop rsp; ret 0xe9ad;
0xffffffff81dca797: push rbp; fadd st, st(3); pop rsp; ret 0xe9ad;
0xffffffff81dca798: fadd st, st(3); pop rsp; ret 0xe9ad;
0xffffffff81dca79a: pop rsp; ret 0xe9ad;
0xffffffff81dca905: pop rsp; cmpsd [rsi], [rdi]; iretd;
0xffffffff81dca90c: ret 0x7d82;
0xffffffff81dcaa83: ret 0x227b;
0xffffffff81dcab3f: ret 0x5869;
0xffffffff81dcabfb: in al, 6; xchg [rbp-0x47d5b3fa], ah; sbb eax, 0xe8dc71d9; leave; mov [0xff22717c7e1c5566], eax; ret 0xccc3;
0xffffffff81dcabfd: xchg [rbp-0x47d5b3fa], ah; sbb eax, 0xe8dc71d9; leave; mov [0xff22717c7e1c5566], eax; ret 0xccc3;
0xffffffff81dcac03: sbb eax, 0xe8dc71d9; leave; mov [0xff22717c7e1c5566], eax; ret 0xccc3;
0xffffffff81dcac06: fsub st(0), st; leave; mov [0xff22717c7e1c5566], eax; ret 0xccc3;
0xffffffff81dcac09: leave; mov [0xff22717c7e1c5566], eax; ret 0xccc3;
0xffffffff81dcac13: ret 0xccc3;
0xffffffff81dcadb2: ret 0xb620;
0xffffffff81dcadf4: ret 0xcc3f;
0xffffffff81dcae6d: mov al, [0xc30424aa0c8c1078]; lodsd [rsi]; clc; add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae6f: adc [rsp+rcx-0x3cfbdb56], cl; lodsd [rsi]; clc; add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae74: add al, 0xc3; lodsd [rsi]; clc; add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae76: lodsd [rsi]; clc; add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae77: clc; add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae78: add dword ptr [rdi+0x30], 0xffffffec; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae79: xor r12b, r13b; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae7a: xor ah, ch; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae7b: in al, dx; xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae7c: xchg esp, eax; ret 0xbe5f;
0xffffffff81dcae7d: ret 0xbe5f;
0xffffffff81dcaf04: ret 0x28e2;
0xffffffff81dcb102: ret 0xbf75;
0xffffffff81dcb1d7: ret 0xf192;
0xffffffff81dcb384: ret 0x9441;
0xffffffff81dcb3b9: or eax, 0x22c7fd6d; leave; mulps xmm5, [rdx-0x35a569a8]; adc cl, [rdi]; pop rdi; ret;
0xffffffff81dcb3bf: leave; mulps xmm5, [rdx-0x35a569a8]; adc cl, [rdi]; pop rdi; ret;
0xffffffff81dcb44d: ret 0x2aaf;
0xffffffff81dcb5b2: ret 0xb0a3;
0xffffffff81dcb917: ret 0xe9e4;
0xffffffff81dcb998: ret 0xd8d2;
0xffffffff81dcb9b2: ret 0x5a58;
0xffffffff81dcba6a: ret 0xefde;
0xffffffff81dcba77: ret 0x8b2a;
0xffffffff81dcba7f: mov ecx, 0x1cdff7f1; leave; sub bh, [rdi-0x2e]; push rdx; pushfq; ret 0xd719;
0xffffffff81dcba84: leave; sub bh, [rdi-0x2e]; push rdx; pushfq; ret 0xd719;
0xffffffff81dcba8a: ret 0xd719;
0xffffffff81dcbac5: ret 0x2d95;
0xffffffff81dcbc73: ret 0x70b;
0xffffffff81dcbcb4: ret 0x6fc0;
0xffffffff81dcbf39: ret 0x8ca;
0xffffffff81dcc2ba: ret 0x9966;
0xffffffff81dcc576: ret 0xf19c;
0xffffffff81dcc764: ret 0x99dd;
0xffffffff81dcc7f7: ret 0x2ab0;
0xffffffff81dcc844: ret 0xb173;
0xffffffff81dcc8f5: ret 0x8beb;
0xffffffff81dcc9a2: ret 0x9a90;
0xffffffff81dccb46: ret 0x184b;
0xffffffff81dccc28: add [rdi+0x637af84], ebx; mov edi, 0x2ee6ecca; xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc2a: test [rdi-0x3540f9c9], ch; in al, dx; out 0x2e, al; xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc2e: mov edi, 0x2ee6ecca; xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc30: in al, dx; out 0x2e, al; xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc31: out 0x2e, al; xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc32: xchg esp, eax; out dx, eax; ret;
0xffffffff81dccc33: xchg esp, eax; out dx, eax; ret;
0xffffffff81dcccbf: ret 0x2d6a;
0xffffffff81dcccdc: ret 0xfe7f;
0xffffffff81dccda2: ret 0x545b;
0xffffffff81dccda7: ret 0xdb88;
0xffffffff81dccecc: ret 0x6a5c;
0xffffffff81dcd055: push rdx; stosd [rdi]; xlat [rbx]; leave; push rdi; ret 0x2d5c;
0xffffffff81dcd056: stosd [rdi]; xlat [rbx]; leave; push rdi; ret 0x2d5c;
0xffffffff81dcd057: xlat [rbx]; leave; push rdi; ret 0x2d5c;
0xffffffff81dcd058: leave; push rdi; ret 0x2d5c;
0xffffffff81dcd05b: ret 0x2d5c;
0xffffffff81dcd0cf: ret 0xd5df;
0xffffffff81dcd2e9: xchg edi, eax; movsb [rdi], [rsi]; leave; sbb al, 5; imul esi, [rdx+0x1c], 0x4d26bcfc; ret;
0xffffffff81dcd2ea: movsb [rdi], [rsi]; leave; sbb al, 5; imul esi, [rdx+0x1c], 0x4d26bcfc; ret;
0xffffffff81dcd2eb: leave; sbb al, 5; imul esi, [rdx+0x1c], 0x4d26bcfc; ret;
0xffffffff81dcd37c: ret 0xed9d;
0xffffffff81dcd3a2: ret 0x5830;
0xffffffff81dcd4cb: ret 0xa218;
0xffffffff81dcd579: leave; add dword ptr [rdi+0x15], 0xdd3ee8bc; add al, 0x44; iretd;
0xffffffff81dcd644: ret 0xe31;
0xffffffff81dcd6ae: push rbx; leave; sbb [rsi], dh; cmc; xchg [rbp+0x70bef571], si; ret;
0xffffffff81dcd6af: leave; sbb [rsi], dh; cmc; xchg [rbp+0x70bef571], si; ret;
0xffffffff81dcd73c: ret 0x92d7;
0xffffffff81dcd759: ret 0xb42d;
0xffffffff81dcd79a: ret 0x2236;
0xffffffff81dcd914: ret 0x60a0;
0xffffffff81dcd945: ret 0x9ebf;
0xffffffff81dcd97b: ret 0xde4;
0xffffffff81dcdcc6: mov esp, [rax]; mov edx, 0xed85b86a; ret;
0xffffffff81dcdd4e: pop rsp; pop r8; ret;
0xffffffff81dce058: ret 0x2ff2;
0xffffffff81dce108: ret 0x77dd;
0xffffffff81dce120: ret 0xf282;
0xffffffff81dce18c: ret 0x72d9;
0xffffffff81dce2c0: ret 0xa242;
0xffffffff81dce43a: ret 0xa3bf;
0xffffffff81dce4ce: ret 0xb066;
0xffffffff81dce56a: ret 0x8f2d;
0xffffffff81dce5b4: ret 0x3824;
0xffffffff81dce643: ret 0x7f;
0xffffffff81dcea0c: ret 0xbcc9;
0xffffffff81dceae2: ret 0x64a9;
0xffffffff81dceb20: ret 0x24bf;
0xffffffff81dceb55: ret 0xa7b8;
0xffffffff81dcebc4: ret 0x3daf;
0xffffffff81dcec00: ret 0xf944;
0xffffffff81dcec1d: ret 0xd1d8;
0xffffffff81dced41: ret 0xc7c0;
0xffffffff81dced95: ret 0x88e8;
0xffffffff81dcef26: ret 0x5fc;
0xffffffff81dcf03c: ret 0xc7ae;
0xffffffff81dcf072: ret 0xfd7c;
0xffffffff81dcf147: ret 0x607f;
0xffffffff81dcf176: ret 0x87cc;
0xffffffff81dcf177: ret 0x87cc;
0xffffffff81dcf19b: ret 0x3c06;
0xffffffff81dcf1be: ret 0x4c32;
0xffffffff81dcf1bf: ret 0x4c32;
0xffffffff81dcf3fd: ret 0x6327;
0xffffffff81dcf4c2: ret 0x4341;
0xffffffff81dcf57d: ret 0x8218;
0xffffffff81dcf733: ret 0x949d;
0xffffffff81dcfafc: ret 0x712f;
0xffffffff81dcfb00: ret 0xd44b;
0xffffffff81dcfc99: ret 0xa31b;
0xffffffff81dcfd4e: ret 0xba3d;
0xffffffff81dcfe48: ret 0x92d8;
0xffffffff81dcffa1: leave; call rdx;
0xffffffff81dcffdf: ret 0xd29d;
0xffffffff81dcffeb: ret 0xaf82;
0xffffffff81dd003b: leave; mov ebx, 0x132536cc; cli; ret 0x1929;
0xffffffff81dd0042: ret 0x1929;
0xffffffff81dd0208: ret 0xd817;
0xffffffff81dd037d: ret 0x2ef8;
0xffffffff81dd0464: ret 0x787d;
0xffffffff81dd04d9: ret 0x5e1d;
0xffffffff81dd05b1: ret 0x92d0;
0xffffffff81dd063b: ret 0xb536;
0xffffffff81dd09dc: ret 0xdf35;
0xffffffff81dd0a29: ret 0x92f0;
0xffffffff81dd0a30: ret 0xfe4f;
0xffffffff81dd0d44: ret 0xf4d8;
0xffffffff81dd0daf: ret 0x4a3e;
0xffffffff81dd0db5: ret 0x6309;
0xffffffff81dd0f26: ret 0xce7d;
0xffffffff81dd10e4: ret 0x5b10;
0xffffffff81dd1147: ret 0x36f6;
0xffffffff81dd15d1: scasb [rdi]; add eax, 0xcbb45403; xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15d2: add eax, 0xcbb45403; xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15d3: add edx, [rsp+rsi*4-0x35]; xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15d4: push rsp; mov ah, 0xcb; xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15d5: mov ah, 0xcb; xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15d7: xchg esp, eax; lahf; sbb [rsi+0x35], ebp; ret;
0xffffffff81dd15e7: ret 0x6ca5;
0xffffffff81dd197e: ret 0x2f7e;
0xffffffff81dd19cf: ret 0x32bd;
0xffffffff81dd1b98: ret 0x90fc;
0xffffffff81dd1df6: ret 0xace1;
0xffffffff81dd1e25: sub edx, [rbp-0x67]; out dx, eax; shl dword ptr [rip-0x2fc0a69e], cl; leave; ret;
0xffffffff81dd1e26: push rbp; cdq; out dx, eax; shl dword ptr [rip-0x2fc0a69e], cl; leave; ret;
0xffffffff81dd1e27: cdq; out dx, eax; shl dword ptr [rip-0x2fc0a69e], cl; leave; ret;
0xffffffff81dd1e28: out dx, eax; shl dword ptr [rip-0x2fc0a69e], cl; leave; ret;
0xffffffff81dd1e29: shl dword ptr [rip-0x2fc0a69e], cl; leave; ret;
0xffffffff81dd1e2a: and eax, 0xd03f5962; leave; ret;
0xffffffff81dd1ec6: ret 0x2cc9;
0xffffffff81dd2043: ret 0x7a41;
0xffffffff81dd20b4: ret 0x895f;
0xffffffff81dd2110: ret 0xab6;
0xffffffff81dd22d9: ret 0xdc2c;
0xffffffff81dd2344: add esp, eax; ret;
0xffffffff81dd2423: ret 0xafcb;
0xffffffff81dd2424: ret 0xafcb;
0xffffffff81dd263f: ret 0x78e1;
0xffffffff81dd280f: ret 0x7508;
0xffffffff81dd28c9: ret 0xeb15;
0xffffffff81dd28ce: xchg esp, eax; add eax, 0xa4fcd50d; sbb al, 0x52; cmp al, 0xd6; popfq; iretd;
0xffffffff81dd2987: ret 0x330a;
0xffffffff81dd2a4f: ret 0x4bfb;
0xffffffff81dd2a50: ret 0x4bfb;
0xffffffff81dd2b84: ret 0x8818;
0xffffffff81dd2bbb: ret 0x9e35;
0xffffffff81dd2f5d: ret 0xe32c;
0xffffffff81dd2fa4: ret 0x4b79;
0xffffffff81dd3057: xor dword ptr [rax+0x59093050], 0x48b0b642; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd305b: or [rcx+0x42], ebx; mov dh, 0xb0; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd305c: pop rcx; mov sil, 0xb0; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd305d: mov sil, 0xb0; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd305e: mov dh, 0xb0; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd305f: mov al, 0x48; pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd3061: pop rax; sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd3062: sub al, 0x2c; adc esp, ecx; ret 0xc152;
0xffffffff81dd3064: adc esp, ecx; ret 0xc152;
0xffffffff81dd3066: ret 0xc152;
0xffffffff81dd306f: ret 0xc25b;
0xffffffff81dd3071: ret 0xe10a;
0xffffffff81dd309e: ret 0xc257;
0xffffffff81dd30a0: ret 0xe106;
0xffffffff81dd30d9: ret 0xa121;
0xffffffff81dd30e6: ret 0xe131;
0xffffffff81dd30f5: ret 0xe119;
0xffffffff81dd30fa: cmp [rdi], r13b; pop rsp; adc [rsi+0x13], bh; or dl, [rdi-0x347a207c]; ret 0xa115;
0xffffffff81dd30fb: cmp [rdi], ch; pop rsp; adc [rsi+0x13], bh; or dl, [rdi-0x347a207c]; ret 0xa115;
0xffffffff81dd30fd: pop rsp; adc [rsi+0x13], bh; or dl, [rdi-0x347a207c]; ret 0xa115;
0xffffffff81dd3108: ret 0xa115;
0xffffffff81dd3109: adc eax, 0x2ab858a1; pop rsp; adc ebp, [rsi-0x647bc8f5]; ret 0xe12d;
0xffffffff81dd310e: pop rsp; adc ebp, [rsi-0x647bc8f5]; ret 0xe12d;
0xffffffff81dd3115: ret 0xe12d;
0xffffffff81dd3128: ret 0xc21f;
0xffffffff81dd3129: ret 0xc21f;
0xffffffff81dd312b: ret 0xc29f;
0xffffffff81dd312d: ret 0xc25f;
0xffffffff81dd312f: ret 0xe143;
0xffffffff81dd3190: ret 0xb2ba;
0xffffffff81dd33c6: ret 0xffb;
0xffffffff81dd358e: ret 0xc446;
0xffffffff81dd3631: ret 0xb9ea;
0xffffffff81dd36fd: ret 0xbb6c;
0xffffffff81dd36fe: ret 0xbb6c;
0xffffffff81dd3860: ret 0x99c2;
0xffffffff81dd3861: ret 0xae99;
0xffffffff81dd38de: ret 0x93f1;
0xffffffff81dd38e1: ret 0x45be;
0xffffffff81dd3ab6: xchg esp, eax; mov esi, 0xfeff97e5; mov eax, 0x37de74a2; ret;
0xffffffff81dd3b82: ret 0x9f66;
0xffffffff81dd3bdb: ret 0x1f2f;
0xffffffff81dd3c4b: rcl byte ptr [rbx+0xdd31292], cl; pop rsp; sahf; ret 0xa1c2;
0xffffffff81dd3c51: pop rsp; sahf; ret 0xa1c2;
0xffffffff81dd3c57: ret 0xa1c2;
0xffffffff81dd3c58: ret 0x48a1;
0xffffffff81dd3dfd: ret 0xa24b;
0xffffffff81dd3eca: ret 0xc5d4;
0xffffffff81dd4060: ret 0x78d4;
0xffffffff81dd42e8: mov [0xb50173179544ce60], al; std; xchg esp, eax; iretd;
0xffffffff81dd42e9: mov [0xb50173179544ce60], al; std; xchg esp, eax; iretd;
0xffffffff81dd42f1: mov ch, 0xfd; xchg esp, eax; iretd;
0xffffffff81dd42f2: std; xchg esp, eax; iretd;
0xffffffff81dd431a: ret 0xa094;
0xffffffff81dd4339: ret 0xce54;
0xffffffff81dd4578: ret 0x2b6f;
0xffffffff81dd4658: ret 0x879e;
0xffffffff81dd46ff: ret 0xb072;
0xffffffff81dd499e: ret 0x4d69;
0xffffffff81dd49a9: ret 0x734d;
0xffffffff81dd4a37: ret 0x47a6;
0xffffffff81dd4a41: ret 0x2780;
0xffffffff81dd4c72: ret 0x4080;
0xffffffff81dd4e56: ret 0x3deb;
0xffffffff81dd4ebc: ret 0xa38b;
0xffffffff81dd4ebd: ret 0xa38b;
0xffffffff81dd4ede: mov dl, 0x76; leave; cmp al, 0x6f; lea ebp, [rsi+rdi*8]; iretd;
0xffffffff81dd4ee0: leave; cmp al, 0x6f; lea ebp, [rsi+rdi*8]; iretd;
0xffffffff81dd4f00: ret 0xa7db;
0xffffffff81dd4fa0: ret 0xfc97;
0xffffffff81dd51f6: ret 0x2f27;
0xffffffff81dd53ba: ret 0xbde6;
0xffffffff81dd5440: ret 0x7cbf;
0xffffffff81dd55f7: ret 0x6bbe;
0xffffffff81dd56e0: ret 0x3aba;
0xffffffff81dd5707: ret 0x4d77;
0xffffffff81dd571e: ret 0x327f;
0xffffffff81dd5a15: ret 0x5dd5;
0xffffffff81dd5a43: ret 0x85d3;
0xffffffff81dd5a9e: ret 0x9d5;
0xffffffff81dd5b33: ret 0x2390;
0xffffffff81dd5b50: outsb dx, [rsi]; xchg esp, eax; ret;
0xffffffff81dd5b68: ret 0xe641;
0xffffffff81dd5c73: ret 0x9b2c;
0xffffffff81dd5c78: ret 0x739e;
0xffffffff81dd5f21: ret 0x6374;
0xffffffff81dd5f22: ret 0x6374;
0xffffffff81dd6387: ret 0x301f;
0xffffffff81dd6388: ret 0x301f;
0xffffffff81dd6797: ret 0x303;
0xffffffff81dd6798: ret 0x303;
0xffffffff81dd67b4: ret 0xbb01;
0xffffffff81dd67b5: ret 0xbb01;
0xffffffff81dd67b6: ret 0xbb01;
0xffffffff81dd69ca: ret 0xb006;
0xffffffff81dd6a16: ret 0x6f03;
0xffffffff81dd6afe: ret 0x945c;
0xffffffff81dd6b9b: sub bh, [rax+0xb]; pop rsp; add bh, dl; mov edi, 0x93827487; push rdi; ret;
0xffffffff81dd6b9e: pop rsp; add bh, dl; mov edi, 0x93827487; push rdi; ret;
0xffffffff81dd6f7f: ret 0xdb5c;
0xffffffff81dd7097: ret 0xce90;
0xffffffff81dd709d: ret 0x8721;
0xffffffff81dd7442: ret 0xb03f;
0xffffffff81dd7748: ret 0xcf05;
0xffffffff81dd7bf2: outsb dx, [rsi]; add dh, bh; pop rsp; ret;
0xffffffff81dd7bf3: add dh, bh; pop rsp; ret;
0xffffffff81dd7c6c: add esp, edi; ret;
0xffffffff81dd7ce4: ret 0x7012;
0xffffffff81dd7d13: data16 ret 0x32fe;
0xffffffff81dd7d14: ret 0x32fe;
0xffffffff81dd7e9d: ret 0xfd01;
0xffffffff81dd80ec: ret 0x705f;
0xffffffff81dd82a7: ret 0x2e;
0xffffffff81dd8345: ret 0x83bc;
0xffffffff81dd8444: ret 0x8df;
0xffffffff81dd8504: ret 0x3bfc;
0xffffffff81dd85c6: ret 0xe29;
0xffffffff81dd8606: ret 0xe219;
0xffffffff81dd8668: ret 0xbfdc;
0xffffffff81dd8690: ret 0x6eb7;
0xffffffff81dd86c4: ret 0xce3e;
0xffffffff81dd8731: ret 0x7dfc;
0xffffffff81dd873d: ret 0x5ebc;
0xffffffff81dd8762: ret 0x6d7c;
0xffffffff81dd8894: ret 0x6a2b;
0xffffffff81dd8899: ret 0xcc43;
0xffffffff81dd8d4d: ret 0xfc87;
0xffffffff81dd8fac: ret 0xb754;
0xffffffff81dd90a5: ret 0x5fd8;
0xffffffff81dd90b8: pop rsp; xchg edi, eax; test dword ptr [rcx-0x7b], 0xba5deccd; jmp rcx;
0xffffffff81dd90d6: ret 0x7f60;
0xffffffff81dd9162: ret 0x2bd8;
0xffffffff81dd91a0: ret 0x56c0;
0xffffffff81dd91ca: ret 0x4cea;
0xffffffff81dd9242: ret 0x83cd;
0xffffffff81dd92dc: and dh, [rsi+rsi*4-0x75]; leave; iretd;
0xffffffff81dd92de: mov dh, 0x8b; leave; iretd;
0xffffffff81dd9515: ret 0x6baa;
0xffffffff81dd9574: ret 0x276e;
0xffffffff81dd9691: ret 0x78f4;
0xffffffff81dd97f2: ret 0x71e7;
0xffffffff81dd9956: ret 0xff66;
0xffffffff81dd9b35: ret 0xfeeb;
0xffffffff81dd9b4b: ret 0x8df7;
0xffffffff81dd9c06: push rdx; leave; pop rcx; cmp al, 0x49; cmc; jmp qword ptr [rbx-2];
0xffffffff81dd9c07: leave; pop rcx; cmp al, 0x49; cmc; jmp qword ptr [rbx-2];
0xffffffff81dd9d0e: ret 0x37d4;
0xffffffff81dd9d73: ret 0xd645;
0xffffffff81dd9ed2: ret 0x83bf;
0xffffffff81dda043: ret 0x535e;
0xffffffff81dda04f: ret 0x30f4;
0xffffffff81dda151: ret 0x2873;
0xffffffff81dda158: ret 0x2017;
0xffffffff81dda246: ret 0x85b5;
0xffffffff81dda367: ret 0x2e3f;
0xffffffff81dda495: ret 0x34f5;
0xffffffff81dda4a5: ret 0xa470;
0xffffffff81dda547: ret 0x82ff;
0xffffffff81dda560: ret 0xef53;
0xffffffff81dda586: ret 0x47bf;
0xffffffff81dda64c: ret 0x4991;
0xffffffff81dda6c6: ret 0xc614;
0xffffffff81dda798: leave; pop rsi; mov r11d, 0x8caaf88e; nop; hlt; jmp rax;
0xffffffff81dda7e4: ret 0x857f;
0xffffffff81dda9a0: ret 0x3764;
0xffffffff81dda9db: stc; leave; in eax, dx; insd [rdi], dx; mov cl, cl; rep ret;
0xffffffff81dda9dc: leave; in eax, dx; insd [rdi], dx; mov cl, cl; rep ret;
0xffffffff81dda9e0: leave; rep ret;
0xffffffff81dda9e1: rep ret;
0xffffffff81ddacc7: ret 0x9451;
0xffffffff81ddadc9: ret 0x2d0f;
0xffffffff81ddae10: ret 0xee9b;
0xffffffff81ddae3a: ret 0x806f;
0xffffffff81ddb35e: ret 0x287e;
0xffffffff81ddb46a: ret 0x84da;
0xffffffff81ddb575: sub ah, al; cmp eax, 0x1dd84271; xchg esp, eax; in al, dx; ret;
0xffffffff81ddb577: cmp eax, 0x1dd84271; xchg esp, eax; in al, dx; ret;
0xffffffff81ddb57c: xchg esp, eax; in al, dx; ret;
0xffffffff81ddb804: ret 0xacb;
0xffffffff81ddb823: ret 0xe8f7;
0xffffffff81ddba8a: leave; shr eax, cl; test ecx, edi; mov dh, 0x71; mov cl, ch; jmp qword ptr [rcx];
0xffffffff81ddbb0c: ret 0xd14d;
0xffffffff81ddbc4e: ret 0xa79a;
0xffffffff81ddbc89: ret 0xf0bf;
0xffffffff81ddbce5: ret 0x27b8;
0xffffffff81ddbe61: sbb esp, 0xffffff96; add al, 0xbe; pop rdi; ret 0xfbea;
0xffffffff81ddbe67: ret 0xfbea;
0xffffffff81ddc020: ret 0x5689;
0xffffffff81ddc0f4: ret 0x78f9;
0xffffffff81ddc26b: ret 0xd5be;
0xffffffff81ddc4f1: ret 0x8dc4;
0xffffffff81ddc748: mov esp, [rcx-5]; jmp rax;
0xffffffff81ddc78d: data16 ret 0x9fec;
0xffffffff81ddc78e: ret 0x9fec;
0xffffffff81ddc7f9: pop rsp; mul ebx; mov ah, 0x83; syscall;
0xffffffff81ddc80a: ret 0x443e;
0xffffffff81ddc95b: ret 0x638e;
0xffffffff81ddcb20: ret 0xc18b;
0xffffffff81ddcbe7: ret 0xc02b;
0xffffffff81ddcbfd: ret 0xc0bb;
0xffffffff81ddcc78: ret 0x802f;
0xffffffff81ddccea: mov esi, 0xf3153d1f; xchg esp, eax; ret 0x5f80;
0xffffffff81ddccef: xchg esp, eax; ret 0x5f80;
0xffffffff81ddccf0: ret 0x5f80;
0xffffffff81ddcfcc: ret 0x32a0;
0xffffffff81ddd0d3: ret 0x3add;
0xffffffff81ddd0f8: ret 0x3ffa;
0xffffffff81ddd142: cmp [rdx], al; fcmovnb st, st(4); imul ecx, [rbx+rcx*4], 0xa2adf27f; pop rsp; mov cl, 0xa6; iretd;
0xffffffff81ddd144: fcmovnb st, st(4); imul ecx, [rbx+rcx*4], 0xa2adf27f; pop rsp; mov cl, 0xa6; iretd;
0xffffffff81ddd146: imul ecx, [rbx+rcx*4], 0xa2adf27f; pop rsp; mov cl, 0xa6; iretd;
0xffffffff81ddd14d: pop rsp; mov cl, 0xa6; iretd;
0xffffffff81ddd2c6: ret 0x6cde;
0xffffffff81ddd2ea: ret 0x561e;
0xffffffff81ddd6c6: ret 0xb12d;
0xffffffff81ddd830: ret 0x46a8;
0xffffffff81ddd8cd: ret 0xdf55;
0xffffffff81ddd8da: ret 0x1b35;
0xffffffff81ddd958: ret 0xc038;
0xffffffff81dddb3c: ret 0x1d30;
0xffffffff81dddb62: sbb edi, edi; pop rsp; test [rcx], dh; mov dh, 0x55; iretd;
0xffffffff81dddb64: pop rsp; test [rcx], dh; mov dh, 0x55; iretd;
0xffffffff81dddc67: ret 0x2d61;
0xffffffff81dddc6c: ret 0x7fce;
0xffffffff81dddc9c: ret 0x1cd6;
0xffffffff81ddde18: ret 0x880f;
0xffffffff81dde063: ret 0xe9ad;
0xffffffff81dde2bf: ret 0x41dd;
0xffffffff81dde539: ret 0x439d;
0xffffffff81dde5a4: mov eax, 0x89d704f8; mov r14b, 0x88; leave; scasb [rdi]; sub eax, 0x296dffa7; jmp qword ptr [rcx+rsi*2-0x36d009c6];
0xffffffff81dde5a9: mov r14b, 0x88; leave; scasb [rdi]; sub eax, 0x296dffa7; jmp qword ptr [rcx+rsi*2-0x36d009c6];
0xffffffff81dde5aa: mov dh, 0x88; leave; scasb [rdi]; sub eax, 0x296dffa7; jmp qword ptr [rcx+rsi*2-0x36d009c6];
0xffffffff81dde5ac: leave; scasb [rdi]; sub eax, 0x296dffa7; jmp qword ptr [rcx+rsi*2-0x36d009c6];
0xffffffff81dde7e1: ret 0x950f;
0xffffffff81dde7fd: ret 0xef25;
0xffffffff81dde8ed: ret 0xbe43;
0xffffffff81dde90e: ret 0xf7af;
0xffffffff81dde976: ret 0x28d6;
0xffffffff81dde9a8: ret 0x4f4;
0xffffffff81ddeb59: ret 0xf6ba;
0xffffffff81dded44: ret 0xc5cd;
0xffffffff81dded70: ret 0x8a03;
0xffffffff81ddeede: ret 0xbf52;
0xffffffff81ddeee2: ret 0x1b66;
0xffffffff81ddeeff: ret 0x184d;
0xffffffff81ddf0ef: ret 0x4429;
0xffffffff81ddf262: ret 0xf68d;
0xffffffff81ddf263: ret 0xf68d;
0xffffffff81ddf3a1: ret 0x67bc;
0xffffffff81ddf3c7: ret 0x6fd6;
0xffffffff81ddf6a7: ret 0x3fd7;
0xffffffff81ddf734: ret 0xc031;
0xffffffff81ddf9a9: ret 0x41df;
0xffffffff81ddf9b4: ret 0xbeb4;
0xffffffff81ddf9fe: ret 0x49c8;
0xffffffff81ddfb3b: ret 0x10bb;
0xffffffff81ddfb88: ret 0xd309;
0xffffffff81ddfb89: ret 0xd309;
0xffffffff81ddfbaa: ret 0xba12;
0xffffffff81ddfcf1: ret 0xd89a;
0xffffffff81ddfd68: ret 0xb9b4;
0xffffffff81ddfdc7: ret 0x2db5;
0xffffffff81ddff43: ret 0x6491;
0xffffffff81de0120: pop rsp; xor edx, [rdx]; iretd;
0xffffffff81de0172: test eax, 0xe06d34b5; movsxd edx, [rbp+0x25f2171b]; nop; mov esp, ds; shl byte ptr [rdx], cl; ret 0xe6a8;
0xffffffff81de0177: movsxd edx, [rbp+0x25f2171b]; nop; mov esp, ds; shl byte ptr [rdx], cl; ret 0xe6a8;
0xffffffff81de017d: nop; mov esp, ds; shl byte ptr [rdx], cl; ret 0xe6a8;
0xffffffff81de017f: mov esp, ds; shl byte ptr [rdx], cl; ret 0xe6a8;
0xffffffff81de0183: ret 0xe6a8;
0xffffffff81de023b: ret 0xbcb5;
0xffffffff81de041c: ret 0x9066;
0xffffffff81de0422: adc esp, ebp; iretd;
0xffffffff81de0423: adc esp, ebp; iretd;
0xffffffff81de04cd: ret 0x9d13;
0xffffffff81de066e: ret 0x4446;
0xffffffff81de0899: ret 0xb855;
0xffffffff81de0a2b: ret 0x788;
0xffffffff81de0d13: ret 0x313;
0xffffffff81de111b: xchg esp, eax; ret 0x8857;
0xffffffff81de111c: ret 0x8857;
0xffffffff81de11be: ret 0xa60a;
0xffffffff81de1473: ret 0x1119;
0xffffffff81de14d3: ret 0x15ff;
0xffffffff81de1622: ret 0x56f1;
0xffffffff81de1796: ret 0xf025;
0xffffffff81de1a25: ret 0xc4f0;
0xffffffff81de1bee: ret 0xb61e;
0xffffffff81de1c8f: ret 0x51fc;
0xffffffff81de1d5d: ret 0x5fdd;
0xffffffff81de1d67: ret 0x76d0;
0xffffffff81de1df4: ret 0x47ef;
0xffffffff81de1fdc: ret 0x67c2;
0xffffffff81de1fdd: ret 0x9f67;
0xffffffff81de21e0: ret 0x5593;
0xffffffff81de21e1: ret 0x5593;
0xffffffff81de22db: ret 0x278a;
0xffffffff81de2635: imul byte ptr [rdi-0x44]; pop rsp; iretd;
0xffffffff81de2935: ret 0xfb9;
0xffffffff81de293b: ret 0xe2fb;
0xffffffff81de2b80: xor eax, 0x8da73a17; pop rsp; add [r10+0x73b3f9ed], r11d; xchg ecx, eax; adc eax, 0x7324862f; iretd;
0xffffffff81de2b85: pop rsp; add [r10+0x73b3f9ed], r11d; xchg ecx, eax; adc eax, 0x7324862f; iretd;
0xffffffff81de2bb2: ret 0x89da;
0xffffffff81de2c65: ret 0x70a2;
0xffffffff81de2cb9: xchg esp, eax; outsb dx, [rsi]; and [rbx-0x5f], ebp; xchg ecx, eax; movsxd ebp, [r8-0x584beeda]; iretd;
0xffffffff81de2ee0: leave; call qword ptr [rdi-0xc];
0xffffffff81de2f1e: ret 0x3ebf;
0xffffffff81de305c: ret 0xb8d3;
0xffffffff81de307f: ret 0xa60d;
0xffffffff81de32bc: ret 0x930f;
0xffffffff81de32d6: ret 0x8f7a;
0xffffffff81de3305: ret 0xff10;
0xffffffff81de34a0: ret 0x4c48;
0xffffffff81de3569: ret 0xe0d5;
0xffffffff81de364c: ret 0x5b87;
0xffffffff81de3658: ret 0x3c77;
0xffffffff81de38af: ret 0xe38c;
0xffffffff81de38b2: ret 0x5380;
0xffffffff81de38d9: ret 0x11e;
0xffffffff81de392b: ret 0x5a80;
0xffffffff81de393b: ret 0x1ae4;
0xffffffff81de3c29: ret 0xab2f;
0xffffffff81de3db1: ret 0xe3e4;
0xffffffff81de3db4: ret 0x33e4;
0xffffffff81de3db7: ret 0x93c0;
0xffffffff81de3df3: ret 0x1e73;
0xffffffff81de3e44: ret 0x6ed4;
0xffffffff81de3e6b: xchg ebp, eax; mov al, 0xb6; xchg esp, eax; push 0xffffffff94a673e7; nop; ret 0x1f2;
0xffffffff81de3e6c: mov al, 0xb6; xchg esp, eax; push 0xffffffff94a673e7; nop; ret 0x1f2;
0xffffffff81de3e6e: xchg esp, eax; push 0xffffffff94a673e7; nop; ret 0x1f2;
0xffffffff81de3e70: out 0x73, eax; cmpsb [rsi], [rdi]; xchg esp, eax; nop; ret 0x1f2;
0xffffffff81de3e72: cmpsb [rsi], [rdi]; xchg esp, eax; nop; ret 0x1f2;
0xffffffff81de3e73: xchg esp, eax; nop; ret 0x1f2;
0xffffffff81de3e75: ret 0x1f2;
0xffffffff81de3f76: ret 0x43ce;
0xffffffff81de42b6: ret 0xc8c0;
0xffffffff81de42b7: ret 0xc8c0;
0xffffffff81de446a: ret 0xa455;
0xffffffff81de450d: ret 0x56d8;
0xffffffff81de45bd: ret 0xe6ce;
0xffffffff81de46ad: ret 0xb5a;
0xffffffff81de46f0: mov esi, 0xf3537791; mov ebp, 0x5235591c; sbb [rsi-0x36c110c8], r13; int1; leave; ret 0x7bb0;
0xffffffff81de46f5: mov ebp, 0x5235591c; sbb [rsi-0x36c110c8], r13; int1; leave; ret 0x7bb0;
0xffffffff81de46f8: xor eax, 0xae194c52; cmp bh, ch; leave; int1; leave; ret 0x7bb0;
0xffffffff81de46f9: push rdx; sbb [rsi-0x36c110c8], r13; int1; leave; ret 0x7bb0;
0xffffffff81de46fa: sbb [rsi-0x36c110c8], r13; int1; leave; ret 0x7bb0;
0xffffffff81de46fb: sbb [rsi-0x36c110c8], ebp; int1; leave; ret 0x7bb0;
0xffffffff81de46fc: scasb [rdi]; cmp bh, ch; leave; int1; leave; ret 0x7bb0;
0xffffffff81de46fd: cmp bh, ch; leave; int1; leave; ret 0x7bb0;
0xffffffff81de46fe: out dx, eax; leave; int1; leave; ret 0x7bb0;
0xffffffff81de46ff: leave; int1; leave; ret 0x7bb0;
0xffffffff81de4700: leave; int1; leave; ret 0x7bb0;
0xffffffff81de4701: int1; leave; ret 0x7bb0;
0xffffffff81de4702: leave; ret 0x7bb0;
0xffffffff81de4703: ret 0x7bb0;
0xffffffff81de4801: xchg esp, eax; push 0x5b; iretd;
0xffffffff81de4b7d: ret 0x9e37;
0xffffffff81de4ba8: ret 0x98cd;
0xffffffff81de4bde: ret 0x44bd;
0xffffffff81de4bfe: ret 0xbbed;
0xffffffff81de4c46: ret 0x7377;
0xffffffff81de4d63: ret 0x1e8b;
0xffffffff81de4d9f: ret 0x8e4a;
0xffffffff81de4db3: ret 0xc6af;
0xffffffff81de4e9a: ret 0x7c5b;
0xffffffff81de4f0c: ret 0x658b;
0xffffffff81de4fab: mov dl, 0xa6; leave; mov ebx, 0xc4db296d; sahf; int 0x80;
0xffffffff81de4fac: cmpsb [rsi], [rdi]; leave; mov ebx, 0xc4db296d; sahf; int 0x80;
0xffffffff81de4fad: leave; mov ebx, 0xc4db296d; sahf; int 0x80;
0xffffffff81de5081: ret 0xf7b5;
0xffffffff81de5383: ret 0xb0ff;
0xffffffff81de53d3: ret 0x2bb9;
0xffffffff81de53d6: ret 0xd296;
0xffffffff81de573e: ret 0xa1ef;
0xffffffff81de5830: ret 0x3ec6;
0xffffffff81de5831: ret 0x3ec6;
0xffffffff81de58c0: ret 0x12c1;
0xffffffff81de5a35: ret 0xe745;
0xffffffff81de5a3d: sub esp, 0xffffffdc; movsxd ebx, [rdi-0x2262da82]; ret 0x832f;
0xffffffff81de5a3e: sub esp, 0xffffffdc; movsxd ebx, [rdi-0x2262da82]; ret 0x832f;
0xffffffff81de5a48: ret 0x832f;
0xffffffff81de5e8e: ret 0xb8e1;
0xffffffff81de5f13: ret 0x9527;
0xffffffff81de60e0: ret 0x46d1;
0xffffffff81de610f: ret 0xa27e;
0xffffffff81de6133: ret 0x86bb;
0xffffffff81de61fa: ret 0x33a7;
0xffffffff81de649b: ret 0x90fb;
0xffffffff81de64a3: cwde; leave; fwait; iretd;
0xffffffff81de64a4: leave; fwait; iretd;
0xffffffff81de653a: ret 0x1236;
0xffffffff81de6644: xchg esp, eax; mov bh, [rbx-0x1f]; add eax, 0xfe3c2ed2; enter 0x610d, 4; ret 0x6f44;
0xffffffff81de6651: ret 0x6f44;
0xffffffff81de6677: ret 0x72aa;
0xffffffff81de66b9: ret 0xd476;
0xffffffff81de6737: ret 0x8591;
0xffffffff81de677c: ret 0xdf46;
0xffffffff81de67cc: ret 0x5cd;
0xffffffff81de67cd: ret 0x5cd;
0xffffffff81de6829: ret 0xba15;
0xffffffff81de69db: ret 0x832e;
0xffffffff81de6a40: ret 0x9897;
0xffffffff81de6ac4: ret 0x6b7d;
0xffffffff81de6c23: ret 0xe70d;
0xffffffff81de6c4c: ret 0x5a65;
0xffffffff81de6d11: ret 0x62e8;
0xffffffff81de6da5: ret 0x2feb;
0xffffffff81de6f34: ret 0x6de4;
0xffffffff81de6f69: ret 0x9362;
0xffffffff81de7001: pop rcx; sub esp, 0xbc125ba9; jmp qword ptr [rsi+rsi*4+0x89ec64c];
0xffffffff81de7002: sub esp, 0xbc125ba9; jmp qword ptr [rsi+rsi*4+0x89ec64c];
0xffffffff81de7499: ret 0x99e3;
0xffffffff81de7594: ret 0x58fa;
0xffffffff81de76bf: ret 0x209f;
0xffffffff81de7754: ret 0x1ecb;
0xffffffff81de7810: ret 0x395c;
0xffffffff81de7886: data16 ret 0xfa5f;
0xffffffff81de7887: ret 0xfa5f;
0xffffffff81de79a8: ret 0xd134;
0xffffffff81de79f1: ret 0xc8c2;
0xffffffff81de79f2: ret 0x88c8;
0xffffffff81de7aca: ret 0x2691;
0xffffffff81de7b39: ret 0x6bf0;
0xffffffff81de7b4c: ret 0x2f53;
0xffffffff81de7b53: ret 0x89d6;
0xffffffff81de7c23: ret 0x1406;
0xffffffff81de7c61: ret 0x660b;
0xffffffff81de7d34: ret 0xcb13;
0xffffffff81de7dde: ret 0x4764;
0xffffffff81de7ec2: ret 0x73de;
0xffffffff81de7ed5: ret 0x9308;
0xffffffff81de7ee2: ret 0x18ae;
0xffffffff81de7ee3: ret 0x18ae;
0xffffffff81de7fc7: ret 0xfb33;
0xffffffff81de81e8: ret 0x725a;
0xffffffff81de8336: ret 0x13a3;
0xffffffff81de833d: ret 0x41f5;
0xffffffff81de833e: ret 0x41f5;
0xffffffff81de842c: ret 0x9fa0;
0xffffffff81de8468: ret 0x98bf;
0xffffffff81de8487: ret 0x825b;
0xffffffff81de8545: ret 0x8bb8;
0xffffffff81de865a: ret 0x54df;
0xffffffff81de8693: ret 0x84c9;
0xffffffff81de8773: ret 0x6347;
0xffffffff81de8d4e: ret 0xbde;
0xffffffff81de8f4c: ret 0xc3c5;
0xffffffff81de9076: ret 0x90dd;
0xffffffff81de9153: ret 0xb13f;
0xffffffff81de923d: mov esp, ebp; xor ah, dh; insb [rdi], dx; pop rdx; mov ebx, 0x497844d; jmp far fword ptr [rcx+rdx*8-0x6b];
0xffffffff81de9275: leave; call qword ptr [rdi];
0xffffffff81de93ad: ret 0x9a22;
0xffffffff81de93c3: ret 0x9766;
0xffffffff81de95e5: int1; add esp, esp; dec dword ptr [rdi-0x2d]; call far fword ptr [rax+rdi*2-0x48];
0xffffffff81de95e6: add esp, esp; dec dword ptr [rdi-0x2d]; call far fword ptr [rax+rdi*2-0x48];
0xffffffff81de9759: mov edi, 0x2b775aa8; mov ah, 7; fimul st, word ptr [rdi-0x72]; push rax; xchg esp, eax; iretd;
0xffffffff81de975d: sub esi, [rdi+rax+0x508e4fde]; xchg esp, eax; iretd;
0xffffffff81de975e: mov ah, 7; fimul st, word ptr [rdi-0x72]; push rax; xchg esp, eax; iretd;
0xffffffff81de9760: fimul st, word ptr [rdi-0x72]; push rax; xchg esp, eax; iretd;
0xffffffff81de9763: push rax; xchg esp, eax; iretd;
0xffffffff81de9b63: ret 0x27e0;
0xffffffff81de9b9d: ret 0x466;
0xffffffff81de9bc0: ret 0x337;
0xffffffff81de9bca: ret 0x1bf;
0xffffffff81de9c2e: ret 0xd11f;
0xffffffff81de9c3b: ret 0xb9ef;
0xffffffff81de9c48: ret 0xe7e0;
0xffffffff81de9c50: ret 0xb1e0;
0xffffffff81de9c71: ret 0xbe0;
0xffffffff81de9c81: ret 0xafe0;
0xffffffff81de9c92: ret 0xdbe0;
0xffffffff81de9cc7: ret 0xcfe2;
0xffffffff81de9cfb: ret 0xf800;
0xffffffff81de9df5: ret 0x41f3;
0xffffffff81de9e4b: ret 0x89b8;
0xffffffff81dea00d: ret 0x63e3;
0xffffffff81dea0a2: ret 0xf1fd;
0xffffffff81dea281: ret 0xeaeb;
0xffffffff81dea28d: ret 0xa6ee;
0xffffffff81dea28e: ret 0xa6ee;
0xffffffff81dea291: ret 0xddb0;
0xffffffff81dea29f: ret 0x4f61;
0xffffffff81dea30f: ret 0xe1f;
0xffffffff81dea312: ret 0x6e71;
0xffffffff81dea36a: ret 0xebfe;
0xffffffff81dea52f: leave; adc bh, al; vpxor xmm15, xmm1, [rbp-0x11546799]; imul ebp, [rcx+0x74e599bf], 0xf6abf715; test [rcx+0x4d], edx; iretd;
0xffffffff81dea5fe: ret 0x31dd;
0xffffffff81dea76a: ret 0xbfd2;
0xffffffff81dea7a3: ret 0xb7d2;
0xffffffff81dea7b0: ret 0xa4e4;
0xffffffff81deac12: ret 0xa706;
0xffffffff81deadc7: ret 0x36b0;
0xffffffff81deafd1: ret 0xcffa;
0xffffffff81deaff7: ret 0xf95d;
0xffffffff81deb17c: ret 0xd816;
0xffffffff81deb408: ret 0xe35;
0xffffffff81deb52d: ret 0x9645;
0xffffffff81deb710: ret 0xe0f;
0xffffffff81deb7a0: ret 0x3a39;
0xffffffff81deb946: ret 0xd507;
0xffffffff81debb5e: ret 0x7b2d;
0xffffffff81debcf4: ret 0xdaf7;
0xffffffff81debd01: ret 0x80bd;
0xffffffff81debd7b: ret 0xe637;
0xffffffff81debfb8: ret 0xdbe8;
0xffffffff81dec049: xchg esp, eax; ret 0x4cfd;
0xffffffff81dec04a: ret 0x4cfd;
0xffffffff81dec0b7: ret 0x8a29;
0xffffffff81dec17f: ret 0xcced;
0xffffffff81dec191: ret 0xcde1;
0xffffffff81dec28b: xchg esp, eax; ret 0xacb0;
0xffffffff81dec28d: ret 0xacb0;
0xffffffff81dec2d3: ret 0xc897;
0xffffffff81dec33b: ret 0x780f;
0xffffffff81dec3df: ret 0xcdde;
0xffffffff81dec405: ret 0x30ef;
0xffffffff81dec410: sbb esp, edi; sub al, 0x83; call far fword ptr [rbp+0x7e];
0xffffffff81dec48c: ret 0x1897;
0xffffffff81dec4fd: ret 0xff01;
0xffffffff81dec5e4: ret 0x3d3d;
0xffffffff81dec644: xchg rsp, rax; ret;
0xffffffff81dec663: ret 0xa292;
0xffffffff81dec694: ret 0xcca2;
0xffffffff81dec6ef: ret 0xb832;
0xffffffff81dec868: ret 0x5998;
0xffffffff81dec894: ret 0xbf11;
0xffffffff81dec8f1: ret 0x437f;
0xffffffff81deca1f: pop rsp; sbb dh, [rdi-0x3b]; push r15; rcl ecx, 0x44; iretd;
0xffffffff81deca68: ret 0x90d7;
0xffffffff81deca72: ret 0x8b9d;
0xffffffff81deca95: adc esp, esp; or [rbx+0xf4a6424], esp; ret 0x3919;
0xffffffff81deca9d: ret 0x3919;
0xffffffff81decab7: ret 0x4105;
0xffffffff81decae2: ret 0xd24d;
0xffffffff81decc7f: ret 0x507;
0xffffffff81deccf5: ret 0x4c00;
0xffffffff81dece56: ret 0x773e;
0xffffffff81ded04d: ret 0xc864;
0xffffffff81ded064: mov ebp, 0x3d0d8ea2; xchg esp, eax; or eax, 0x362a329; push rdx; fsub st, dword ptr [rax+0x42d443a0]; ret;
0xffffffff81ded069: xchg esp, eax; or eax, 0x362a329; push rdx; fsub st, dword ptr [rax+0x42d443a0]; ret;
0xffffffff81ded339: ret 0x6d71;
0xffffffff81ded3b6: ret 0x8a31;
0xffffffff81ded3ec: ret 0x5ddf;
0xffffffff81ded4c9: ret 0xc61f;
0xffffffff81ded4ca: ret 0xc61f;
0xffffffff81ded508: adc eax, 0xdee9a310; and al, 0x3e; and dh, [rax+0x7b]; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded509: adc [rbx-0x1f7f2117], ah; and dh, [rax+0x7b]; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded50a: mov [0x7b70223ee080dee9], eax; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded50d: and al, 0x3e; and dh, [rax+0x7b]; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded50f: and dh, [rax+0x7b]; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded510: and dh, [rax+0x7b]; add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded513: add eax, 0x6d63bb57; xchg esp, eax; ret;
0xffffffff81ded517: insd [rdi], dx; xchg esp, eax; ret;
0xffffffff81ded5ed: ret 0x8709;
0xffffffff81ded6a5: ret 0xbc92;
0xffffffff81ded825: ret 0x17bb;
0xffffffff81ded89c: ret 0x99ce;
0xffffffff81ded8a4: xchg [rsi], esp; iretq;
0xffffffff81ded91b: mov cl, 0x7d; leave; ficomp st, word ptr [rbx-0x13]; sbb esp, [rsi]; iretd;
0xffffffff81ded91d: leave; ficomp st, word ptr [rbx-0x13]; sbb esp, [rsi]; iretd;
0xffffffff81deda5f: ret 0x7ec2;
0xffffffff81deda60: ret 0xe57e;
0xffffffff81dedb77: ret 0xb2a9;
0xffffffff81dede65: ret 0x1ea;
0xffffffff81dedea4: ret 0x335;
0xffffffff81dedef7: ret 0x1ee6;
0xffffffff81dee0ef: xchg sp, ax; outsd dx, [rsi]; ret 0x2f83;
0xffffffff81dee0f1: xchg esp, eax; outsd dx, [rsi]; ret 0x2f83;
0xffffffff81dee0f3: ret 0x2f83;
0xffffffff81dee41f: ret 0x198c;
0xffffffff81dee50c: ret 0xf401;
0xffffffff81dee55b: ret 0xa469;
0xffffffff81dee5ef: lahf; leave; iretd;
0xffffffff81dee69e: ret 0xe8ef;
0xffffffff81dee78d: pop rsp; call far fword ptr [rsi+0x37c1589e];
0xffffffff81dee7ee: ret 0xa290;
0xffffffff81dee890: mov esp, [rdx-0x17364eb2]; pop rsi; sub al, 0xda; ret 0xf92;
0xffffffff81dee89a: ret 0xf92;
0xffffffff81dee8b7: ret 0xdf83;
0xffffffff81dee8cd: xchg esp, eax; insd [rdi], dx; std; out dx, eax; lahf; ret;
0xffffffff81dee944: ret 0xbc8d;
0xffffffff81dee977: ret 0x807a;
0xffffffff81deec9f: ret 0x4a91;
0xffffffff81deed3c: xchg esp, eax; mov esp, gs; ret 0x4bac;
0xffffffff81deed3d: mov esp, gs; ret 0x4bac;
0xffffffff81deed3f: ret 0x4bac;
0xffffffff81deee5e: ret 0x5a26;
0xffffffff81deef21: ret 0x782c;
0xffffffff81def0fc: ret 0x31e7;
0xffffffff81def1c8: ret 0x3096;
0xffffffff81def2e4: ret 0xc541;
0xffffffff81def2e5: ret 0xc541;
0xffffffff81def3aa: ret 0x58b5;
0xffffffff81def5bd: ret 0xbb5c;
0xffffffff81def6f9: ret 0x2fd7;
0xffffffff81def7f7: ret 0x7564;
0xffffffff81def8f1: ret 0x51f7;
0xffffffff81def90e: ret 0x4495;
0xffffffff81def929: ret 0x2c67;
0xffffffff81def941: ret 0xd1ce;
0xffffffff81def9f7: ret 0x7b01;
0xffffffff81defb7f: ret 0x35c1;
0xffffffff81defba2: ret 0x2eab;
0xffffffff81defbe3: pop rsp; in eax, dx; sbb bl, [rdi-0x73]; mov esi, fs; ret 0x366e;
0xffffffff81defbea: ret 0x366e;
0xffffffff81defd46: ret 0xfb7c;
0xffffffff81defd85: leave; ret 0x4775;
0xffffffff81defd86: ret 0x4775;
0xffffffff81defe07: ret 0xcfde;
0xffffffff81defe6e: ret 0xc660;
0xffffffff81defef3: ret 0x7e24;
0xffffffff81df0009: ret 0x474f;
0xffffffff81df0072: ret 0x53be;
0xffffffff81df0080: ret 0x72a9;
0xffffffff81df0165: ret 0x5d2d;
0xffffffff81df01da: ret 0x7a1e;
0xffffffff81df0389: ret 0x89b6;
0xffffffff81df03a1: ret 0x2ab6;
0xffffffff81df0475: ret 0x6f47;
0xffffffff81df0614: ret 0x5f0f;
0xffffffff81df0684: outsd dx, [rsi]; xchg edx, eax; cli; adc esp, edi; scasd [rdi]; ret 0x33fe;
0xffffffff81df0685: xchg edx, eax; cli; adc esp, edi; scasd [rdi]; ret 0x33fe;
0xffffffff81df0686: cli; adc esp, edi; scasd [rdi]; ret 0x33fe;
0xffffffff81df0687: adc esp, edi; scasd [rdi]; ret 0x33fe;
0xffffffff81df068b: ret 0x33fe;
0xffffffff81df068f: ret 0xc729;
0xffffffff81df0690: ret 0xc729;
0xffffffff81df06cf: leave; jmp far fword ptr [rbx];
0xffffffff81df0716: ret 0x25c4;
0xffffffff81df0ad8: ret 0xeee;
0xffffffff81df0adf: ret 0x8c36;
0xffffffff81df0c00: and [rdi+0x4953088b], cl; xchg ecx, eax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c02: mov ecx, [rax]; push rbx; xchg r9, rax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c03: or [rbx+0x49], dl; xchg ecx, eax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c04: push rbx; xchg r9, rax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c05: xchg r9, rax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c06: xchg ecx, eax; xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c07: xchg [rdx+0x42], esp; ret 0x2823;
0xffffffff81df0c0a: ret 0x2823;
0xffffffff81df0c44: or bl, [rdx-0x2a465b26]; xchg esp, eax; add al, 0x69; test [rbx-0x6084c109], edi; pop rcx; iretd;
0xffffffff81df0c4a: xchg esp, eax; add al, 0x69; test [rbx-0x6084c109], edi; pop rcx; iretd;
0xffffffff81df0dd4: ret 0xe324;
0xffffffff81df0df4: ret 0x2c90;
0xffffffff81df0e3e: ret 0x6699;
0xffffffff81df0fa9: in al, dx; pop rsp; insd [rdi], dx; out 0xc8, al; push rsi; int 0x80;
0xffffffff81df0faa: pop rsp; insd [rdi], dx; out 0xc8, al; push rsi; int 0x80;
0xffffffff81df0fc6: ret 0x3e66;
0xffffffff81df0ffc: ret 0x5fcb;
0xffffffff81df1121: mov r11d, 0xd90a9ab6; rcl dword ptr [rax-0x7f], cl; mov dl, 0x5b; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df1122: mov ebx, 0xd90a9ab6; rcl dword ptr [rax-0x7f], cl; mov dl, 0x5b; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df1125: or bl, cl; rcl dword ptr [rax-0x7f], cl; mov dl, 0x5b; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df1127: rcl dword ptr [rax-0x7f], cl; mov dl, 0x5b; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df112a: mov dl, 0x5b; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df112b: pop rbx; leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df112c: leave; xchg esi, eax; ret 0xeaa;
0xffffffff81df112f: ret 0xeaa;
0xffffffff81df11ad: pop rsp; and eax, 0xb6ee71ef; in eax, 0x2c; ret;
0xffffffff81df148a: xchg esp, eax; xor dh, [rcx-0x69064238]; in al, dx; mov ecx, 0x279505b5; ret 0xbeae;
0xffffffff81df14ce: xchg esp, eax; iretd;
0xffffffff81df1a2a: ret 0x2f2f;
0xffffffff81df1ae3: ret 0x5c92;
0xffffffff81df1d53: pop rsp; mov ebp, [rdi]; shl dword ptr [rbx+8], cl; call qword ptr [rbx-0x5b686178];
0xffffffff81df1efa: ret 0xdd85;
0xffffffff81df1f74: leave; xchg edx, eax; std; pop rbx; sahf; iretd;
0xffffffff81df1f97: ret 0x1f27;
0xffffffff81df20bf: ret 0x6c6f;
0xffffffff81df2458: ret 0x9602;
0xffffffff81df2633: ret 0xb2d0;
0xffffffff81df2636: ret 0xc2c6;
0xffffffff81df2638: ret 0xa614;
0xffffffff81df26b6: ret 0x909d;
0xffffffff81df276d: ret 0x24a5;
0xffffffff81df2814: ret 0x2dea;
0xffffffff81df2821: ret 0xfd69;
0xffffffff81df28bf: ret 0xf6e8;
0xffffffff81df29dc: ret 0x1b00;
0xffffffff81df29f7: ret 0x6bdc;
0xffffffff81df2afa: ret 0x3a82;
0xffffffff81df2b2c: ret 0x9756;
0xffffffff81df2cc2: ret 0x69bc;
0xffffffff81df2f2a: ret 0xdec8;
0xffffffff81df30bd: mov rsp, rdx; sbb dh, [rdx+rdi*8]; outsd dx, [rsi]; shl byte ptr [rdx+rsi-0x7b3ac173], 0x63; cmp esi, [rsi+rdx+0xf]; ret 0x93ac;
0xffffffff81df30be: mov esp, edx; sbb dh, [rdx+rdi*8]; outsd dx, [rsi]; shl byte ptr [rdx+rsi-0x7b3ac173], 0x63; cmp esi, [rsi+rdx+0xf]; ret 0x93ac;
0xffffffff81df30d1: ret 0x93ac;
0xffffffff81df3104: ret 0x3d67;
0xffffffff81df314d: ret 0x15c1;
0xffffffff81df315c: xchg esp, eax; std; adc dl, cl; iretd;
0xffffffff81df319d: ret 0x58e9;
0xffffffff81df32c2: ret 0xece0;
0xffffffff81df333e: ret 0x53f8;
0xffffffff81df33d7: ret 0x3dc5;
0xffffffff81df3476: ret 0x1bbd;
0xffffffff81df352a: ret 0xf569;
0xffffffff81df356b: ret 0x4ffa;
0xffffffff81df3889: ret 0xd17f;
0xffffffff81df39ac: mov [r13+rbp-0x4d], esi; xchg esp, eax; pop rdi; ret;
0xffffffff81df39ad: mov [rbp+rbp-0x4d], esi; xchg esp, eax; pop rdi; ret;
0xffffffff81df39b1: xchg esp, eax; pop rdi; ret;
0xffffffff81df3a99: ret 0xf0b;
0xffffffff81df3b17: ret 0x72b3;
0xffffffff81df3bb5: ret 0xf472;
0xffffffff81df3cc0: ret 0xc737;
0xffffffff81df3cc1: ret 0xc737;
0xffffffff81df3cdc: ret 0x6b6;
0xffffffff81df3f11: leave; ret 0x3db7;
0xffffffff81df3f12: ret 0x3db7;
0xffffffff81df3f35: ret 0x778e;
0xffffffff81df4082: ret 0xb4db;
0xffffffff81df4083: ret 0xb4db;
0xffffffff81df41c8: ret 0x9a81;
0xffffffff81df438a: ret 0x8bc3;
0xffffffff81df43e2: ret 0x2665;
0xffffffff81df4431: ret 0x2920;
0xffffffff81df44d8: ret 0xff08;
0xffffffff81df4600: ret 0x2455;
0xffffffff81df4625: ret 0x6108;
0xffffffff81df46e6: movsb [rdi], [rsi]; mov esp, [rax]; xor cl, ch; and dl, [rdx]; fld st, dword ptr [rdi-0x20cd7de2]; ret 0x20fa;
0xffffffff81df46e7: mov esp, [rax]; xor cl, ch; and dl, [rdx]; fld st, dword ptr [rdi-0x20cd7de2]; ret 0x20fa;
0xffffffff81df46f3: ret 0x20fa;
0xffffffff81df4840: ret 0x369c;
0xffffffff81df48ca: ret 0xb09e;
0xffffffff81df48ec: ret 0x4cb2;
0xffffffff81df48f8: add edi, [rip+0x7caab946]; xor dh, ch; add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df48f9: cmp eax, 0x7caab946; xor dh, ch; add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df48fb: mov ecx, 0xf5327caa; add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df48fe: xor dh, ch; add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df48ff: cmc; add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4900: add eax, 0x1b86f6e6; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4901: out 0xf6, al; xchg [rbx], bl; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4903: xchg [rbx], bl; cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4904: sbb edi, [rip-0x1e1686e9]; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4905: cmp eax, 0xe1e97917; add esp, 0xab960619; data16 bnd ret;
0xffffffff81df490a: add esp, 0xab960619; data16 bnd ret;
0xffffffff81df4910: data16 bnd ret;
0xffffffff81df4956: xchg esp, eax; addr32 mov [0xd350f2fe], al; xchg edi, eax; iretd;
0xffffffff81df4996: ret 0xaf53;
0xffffffff81df4b38: ret 0x339e;
0xffffffff81df4ba7: ret 0x2e4c;
0xffffffff81df4ca9: ret 0xb62e;
0xffffffff81df4db1: ret 0xd5f0;
0xffffffff81df4e2e: ret 0x10ff;
0xffffffff81df4e2f: ret 0x10ff;
0xffffffff81df4f36: ret 0xefad;
0xffffffff81df4f37: ret 0xefad;
0xffffffff81df4fa7: ret 0x1829;
0xffffffff81df505a: ret 0x20d7;
0xffffffff81df5068: ret 0x8c71;
0xffffffff81df507a: pop rsp; nop [rax], edx; mov esi, 0x109be100; fiadd st, word ptr [rbp+0x692337cb]; call far fword ptr [rcx];
0xffffffff81df5233: ret 0x44af;
0xffffffff81df530e: ret 0x8fd7;
0xffffffff81df5327: ret 0x183f;
0xffffffff81df5355: pop rsp; ffreep st(7); imul ebx, 0x9ed0e39f; or al, 0x20; cli; jmp word ptr [rcx];
0xffffffff81df5365: ret 0x785d;
0xffffffff81df5370: ret 0x116b;
0xffffffff81df5381: ret 0x1d3f;
0xffffffff81df5416: ret 0xc26f;
0xffffffff81df5418: ret 0x3cfa;
0xffffffff81df5555: pop rdx; pop rsp; cmp al, 0xe7; sub [rax+0xb], dh; ret 0xe8a9;
0xffffffff81df5556: pop rsp; cmp al, 0xe7; sub [rax+0xb], dh; ret 0xe8a9;
0xffffffff81df555c: ret 0xe8a9;
0xffffffff81df5631: leave; hlt; ret 0x3f7;
0xffffffff81df5633: ret 0x3f7;
0xffffffff81df5859: ret 0x19d7;
0xffffffff81df58e0: pop rsp; sbb al, 0x4f; cmp dword ptr [rcx+rsi-0x38], 0x35; pop rdi; iretd;
0xffffffff81df5a0e: ret 0x985b;
0xffffffff81df5a20: ret 0xdbe7;
0xffffffff81df5ad3: ret 0xd652;
0xffffffff81df5d53: ret 0x5283;
0xffffffff81df5d91: ret 0x310c;
0xffffffff81df5dbd: ret 0xa03e;
0xffffffff81df5e53: ret 0xbefe;
0xffffffff81df5e54: ret 0xbefe;
0xffffffff81df5f0d: ret 0x27f7;
0xffffffff81df601d: ret 0x5a01;
0xffffffff81df6027: ret 0x65d;
0xffffffff81df61a0: mov al, [0xa02f7404ff843c43]; outsd dx, [rsi]; add esp, ebp; ret 0x6c3d;
0xffffffff81df61a9: outsd dx, [rsi]; add esp, ebp; ret 0x6c3d;
0xffffffff81df61aa: add esp, ebp; ret 0x6c3d;
0xffffffff81df61ac: ret 0x6c3d;
0xffffffff81df6505: ret 0xb7d5;
0xffffffff81df6598: ret 0xc681;
0xffffffff81df65fa: ret 0xabea;
0xffffffff81df666f: ret 0xf69f;
0xffffffff81df67b5: ret 0x15ba;
0xffffffff81df67c7: ret 0x4bc7;
0xffffffff81df6a35: ret 0x54c8;
0xffffffff81df6c29: ret 0x2841;
0xffffffff81df6d36: ret 0x7082;
0xffffffff81df6d83: ret 0x7776;
0xffffffff81df6d9e: div esi; xchg ecx, eax; leave; ret;
0xffffffff81df6da0: xchg ecx, eax; leave; ret;
0xffffffff81df6def: ret 0x5324;
0xffffffff81df6e3d: ret 0xf79f;
0xffffffff81df6e54: ret 0xad13;
0xffffffff81df6ea1: ret 0xf15a;
0xffffffff81df72d8: ret 0xcd2;
0xffffffff81df7313: xchg esp, eax; mov edx, 0x14ba7bb9; mov edx, 0xccfee4fd; and eax, [rdx-0x7c84a513]; ret;
0xffffffff81df749e: ret 0xf510;
0xffffffff81df75a3: ret 0x4fe5;
0xffffffff81df763e: ret 0x591e;
0xffffffff81df767f: ret 0x6781;
0xffffffff81df76f5: ret 0x256d;
0xffffffff81df773e: ret 0x3f27;
0xffffffff81df7946: ret 0xf8ea;
0xffffffff81df7a2a: leave; test dl, dh; ret 0x1414;
0xffffffff81df7a2d: bnd ret 0x1414;
0xffffffff81df7a76: in eax, 1; leave; mov dl, [rdx+rcx*4]; ret 0x10ce;
0xffffffff81df7a78: leave; mov dl, [rdx+rcx*4]; ret 0x10ce;
0xffffffff81df7a7c: ret 0x10ce;
0xffffffff81df7b35: ret 0x8211;
0xffffffff81df7bed: ret 0xd344;
0xffffffff81df7c52: ret 0x72bd;
0xffffffff81df7cab: ret 0x85d9;
0xffffffff81df7d4a: ret 0x5f5;
0xffffffff81df7df7: ret 0x5714;
0xffffffff81df7e08: ret 0xf51b;
0xffffffff81df7ebb: ret 0xb3c3;
0xffffffff81df7f57: and [rsi-0x79185d7a], dl; leave; test edx, 0x1e471e1c; cli; sbb [rbx-0x4f], cl; ret;
0xffffffff81df7f5b: out 0x86, eax; leave; test edx, 0x1e471e1c; cli; sbb [rbx-0x4f], cl; ret;
0xffffffff81df7f5d: leave; test edx, 0x1e471e1c; cli; sbb [rbx-0x4f], cl; ret;
0xffffffff81df7f71: ret 0x693;
0xffffffff81df84e7: ret 0x75e8;
0xffffffff81df85cd: ret 0xbeed;
0xffffffff81df887e: ret 0xb551;
0xffffffff81df8a69: cmp dh, bl; movsd [rdi], [rsi]; xchg esp, eax; call qword ptr [rbx];
0xffffffff81df8a6b: movsd [rdi], [rsi]; xchg esp, eax; call qword ptr [rbx];
0xffffffff81df8a6c: xchg esp, eax; call qword ptr [rbx];
0xffffffff81df8a79: ret 0x95f9;
0xffffffff81df8b76: ret 0x828c;
0xffffffff81df8b77: ret 0x828c;
0xffffffff81df8e16: ret 0x10db;
0xffffffff81df8e4b: ret 0x1153;
0xffffffff81df8e52: ret 0x10b3;
0xffffffff81df8e59: ret 0x118b;
0xffffffff81df8fb4: ret 0x2e3;
0xffffffff81df9014: in eax, dx; xchg esp, eax; call qword ptr [rax+rsi*8];
0xffffffff81df9015: xchg esp, eax; call qword ptr [rax+rsi*8];
0xffffffff81df930b: ret 0x3ef8;
0xffffffff81df943d: pop rbp; test cl, r13b; leave; and esp, [rdi+rsi*2+0x65e528f1]; or edi, [rbp-0x21]; ret;
0xffffffff81df943e: test cl, r13b; leave; and esp, [rdi+rsi*2+0x65e528f1]; or edi, [rbp-0x21]; ret;
0xffffffff81df943f: test cl, ch; leave; and esp, [rdi+rsi*2+0x65e528f1]; or edi, [rbp-0x21]; ret;
0xffffffff81df9441: leave; and esp, [rdi+rsi*2+0x65e528f1]; or edi, [rbp-0x21]; ret;
0xffffffff81df946a: ret 0xe4b7;
0xffffffff81df9524: ret 0x419f;
0xffffffff81df9740: mov esp, esp; iretd;
0xffffffff81df9891: ret 0xc59c;
0xffffffff81df98f5: ret 0x493a;
0xffffffff81df997c: ret 0x202;
0xffffffff81df99f6: pop rdi; xchg esp, eax; mov ebx, fs; ret;
0xffffffff81df99f7: xchg esp, eax; mov ebx, fs; ret;
0xffffffff81df9a64: ret 0x2f4b;
0xffffffff81df9cca: ret 0xd7c;
0xffffffff81df9ddf: ret 0x2c7f;
0xffffffff81df9f8f: ret 0x2b2e;
0xffffffff81df9fbc: ret 0x8199;
0xffffffff81dfa05f: ret 0xbb70;
0xffffffff81dfa1c7: ret 0x492b;
0xffffffff81dfa2d4: ret 0x717f;
0xffffffff81dfa381: xchg esp, eax; mov bh, 0x87; call far fword ptr [rsi+0x4f825df2];
0xffffffff81dfa495: ret 0x5b24;
0xffffffff81dfa69c: ret 0xc3c;
0xffffffff81dfa932: ret 0x3eda;
0xffffffff81dfab14: ret 0x82fd;
0xffffffff81dfac0f: idiv byte ptr [rcx]; mov esp, ecx; fldenv [rdi-0x71]; iretd;
0xffffffff81dfac11: mov esp, ecx; fldenv [rdi-0x71]; iretd;
0xffffffff81dfac57: and ah, al; leave; adc [rip-0x47a98f81], ch; iretq;
0xffffffff81dfac59: leave; adc [rip-0x47a98f81], ch; iretq;
0xffffffff81dfad28: ret 0x395f;
0xffffffff81dfadb6: ret 0x8c1d;
0xffffffff81dfaf15: ret 0x9319;
0xffffffff81dfaf34: ret 0xaec7;
0xffffffff81dfaf81: ret 0xe0de;
0xffffffff81dfb07a: ret 0xbc59;
0xffffffff81dfb453: sbb bl, bl; insb [rdi], dx; xchg edx, eax; add esp, ebx; ret;
0xffffffff81dfb455: insb [rdi], dx; xchg edx, eax; add esp, ebx; ret;
0xffffffff81dfb456: xchg edx, eax; add esp, ebx; ret;
0xffffffff81dfb457: add esp, ebx; ret;
0xffffffff81dfb53c: ret 0x1e61;
0xffffffff81dfb578: ret 0xbba9;
0xffffffff81dfb587: ret 0xf373;
0xffffffff81dfb676: adc esp, edi; ret 0xb868;
0xffffffff81dfb678: ret 0xb868;
0xffffffff81dfb681: ret 0x5771;
0xffffffff81dfb6cf: ret 0xabf8;
0xffffffff81dfb7f6: ret 0xc5f1;
0xffffffff81dfba0a: ret 0xcb0f;
0xffffffff81dfba63: ret 0x1c7d;
0xffffffff81dfbab2: ret 0xfc45;
0xffffffff81dfbab7: ret 0x798b;
0xffffffff81dfbabd: ret 0xfcc5;
0xffffffff81dfbad5: ret 0x7367;
0xffffffff81dfbada: ret 0x27bf;
0xffffffff81dfbaf4: ret 0xe7af;
0xffffffff81dfbb01: mov bh, 0x78; pop rsp; ret 0x386b;
0xffffffff81dfbb03: pop rsp; ret 0x386b;
0xffffffff81dfbb04: ret 0x386b;
0xffffffff81dfbbe5: ret 0x4777;
0xffffffff81dfbbfc: ret 0x43f5;
0xffffffff81dfc072: pop rsp; adc eax, 0x994a2c3c; add [rbx], ch; xchg edi, eax; mov dword ptr [rdx], 0xec907e75; ret 0xce1a;
0xffffffff81dfc2dc: ret 0xfa64;
0xffffffff81dfc301: ret 0xaa7a;
0xffffffff81dfc350: xchg esp, eax; test byte ptr [rdx+0x71], 0x37; out dx, eax; or eax, 0x1546ff89; ret;
0xffffffff81dfc373: ret 0xfd33;
0xffffffff81dfc417: ret 0x1a7f;
0xffffffff81dfc433: ret 0x4aad;
0xffffffff81dfc5e6: ret 0xec3c;
0xffffffff81dfc620: ret 0xa2b;
0xffffffff81dfc6b5: ret 0xa8b3;
0xffffffff81dfc6ca: movsb [rdi], [rsi]; cmp al, 0xb8; xor dh, bh; pop rsp; iretd;
0xffffffff81dfc6cb: cmp al, 0xb8; xor dh, bh; pop rsp; iretd;
0xffffffff81dfc6cd: xor dh, bh; pop rsp; iretd;
0xffffffff81dfc6cf: pop rsp; iretd;
0xffffffff81dfc7cc: ret 0x202e;
0xffffffff81dfc7e0: ret 0x56f8;
0xffffffff81dfc947: ret 0x2905;
0xffffffff81dfcb67: ret 0x2f48;
0xffffffff81dfcc3a: ret 0xbcde;
0xffffffff81dfcc6a: ret 0x6176;
0xffffffff81dfcd11: ret 0xb94;
0xffffffff81dfcd12: xchg esp, eax; or ebx, ebx; test ebp, ebp; ret 0xb766;
0xffffffff81dfcd17: ret 0xb766;
0xffffffff81dfcda1: ret 0xadf1;
0xffffffff81dfcdb6: xchg esp, eax; xchg edi, eax; mov [0x72e52fd77e49fc71], eax; iretd;
0xffffffff81dfcddf: ret 0x897a;
0xffffffff81dfce19: ret 0xbeec;
0xffffffff81dfcf1a: pop rsp; int 0x3f; std; add dword ptr [rdi+0x35], 0x2970b2ab; iret;
0xffffffff81dfcf76: ret 0x6186;
0xffffffff81dfd029: ret 0xcbd9;
0xffffffff81dfd0e8: ret 0x187e;
0xffffffff81dfd22e: ret 0x9fda;
0xffffffff81dfd491: ret 0x1a7;
0xffffffff81dfd496: ret 0xfc1d;
0xffffffff81dfd4a9: ret 0x13b;
0xffffffff81dfd52d: ret 0xab;
0xffffffff81dfd540: ret 0xe7f;
0xffffffff81dfd587: ret 0x80dd;
0xffffffff81dfd5b4: ret 0x4f;
0xffffffff81dfd5e8: ret 0x41f;
0xffffffff81dfd5ee: ret 0xff99;
0xffffffff81dfd623: ret 0x7f99;
0xffffffff81dfd64a: ret 0xd79e;
0xffffffff81dfd7b3: ret 0x96b4;
0xffffffff81dfd849: ret 0xa5e6;
0xffffffff81dfd97a: ret 0xc17b;
0xffffffff81dfd9a2: ret 0xb639;
0xffffffff81dfdb35: ret 0x2dec;
0xffffffff81dfdca1: ret 0x7c79;
0xffffffff81dfddca: ret 0xb559;
0xffffffff81dfde3f: ret 0x87df;
0xffffffff81dfde74: ret 0x8031;
0xffffffff81dfdf90: xchg esp, eax; mov edi, 0x8bbf2899; sub [rdi+0x3f], bh; push rcx; iretd;
0xffffffff81dfe0ae: ret 0x7950;
0xffffffff81dfe2ca: mov al, [0xcf3772d6ffc21942]; xchg esp, eax; iretd;
0xffffffff81dfe2cd: ret 0xd6ff;
0xffffffff81dfe648: ret 0x46e9;
0xffffffff81dfe848: ret 0x35a9;
0xffffffff81dfe85a: xor eax, 0x4fdb6c81; xchg esp, eax; ret;
0xffffffff81dfea17: ret 0x6168;
0xffffffff81dfea1a: xchg esp, eax; mov fs, [rdi]; mov ecx, 0x8c5f91ef; call far fword ptr [rcx+0x149f91ef];
0xffffffff81dfecba: ret 0x97f2;
0xffffffff81dfecbb: ret 0x97f2;
0xffffffff81dfee2f: ret 0x528b;
0xffffffff81dfee6c: ret 0x73d2;
0xffffffff81dfef6e: ret 0xb5da;
0xffffffff81dff2b9: ret 0xfd66;
0xffffffff81dff475: ret 0xe7ef;
0xffffffff81dff4e5: ret 0x935d;
0xffffffff81dff8fe: fdivr st, qword ptr [rdi+0xc]; test eax, 0xfa91e1ff; out 0x77, eax; xchg esp, eax; std; iretd;
0xffffffff81dff901: test eax, 0xfa91e1ff; out 0x77, eax; xchg esp, eax; std; iretd;
0xffffffff81dff904: xchg ecx, eax; cli; out 0x77, eax; xchg esp, eax; std; iretd;
0xffffffff81dff905: cli; out 0x77, eax; xchg esp, eax; std; iretd;
0xffffffff81dff906: out 0x77, eax; xchg esp, eax; std; iretd;
0xffffffff81dff908: xchg esp, eax; std; iretd;
0xffffffff81dff970: ret 0x9d68;
0xffffffff81dffc89: ret 0xa567;
0xffffffff81dffd42: bnd ret 0xf95c;
0xffffffff81dffd43: ret 0xf95c;
0xffffffff81dffda6: ret 0x8987;
0xffffffff81dffe4d: ret 0x26d6;
0xffffffff81dfff7d: ret 0xfce1;
0xffffffff81e001e5: ret 0x82a9;
0xffffffff81e00353: ret 0x2cb6;
0xffffffff81e003ca: ret 0xabd1;
0xffffffff81e0046e: ret 0x7795;
0xffffffff81e0046f: ret 0x7795;
0xffffffff81e0047e: ret 0xf3be;
0xffffffff81e004ab: pushfq; add [rcx-0x2df81280], edi; pop rsp; ret 0x4cc8;
0xffffffff81e004ac: add [rcx-0x2df81280], edi; pop rsp; ret 0x4cc8;
0xffffffff81e004ad: mov ecx, 0xd207ed80; pop rsp; ret 0x4cc8;
0xffffffff81e004b2: pop rsp; ret 0x4cc8;
0xffffffff81e004b3: ret 0x4cc8;
0xffffffff81e00542: ret 0xb185;
0xffffffff81e00587: ret 0x5648;
0xffffffff81e00690: ret 0x5a74;
0xffffffff81e006e0: ret 0xf16e;
0xffffffff81e00880: ret 0x3b;
0xffffffff81e00984: ret 0x7c38;
0xffffffff81e00a74: ret 0x4b20;
0xffffffff81e00d77: ret 0xc44f;
0xffffffff81e00e0a: ret 0x268;
0xffffffff81e00e3d: sub [rbp-0xef2d1fc], eax; xchg esp, eax; adc eax, 0x4e049452; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e40: or eax, 0x521594f1; xchg esp, eax; add al, 0x4e; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e41: or eax, 0x521594f1; xchg esp, eax; add al, 0x4e; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e42: int1; xchg esp, eax; adc eax, 0x4e049452; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e43: xchg esp, eax; adc eax, 0x4e049452; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e45: push rdx; xchg esp, eax; add al, 0x4e; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e46: xchg esp, eax; add al, 0x4e; movsxd ebp, [rdx+0x1c81e6da]; pop rbx; ret;
0xffffffff81e00e53: ret 0x258f;
0xffffffff81e00ec1: ret 0x17cd;
0xffffffff81e011d4: ret 0x4059;
0xffffffff81e0125d: ret 0xf1da;
0xffffffff81e012c9: ret 0xf091;
0xffffffff81e012d2: ret 0x861e;
0xffffffff81e013dc: ret 0x89ea;
0xffffffff81e01420: ret 0x13eb;
0xffffffff81e0149e: xchg [rip+0x7b11d82a], esp; or al, 0xa4; fld st, st(4); psubusw mm4, [rax]; lea esi, [rbx+0xa]; ret 0x1331;
0xffffffff81e014ae: ret 0x1331;
0xffffffff81e0154d: test al, 0xc2; xchg esp, eax; fldenv [rdi]; lodsb [rsi]; mov dl, 0xa0; iretd;
0xffffffff81e0154e: ret 0x943e;
0xffffffff81e0154f: xchg esp, eax; fldenv [rdi]; lodsb [rsi]; mov dl, 0xa0; iretd;
0xffffffff81e01550: xchg esp, eax; fldenv [rdi]; lodsb [rsi]; mov dl, 0xa0; iretd;
0xffffffff81e018b8: ret 0x4fc0;
0xffffffff81e018b9: ret 0x4fc0;
0xffffffff81e018cb: neg byte ptr [rdi-0x40422be4]; xchg edi, eax; xchg esp, eax; mov edi, 0x1c22fc1a; jmp qword ptr [rbx-5];
0xffffffff81e018d1: xchg edi, eax; xchg esp, eax; mov edi, 0x1c22fc1a; jmp qword ptr [rbx-5];
0xffffffff81e018d2: xchg esp, eax; mov edi, 0x1c22fc1a; jmp qword ptr [rbx-5];
0xffffffff81e019c1: ret 0x7e4e;
0xffffffff81e01d9a: ret 0xceb1;
0xffffffff81e01dc0: ret 0xff0a;
0xffffffff81e01e13: ret 0x1557;
0xffffffff81e01e37: ret 0x5ef9;
0xffffffff81e01ec5: ret 0xed62;
0xffffffff81e01f38: ret 0xb8f6;
0xffffffff81e01fd0: ret 0xafd;
0xffffffff81e0204d: ret 0x7ab3;
0xffffffff81e0210a: cmp bh, bl; xchg esp, eax; ret 0x501f;
0xffffffff81e0210b: sti; xchg esp, eax; ret 0x501f;
0xffffffff81e0210c: xchg esp, eax; ret 0x501f;
0xffffffff81e0210d: ret 0x501f;
0xffffffff81e02175: ret 0x545f;
0xffffffff81e0217a: ret 0x533f;
0xffffffff81e02193: ret 0x5dff;
0xffffffff81e02303: ret 0x839a;
0xffffffff81e023f7: ret 0xdfd;
0xffffffff81e02536: ret 0xc11b;
0xffffffff81e026da: ret 0x7120;
0xffffffff81e02a87: ret 0xbca8;
0xffffffff81e02e35: ret 0xd68c;
0xffffffff81e02e96: ret 0xe93e;
0xffffffff81e02f6b: ret 0x5f12;
0xffffffff81e032a7: ret 0xe27a;
0xffffffff81e034be: mov bl, bh; sub r9b, [r9-0x73]; out dx, al; leave; mov ebp, 0x66feebd0; ret;
0xffffffff81e034c0: sub r9b, [r9-0x73]; out dx, al; leave; mov ebp, 0x66feebd0; ret;
0xffffffff81e034c1: sub cl, [rcx-0x73]; out dx, al; leave; mov ebp, 0x66feebd0; ret;
0xffffffff81e034c4: out dx, al; leave; mov ebp, 0x66feebd0; ret;
0xffffffff81e034c5: leave; mov ebp, 0x66feebd0; ret;
0xffffffff81e035e4: ret 0xb7;
0xffffffff81e03617: sub esp, eax; ror dword ptr [rdx], cl; sbb esp, ecx; xlat [rbx]; ret 0x57ef;
0xffffffff81e03619: ror dword ptr [rdx], cl; sbb esp, ecx; xlat [rbx]; ret 0x57ef;
0xffffffff81e0361b: sbb esp, ecx; xlat [rbx]; ret 0x57ef;
0xffffffff81e0361e: ret 0x57ef;
0xffffffff81e03692: ret 0x47db;
0xffffffff81e036bd: leave; lodsb [rsi]; ret 0x908f;
0xffffffff81e036bf: ret 0x908f;
0xffffffff81e0376d: ret 0x2ebf;
0xffffffff81e0388c: ret 0x2af2;
0xffffffff81e038b5: add eax, 0x94685483; in al, 0x3c; pop rsp; in al, dx; pop r15; ret 0x7192;
0xffffffff81e038b9: xchg esp, eax; in al, 0x3c; pop rsp; in al, dx; pop r15; ret 0x7192;
0xffffffff81e038ba: in al, 0x3c; pop rsp; in al, dx; pop r15; ret 0x7192;
0xffffffff81e038bc: pop rsp; in al, dx; pop r15; ret 0x7192;
0xffffffff81e038c1: ret 0x7192;
0xffffffff81e038c2: ret 0x7192;
0xffffffff81e039ef: ret 0x47af;
0xffffffff81e039f8: ret 0x11b;
0xffffffff81e039f9: ret 0x11b;
0xffffffff81e03a17: ret 0xdf31;
0xffffffff81e03a24: ret 0xaff;
0xffffffff81e03a31: ret 0x83d;
0xffffffff81e03a54: ret 0x843;
0xffffffff81e03a7c: ret 0x337f;
0xffffffff81e03aa4: ret 0x8e7f;
0xffffffff81e03aac: ret 0x421f;
0xffffffff81e03abe: ret 0x432f;
0xffffffff81e03ac7: ret 0x19ff;
0xffffffff81e03aea: ret 0x42af;
0xffffffff81e03b5f: ret 0x481d;
0xffffffff81e03b73: ret 0x2327;
0xffffffff81e03b87: ret 0x2397;
0xffffffff81e03b91: ret 0x2027;
0xffffffff81e03beb: ret 0xa167;
0xffffffff81e03f23: ret 0x9af3;
0xffffffff81e03f4c: ret 0x74f1;
0xffffffff81e03fa0: ret 0x19ea;
0xffffffff81e04026: ret 0xb48d;
0xffffffff81e04031: ret 0x348d;
0xffffffff81e0403c: ret 0xea8d;
0xffffffff81e046cb: ret 0xa599;
0xffffffff81e047ad: ret 0x8579;
0xffffffff81e04a0d: ret 0xaa9a;
0xffffffff81e04b27: ret 0xd76a;
0xffffffff81e04b87: ret 0xd5f5;
0xffffffff81e04bd8: ret 0xd7cd;
0xffffffff81e04bdf: ret 0xb696;
0xffffffff81e04d5c: ret 0xbf9f;
0xffffffff81e04fa8: ret 0x4f19;
0xffffffff81e0510c: ret 0x6f19;
0xffffffff81e0514c: xchg esp, eax; mov [0x8a3dce2c99db84df], al; ret 0xc9ed;
0xffffffff81e05156: ret 0xc9ed;
0xffffffff81e05157: ret 0xc9ed;
0xffffffff81e05182: ret 0xc0ed;
0xffffffff81e052f8: ret 0x387e;
0xffffffff81e05337: ret 0x6dd8;
0xffffffff81e054a5: ret 0x698b;
0xffffffff81e054f5: ret 0x77cd;
0xffffffff81e056f7: leave; outsd dx, [rsi]; jmp rsi;
0xffffffff81e05cc9: ret 0xb25f;
0xffffffff81e05d89: ret 0xead8;
0xffffffff81e05edd: ret 0x54e3;
0xffffffff81e06243: ret 0xd33c;
0xffffffff81e06264: ret 0xcabb;
0xffffffff81e063b8: ret 0xfe3c;
0xffffffff81e0645b: ret 0xebcf;
0xffffffff81e06513: ret 0x897f;
0xffffffff81e06596: ret 0x7cf7;
0xffffffff81e065bb: ret 0xa204;
0xffffffff81e06653: ret 0xb18;
0xffffffff81e06654: ret 0xb18;
0xffffffff81e0676c: ret 0x2f9c;
0xffffffff81e069fc: ret 0xaf1;
0xffffffff81e06b56: sbb esp, ebp; or eax, 0x74a6721b; hlt; int 0xef; pushfq; ret;
0xffffffff81e06d8d: std; ficom st, dword ptr [rcx+4]; leave; out 0xa1, eax; ret 0x863e;
0xffffffff81e06d8e: ficom st, dword ptr [rcx+4]; leave; out 0xa1, eax; ret 0x863e;
0xffffffff81e06d91: leave; out 0xa1, eax; ret 0x863e;
0xffffffff81e06d94: ret 0x863e;
0xffffffff81e06f93: ret 0x34f9;
0xffffffff81e0710f: ret 0xf17e;
0xffffffff81e072d2: ret 0xf7a4;
0xffffffff81e07383: ret 0x8cf4;
0xffffffff81e073f4: imul ebx, [rdx+0x1d], 0xcf49363f; xchg esp, eax; push rdx; cmp esp, ebp; pop rsi; iretd;
0xffffffff81e073f6: sbb eax, 0xcf49363f; xchg esp, eax; push rdx; cmp esp, ebp; pop rsi; iretd;
0xffffffff81e073fb: xchg esp, eax; push rdx; cmp esp, ebp; pop rsi; iretd;
0xffffffff81e075a6: ret 0x321f;
0xffffffff81e076f8: pop rsp; push rsi; sub cl, [rdi+rax*4-0x7d45497e]; lahf; lahf; ret 0xdaaa;
0xffffffff81e07704: ret 0xdaaa;
0xffffffff81e07863: ret 0x1a67;
0xffffffff81e07a1d: xchg esp, eax; sti; lahf; int1; mov bl, 0xb9; call far fword ptr [rcx];
0xffffffff81e07a9f: ret 0xcffd;
0xffffffff81e07b7a: ret 0x11db;
0xffffffff81e07bef: ret 0x22b7;
0xffffffff81e07c27: ret 0x1127;
0xffffffff81e07c71: ret 0x119b;
0xffffffff81e07c9d: ret 0x8895;
0xffffffff81e07cc2: ret 0x8805;
0xffffffff81e07d12: ret 0xc471;
0xffffffff81e07d98: ret 0x88d9;
0xffffffff81e07d9e: ret 0xc476;
0xffffffff81e07dab: ret 0x10e7;
0xffffffff81e07dcb: ret 0x117b;
0xffffffff81e07e22: ret 0x110b;
0xffffffff81e07e3a: ret 0x11d3;
0xffffffff81e080f5: ret 0x3ca8;
0xffffffff81e080f6: ret 0x3ca8;
0xffffffff81e0825e: ret 0x2a4a;
0xffffffff81e084af: ret 0xad73;
0xffffffff81e085e1: ret 0xd484;
0xffffffff81e086d5: rcl byte ptr [rcx+rdi*4], 0xa5; ror dword ptr [rbx+0x47], 1; add [rsi+0x71338824], bl; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086d7: mov ecx, 0x474bd1a5; add [rsi+0x71338824], bl; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086d8: movsd [rdi], [rsi]; ror dword ptr [rbx+0x47], 1; add [rsi+0x71338824], bl; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086d9: ror dword ptr [rbx+0x47], 1; add [rsi+0x71338824], bl; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086db: add [r14+0x71338824], r11b; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086dc: add [rsi+0x71338824], bl; leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e086e2: leave; movsd [rdi], [rsi]; iretd;
0xffffffff81e087ef: data16 ret 0x468a;
0xffffffff81e087f0: ret 0x468a;
0xffffffff81e08833: ret 0x69c3;
0xffffffff81e088c7: ret 0x25c2;
0xffffffff81e088c8: ret 0xab25;
0xffffffff81e0893e: ret 0x176c;
0xffffffff81e089e9: ret 0xe208;
0xffffffff81e08a97: ret 0xdf20;
0xffffffff81e08ab3: leave; mov al, 0xf2; lodsb [rsi]; in al, dx; int 0x13; ret;
0xffffffff81e08ad3: ret 0xb425;
0xffffffff81e08b6b: ret 0x2a67;
0xffffffff81e08b87: ret 0x43f9;
0xffffffff81e08bcd: sbb esi, ebx; leave; sar byte ptr [rdx+0x35], 0xf6; push rdi; lodsb [rsi]; ret 0x4226;
0xffffffff81e08bcf: leave; sar byte ptr [rdx+0x35], 0xf6; push rdi; lodsb [rsi]; ret 0x4226;
0xffffffff81e08bd6: ret 0x4226;
0xffffffff81e08bea: shr byte ptr [rcx-0xa1a78bb], 1; shl byte ptr [rdi], 1; cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08beb: test eax, 0xf5e58745; shl byte ptr [rdi], 1; cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bee: in eax, 0xf5; shl byte ptr [rdi], 1; cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bef: cmc; shl byte ptr [rdi], 1; cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bf0: shl byte ptr [rdi], 1; cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bf2: cmpsb [rsi], [rdi]; mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bf3: mov al, 0xb5; mov esp, edx; ret;
0xffffffff81e08bf5: mov esp, edx; ret;
0xffffffff81e08dba: ret 0x4488;
0xffffffff81e08e55: data16 ret 0x6cf3;
0xffffffff81e08e56: ret 0x6cf3;
0xffffffff81e08e7d: ret 0xca8b;
0xffffffff81e08f1e: ret 0xd791;
0xffffffff81e0901f: ret 0x8659;
0xffffffff81e09208: pop rdx; mov [0x22096775ae579c40], eax; xchg esp, eax; mov [rdx+0x7d], dl; xor ah, cl; ret;
0xffffffff81e09209: mov [0x22096775ae579c40], eax; xchg esp, eax; mov [rdx+0x7d], dl; xor ah, cl; ret;
0xffffffff81e0920f: or [edx], esp; xchg esp, eax; mov [rdx+0x7d], dl; xor ah, cl; ret;
0xffffffff81e09210: or [rdx], esp; xchg esp, eax; mov [rdx+0x7d], dl; xor ah, cl; ret;
0xffffffff81e09212: xchg esp, eax; mov [rdx+0x7d], dl; xor ah, cl; ret;
0xffffffff81e09298: ret 0xe19b;
0xffffffff81e09450: ret 0x6426;
0xffffffff81e09537: ret 0xbc5b;
0xffffffff81e09549: mov esp, edi; fwait; iretd;
0xffffffff81e096ae: ret 0xa1eb;
0xffffffff81e097dc: ret 0xccb;
0xffffffff81e097e2: ret 0x6437;
0xffffffff81e09872: ret 0xbe56;
0xffffffff81e098fa: ret 0xef66;
0xffffffff81e09949: ret 0x12;
0xffffffff81e09afa: add ebp, [rbp-0x5f]; leave; out dx, al; ret;
0xffffffff81e09afd: leave; out dx, al; ret;
0xffffffff81e09bd5: ret 0x3c41;
0xffffffff81e09bd6: ret 0x3c41;
0xffffffff81e09e4b: ret 0x12c4;
0xffffffff81e09f41: ret 0x5309;
0xffffffff81e0a0e6: ret 0x9e3e;
0xffffffff81e0a148: ret 0xbf7a;
0xffffffff81e0a175: ret 0xa239;
0xffffffff81e0a1de: ret 0x6ce3;
0xffffffff81e0a1fe: ret 0x27ad;
0xffffffff81e0a279: ret 0xd540;
0xffffffff81e0a2b9: ret 0xd609;
0xffffffff81e0a356: xchg esp, eax; ret 0xa8ac;
0xffffffff81e0a357: ret 0xa8ac;
0xffffffff81e0a417: ret 0x4bd;
0xffffffff81e0a42f: ret 0x6b48;
0xffffffff81e0a881: ret 0xc88d;
0xffffffff81e0a979: ret 0x2f32;
0xffffffff81e0a9c9: ret 0xe15f;
0xffffffff81e0aa4a: ret 0x67ea;
0xffffffff81e0ab7e: ret 0xff9;
0xffffffff81e0abcb: ret 0xbbf7;
0xffffffff81e0ac6c: ret 0x5ae4;
0xffffffff81e0aca4: ret 0x1e53;
0xffffffff81e0accf: ret 0xc261;
0xffffffff81e0acd1: ret 0xc03a;
0xffffffff81e0ad6c: ret 0x2edb;
0xffffffff81e0adab: ret 0x7db3;
0xffffffff81e0afe3: ret 0x2e2b;
0xffffffff81e0b02b: ret 0x9471;
0xffffffff81e0b0be: and ebp, [rsi+0x5c0b0e86]; mov esp, [rsi+0x2d]; in eax, dx; add [rbp+rax*8+0x1c], ebx; or al, 0xeb; iretd;
0xffffffff81e0b0c3: pop rsp; mov esp, [rsi+0x2d]; in eax, dx; add [rbp+rax*8+0x1c], ebx; or al, 0xeb; iretd;
0xffffffff81e0b0c4: mov esp, [rsi+0x2d]; in eax, dx; add [rbp+rax*8+0x1c], ebx; or al, 0xeb; iretd;
0xffffffff81e0b228: ret 0xe1a;
0xffffffff81e0b30a: ret 0xe0e3;
0xffffffff81e0b314: xchg [rbp+rbx-0x391a47e6], cl; scasd [rdi]; pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b315: mov [rip-0x391a47e6], ds; scasd [rdi]; pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b316: sbb eax, 0xc6e5b81a; scasd [rdi]; pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b319: in eax, 0xc6; scasd [rdi]; pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b31b: scasd [rdi]; pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b31c: pop rsp; lodsb [rsi]; xchg [r13+r11*4-0x746b58b8], r9b; ret 0x8c0f;
0xffffffff81e0b326: ret 0x8c0f;
0xffffffff81e0b56e: ret 0x293f;
0xffffffff81e0b5e5: ret 0x8dc3;
0xffffffff81e0b60f: ret 0x27a6;
0xffffffff81e0b63a: movsb [rdi], [rsi]; fwait; xchg esp, eax; imul esp, [rsp+rbx-0x10], 0x21f173ce; or al, 0x15; ret;
0xffffffff81e0b63b: fwait; xchg esp, eax; imul esp, [rsp+rbx-0x10], 0x21f173ce; or al, 0x15; ret;
0xffffffff81e0b63c: xchg esp, eax; imul esp, [rsp+rbx-0x10], 0x21f173ce; or al, 0x15; ret;
0xffffffff81e0b64f: ret 0xa2f0;
0xffffffff81e0b68c: ret 0xb40b;
0xffffffff81e0bcd6: ret 0x7965;
0xffffffff81e0bd73: ret 0x7fc5;
0xffffffff81e0bda6: ret 0x8a18;
0xffffffff81e0bef6: data16 ret 0xb07f;
0xffffffff81e0bef7: ret 0xb07f;
0xffffffff81e0c060: ret 0x1ac4;
0xffffffff81e0c0fe: ret 0x6095;
0xffffffff81e0c23c: ret 0xa1ed;
0xffffffff81e0c287: sbb [rbp-0x43bbc3c2], bh; lodsd [rsi]; pop rdx; leave; stc; ret;
0xffffffff81e0c288: mov ebp, 0xbc443c3e; lodsd [rsi]; pop rdx; leave; stc; ret;
0xffffffff81e0c28d: lodsd [rsi]; pop rdx; leave; stc; ret;
0xffffffff81e0c28e: pop rdx; leave; stc; ret;
0xffffffff81e0c28f: leave; stc; ret;
0xffffffff81e0c3ce: pop rsp; ret 0xd23c;
0xffffffff81e0c3cf: ret 0xd23c;
0xffffffff81e0c6e2: ret 0x13f2;
0xffffffff81e0c8c7: ret 0xee97;
0xffffffff81e0c99e: ret 0xe356;
0xffffffff81e0c9e9: ret 0x76d2;
0xffffffff81e0c9ea: ret 0x76d2;
0xffffffff81e0ca7b: ret 0x1f03;
0xffffffff81e0ca99: ret 0x6ffd;
0xffffffff81e0cc19: ret 0xa1ca;
0xffffffff81e0cce2: ret 0xe4f7;
0xffffffff81e0d002: ret 0xfafb;
0xffffffff81e0d020: mov eax, [0x4f7a746113647c2f]; pop rsp; div byte ptr [rip-0x376a0f09]; ret;
0xffffffff81e0d029: pop rsp; div byte ptr [rip-0x376a0f09]; ret;
0xffffffff81e0d326: ret 0xcbdc;
0xffffffff81e0d3e5: ret 0x280b;
0xffffffff81e0d470: cdq; lahf; pop rdx; pop rsp; xchg edx, eax; ret;
0xffffffff81e0d471: lahf; pop rdx; pop rsp; xchg edx, eax; ret;
0xffffffff81e0d472: pop rdx; pop rsp; xchg edx, eax; ret;
0xffffffff81e0d473: pop rsp; xchg edx, eax; ret;
0xffffffff81e0d4dd: ret 0xa811;
0xffffffff81e0d5a6: ret 0x4443;
0xffffffff81e0d6c8: ret 0x5d0;
0xffffffff81e0d912: ret 0x6c1b;
0xffffffff81e0db0e: ret 0x9bb4;
0xffffffff81e0dcd6: ret 0x6240;
0xffffffff81e0dece: ret 0x9dbf;
0xffffffff81e0df46: xchg [rcx+0x651575ab], edi; xor [rdx], bh; leave; ret;
0xffffffff81e0df47: mov ecx, 0x651575ab; xor [rdx], bh; leave; ret;
0xffffffff81e0df4b: xor gs:[rdx], bh; leave; ret;
0xffffffff81e0df4c: xor [rdx], bh; leave; ret;
0xffffffff81e0e591: ret 0xad1;
0xffffffff81e0e609: ret 0xdfa0;
0xffffffff81e0e66c: ret 0x79a3;
0xffffffff81e0e6e7: ret 0xec1b;
0xffffffff81e0e70a: or eax, [rbx]; add bh, [rbp+0x4b]; xchg [rip-0x1736fd65], esp; cmp eax, 0xb1975839; ret 0x9855;
0xffffffff81e0e70c: add bh, [rbp+0x4b]; xchg [rip-0x1736fd65], esp; cmp eax, 0xb1975839; ret 0x9855;
0xffffffff81e0e70e: xchg [rip-0x1736fd65], rsp; cmp eax, 0xb1975839; ret 0x9855;
0xffffffff81e0e70f: xchg [rip-0x1736fd65], esp; cmp eax, 0xb1975839; ret 0x9855;
0xffffffff81e0e71a: ret 0x9855;
0xffffffff81e0e8c0: ret 0xabbf;
0xffffffff81e0eb34: ret 0x37f2;
0xffffffff81e0ed54: ret 0x3f53;
0xffffffff81e0ee48: ret 0xe21;
0xffffffff81e0ee74: ret 0x5024;
0xffffffff81e0efe1: ret 0x11f3;
0xffffffff81e0f0d7: ret 0xfa5;
0xffffffff81e0f186: ret 0xb01a;
0xffffffff81e0f1da: ret 0xced7;
0xffffffff81e0f24c: ret 0xdfe7;
0xffffffff81e0f42d: ret 0x6e6e;
0xffffffff81e0f51b: ret 0x53b8;
0xffffffff81e0f5e8: ret 0x7f5d;
0xffffffff81e0f92c: ret 0x8e3c;
0xffffffff81e0fa01: ret 0x7a4a;
0xffffffff81e0fa0f: ret 0xe911;
0xffffffff81e0fa3d: ret 0xac40;
0xffffffff81e0fa79: ret 0x57ab;
0xffffffff81e0fb04: ret 0x69e;
0xffffffff81e0fb3e: ret 0xb38e;
0xffffffff81e0fb5d: ret 0x21f5;
0xffffffff81e0fc75: ret 0x249b;
0xffffffff81e0fd37: ret 0x1721;
0xffffffff81e0fe25: ret 0xece5;
0xffffffff81e1001a: ret 0xf97f;
0xffffffff81e10079: ret 0xe9e3;
0xffffffff81e10154: ret 0xb729;
0xffffffff81e101a8: ret 0xa74b;
0xffffffff81e10388: ret 0x954f;
0xffffffff81e103ad: ret 0x3b16;
0xffffffff81e10472: ret 0xfcbb;
0xffffffff81e1047d: ret 0xf82b;
0xffffffff81e104e9: ret 0x8224;
0xffffffff81e105db: ret 0xd82;
0xffffffff81e106b9: xchg esp, eax; xchg r12d, eax; iretd;
0xffffffff81e106cb: ret 0x41c2;
0xffffffff81e106cc: ret 0x9541;
0xffffffff81e10711: ret 0x91b3;
0xffffffff81e10965: ret 0xc31;
0xffffffff81e10a4f: ret 0xf9be;
0xffffffff81e10a7f: ret 0xb59d;
0xffffffff81e10af7: ret 0x735f;
0xffffffff81e10bf1: ret 0x58d0;
0xffffffff81e10dcd: ret 0x4ea7;
0xffffffff81e10e1c: ret 0xd43f;
0xffffffff81e10e3f: ret 0x209b;
0xffffffff81e1100e: ret 0x6e05;
0xffffffff81e11016: ret 0x6bf4;
0xffffffff81e110a1: ret 0x37f;
0xffffffff81e1117a: ret 0xb043;
0xffffffff81e11283: ret 0x1a9e;
0xffffffff81e112a2: ret 0x81ee;
0xffffffff81e11354: ret 0x9419;
0xffffffff81e11519: ret 0xedc7;
0xffffffff81e11673: ret 0x1b76;
0xffffffff81e11891: ret 0xc6e3;
0xffffffff81e11b2a: ret 0xc56a;
0xffffffff81e11d83: ret 0x23b5;
0xffffffff81e11d98: ret 0x992;
0xffffffff81e11dfc: add al, ch; mov edx, 0x77bbe44b; mov [rcx+0x7e81b5f9], al; insd [rdi], dx; add esp, ecx; ret;
0xffffffff81e11dff: mov edx, 0x77bbe44b; mov [rcx+0x7e81b5f9], al; insd [rdi], dx; add esp, ecx; ret;
0xffffffff81e11e04: mov [rcx+0x7e81b5f9], al; insd [rdi], dx; add esp, ecx; ret;
0xffffffff81e11e05: cmp ecx, 0x6d7e81b5; add esp, ecx; ret;
0xffffffff81e11e0a: insd [rdi], dx; add esp, ecx; ret;
0xffffffff81e11e0b: add esp, ecx; ret;
0xffffffff81e11ef2: ret 0xffa;
0xffffffff81e1205b: ret 0x3109;
0xffffffff81e1212f: xor al, 0xa0; xchg esp, eax; ret;
0xffffffff81e12360: cmp al, 0x35; leave; iret;
0xffffffff81e12362: leave; iret;
0xffffffff81e12462: ret 0x7d8f;
0xffffffff81e12595: ret 0x9dd3;
0xffffffff81e1272d: ret 0xf34d;
0xffffffff81e12878: ret 0x726f;
0xffffffff81e12c05: ret 0x7136;
0xffffffff81e12c3a: ret 0xabfe;
0xffffffff81e12e94: ret 0x9220;
0xffffffff81e1342c: ret 0x7e77;
0xffffffff81e13781: ret 0x44dc;
0xffffffff81e139e0: ret 0xc572;
0xffffffff81e13adc: ret 0x9fe3;
0xffffffff81e13aea: ret 0x9f06;
0xffffffff81e13b7f: pop rsp; push rdx; mov rdi, [rcx*2-0x5ba8b833]; add dl, [rdx-0x1f]; cli; ret;
0xffffffff81e13d48: ret 0x476d;
0xffffffff81e13e49: ret 0x1187;
0xffffffff81e140bd: ret 0xfcec;
0xffffffff81e140be: ret 0xfcec;
0xffffffff81e14136: mov al, [rdx+rax*4+0x4ddb908d]; xchg esp, eax; movsb [rdi], [rsi]; stc; sbb al, 0xd7; iretd;
0xffffffff81e14137: test [rdx+0x4ddb908d], al; xchg esp, eax; movsb [rdi], [rsi]; stc; sbb al, 0xd7; iretd;
0xffffffff81e1413d: xchg esp, eax; movsb [rdi], [rsi]; stc; sbb al, 0xd7; iretd;
0xffffffff81e142b5: ret 0x5c18;
0xffffffff81e14302: leave; stosb [rdi]; pop rsi; movsxd ebp, [rax-0x1b2fa23c]; sub [rcx+0x712e5f81], esi; ret 0xb24f;
0xffffffff81e14312: ret 0xb24f;
0xffffffff81e1431c: ret 0x338a;
0xffffffff81e144cd: ret 0x639;
0xffffffff81e14589: ret 0x4933;
0xffffffff81e1491f: ret 0x5161;
0xffffffff81e14b22: ret 0x9f60;
0xffffffff81e14cc1: adc esp, [rbp+rcx*2+0x10]; xchg esp, eax; scasd [rdi]; movsxd edi, [rsi]; mov al, 0x3b; ret 0xfe1a;
0xffffffff81e14cc5: xchg esp, eax; scasd [rdi]; movsxd edi, [rsi]; mov al, 0x3b; ret 0xfe1a;
0xffffffff81e14ccb: ret 0xfe1a;
0xffffffff81e14d2f: ret 0xb42f;
0xffffffff81e14fc0: ret 0x966e;
0xffffffff81e1500d: leave; scasd [rdi]; ret 0xd211;
0xffffffff81e15101: ret 0x92c1;
0xffffffff81e15213: ret 0xdb1d;
0xffffffff81e15257: ret 0xff04;
0xffffffff81e15341: ret 0x5254;
0xffffffff81e15392: ret 0xc17;
0xffffffff81e157e5: ret 0x99f9;
0xffffffff81e15a26: ret 0xd75a;
0xffffffff81e15ae3: ret 0xe1f1;
0xffffffff81e15c8b: ret 0xbafa;
0xffffffff81e15cc0: ret 0x907b;
0xffffffff81e15d6c: ret 0x198f;
0xffffffff81e15f85: xchg esp, eax; scasd [rdi]; ret;
0xffffffff81e16092: ret 0xc596;
0xffffffff81e160da: ret 0x95f2;
0xffffffff81e16151: ret 0xde74;
0xffffffff81e1624d: ret 0xdde6;
0xffffffff81e164c5: ret 0x132f;
0xffffffff81e1651f: ret 0xff61;
0xffffffff81e16520: ret 0xff61;
0xffffffff81e16571: ret 0x2257;
0xffffffff81e16576: adc [rcx], ch; mov al, [0x8b2d542c698c6f6f]; and dl, [rcx-0xc1a6a35]; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16578: mov al, [0x8b2d542c698c6f6f]; and dl, [rcx-0xc1a6a35]; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e1657f: sub eax, 0xcb91228b; xchg ebp, eax; in eax, 0xf3; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16581: and dl, [rcx-0xc1a6a35]; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16584: xchg ebp, eax; in eax, 0xf3; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16585: in eax, 0xf3; or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16587: or edi, [rip-0x1ae73955]; leave; ret 0x7be6;
0xffffffff81e16588: cmp eax, 0xe518c6ab; leave; ret 0x7be6;
0xffffffff81e1658b: sbb ch, ah; leave; ret 0x7be6;
0xffffffff81e1658d: leave; ret 0x7be6;
0xffffffff81e1658e: ret 0x7be6;
0xffffffff81e165e1: ret 0x1113;
0xffffffff81e16656: ret 0xe75;
0xffffffff81e16783: ret 0x280d;
0xffffffff81e167a6: ret 0x4bad;
0xffffffff81e169ab: ret 0x1418;
0xffffffff81e16a9a: ret 0xfe6;
0xffffffff81e16bac: ret 0x8dac;
0xffffffff81e16cde: ret 0xa4e3;
0xffffffff81e16dcc: bnd ret 0x3cb5;
0xffffffff81e16dcd: ret 0x3cb5;
0xffffffff81e16e0c: ret 0x44e4;
0xffffffff81e16e37: ret 0xf230;
0xffffffff81e16e6c: ret 0x32a8;
0xffffffff81e16e7b: sbb esp, [rsi+rcx+0x3a71de4e]; xchg esp, eax; ret 0xd96c;
0xffffffff81e16e7f: fidiv st, word ptr [rcx+0x3a]; xchg esp, eax; ret 0xd96c;
0xffffffff81e16e82: xchg esp, eax; ret 0xd96c;
0xffffffff81e16e83: ret 0xd96c;
0xffffffff81e16e9f: push 0xffffffffffffffca; xchg esp, eax; fsub st, dword ptr [rcx]; popfq; cdq; ret;
0xffffffff81e16ea1: xchg esp, eax; fsub st, dword ptr [rcx]; popfq; cdq; ret;
0xffffffff81e16fca: ret 0x84d0;
0xffffffff81e17078: ret 0x9a14;
0xffffffff81e170b4: ret 0x4097;
0xffffffff81e17320: xchg esp, eax; and dl, ah; adc dword ptr [rdi+0x12ff07b0], 0xffffff85; pop rbp; mov [0xac4a32c9f6c39ef0], al; ret;
0xffffffff81e17330: leave; xor cl, [rdx-0x54]; ret;
0xffffffff81e173bb: ret 0xbe09;
0xffffffff81e1753d: leave; mov esi, 0xa0c6be0e; iretd;
0xffffffff81e17646: ret 0x5a9f;
0xffffffff81e176b0: ret 0x9af6;
0xffffffff81e176b1: ret 0x9af6;
0xffffffff81e177ef: ret 0xe457;
0xffffffff81e17893: ret 0x7f5a;
0xffffffff81e178b4: ret 0xd186;
0xffffffff81e179ee: mov dl, 0x82; xchg esp, eax; xchg [rsi+0x4bfc97c0], al; ret 0x5ba6;
0xffffffff81e179f0: xchg esp, eax; xchg [rsi+0x4bfc97c0], al; ret 0x5ba6;
0xffffffff81e179f7: ret 0x5ba6;
0xffffffff81e179f8: ret 0x5ba6;
0xffffffff81e17aab: ret 0x83e6;
0xffffffff81e17b3c: ret 0x3bac;
0xffffffff81e17c37: ret 0xe97a;
0xffffffff81e17eaf: ret 0x21a0;
0xffffffff81e17fdf: ret 0x2fa6;
0xffffffff81e1804d: ret 0xf336;
0xffffffff81e18071: ret 0xe296;
0xffffffff81e18074: xchg esp, eax; imul ecx, [rdx], 0x45; iretd;
0xffffffff81e180a6: sub esp, esp; push rcx; ret 0xf796;
0xffffffff81e1815b: ret 0x8a2f;
0xffffffff81e182c6: nop; sub esp, esi; iretd;
0xffffffff81e182c7: sub esp, esi; iretd;
0xffffffff81e18332: ret 0x52fe;
0xffffffff81e18594: ret 0x85a2;
0xffffffff81e18701: ret 0x2b24;
0xffffffff81e18833: ret 0x9d1f;
0xffffffff81e189fc: ret 0xd0b3;
0xffffffff81e18c03: ret 0x8c42;
0xffffffff81e18c25: ret 0x3a1d;
0xffffffff81e18eb5: ret 0x5800;
0xffffffff81e19091: ret 0xbfc8;
0xffffffff81e19110: ret 0x7bae;
0xffffffff81e19296: ret 0x57b7;
0xffffffff81e192d8: ret 0xadad;
0xffffffff81e19335: ret 0xe2f4;
0xffffffff81e19336: ret 0xe2f4;
0xffffffff81e193d2: ret 0x5809;
0xffffffff81e193f2: ret 0xba4a;
0xffffffff81e1942d: ret 0x3c97;
0xffffffff81e195ad: ret 0x1b96;
0xffffffff81e1964a: ret 0x2c84;
0xffffffff81e1966e: ret 0x358;
0xffffffff81e196cf: ret 0x7d8c;
0xffffffff81e19a38: ret 0x6841;
0xffffffff81e19c6c: ret 0xb6f;
0xffffffff81e19d2f: ret 0xa096;
0xffffffff81e19d95: ret 0xead4;
0xffffffff81e19ef0: ret 0xff34;
0xffffffff81e19ef1: ret 0xff34;
0xffffffff81e19f6a: ret 0xfcf9;
0xffffffff81e19f6c: ret 0xfcf9;
0xffffffff81e19f9f: ret 0x922c;
0xffffffff81e1a063: xchg esp, eax; ret 0x9533;
0xffffffff81e1a064: ret 0x9533;
0xffffffff81e1a065: ret 0x9533;
0xffffffff81e1a536: ret 0xd61c;
0xffffffff81e1a5ce: ret 0xde82;
0xffffffff81e1a5d5: leave; cmp eax, 0x2e25428; stosd [rdi]; iretd;
0xffffffff81e1a635: ret 0x1dd6;
0xffffffff81e1a6bb: ret 0x2dcd;
0xffffffff81e1a727: ret 0xeb66;
0xffffffff81e1a7a1: ret 0xb15f;
0xffffffff81e1a968: ret 0x59e6;
0xffffffff81e1ab4f: ret 0xacdc;
0xffffffff81e1acff: ret 0x247f;
0xffffffff81e1ad14: push rsp; leave; pop rdx; push rcx; ret 0x1bd3;
0xffffffff81e1ad15: leave; pop rdx; push rcx; ret 0x1bd3;
0xffffffff81e1ad19: ret 0x1bd3;
0xffffffff81e1ad25: ret 0xbc09;
0xffffffff81e1adce: ret 0xa700;
0xffffffff81e1aee2: leave; and bh, [rax-0x12]; ret 0xdfba;
0xffffffff81e1aee6: ret 0xdfba;
0xffffffff81e1b0ed: ret 0x31b4;
0xffffffff81e1b159: ret 0xea59;
0xffffffff81e1b2d4: ret 0x5b5d;
0xffffffff81e1b2dd: ret 0x2657;
0xffffffff81e1b3fd: ret 0xe4a9;
0xffffffff81e1b44d: ret 0x6603;
0xffffffff81e1b4be: ret 0x8eed;
0xffffffff81e1b4c8: ret 0x8bc9;
0xffffffff81e1b556: ret 0x19d3;
0xffffffff81e1b6d6: ret 0x3e76;
0xffffffff81e1b6d7: ret 0x3e76;
0xffffffff81e1b812: ret 0xe3b7;
0xffffffff81e1b97b: ret 0xdc3b;
0xffffffff81e1b9fc: mov esi, [rdi]; xchg esp, eax; iretd;
0xffffffff81e1bbd9: pop rcx; lar ecx, esp; mov ebp, 0xccfe4f6f; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbda: lar ecx, esp; mov ebp, 0xccfe4f6f; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbdb: add cl, ah; mov ebp, 0xccfe4f6f; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbdc: int3; mov ebp, 0xccfe4f6f; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbdd: mov ebp, 0xccfe4f6f; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbde: outsd dx, [rsi]; dec r12b; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbdf: dec r12b; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbe0: dec ah; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbe1: int3; mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1bbe2: mov edx, 0xe368ce1b; pop rsp; iretd;
0xffffffff81e1be6a: ret 0x4345;
0xffffffff81e1c233: ret 0x1af9;
0xffffffff81e1c369: ret 0x4c37;
0xffffffff81e1c409: ret 0xdac7;
0xffffffff81e1c42d: ret 0xabef;
0xffffffff81e1c42e: ret 0xabef;
0xffffffff81e1c66d: ret 0x7311;
0xffffffff81e1c71a: ret 0xde93;
0xffffffff81e1c734: ret 0xcae;
0xffffffff81e1c740: ret 0xd4f0;
0xffffffff81e1c7de: ret 0xc72b;
0xffffffff81e1c882: ret 0x6577;
0xffffffff81e1c930: ret 0xe50;
0xffffffff81e1ca05: pop rsp; imul rsi, rax, 0; ret 0x4020;
0xffffffff81e1ca0a: ret 0x4020;
0xffffffff81e1ca0b: ret 0x4020;
0xffffffff81e1ca26: ret 0xde2e;
0xffffffff81e1ca8e: ret 0xd84f;
0xffffffff81e1cad8: ret 0x46fa;
0xffffffff81e1caf7: ret 0xbdd1;
0xffffffff81e1cbd0: ret 0x5f15;
0xffffffff81e1cc35: ret 0xaab0;
0xffffffff81e1cc8c: ret 0x4e9a;
0xffffffff81e1cdbc: xchg esp, eax; xchg esi, eax; adc al, 0x74; scasb [rdi]; pop rdi; iretd;
0xffffffff81e1ce69: leave; mov [0x2b2aaa9f24b952f2], al; sub ch, [rbx]; mov al, [0xc11617e4a784581f]; adc al, 0x14; ret;
0xffffffff81e1cf34: ret 0x5a5d;
0xffffffff81e1cf77: ret 0x42f5;
0xffffffff81e1d012: ret 0x505d;
0xffffffff81e1d16f: ret 0xbd52;
0xffffffff81e1d1a8: ret 0xb33;
0xffffffff81e1d2dc: ret 0xf880;
0xffffffff81e1d381: ret 0x4b02;
0xffffffff81e1d3ff: ret 0xbf1e;
0xffffffff81e1d611: ret 0xf752;
0xffffffff81e1d618: ret 0x429d;
0xffffffff81e1d6f0: adc ah, [rbx]; mov esp, ebp; ret;
0xffffffff81e1d6f2: mov esp, ebp; ret;
0xffffffff81e1d847: xchg esp, eax; mov ebp, 0xb5a8a1; iretd;
0xffffffff81e1d87b: ret 0x96c;
0xffffffff81e1d936: ret 0x1210;
0xffffffff81e1d97d: add esp, ebp; push rcx; mov fs, [rbx]; iretd;
0xffffffff81e1da02: ret 0xb79f;
0xffffffff81e1de4b: ret 0xe4c0;
0xffffffff81e1df92: ret 0x62dc;
0xffffffff81e1e0f0: ret 0x11b4;
0xffffffff81e1e150: pop rsp; mov byte ptr [rdi+0x6a], 0x98; iretd;
0xffffffff81e1e312: ret 0xfd0e;
0xffffffff81e1e3c8: ret 0x3a5;
0xffffffff81e1e59c: ret 0xbbc;
0xffffffff81e1e71a: ret 0xd1d3;
0xffffffff81e1e7a6: ret 0x8a90;
0xffffffff81e1e8b6: ret 0x26a5;
0xffffffff81e1ea3d: ret 0xea1d;
0xffffffff81e1eac5: xchg esp, eax; int1; sar byte ptr [rdx+0x546d3e5c], 0xe8; call far fword ptr [rdi+0x41c3d0a5];
0xffffffff81e1ed36: ret 0xd94e;
0xffffffff81e1ee85: pop rsp; and bh, [rbx-0x62]; out 0xef, eax; xor [rbp-0x6180a0e], ebx; jmp rsi;
0xffffffff81e1f018: ret 0xdd68;
0xffffffff81e1f20b: ret 0x12d2;
0xffffffff81e1f37d: ret 0xfe88;
0xffffffff81e1f420: ret 0xb9dc;
0xffffffff81e1f49c: ret 0x1af6;
0xffffffff81e1f5ca: ret 0x3858;
0xffffffff81e1f638: ret 0x40da;
0xffffffff81e1f7af: ret 0x3a32;
0xffffffff81e1f844: ret 0x81da;
0xffffffff81e1f975: ret 0xf611;
0xffffffff81e1faa4: ret 0xaeac;
0xffffffff81e1ff7c: ret 0xb8e9;
0xffffffff81e1ff92: ret 0x36e1;
0xffffffff81e2003c: ret 0x5628;
0xffffffff81e200ea: ret 0xf331;
0xffffffff81e200eb: ret 0xf331;
0xffffffff81e20155: ret 0xb8dd;
0xffffffff81e2020d: ret 0x686f;
0xffffffff81e20245: ret 0xec0a;
0xffffffff81e20276: ret 0x78a1;
0xffffffff81e20280: ret 0xf267;
0xffffffff81e202ca: xchg esp, eax; sbb cl, [rcx+0x5708604f]; sahf; ret 0x71fe;
0xffffffff81e202d2: ret 0x71fe;
0xffffffff81e20361: ret 0x2ff1;
0xffffffff81e20490: ret 0x7057;
0xffffffff81e204be: ret 0x1fa3;
0xffffffff81e204e2: ret 0xf077;
0xffffffff81e204e3: ret 0xf077;
0xffffffff81e204ee: ret 0x7f0f;
0xffffffff81e2064c: ret 0xb01b;
0xffffffff81e2092c: ret 0x5b1c;
0xffffffff81e20933: ret 0xc8d6;
0xffffffff81e20a04: ret 0xc702;
0xffffffff81e20a0e: ret 0x147a;
0xffffffff81e20ac5: ret 0x9237;
0xffffffff81e20cb5: ret 0x1cf8;
0xffffffff81e20ff9: ret 0xebe1;
0xffffffff81e211cc: ret 0x16a;
0xffffffff81e2121a: xchg esp, eax; movsb [rdi], [rsi]; iretd;
0xffffffff81e21285: ret 0xd79f;
0xffffffff81e212b0: xchg ebx, eax; xchg ebp, eax; xchg esp, eax; mov dh, 0x57; ret 0x5528;
0xffffffff81e212b1: xchg ebp, eax; xchg esp, eax; mov dh, 0x57; ret 0x5528;
0xffffffff81e212b2: xchg esp, eax; mov dh, 0x57; ret 0x5528;
0xffffffff81e212b6: ret 0x5528;
0xffffffff81e213ae: ret 0x5391;
0xffffffff81e216ad: ret 0x2b51;
0xffffffff81e21802: int1; xchg esp, eax; sub [rbx-0x17f185f5], bl; movsd [rdi], [rsi]; iretd;
0xffffffff81e21803: xchg esp, eax; sub [rbx-0x17f185f5], bl; movsd [rdi], [rsi]; iretd;
0xffffffff81e218a6: ret 0xdd72;
0xffffffff81e218cf: ret 0x11ae;
0xffffffff81e21b1f: ret 0xc56f;
0xffffffff81e21cee: ret 0xe1be;
0xffffffff81e21e38: xchg esp, eax; xor [rbx], ebp; ror dword ptr [rsi+0xb6d4d86], cl; mov ebx, 0x7fcb1e6c; and edi, 0x530cf021; iretd;
0xffffffff81e22161: ret 0x69d7;
0xffffffff81e221bf: ret 0xa5ac;
0xffffffff81e22201: ret 0xdfda;
0xffffffff81e22355: ret 0x6dcf;
0xffffffff81e2241f: ret 0x51a5;
0xffffffff81e2242b: ret 0xec19;
0xffffffff81e224ed: ret 0x312c;
0xffffffff81e2269a: ret 0x56c7;
0xffffffff81e22713: ret 0xd875;
0xffffffff81e2278a: ret 0x94f9;
0xffffffff81e228ba: ret 0x66b9;
0xffffffff81e22927: ret 0x6d6c;
0xffffffff81e229f1: ret 0xb4b3;
0xffffffff81e22a85: ret 0xabce;
0xffffffff81e22c1d: ret 0xb16c;
0xffffffff81e22c66: ret 0x2223;
0xffffffff81e22c91: ret 0x27c4;
0xffffffff81e22e29: ret 0x7adf;
0xffffffff81e22eeb: ret 0xb179;
0xffffffff81e22ef6: ret 0xaf;
0xffffffff81e230a0: ret 0x72b5;
0xffffffff81e23170: ret 0xdbf5;
0xffffffff81e23296: mov esi, 0x6fbf912a; mov bl, 0x7a; pop rsp; jmp qword ptr [rdi+0x473f5c1e];
0xffffffff81e23297: sub dl, [rcx+0x7ab36fbf]; pop rsp; jmp qword ptr [rdi+0x473f5c1e];
0xffffffff81e2329a: outsd dx, [rsi]; mov bl, 0x7a; pop rsp; jmp qword ptr [rdi+0x473f5c1e];
0xffffffff81e2329b: mov bl, 0x7a; pop rsp; jmp qword ptr [rdi+0x473f5c1e];
0xffffffff81e2329d: pop rsp; jmp qword ptr [rdi+0x473f5c1e];
0xffffffff81e23373: ret 0x7bdf;
0xffffffff81e234eb: ret 0xaece;
0xffffffff81e236f8: ret 0x7559;
0xffffffff81e2374a: ret 0x7fed;
0xffffffff81e2376b: ret 0x4ef8;
0xffffffff81e23bfa: ret 0x9ede;
0xffffffff81e23c10: ret 0xd8f3;
0xffffffff81e23c5e: ret 0x969;
0xffffffff81e23d81: ret 0xedc6;
0xffffffff81e23ea1: mov esi, 0xb6efde48; sbb dword ptr [rdi], 0x9f837e46; mov ebx, [rbx+0x6c94fc0f]; popfq; xchg esp, eax; iretd;
0xffffffff81e23ea6: sbb dword ptr [rdi], 0x9f837e46; mov ebx, [rbx+0x6c94fc0f]; popfq; xchg esp, eax; iretd;
0xffffffff81e23eaa: sbb dword ptr [rdi-0x3f06475], 0xffffff94; insb [rdi], dx; popfq; xchg esp, eax; iretd;
0xffffffff81e23eab: lahf; mov ebx, [rbx+0x6c94fc0f]; popfq; xchg esp, eax; iretd;
0xffffffff81e23eac: mov ebx, [rbx+0x6c94fc0f]; popfq; xchg esp, eax; iretd;
0xffffffff81e23eaf: cld; xchg esp, eax; insb [rdi], dx; popfq; xchg esp, eax; iretd;
0xffffffff81e23eb0: xchg esp, eax; insb [rdi], dx; popfq; xchg esp, eax; iretd;
0xffffffff81e23eb1: insb [rdi], dx; popfq; xchg esp, eax; iretd;
0xffffffff81e23eb2: popfq; xchg esp, eax; iretd;
0xffffffff81e241a5: ret 0xf006;
0xffffffff81e244e2: ret 0x19f4;
0xffffffff81e24615: ret 0x1ae3;
0xffffffff81e24768: ret 0x163;
0xffffffff81e24910: ret 0x5132;
0xffffffff81e249e6: ret 0x70c3;
0xffffffff81e24c72: ret 0x11d4;
0xffffffff81e24d70: ret 0xe253;
0xffffffff81e24e20: ret 0x3ddd;
0xffffffff81e24f9c: ret 0x8e85;
0xffffffff81e25006: ret 0x7be0;
0xffffffff81e25088: ret 0x7546;
0xffffffff81e2514e: ret 0x497e;
0xffffffff81e25191: ret 0xbb3b;
0xffffffff81e254a5: ret 0xa67b;
0xffffffff81e255c3: ret 0x7103;
0xffffffff81e255d9: xchg esp, eax; mov [rbx], fs; ret 0x4c94;
0xffffffff81e255dc: ret 0x4c94;
0xffffffff81e257fc: ret 0xcfd;
0xffffffff81e258ac: ret 0xf2d7;
0xffffffff81e258ea: ret 0xb18f;
0xffffffff81e25b21: ret 0x3cef;
0xffffffff81e25b7c: ret 0xb6cb;
0xffffffff81e25ba1: ret 0x944f;
0xffffffff81e25bb6: ret 0x299f;
0xffffffff81e25bc6: ret 0xfecb;
0xffffffff81e25bd1: ret 0xfacb;
0xffffffff81e25be6: ret 0xb9cb;
0xffffffff81e25c2c: ret 0x205f;
0xffffffff81e25c32: test eax, 0x2fe12ff2; xchg esp, eax; in eax, 0x5f; ret 0x245f;
0xffffffff81e25c38: xchg esp, eax; in eax, 0x5f; ret 0x245f;
0xffffffff81e25c3b: ret 0x245f;
0xffffffff81e25ca9: ret 0x82a8;
0xffffffff81e25cc1: ret 0x6aa8;
0xffffffff81e25cc9: ret 0x62a8;
0xffffffff81e25d26: ret 0xa8d3;
0xffffffff81e25d73: ret 0xd4d5;
0xffffffff81e25d8e: ret 0xea1e;
0xffffffff81e25ef7: ret 0xf8c1;
0xffffffff81e26029: xchg esp, eax; or eax, 0x607f2221; iretd;
0xffffffff81e26089: ret 0xfbac;
0xffffffff81e26347: ret 0x40b9;
0xffffffff81e2653a: ret 0x7959;
0xffffffff81e26557: out dx, al; pop rsp; sbb [rbx], dh; sbb al, 0x96; test eax, 0x8e5ea0a6; ret 0x89bd;
0xffffffff81e26558: pop rsp; sbb [rbx], dh; sbb al, 0x96; test eax, 0x8e5ea0a6; ret 0x89bd;
0xffffffff81e26562: ret 0x89bd;
0xffffffff81e265d4: out dx, eax; leave; ret;
0xffffffff81e265d5: out dx, eax; leave; ret;
0xffffffff81e265f9: ret 0x9990;
0xffffffff81e26614: ret 0x6b0f;
0xffffffff81e266b3: ret 0xb622;
0xffffffff81e2681e: ret 0x130c;
0xffffffff81e2682c: mov cl, 0x42; mov dh, 0x31; fcomp st, dword ptr [edx]; xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e2682d: mov sil, 0x31; fcomp st, dword ptr [edx]; xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e2682e: mov dh, 0x31; fcomp st, dword ptr [edx]; xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e26830: fcomp st, dword ptr [edx]; xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e26831: fcomp st, dword ptr [rdx]; xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e26833: xchg esp, eax; mov cl, 0xb6; ret;
0xffffffff81e26902: ret 0x861;
0xffffffff81e26ca4: ret 0xc61;
0xffffffff81e26dac: ret 0x5f16;
0xffffffff81e26ed4: ret 0x455d;
0xffffffff81e270b3: ret 0x3c4b;
0xffffffff81e270e3: add ebx, 0x3865033e; xchg esp, eax; ret;
0xffffffff81e270e5: add esp, [rbp+0x38]; xchg esp, eax; ret;
0xffffffff81e270e6: add esp, [rbp+0x38]; xchg esp, eax; ret;
0xffffffff81e2739b: ret 0x8bc2;
0xffffffff81e27453: ret 0x7a1;
0xffffffff81e27548: ret 0x327d;
0xffffffff81e275d1: ret 0x44b6;
0xffffffff81e2764e: ret 0x8095;
0xffffffff81e2767b: ret 0x388b;
0xffffffff81e27698: idiv dword ptr [rax]; pop rsp; enter 0xfb3e, 0x47; mov eax, 0x4fcf9441; ret;
0xffffffff81e2769a: pop rsp; enter 0xfb3e, 0x47; mov eax, 0x4fcf9441; ret;
0xffffffff81e2774e: ret 0x49fe;
0xffffffff81e277db: ret 0xe78b;
0xffffffff81e27817: ret 0x21df;
0xffffffff81e279b4: ret 0x1357;
0xffffffff81e27ed0: ret 0xbc02;
0xffffffff81e27eeb: ret 0x3e73;
0xffffffff81e27fd2: ret 0x6ef9;
0xffffffff81e28035: ret 0x2d8b;
0xffffffff81e28066: ret 0x1f;
0xffffffff81e28067: ret 0x1f;
0xffffffff81e2807b: ret 0x9c82;
0xffffffff81e28108: in eax, 0x3e; mov esp, 0x2c3e4f21; xchg esp, eax; sbb eax, 0x70d9e016; ret;
0xffffffff81e28109: mov esp, 0x2c3e4f21; xchg esp, eax; sbb eax, 0x70d9e016; ret;
0xffffffff81e2810a: mov esp, 0x2c3e4f21; xchg esp, eax; sbb eax, 0x70d9e016; ret;
0xffffffff81e2810f: xchg esp, eax; sbb eax, 0x70d9e016; ret;
0xffffffff81e281e5: or dword ptr [rdi], 0x56; xchg esp, eax; mov ds, [rbx+rdx*2+0x2f69ed9c]; ret 0x79cc;
0xffffffff81e281e7: push rsi; xchg esp, eax; mov ds, [rbx+rdx*2+0x2f69ed9c]; ret 0x79cc;
0xffffffff81e281e8: xchg esp, eax; mov ds, [rbx+rdx*2+0x2f69ed9c]; ret 0x79cc;
0xffffffff81e281f0: ret 0x79cc;
0xffffffff81e2828a: ret 0xce1a;
0xffffffff81e283cf: ret 0xc621;
0xffffffff81e28b97: ret 0xf793;
0xffffffff81e28b98: ret 0xf793;
0xffffffff81e28e31: pop rsp; jmp rsp;
0xffffffff81e28f43: ret 0x41ff;
0xffffffff81e29002: std; xchg ebx, eax; pop qword ptr [rdx+0x14ffe8eb]; fistp dword ptr [rdi], st; pop rsp; jmp r12;
0xffffffff81e29003: xchg ebx, eax; pop qword ptr [rdx+0x14ffe8eb]; fistp dword ptr [rdi], st; pop rsp; jmp r12;
0xffffffff81e29004: pop qword ptr [rdx+0x14ffe8eb]; fistp dword ptr [rdi], st; pop rsp; jmp r12;
0xffffffff81e2900a: fistp dword ptr [rdi], st; pop rsp; jmp r12;
0xffffffff81e2900c: pop rsp; jmp r12;
0xffffffff81e29114: ret 0x7f6;
0xffffffff81e29299: sti; add dword ptr [rdi+0x2a793fd2], 0x38; test esi, edi; leave; adc eax, eax; ret;
0xffffffff81e2929a: add dword ptr [rdi+0x2a793fd2], 0x38; test esi, edi; leave; adc eax, eax; ret;
0xffffffff81e2929f: sub bh, [rax]; test esi, edi; leave; adc eax, eax; ret;
0xffffffff81e292a1: test esi, edi; leave; adc eax, eax; ret;
0xffffffff81e292a3: leave; adc eax, eax; ret;
0xffffffff81e29397: ret 0x5ce3;
0xffffffff81e294ac: ret 0xa753;
0xffffffff81e29670: xchg esp, eax; mov edx, 0x66c1d628; sti; iretd;
0xffffffff81e297ff: ret 0x5ff6;
0xffffffff81e29814: ret 0x1cf3;
0xffffffff81e298f4: pop rsi; sbb bl, [rsi+rbx]; adc esp, esi; outsd dx, [rsi]; ret 0x73b6;
0xffffffff81e298f6: sbb bl, [rsi+rbx]; adc esp, esi; outsd dx, [rsi]; ret 0x73b6;
0xffffffff81e298f7: sbb al, 0x1e; adc esp, esi; outsd dx, [rsi]; ret 0x73b6;
0xffffffff81e298f9: adc esp, esi; outsd dx, [rsi]; ret 0x73b6;
0xffffffff81e298fd: ret 0x73b6;
0xffffffff81e299b8: ret 0x2b1f;
0xffffffff81e29b63: ret 0x3b2;
0xffffffff81e29b69: xchg [rcx+0x30939347], esp; lodsb [rsi]; ret;
0xffffffff81e29be1: ret 0x8208;
0xffffffff81e29c43: ret 0xec0d;
0xffffffff81e29e25: ret 0xb317;
0xffffffff81e29e70: ret 0x3934;
0xffffffff81e29ec8: mov ch, 0x57; xchg r10, rax; xchg esp, eax; in al, dx; test rax, 0xffffffff84c05747; ret 0x16f5;
0xffffffff81e29ec9: push rdi; xchg r10, rax; xchg esp, eax; in al, dx; test rax, 0xffffffff84c05747; ret 0x16f5;
0xffffffff81e29eca: xchg r10, rax; xchg esp, eax; in al, dx; test rax, 0xffffffff84c05747; ret 0x16f5;
0xffffffff81e29ecb: xchg edx, eax; xchg esp, eax; in al, dx; test rax, 0xffffffff84c05747; ret 0x16f5;
0xffffffff81e29ecc: xchg esp, eax; in al, dx; test rax, 0xffffffff84c05747; ret 0x16f5;
0xffffffff81e29ed4: ret 0x16f5;
0xffffffff81e29eff: ret 0xf38d;
0xffffffff81e29f00: ret 0xf38d;
0xffffffff81e29fa8: ret 0xc31b;
0xffffffff81e2a1c9: ret 0xe0b4;
0xffffffff81e2a1d7: ret 0x53d6;
0xffffffff81e2a5b5: ret 0x9864;
0xffffffff81e2a5db: ret 0xe7d6;
0xffffffff81e2a61f: adc esp, edi; iretd;
0xffffffff81e2a902: leave; ret 0x728c;
0xffffffff81e2a903: ret 0x728c;
0xffffffff81e2a9b7: ret 0xa98e;
0xffffffff81e2aa2c: ret 0x5f51;
0xffffffff81e2ab46: sbb esp, esp; ret 0x3280;
0xffffffff81e2ab48: ret 0x3280;
0xffffffff81e2ac48: ret 0x9110;
0xffffffff81e2ac66: ret 0x88ba;
0xffffffff81e2ad25: ret 0x904d;
0xffffffff81e2ad74: mov [0xdad29a35bfe28149], eax; sub [rdi], bh; adc [rdi], ebp; shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad78: mov edi, 0xdad29a35; sub [rdi], bh; adc [rdi], ebp; shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad7b: rcr dl, cl; sub [rdi], bh; adc [rdi], ebp; shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad7d: sub [rdi], bh; adc [rdi], ebp; shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad7f: adc [rdi], ebp; shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad81: shr byte ptr [rdx], cl; mov esp, edi; ret 0xe046;
0xffffffff81e2ad82: sub al, 0xe2; mov esp, edi; ret 0xe046;
0xffffffff81e2ad84: mov esp, edi; ret 0xe046;
0xffffffff81e2ad86: ret 0xe046;
0xffffffff81e2adcb: ret 0x4db2;
0xffffffff81e2adf5: ret 0x2860;
0xffffffff81e2b04a: ret 0x61de;
0xffffffff81e2b19e: ret 0x788c;
0xffffffff81e2b1a0: ret 0x788c;
0xffffffff81e2b30a: ret 0xcee6;
0xffffffff81e2b47e: ret 0xb846;
0xffffffff81e2b5cd: ret 0xd252;
0xffffffff81e2b63b: ret 0xc35;
0xffffffff81e2b6ab: ret 0x4dee;
0xffffffff81e2b71e: ret 0xaef2;
0xffffffff81e2b783: ret 0xb130;
0xffffffff81e2b85e: ret 0x837a;
0xffffffff81e2ba1d: bnd ret 0xc3d1;
0xffffffff81e2ba1e: ret 0xc3d1;
0xffffffff81e2ba33: ret 0xafd3;
0xffffffff81e2bb41: ret 0xf62d;
0xffffffff81e2bd27: ret 0x5c60;
0xffffffff81e2bda0: ret 0x7640;
0xffffffff81e2bdb8: ret 0xc78a;
0xffffffff81e2bec0: test al, 0x45; leave; ret 0x4a9a;
0xffffffff81e2bec3: leave; ret 0x4a9a;
0xffffffff81e2bed5: ret 0x78d3;
0xffffffff81e2bfc3: ret 0x7023;
0xffffffff81e2c26b: ret 0xe8ab;
0xffffffff81e2c324: pop rdi; cld; or al, 0xba; xchg esp, eax; ret 0xf106;
0xffffffff81e2c325: cld; or al, 0xba; xchg esp, eax; ret 0xf106;
0xffffffff81e2c326: or al, 0xba; xchg esp, eax; ret 0xf106;
0xffffffff81e2c328: xchg esp, eax; ret 0xf106;
0xffffffff81e2c329: ret 0xf106;
0xffffffff81e2c3b0: ret 0xdde;
0xffffffff81e2c4d3: ret 0xb24a;
0xffffffff81e2c5c6: ret 0xbff6;
0xffffffff81e2c6b7: ret 0x4873;
0xffffffff81e2c74d: ret 0xea5;
0xffffffff81e2c755: ret 0xfc4e;
0xffffffff81e2c789: ret 0x6636;
0xffffffff81e2c877: ret 0x139e;
0xffffffff81e2c91f: ret 0x9916;
0xffffffff81e2c92c: ret 0x8b3a;
0xffffffff81e2c94f: ret 0xa243;
0xffffffff81e2c962: ret 0x7d1;
0xffffffff81e2ca2d: ret 0x24cc;
0xffffffff81e2caef: ret 0x4ab8;
0xffffffff81e2cb57: ret 0xa33c;
0xffffffff81e2cc7e: ret 0x3444;
0xffffffff81e2cccd: ret 0xd1dd;
0xffffffff81e2cd57: ret 0xd87a;
0xffffffff81e2cddb: ret 0x89d;
0xffffffff81e2cf00: ret 0xb977;
0xffffffff81e2cf7c: ret 0x95ab;
0xffffffff81e2cfe5: ret 0x3696;
0xffffffff81e2d104: ret 0xfe47;
0xffffffff81e2d23e: ret 0x3b73;
0xffffffff81e2d288: ret 0x12a4;
0xffffffff81e2d30c: ret 0x8705;
0xffffffff81e2d36e: ret 0x22a9;
0xffffffff81e2d377: ret 0xd1c2;
0xffffffff81e2d378: ret 0x30d1;
0xffffffff81e2d39e: ret 0x76f0;
0xffffffff81e2d3bc: ret 0x9fa6;
0xffffffff81e2d3bd: ret 0x9fa6;
0xffffffff81e2d3c9: ret 0x6daf;
0xffffffff81e2d4d4: ret 0x89d3;
0xffffffff81e2d51b: ret 0xfd3a;
0xffffffff81e2d609: ret 0xc0f7;
0xffffffff81e2d617: ret 0xeb4f;
0xffffffff81e2d61c: ret 0xb4d8;
0xffffffff81e2d823: ret 0x511c;
0xffffffff81e2d9d3: ret 0x146a;
0xffffffff81e2da38: ret 0x5efd;
0xffffffff81e2db4b: ret 0x944a;
0xffffffff81e2dcb2: ret 0x97d0;
0xffffffff81e2dced: ret 0xed72;
0xffffffff81e2dd09: ret 0x8ea6;
0xffffffff81e2de7c: ret 0x9fef;
0xffffffff81e2dfa2: ret 0x83fa;
0xffffffff81e2e049: ret 0xe552;
0xffffffff81e2e0fa: ret 0x7131;
0xffffffff81e2e2f5: ret 0x3216;
0xffffffff81e2e31b: ret 0xf862;
0xffffffff81e2e416: shr byte ptr [rsi], cl; pop rsp; ret;
0xffffffff81e2e417: pop rsp; ret;
0xffffffff81e2e615: ret 0xb9e4;
0xffffffff81e2e704: ret 0xa4cf;
0xffffffff81e2e7f5: ret 0xdf34;
0xffffffff81e2e9f6: data16 ret 0xa1b4;
0xffffffff81e2e9f7: ret 0xa1b4;
0xffffffff81e2eaba: ret 0x5fd0;
0xffffffff81e2eb6c: data16 ret 0xbc2e;
0xffffffff81e2eb6d: ret 0xbc2e;
0xffffffff81e2ed48: ret 0x494;
0xffffffff81e2ee4f: ret 0xb6d6;
0xffffffff81e2ee67: ret 0x93f9;
0xffffffff81e2f0e3: ret 0x9e17;
0xffffffff81e2f1df: ret 0x5e1f;
0xffffffff81e2f24e: ret 0xd9a6;
0xffffffff81e2f2d9: ret 0x7f0a;
0xffffffff81e2f3f4: ret 0xf96f;
0xffffffff81e2f581: ret 0x4526;
0xffffffff81e2f650: in al, dx; leave; iretd;
0xffffffff81e2f66e: ret 0xfba1;
0xffffffff81e2f67d: ret 0x31d9;
0xffffffff81e2f69a: ret 0x68c6;
0xffffffff81e2f6f4: ret 0xbe3c;
0xffffffff81e2f8f1: ret 0xa435;
0xffffffff81e2fa26: ret 0x8741;
0xffffffff81e2fb22: ret 0xd006;
0xffffffff81e2fbb4: ret 0xdea6;
0xffffffff81e2fc6e: ret 0x7db1;
0xffffffff81e2fcd1: ret 0x215b;
0xffffffff81e2fd3c: ret 0xc5e6;
0xffffffff81e2ff07: ret 0xfaec;
0xffffffff81e2ff21: ret 0x6d62;
0xffffffff81e2ff81: ret 0x372a;
0xffffffff81e30038: ret 0x3765;
0xffffffff81e3007e: ret 0x50f1;
0xffffffff81e30094: ret 0xf7ab;
0xffffffff81e30163: ret 0x8361;
0xffffffff81e301b0: ret 0x5933;
0xffffffff81e3026b: ret 0x4603;
0xffffffff81e30286: ret 0xaf04;
0xffffffff81e30414: ret 0x8336;
0xffffffff81e3083c: ret 0x5bf7;
0xffffffff81e30c63: ret 0x376c;
0xffffffff81e30cbf: ret 0x819f;
0xffffffff81e30d00: ret 0x2b73;
0xffffffff81e30d2d: ret 0xd418;
0xffffffff81e30d99: ret 0x517b;
0xffffffff81e30dc7: ret 0x54b1;
0xffffffff81e3103c: ret 0xd7fa;
0xffffffff81e31224: ret 0x4997;
0xffffffff81e312ba: ret 0x8879;
0xffffffff81e31408: ret 0xe777;
0xffffffff81e31424: ret 0xe502;
0xffffffff81e31435: ret 0x3ff8;
0xffffffff81e31468: ret 0xc3f;
0xffffffff81e314ba: ret 0xe421;
0xffffffff81e31730: xchg esp, eax; or [rax-0x4d], dh; sbb ecx, ecx; test [rdi], dh; cmc; iretd;
0xffffffff81e31733: mov bl, 0x1b; leave; test [rdi], dh; cmc; iretd;
0xffffffff81e31735: leave; test [rdi], dh; cmc; iretd;
0xffffffff81e31798: ret 0x1a6a;
0xffffffff81e31a32: ret 0xb9e9;
0xffffffff81e31b3f: ret 0x479f;
0xffffffff81e31d20: pop rsp; sub dl, [rip-0x234ad1ef]; imul ebx, edi, 0xd93ff2e; ret 0xe838;
0xffffffff81e31d2e: ret 0xe838;
0xffffffff81e31fe4: ret 0xbe2c;
0xffffffff81e32080: ret 0xcf7;
0xffffffff81e3217e: ret 0x960b;
0xffffffff81e3219e: ret 0x5a96;
0xffffffff81e3226a: ret 0xb685;
0xffffffff81e3238b: ret 0x7863;
0xffffffff81e3238c: movsxd edi, [rax-9]; pop rsi; pushfq; mov edx, [rcx-0x1f64c750]; leave; jmp rsi;
0xffffffff81e3238e: neg dword ptr [rsi-0x64]; mov edx, [rcx-0x1f64c750]; leave; jmp rsi;
0xffffffff81e3238f: pop rsi; pushfq; mov edx, [rcx-0x1f64c750]; leave; jmp rsi;
0xffffffff81e32390: pushfq; mov edx, [rcx-0x1f64c750]; leave; jmp rsi;
0xffffffff81e32391: mov edx, [rcx-0x1f64c750]; leave; jmp rsi;
0xffffffff81e32397: leave; jmp rsi;
0xffffffff81e32602: ret 0x977a;
0xffffffff81e327d0: sub esp, esi; and eax, 0x5875a1b0; iretd;
0xffffffff81e3281a: xchg esp, esi; mov eax, [0xc7eff106d4228439]; mov r9, 0xfa4d266eea0ee9f4; add al, 0x7a; pop rsi; iretq;
0xffffffff81e3298b: ret 0x7814;
0xffffffff81e32b7f: ret 0x6985;
0xffffffff81e32f23: pop rsp; push rsi; push rdx; in eax, dx; iretd;
0xffffffff81e3307f: ret 0x7dfa;
0xffffffff81e33145: ret 0xcd48;
0xffffffff81e332a8: ret 0x1ffa;
0xffffffff81e336b6: ret 0xfb81;
0xffffffff81e3377d: ret 0xa9fa;
0xffffffff81e337dc: ret 0x47d3;
0xffffffff81e3385c: ret 0x73fa;
0xffffffff81e33a42: xchg esp, ebp; iretd;
0xffffffff81e33b8d: ret 0x2cd3;
0xffffffff81e33b9f: ret 0x8012;
0xffffffff81e33bc0: ret 0xb7f6;
0xffffffff81e33bd7: ret 0xc094;
0xffffffff81e33ca3: ret 0xa6fb;
0xffffffff81e33ca5: ret 0xa6fb;
0xffffffff81e33dd5: ret 0xe5ab;
0xffffffff81e33e4e: ret 0xc968;
0xffffffff81e33f1a: ret 0x5c6a;
0xffffffff81e33fe2: xchg ebx, esp; ret;
0xffffffff81e33fef: ret 0x264f;
0xffffffff81e34037: ret 0x8965;
0xffffffff81e340d2: ret 0x5dac;
0xffffffff81e341ce: ret 0xeb95;
0xffffffff81e34247: ret 0xd35c;
0xffffffff81e3456e: ret 0xb7a9;
0xffffffff81e34593: ret 0xfac1;
0xffffffff81e3464c: ret 0xaed9;
0xffffffff81e346dd: ret 0x61b2;
0xffffffff81e34788: ret 0x8273;
0xffffffff81e3482b: ret 0x952b;
0xffffffff81e348e9: ret 0xe2ed;
0xffffffff81e34b31: ret 0x6945;
0xffffffff81e34b78: ret 0xf82;
0xffffffff81e34e3b: ret 0x58bc;
0xffffffff81e34e51: ret 0xeec7;
0xffffffff81e34f7c: ret 0x7e97;
0xffffffff81e34fc8: ret 0xc800;
0xffffffff81e353c0: ret 0x40de;
0xffffffff81e35426: ret 0xd20f;
0xffffffff81e3543c: ret 0x28b1;
0xffffffff81e3543d: ret 0x28b1;
0xffffffff81e354ea: ret 0x5efc;
0xffffffff81e35549: ret 0x8d5f;
0xffffffff81e355ae: ret 0xbd94;
0xffffffff81e35650: ret 0x6a0a;
0xffffffff81e35681: ret 0xbe32;
0xffffffff81e35db7: ret 0x9cdd;
0xffffffff81e35e42: pop rsp; fist word ptr [rdx], st; cmp al, 0xc7; add dl, dl; imul ecx, [rdi-0x19], 0x2a0a83e9; ret;
0xffffffff81e361ba: ret 0x50a6;
0xffffffff81e3624c: ret 0x5e8a;
0xffffffff81e36358: ret 0xa564;
0xffffffff81e36871: ret 0x8422;
0xffffffff81e36989: ret 0x547;
0xffffffff81e36a06: ret 0x1109;
0xffffffff81e36ac6: ret 0x27ce;
0xffffffff81e36b1c: xchg esp, eax; ret 0x72e;
0xffffffff81e36b1d: ret 0x72e;
0xffffffff81e36c73: ret 0x5b03;
0xffffffff81e36ca3: ret 0x60f8;
0xffffffff81e36ca4: ret 0x60f8;
0xffffffff81e36d3f: cli; xchg esp, eax; rol byte ptr [rax], 1; ret 0xe24c;
0xffffffff81e36d40: xchg esp, eax; rol byte ptr [rax], 1; ret 0xe24c;
0xffffffff81e36d43: ret 0xe24c;
0xffffffff81e36f00: leave; out dx, al; cmc; or byte ptr [rdi+rbx], 0xa9; iretd;
0xffffffff81e3708d: ret 0xf53b;
0xffffffff81e370f1: ret 0xb371;
0xffffffff81e37120: ret 0x466d;
0xffffffff81e37173: insb [rdi], dx; pop rsp; iretd;
0xffffffff81e37174: pop rsp; iretd;
0xffffffff81e3723e: ret 0x768e;
0xffffffff81e37309: and dl, bl; fwait; cmp [rbx-0x759fc88f], edi; out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e3730a: fimul st, dword ptr [rdx-0x65]; cmp [rbx-0x759fc88f], edi; out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e3730c: fwait; cmp [rbx-0x759fc88f], edi; out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e3730d: cmp [rbx-0x759fc88f], edi; out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e3730e: mov ebx, 0x8a603771; out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e37313: out 0x60, eax; xchg esp, eax; ret 0xe3bc;
0xffffffff81e37315: xchg esp, eax; ret 0xe3bc;
0xffffffff81e37317: ret 0xe3bc;
0xffffffff81e373a4: ret 0x4de5;
0xffffffff81e3742f: ret 0x2fd6;
0xffffffff81e374bd: ret 0x12f4;
0xffffffff81e37504: ret 0xbb7d;
0xffffffff81e3757d: ret 0x774e;
0xffffffff81e375a5: ret 0xf726;
0xffffffff81e3772a: ret 0xb2c3;
0xffffffff81e3772b: ret 0xb2c3;
0xffffffff81e37833: ret 0xdddb;
0xffffffff81e378ae: ret 0xf64d;
0xffffffff81e37a61: ret 0x6c63;
0xffffffff81e37ba3: push 0x29; pop rsp; xor [rcx+rsi*8], eax; iretd;
0xffffffff81e37ba5: pop rsp; xor [rcx+rsi*8], eax; iretd;
0xffffffff81e37c3a: ret 0xbeae;
0xffffffff81e37e28: ret 0x61fd;
0xffffffff81e37f68: ret 0xa1b5;
0xffffffff81e3800c: ret 0xbde2;
0xffffffff81e38075: or rbp, rdi; mov bh, [rbx-0x6178bac0]; stc; xchg esp, eax; std; ret;
0xffffffff81e38076: or ebp, edi; mov bh, [rbx-0x6178bac0]; stc; xchg esp, eax; std; ret;
0xffffffff81e38077: std; mov bh, [rbx-0x6178bac0]; stc; xchg esp, eax; std; ret;
0xffffffff81e38078: mov bh, [rbx-0x6178bac0]; stc; xchg esp, eax; std; ret;
0xffffffff81e38079: mov ebx, 0x9e874540; stc; xchg esp, eax; std; ret;
0xffffffff81e3807d: sahf; stc; xchg esp, eax; std; ret;
0xffffffff81e3807e: stc; xchg esp, eax; std; ret;
0xffffffff81e3807f: xchg esp, eax; std; ret;
0xffffffff81e3832a: ret 0x62e3;
0xffffffff81e3858c: ret 0x12a3;
0xffffffff81e385da: ret 0x6ffb;
0xffffffff81e386ac: ret 0x893d;
0xffffffff81e387ab: ret 0x87c7;
0xffffffff81e38895: ret 0x1038;
0xffffffff81e388f7: ret 0x6ae1;
0xffffffff81e38aa9: ret 0xff15;
0xffffffff81e38bab: ret 0x5e59;
0xffffffff81e38c2f: ret 0xa252;
0xffffffff81e39063: adc dh, ah; push rbp; or edx, edi; xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e39064: out 0x55, al; or edx, edi; xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e39065: push rbp; or edx, edi; xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e39066: or edx, edi; xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e39067: xlat [rbx]; xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e39068: xchg esp, eax; and ebx, [rbp-0x32223646]; iretd;
0xffffffff81e3906c: leave; fxch st, st(5); iretd;
0xffffffff81e3907c: ret 0xf7e1;
0xffffffff81e390d3: ret 0x7175;
0xffffffff81e392bc: bnd ret 0xe699;
0xffffffff81e392bd: ret 0xe699;
0xffffffff81e393e0: ret 0x5646;
0xffffffff81e395f7: ret 0xb969;
0xffffffff81e39787: ret 0x3d68;
0xffffffff81e3999a: ret 0xa25e;
0xffffffff81e39a52: ret 0x1f95;
0xffffffff81e39acf: ret 0x64c0;
0xffffffff81e39b4d: ret 0x91f7;
0xffffffff81e39b7d: ret 0x7a5c;
0xffffffff81e39bc1: ret 0xd97b;
0xffffffff81e39d05: ret 0xbbb9;
0xffffffff81e39d06: mov ecx, 0x264b27bb; enter 0x9423, 0xb4; leave; xor [rsi-0x28], dh; cmove esi, [rax-0x6bc9db31]; ret;
0xffffffff81e39d0a: enter 0x9423, 0xb4; leave; xor [rsi-0x28], dh; cmove esi, [rax-0x6bc9db31]; ret;
0xffffffff81e39d0b: enter 0x9423, 0xb4; leave; xor [rsi-0x28], dh; cmove esi, [rax-0x6bc9db31]; ret;
0xffffffff81e39d0d: xchg esp, eax; mov ah, 0xc9; xor [rsi-0x28], dh; cmove esi, [rax-0x6bc9db31]; ret;
0xffffffff81e39d0f: leave; xor [rsi-0x28], dh; cmove esi, [rax-0x6bc9db31]; ret;
0xffffffff81e39d12: fmul st, dword ptr [rdi]; mov al, 0xcf; and al, 0x36; xchg esp, eax; ret;
0xffffffff81e39d15: mov al, 0xcf; and al, 0x36; xchg esp, eax; ret;
0xffffffff81e39d17: and al, 0x36; xchg esp, eax; ret;
0xffffffff81e39d18: xchg esp, eax; ret;
0xffffffff81e39def: ret 0xd55d;
0xffffffff81e39eaf: ret 0x19e4;
0xffffffff81e39fa1: ret 0x128a;
0xffffffff81e3a01a: ret 0xe7ff;
0xffffffff81e3a135: ret 0x9ac2;
0xffffffff81e3a136: ret 0x329a;
0xffffffff81e3a151: ret 0x3326;
0xffffffff81e3a3e5: ret 0xfb93;
0xffffffff81e3a890: ret 0xb85d;
0xffffffff81e3a93b: ret 0x6ae4;
0xffffffff81e3aa35: ret 0xfc6c;
0xffffffff81e3ab70: ret 0x6152;
0xffffffff81e3acd5: ret 0x47f3;
0xffffffff81e3ad78: ret 0x6891;
0xffffffff81e3af12: ret 0x8308;
0xffffffff81e3b025: ret 0xe521;
0xffffffff81e3b08d: xchg esp, eax; cmp sp, si; test dl, 0x37; sub edi, edi; mov ecx, 0xa2bda535; iretd;
0xffffffff81e3b36c: ret 0xfc1b;
0xffffffff81e3b42a: ret 0x2bb8;
0xffffffff81e3b4ce: add esp, ebp; push rbp; mov esi, 0xeaa9265a; out dx, eax; or eax, 0xcd0ca296; ret 0x15c6;
0xffffffff81e3b4dd: ret 0x15c6;
0xffffffff81e3b5f8: ret 0x7bc2;
0xffffffff81e3b5f9: ret 0xed7b;
0xffffffff81e3b682: ret 0x7d18;
0xffffffff81e3b732: ret 0xf05e;
0xffffffff81e3b7e3: pop rsp; sbb bh, [rdx]; adc eax, 0xa59938e0; xchg ebp, eax; ret;
0xffffffff81e3ba50: ret 0x9e09;
0xffffffff81e3ba70: ret 0x7176;
0xffffffff81e3baf4: ret 0x1a30;
0xffffffff81e3bb2f: ret 0x32e0;
0xffffffff81e3bc7d: ret 0xe57a;
0xffffffff81e3bdde: pop rsp; and dl, bh; lodsb [rsi]; mov eax, 0x38ac7c1c; iretd;
0xffffffff81e3be8a: ret 0x3bc0;
0xffffffff81e3c033: ret 0x1248;
0xffffffff81e3c038: ret 0x342;
0xffffffff81e3c066: ret 0xf5b1;
0xffffffff81e3c194: ret 0xb916;
0xffffffff81e3c325: ret 0x9901;
0xffffffff81e3c38b: ret 0xf5b4;
0xffffffff81e3c414: ret 0x9eb7;
0xffffffff81e3c525: ret 0xe151;
0xffffffff81e3c61e: ret 0x1b5d;
0xffffffff81e3c774: ret 0xd9b1;
0xffffffff81e3c9e3: ret 0xa7e6;
0xffffffff81e3ca70: ret 0x169a;
0xffffffff81e3ccb3: ret 0x2262;
0xffffffff81e3cce0: ret 0x2ee7;
0xffffffff81e3ce06: or bpl, [rdi+0x6585167]; movsxd esi, [rdx-0x7e8512ed]; cmp eax, 0xd0b50e97; leave; ret;
0xffffffff81e3ce07: or ch, [rdi+0x6585167]; movsxd esi, [rdx-0x7e8512ed]; cmp eax, 0xd0b50e97; leave; ret;
0xffffffff81e3ce0d: movsxd esi, [rdx-0x7e8512ed]; cmp eax, 0xd0b50e97; leave; ret;
0xffffffff81e3ce13: cmp eax, 0xd0b50e97; leave; ret;
0xffffffff81e3ce16: mov ch, 0xd0; leave; ret;
0xffffffff81e3ceaa: ret 0x6a7;
0xffffffff81e3cf3b: ret 0x50d6;
0xffffffff81e3cf5d: ret 0x5804;
0xffffffff81e3cfd4: ret 0x4e56;
0xffffffff81e3cff2: ret 0x18f7;
0xffffffff81e3d1c5: ret 0xba24;
0xffffffff81e3d25a: ret 0xd83a;
0xffffffff81e3d2ee: ret 0x60b5;
0xffffffff81e3d329: xchg ecx, eax; mov al, [0xf5becb21eaeb5375]; xchg esp, eax; ret 0x4d61;
0xffffffff81e3d32a: mov al, [0xf5becb21eaeb5375]; xchg esp, eax; ret 0x4d61;
0xffffffff81e3d32b: mov al, [0xf5becb21eaeb5375]; xchg esp, eax; ret 0x4d61;
0xffffffff81e3d333: cmc; xchg esp, eax; ret 0x4d61;
0xffffffff81e3d334: xchg esp, eax; ret 0x4d61;
0xffffffff81e3d335: ret 0x4d61;
0xffffffff81e3d39a: ret 0x6df6;
0xffffffff81e3d3f4: push rcx; add dh, [rdi+0x513a9acb]; and [rip-0x47e5c0a9], r14; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3f5: add dh, [rdi+0x513a9acb]; and [rip-0x47e5c0a9], r14; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3f9: cmp dl, [rcx+0x4d]; and [rip-0x47e5c0a9], esi; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3fa: push rcx; and [rip-0x47e5c0a9], r14; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3fb: and [rip-0x47e5c0a9], r14; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3fc: and [rip-0x47e5c0a9], esi; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d3fd: xor eax, 0xb81a3f57; pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d403: pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d404: pop rsp; cmp [rcx-0x68], cl; iretd;
0xffffffff81e3d462: ret 0x390a;
0xffffffff81e3d4a3: ret 0xc539;
0xffffffff81e3d5ca: ret 0x171d;
0xffffffff81e3d5f1: ret 0x2680;
0xffffffff81e3d681: ret 0xfc51;
0xffffffff81e3d89f: ret 0xe62;
0xffffffff81e3d9d1: ret 0xbb06;
0xffffffff81e3d9f1: ret 0xc588;
0xffffffff81e3dadb: ret 0x7083;
0xffffffff81e3dbd2: ret 0x58ae;
0xffffffff81e3dca1: push rcx; xchg esp, eax; rol dword ptr [rcx-0x3c], 1; pop rdi; mov eax, [0x2ebf3ea0f503ddd9]; iretd;
0xffffffff81e3dca2: xchg esp, eax; rol dword ptr [rcx-0x3c], 1; pop rdi; mov eax, [0x2ebf3ea0f503ddd9]; iretd;
0xffffffff81e3de52: ret 0x6a2c;
0xffffffff81e3de7a: ret 0x6f61;
0xffffffff81e3deb0: ret 0x5fe1;
0xffffffff81e3dec7: ret 0x92b1;
0xffffffff81e3dee1: ret 0xf66c;
0xffffffff81e3dfd9: ret 0x3625;
0xffffffff81e3e0f1: ret 0x3e29;
0xffffffff81e3e199: ret 0xb1c9;
0xffffffff81e3e418: ret 0xd7cc;
0xffffffff81e3e58b: ret 0x58ab;
0xffffffff81e3e62c: out 0x4b, eax; leave; sbb eax, 0xcd6acbce; push rax; fbld st, tbyte ptr [r9+0x6b]; iretd;
0xffffffff81e3e62e: leave; sbb eax, 0xcd6acbce; push rax; fbld st, tbyte ptr [r9+0x6b]; iretd;
0xffffffff81e3e73a: ret 0x8aee;
0xffffffff81e3e8f1: ret 0x70b4;
0xffffffff81e3e90b: ret 0x4b6e;
0xffffffff81e3e9d4: ret 0x5525;
0xffffffff81e3ea5c: ret 0xaf78;
0xffffffff81e3eb7a: ret 0xe70a;
0xffffffff81e3eca0: ret 0x72e1;
0xffffffff81e3ed7e: ret 0x1004;
0xffffffff81e3ee31: ret 0x20f7;
0xffffffff81e3ef73: ret 0xd0c4;
0xffffffff81e3f046: sbb eax, 0xfac60e60; adc [rax+rbx*4], ecx; adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f04a: cli; adc [rax+rbx*4], ecx; adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f04b: adc [rax+rbx*4], ecx; adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f04c: or al, 0x98; adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f04d: cwde; adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f04e: adc dh, dl; pop rsp; cmp cl, cl; ret;
0xffffffff81e3f050: pop rsp; cmp cl, cl; ret;
0xffffffff81e3f131: ret 0xe2ae;
0xffffffff81e3f209: ret 0xd93b;
0xffffffff81e3f3ce: ret 0xc701;
0xffffffff81e3f3f8: ret 0x7cdd;
0xffffffff81e3f408: pushfq; xchg esp, eax; add ebp, [rsi+0x7a725074]; pop rdx; or eax, 0x3a50ca2d; ret 0xa251;
0xffffffff81e3f409: xchg esp, eax; add ebp, [rsi+0x7a725074]; pop rdx; or eax, 0x3a50ca2d; ret 0xa251;
0xffffffff81e3f416: ret 0xa251;
0xffffffff81e3f51e: ret 0x89a8;
0xffffffff81e3f55e: ret 0x5e06;
0xffffffff81e3f61d: ret 0xf435;
0xffffffff81e3f690: pop rsp; out dx, eax; push rcx; clc; ret;
0xffffffff81e3f6a1: ret 0x758f;
0xffffffff81e3f7a9: xor eax, 0x24b9c760; mov ch, 0x74; pop rsp; or al, 2; ret;
0xffffffff81e3f7ae: mov ch, 0x74; pop rsp; or al, 2; ret;
0xffffffff81e3f7b0: pop rsp; or al, 2; ret;
0xffffffff81e3fab1: ret 0x9d4e;
0xffffffff81e3fc23: ret 0x75f5;
0xffffffff81e3fc60: ret 0xb9a;
0xffffffff81e3fc68: ret 0xd0f;
0xffffffff81e3fcf1: ret 0xf17f;
0xffffffff81e3fd4e: leave; scasd [rdi]; ret;
0xffffffff81e3fd68: ret 0x4e51;
0xffffffff81e3fd77: xchg esp, eax; adc ch, cl; pop rdx; ret;
0xffffffff81e40054: ret 0x7ad7;
0xffffffff81e400eb: ret 0x5cb0;
0xffffffff81e40340: ret 0x9131;
0xffffffff81e40343: ret 0x1cb2;
0xffffffff81e4074e: ret 0xe372;
0xffffffff81e40779: ret 0xf796;
0xffffffff81e4078b: hlt; lea edx, [rbx]; xchg esp, eax; cmp [rcx-0x28cacf9], cl; iretd;
0xffffffff81e4078c: lea edx, [rbx]; xchg esp, eax; cmp [rcx-0x28cacf9], cl; iretd;
0xffffffff81e4078e: xchg esp, eax; cmp [rcx-0x28cacf9], cl; iretd;
0xffffffff81e407c3: ret 0xa716;
0xffffffff81e4087c: ret 0xaaff;
0xffffffff81e408c1: ret 0x3ed7;
0xffffffff81e40ac2: xchg esp, ebx; mov bh, 0x1e; or dh, al; ret;
0xffffffff81e40b26: ret 0x1e1b;
0xffffffff81e40c89: ret 0x6252;
0xffffffff81e40cb4: ret 0x16c6;
0xffffffff81e40d45: ret 0x44d6;
0xffffffff81e40ddc: ret 0x69e9;
0xffffffff81e40e06: ret 0x457a;
0xffffffff81e40f62: imul edi, [rcx+0x80f2f78], 0xd2b9a5ce; sar ah, 1; xchg esp, eax; cli; mov [0x695d52e9c5aabd6], rax; call rdx;
0xffffffff81e40f6b: rcl al, cl; cld; xchg esp, eax; cli; mov [0x695d52e9c5aabd6], rax; call rdx;
0xffffffff81e40f6c: sar ah, 1; xchg esp, eax; cli; mov [0x695d52e9c5aabd6], rax; call rdx;
0xffffffff81e40f6d: cld; xchg esp, eax; cli; mov [0x695d52e9c5aabd6], rax; call rdx;
0xffffffff81e40f6e: xchg esp, eax; cli; mov [0x695d52e9c5aabd6], rax; call rdx;
0xffffffff81e41000: ret 0xbf94;
0xffffffff81e41093: ret 0xa06b;
0xffffffff81e4110d: ret 0xb78d;
0xffffffff81e4111b: ret 0x8a09;
0xffffffff81e412d5: cmp al, 0x54; pop rdi; mov ebx, 0x9ba917a6; xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412d6: push rsp; pop rdi; mov ebx, 0x9ba917a6; xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412d7: pop rdi; mov ebx, 0x9ba917a6; xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412d8: mov ebx, 0x9ba917a6; xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412dc: fwait; xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412de: xchg esp, eax; mov eax, 0x22ff9a6; ret 0x7755;
0xffffffff81e412e4: ret 0x7755;
0xffffffff81e414aa: ret 0xfa76;
0xffffffff81e41517: ret 0x14d9;
0xffffffff81e41583: ret 0x6834;
0xffffffff81e4173b: ret 0x7669;
0xffffffff81e41751: data16 ret 0xcd51;
0xffffffff81e41752: ret 0xcd51;
0xffffffff81e41882: ret 0x1246;
0xffffffff81e41971: ret 0xf52c;
0xffffffff81e41a7a: ret 0xaed5;
0xffffffff81e41b34: ret 0x3829;
0xffffffff81e41d4a: ret 0x1f72;
0xffffffff81e41dcc: ret 0xa365;
0xffffffff81e41e18: ret 0xa09b;
0xffffffff81e41e49: ret 0x2efd;
0xffffffff81e41fa2: ret 0xca4d;
0xffffffff81e4216c: ret 0x246;
0xffffffff81e42198: ret 0xb502;
0xffffffff81e421f3: ret 0x866f;
0xffffffff81e4221f: ret 0xc14e;
0xffffffff81e422c4: ret 0xf2ae;
0xffffffff81e42428: add eax, 0x3a457734; stosb [rdi]; push rsp; mov edx, 0xbae94dfc; pop rsp; ret;
0xffffffff81e4242d: stosb [rdi]; push rsp; mov edx, 0xbae94dfc; pop rsp; ret;
0xffffffff81e4242e: push rsp; mov edx, 0xbae94dfc; pop rsp; ret;
0xffffffff81e4242f: mov edx, 0xbae94dfc; pop rsp; ret;
0xffffffff81e42696: ret 0x9986;
0xffffffff81e428df: ret 0xb3b5;
0xffffffff81e4295e: ret 0x1048;
0xffffffff81e42a40: ret 0x383e;
0xffffffff81e42b0c: ret 0x282e;
0xffffffff81e42b70: pop rsp; ret 0xa492;
0xffffffff81e42b71: ret 0xa492;
0xffffffff81e42dcc: ret 0xa982;
0xffffffff81e42f93: ret 0xee79;
0xffffffff81e42f9c: ret 0x387c;
0xffffffff81e43039: ret 0x96ef;
0xffffffff81e43118: sbb dl, dh; pop rsp; iretd;
0xffffffff81e4317b: ret 0x718a;
0xffffffff81e4319b: ret 0x8418;
0xffffffff81e4325b: ret 0xa750;
0xffffffff81e4328d: ret 0x752e;
0xffffffff81e4333b: ret 0x26d8;
0xffffffff81e43370: ret 0xe15b;
0xffffffff81e43559: ret 0x4942;
0xffffffff81e43760: ret 0x8340;
0xffffffff81e4377c: ret 0xdd33;
0xffffffff81e4378d: bnd ret 0x734;
0xffffffff81e4378e: ret 0x734;
0xffffffff81e437e9: sbb esp, esi; ret 0x8d73;
0xffffffff81e437eb: ret 0x8d73;
0xffffffff81e438d1: ret 0x2c76;
0xffffffff81e439cb: ret 0x786a;
0xffffffff81e43a6a: ret 0x79c6;
0xffffffff81e43c04: ret 0xa2a6;
0xffffffff81e43ca6: ret 0x3b41;
0xffffffff81e43d4c: ret 0x949b;
0xffffffff81e43f79: leave; ret 0xe95d;
0xffffffff81e43f7a: ret 0xe95d;
0xffffffff81e44064: ret 0x8645;
0xffffffff81e44132: ret 0x26fc;
0xffffffff81e4415f: ret 0x5c1d;
0xffffffff81e4434b: ret 0x8c2;
0xffffffff81e4434c: ret 0xc908;
0xffffffff81e4438c: ret 0x3896;
0xffffffff81e44422: ret 0x367d;
0xffffffff81e4447b: ret 0xba78;
0xffffffff81e444ed: ret 0x6570;
0xffffffff81e44585: ret 0xc3a2;
0xffffffff81e4459f: ret 0x3899;
0xffffffff81e447e2: ret 0x99b2;
0xffffffff81e4486d: ret 0xf7ef;
0xffffffff81e448c3: ret 0xf7ad;
0xffffffff81e44913: ret 0x6bb8;
0xffffffff81e4491b: ret 0x781e;
0xffffffff81e44aa0: ret 0xf26;
0xffffffff81e44d07: ret 0x8936;
0xffffffff81e44dc1: ret 0xb024;
0xffffffff81e44e1a: ret 0x3e85;
0xffffffff81e45284: ret 0xaad6;
0xffffffff81e45469: ret 0xe76e;
0xffffffff81e45491: data16 ret 0x24c1;
0xffffffff81e45492: ret 0x24c1;
0xffffffff81e45637: ret 0x3efa;
0xffffffff81e4572f: ret 0x8a82;
0xffffffff81e45735: xchg esp, eax; pop rdx; jmp far fword ptr [rsi+rcx];
0xffffffff81e45805: ret 0x7d81;
0xffffffff81e45aba: ret 0x1eb7;
0xffffffff81e45bd6: ret 0xa156;
0xffffffff81e45d32: ret 0xc013;
0xffffffff81e45d9c: ret 0x6667;
0xffffffff81e45e9c: ret 0x1cf1;
0xffffffff81e45f3b: ret 0xa04a;
0xffffffff81e46049: ret 0x8454;
0xffffffff81e46212: ret 0xb92d;
0xffffffff81e46382: ret 0x6c0;
0xffffffff81e463b9: ret 0x407c;
0xffffffff81e463bd: ret 0x3eea;
0xffffffff81e463bf: ret 0x3eea;
0xffffffff81e4645c: ret 0x7540;
0xffffffff81e4647f: ret 0xe936;
0xffffffff81e464d9: ret 0x7d97;
0xffffffff81e464e3: ret 0x7f0e;
0xffffffff81e4655a: adc eax, 0x47dd9876; mov [rsp+rbp*8-0x71], al; xchg esp, eax; ret 0x3c31;
0xffffffff81e4655e: mov [r12+r13*8-0x71], r8b; xchg esp, eax; ret 0x3c31;
0xffffffff81e4655f: mov [rsp+rbp*8-0x71], al; xchg esp, eax; ret 0x3c31;
0xffffffff81e46563: xchg esp, eax; ret 0x3c31;
0xffffffff81e46564: ret 0x3c31;
0xffffffff81e466e1: ret 0x47ca;
0xffffffff81e4679c: ret 0x68ec;
0xffffffff81e46864: ret 0x247e;
0xffffffff81e46965: leave; ret;
0xffffffff81e46992: ret 0xa70b;
0xffffffff81e469a8: ret 0x52d0;
0xffffffff81e46af5: ret 0xb498;
0xffffffff81e46cef: ret 0x428e;
0xffffffff81e46e2c: ret 0x6ce7;
0xffffffff81e46e65: ret 0x8c07;
0xffffffff81e46ed8: xchg esp, eax; and eax, 0x3bf00b44; push rdx; fstpnce st(4), st; ret;
0xffffffff81e46ef3: ret 0x78a2;
0xffffffff81e46f6b: ret 0x9205;
0xffffffff81e470e4: mov ebx, 0x68a1df22; add eax, 0x3ab4be1d; xchg esp, eax; in eax, dx; xor [rdx+0x40], al; call qword ptr [rdi-0x62fa10f3];
0xffffffff81e470e6: fbld st, tbyte ptr [rcx-0x41e2fa98]; mov ah, 0x3a; xchg esp, eax; in eax, dx; xor [rdx+0x40], al; call qword ptr [rdi-0x62fa10f3];
0xffffffff81e470e9: add eax, 0x3ab4be1d; xchg esp, eax; in eax, dx; xor [rdx+0x40], al; call qword ptr [rdi-0x62fa10f3];
0xffffffff81e470ec: mov ah, 0x3a; xchg esp, eax; in eax, dx; xor [rdx+0x40], al; call qword ptr [rdi-0x62fa10f3];
0xffffffff81e470ee: xchg esp, eax; in eax, dx; xor [rdx+0x40], al; call qword ptr [rdi-0x62fa10f3];
0xffffffff81e47130: ret 0x8074;
0xffffffff81e4715b: xchg esp, eax; ret 0x9b14;
0xffffffff81e4715c: ret 0x9b14;
0xffffffff81e4729f: ret 0xbfe2;
0xffffffff81e47641: ret 0x256a;
0xffffffff81e47697: ret 0xe82d;
0xffffffff81e477a4: ret 0xa593;
0xffffffff81e477ad: ret 0x2032;
0xffffffff81e478de: ret 0xec2e;
0xffffffff81e47ad9: ret 0x6bb6;
0xffffffff81e47dd9: ret 0xe807;
0xffffffff81e47f9f: out 0xa5, al; or eax, 0xebc12916; cmp [rdx-0x49e7ff98], dl; pop rsp; ret 0xae43;
0xffffffff81e47fa0: movsd [rdi], [rsi]; or eax, 0xebc12916; cmp [rdx-0x49e7ff98], dl; pop rsp; ret 0xae43;
0xffffffff81e47fa1: or eax, 0xebc12916; cmp [rdx-0x49e7ff98], dl; pop rsp; ret 0xae43;
0xffffffff81e47fa6: cmp [rdx-0x49e7ff98], dl; pop rsp; ret 0xae43;
0xffffffff81e47fac: pop rsp; ret 0xae43;
0xffffffff81e47fad: ret 0xae43;
0xffffffff81e47fbc: pop rsp; ficomp st, word ptr [rax+0x5a8456a5]; add [eax+0x7b412fd6], ebx; xor al, 0xc9; push rax; iretd;
0xffffffff81e47fcc: leave; push rax; iretd;
0xffffffff81e48126: and al, [rdi+0x1540cb5b]; xchg ebx, esp; insb [rdi], dx; iretd;
0xffffffff81e4812c: xchg ebx, esp; insb [rdi], dx; iretd;
0xffffffff81e481f4: ret 0xd6d0;
0xffffffff81e482b2: ret 0x4e15;
0xffffffff81e48463: ret 0x6172;
0xffffffff81e4868d: ret 0x9640;
0xffffffff81e4872a: int3; mov esp, esi; or al, 0xce; iretq;
0xffffffff81e4872b: mov esp, esi; or al, 0xce; iretq;
0xffffffff81e4879a: ret 0xe8ed;
0xffffffff81e487cb: ret 0x5604;
0xffffffff81e48893: ret 0xe3c6;
0xffffffff81e48c66: ret 0xe492;
0xffffffff81e48e83: ret 0xf184;
0xffffffff81e48f90: ret 0xae4e;
0xffffffff81e4914c: ret 0x8577;
0xffffffff81e491a2: ret 0x2971;
0xffffffff81e49347: ret 0x36a3;
0xffffffff81e495e4: ret 0x543e;
0xffffffff81e495f4: ret 0x1433;
0xffffffff81e49619: ret 0x5498;
0xffffffff81e49632: ret 0xd7d4;
0xffffffff81e49779: ret 0xa2f6;
0xffffffff81e49c08: ret 0x95ab;
0xffffffff81e49c47: ret 0xdb1b;
0xffffffff81e49dcd: ret 0xedb2;
0xffffffff81e49e1d: ret 0x7ee7;
0xffffffff81e49fe4: ret 0x71bf;
0xffffffff81e49ff2: ret 0xbb51;
0xffffffff81e4a117: ret 0xf4fe;
0xffffffff81e4a19d: ret 0x4542;
0xffffffff81e4a1f1: ret 0xf81c;
0xffffffff81e4a228: ret 0x6d82;
0xffffffff81e4a4a5: ret 0x704a;
0xffffffff81e4a50e: mov dh, 0xef; mov esp, [rcx+0x7b9092cf]; mov ah, 0x2f; call far fword ptr [rdx];
0xffffffff81e4a50f: out dx, eax; mov esp, [rcx+0x7b9092cf]; mov ah, 0x2f; call far fword ptr [rdx];
0xffffffff81e4a510: mov esp, [rcx+0x7b9092cf]; mov ah, 0x2f; call far fword ptr [rdx];
0xffffffff81e4a8e7: ret 0x5671;
0xffffffff81e4a9fb: xchg [rdx], esp; sbb eax, 0x86144f0b; or eax, 0xdaa46f52; xchg esi, eax; fnstenv [rcx+0x3d]; ret;
0xffffffff81e4aa51: ret 0xdef0;
0xffffffff81e4ab15: ret 0x9d82;
0xffffffff81e4ad29: ret 0x8085;
0xffffffff81e4ad52: ret 0x632e;
0xffffffff81e4add9: ret 0x500d;
0xffffffff81e4ae7d: ret 0x6786;
0xffffffff81e4b153: ret 0x8545;
0xffffffff81e4b9af: ret 0x4183;
0xffffffff81e4bacf: ret 0xc54c;
0xffffffff81e4bc23: ret 0x2adc;
0xffffffff81e4bc60: ret 0xdfe4;
0xffffffff81e4bd2c: ret 0x8dad;
0xffffffff81e4bdcf: ret 0x5bf1;
0xffffffff81e4be26: ret 0xabbe;
0xffffffff81e4befd: ret 0x356d;
0xffffffff81e4bf3f: ret 0xcb5f;
0xffffffff81e4bf51: ret 0x7f94;
0xffffffff81e4c03e: ret 0xf97b;
0xffffffff81e4c104: ret 0x26e7;
0xffffffff81e4c1b4: ret 0x16ed;
0xffffffff81e4c39a: ret 0x173;
0xffffffff81e4c4fa: ret 0x603f;
0xffffffff81e4c502: ret 0x29f1;
0xffffffff81e4c50b: ret 0xfb58;
0xffffffff81e4c551: ret 0x3c1a;
0xffffffff81e4c6bb: ret 0x7b18;
0xffffffff81e4c6ff: ret 0xe026;
0xffffffff81e4c712: ret 0x1fc0;
0xffffffff81e4c7bd: ret 0x796a;
0xffffffff81e4c7f6: ret 0xcd53;
0xffffffff81e4c8cd: ret 0x7c25;
0xffffffff81e4cb2b: ret 0xd21f;
0xffffffff81e4cb2d: shl byte ptr [rsi], cl; leave; adc [rax+0xeb666a2], ah; xor [r15], rdx; iretd;
0xffffffff81e4cb2e: leave; adc [rax+0xeb666a2], ah; xor [r15], rdx; iretd;
0xffffffff81e4cb2f: leave; adc [rax+0xeb666a2], ah; xor [r15], rdx; iretd;
0xffffffff81e4cb73: xchg esp, eax; pop rsp; in eax, 0xfa; ret 0x7373;
0xffffffff81e4cb74: pop rsp; in eax, 0xfa; ret 0x7373;
0xffffffff81e4cb77: ret 0x7373;
0xffffffff81e4cd16: ret 0xdfa8;
0xffffffff81e4cd17: ret 0xdfa8;
0xffffffff81e4cd25: ret 0xccfb;
0xffffffff81e4cec3: ret 0xc0f4;
0xffffffff81e4cef3: ret 0x5fef;
0xffffffff81e4d040: ret 0xb892;
0xffffffff81e4d145: ret 0xf5eb;
0xffffffff81e4d146: ret 0xf5eb;
0xffffffff81e4d1e9: ret 0xbd61;
0xffffffff81e4d1ea: ret 0xbd61;
0xffffffff81e4d203: ret 0xa95b;
0xffffffff81e4d437: ret 0x1ae;
0xffffffff81e4d70d: ret 0x6a18;
0xffffffff81e4d78d: ret 0xdd8f;
0xffffffff81e4d7da: ret 0x33f;
0xffffffff81e4d82f: ret 0x4287;
0xffffffff81e4d907: ret 0xae0d;
0xffffffff81e4d9df: ret 0x5006;
0xffffffff81e4daee: ret 0x1d1a;
0xffffffff81e4db46: ret 0xccbb;
0xffffffff81e4db5a: ret 0x380c;
0xffffffff81e4db6c: ret 0x68f6;
0xffffffff81e4dd7a: ret 0xe802;
0xffffffff81e4ddb6: ret 0x1a82;
0xffffffff81e4de02: ret 0xab74;
0xffffffff81e4df02: xor al, 0x65; leave; cmp ch, [rdx+0xd]; mov bh, 0xa5; mov bh, [rbx+0x36]; ret 0x26ad;
0xffffffff81e4df03: leave; cmp ch, [rdx+0xd]; mov bh, 0xa5; mov bh, [rbx+0x36]; ret 0x26ad;
0xffffffff81e4df04: leave; cmp ch, [rdx+0xd]; mov bh, 0xa5; mov bh, [rbx+0x36]; ret 0x26ad;
0xffffffff81e4df0c: ret 0x26ad;
0xffffffff81e4df0d: ret 0x26ad;
0xffffffff81e4df37: ret 0x15d8;
0xffffffff81e4df57: ret 0xdebb;
0xffffffff81e4df9c: ret 0x21bb;
0xffffffff81e4e0b7: ret 0x943;
0xffffffff81e4e1ca: ret 0x9504;
0xffffffff81e4e1d9: ret 0x347f;
0xffffffff81e4e1f0: ret 0xd489;
0xffffffff81e4e200: ret 0x4334;
0xffffffff81e4e214: ret 0xe16b;
0xffffffff81e4e51d: ret 0x45e0;
0xffffffff81e4e67a: ret 0xb913;
0xffffffff81e4e77f: ret 0xc475;
0xffffffff81e4e7a4: ret 0x6ceb;
0xffffffff81e4e84a: ret 0x1ceb;
0xffffffff81e4e902: ret 0xe0d;
0xffffffff81e4e928: ret 0x592f;
0xffffffff81e4e994: ret 0xcfd0;
0xffffffff81e4ea38: ret 0xa7c6;
0xffffffff81e4ea39: ret 0xa7c6;
0xffffffff81e4ea43: imul edi, 0xffffff84; push rdx; xchg esp, eax; ret 0xba11;
0xffffffff81e4ea46: push rdx; xchg esp, eax; ret 0xba11;
0xffffffff81e4ea47: xchg esp, eax; ret 0xba11;
0xffffffff81e4ea48: ret 0xba11;
0xffffffff81e4ea6f: ret 0x24e1;
0xffffffff81e4eb8f: ret 0x2ba2;
0xffffffff81e4ec25: ret 0x9b9b;
0xffffffff81e4ecc0: ret 0xcd3b;
0xffffffff81e4ed2b: ret 0x362d;
0xffffffff81e4ee0a: ret 0x73e3;
0xffffffff81e4eed8: ret 0x3153;
0xffffffff81e4ef02: ret 0x2353;
0xffffffff81e4ef23: ret 0xfccc;
0xffffffff81e4efb2: leave; push rax; sbb bh, cl; ret 0xa385;
0xffffffff81e4efb8: ret 0xa385;
0xffffffff81e4f3ec: ret 0xaebf;
0xffffffff81e4f4bd: ret 0x33b9;
0xffffffff81e4f5ae: ret 0xd211;
0xffffffff81e4f620: xchg esp, eax; movsxd edx, edx; ret;
0xffffffff81e4f66b: ret 0xc214;
0xffffffff81e4f66d: ret 0xea79;
0xffffffff81e4f7a1: data16 ret 0x191d;
0xffffffff81e4f7a2: ret 0x191d;
0xffffffff81e4fa72: ret 0x13ac;
0xffffffff81e4fa7f: ret 0x1503;
0xffffffff81e4fb56: ret 0x633;
0xffffffff81e4fb71: ret 0x9e56;
0xffffffff81e4fc2d: ret 0x458d;
0xffffffff81e4fdd7: ret 0x198a;
0xffffffff81e4fded: bnd ret 0x755d;
0xffffffff81e4fe92: ret 0x8f43;
0xffffffff81e50028: ret 0x72ee;
0xffffffff81e501ec: ret 0x6290;
0xffffffff81e5026a: ret 0xdc50;
0xffffffff81e502ec: ret 0x35aa;
0xffffffff81e5035d: ret 0x5d75;
0xffffffff81e504b7: ret 0xfaf3;
0xffffffff81e504e7: ret 0x985e;
0xffffffff81e50512: ret 0xf342;
0xffffffff81e506e0: ret 0xacef;
0xffffffff81e506e1: ret 0xacef;
0xffffffff81e50708: ret 0x2fe1;
0xffffffff81e50716: ret 0xdce2;
0xffffffff81e507ac: ret 0x7308;
0xffffffff81e507ad: ret 0x7308;
0xffffffff81e5094b: ret 0x4a2d;
0xffffffff81e5098a: ret 0x1da6;
0xffffffff81e50a19: ret 0xd657;
0xffffffff81e50a6d: ret 0x95ad;
0xffffffff81e50b91: ret 0x9b8c;
0xffffffff81e50d68: ret 0xf01a;
0xffffffff81e50f4b: ret 0xf413;
0xffffffff81e50f4c: ret 0xf413;
0xffffffff81e51098: ret 0x4ce9;
0xffffffff81e510bd: adc esp, [rdi]; insb [rdi], dx; add [rsi-0x2c43f0cd], dl; pop rsp; ret 0xad92;
0xffffffff81e510bf: insb [rdi], dx; add [rsi-0x2c43f0cd], dl; pop rsp; ret 0xad92;
0xffffffff81e510c0: add [rsi-0x2c43f0cd], dl; pop rsp; ret 0xad92;
0xffffffff81e510c3: bsf edx, ebx; pop rsp; ret 0xad92;
0xffffffff81e510c6: pop rsp; ret 0xad92;
0xffffffff81e510c7: ret 0xad92;
0xffffffff81e511cd: ret 0xa283;
0xffffffff81e513ff: ret 0xf524;
0xffffffff81e51670: ret 0xa0bf;
0xffffffff81e51849: ret 0x97ac;
0xffffffff81e51981: ret 0xb36c;
0xffffffff81e51a9d: ret 0xd3bf;
0xffffffff81e51b30: ret 0xf953;
0xffffffff81e51dad: ret 0xaab6;
0xffffffff81e51f84: ret 0x9129;
0xffffffff81e5206b: ret 0x57a1;
0xffffffff81e52346: fcmovne st, st(7); sbb eax, 0xfd235660; pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e52348: sbb eax, 0xfd235660; pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e5234a: push rsi; and edi, ebp; pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e5234b: and edi, ebp; pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e5234c: std; pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e5234d: pop rsp; shr dword ptr [rsi-0x4f], 0xc2; add bh, [rcx]; ret;
0xffffffff81e52351: ret 0x3902;
0xffffffff81e5242a: ret 0x1ad9;
0xffffffff81e52547: ret 0x316;
0xffffffff81e525f3: ret 0xb1a1;
0xffffffff81e526bd: ret 0x5506;
0xffffffff81e527f2: ret 0xd1a0;
0xffffffff81e52813: ret 0x57b8;
0xffffffff81e52899: ret 0xa8a2;
0xffffffff81e52b7f: ret 0x847c;
0xffffffff81e52dd4: ret 0xe73c;
0xffffffff81e52fd2: ret 0xd251;
0xffffffff81e530b6: ret 0x5f;
0xffffffff81e530c5: ret 0x8767;
0xffffffff81e530cf: ret 0xaf16;
0xffffffff81e530e3: ret 0xd1e1;
0xffffffff81e5321f: xchg esp, eax; cwde; push rsi; pop rbp; stosb [rdi]; ret;
0xffffffff81e5326c: ret 0xf636;
0xffffffff81e53353: ret 0xc136;
0xffffffff81e533a8: ret 0xb94d;
0xffffffff81e53595: ret 0x5bb6;
0xffffffff81e535a7: pop rbx; or [rbp+0x34], edx; int1; cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535a8: or [rbp+0x34], edx; int1; cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535a9: push rbp; xor al, 0x4c; int1; cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535aa: xor al, 0x4c; int1; cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535ac: int1; cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535ad: cmovnp esp, ebx; test eax, 0xdf52cc9e; iretd;
0xffffffff81e535e8: ret 0x9673;
0xffffffff81e53761: ret 0x5abd;
0xffffffff81e53942: ret 0x15f7;
0xffffffff81e53a0c: ret 0xfca6;
0xffffffff81e53ac7: ret 0x4587;
0xffffffff81e53b9f: ret 0x1479;
0xffffffff81e53bb0: ret 0xe148;
0xffffffff81e53c24: xchg esp, eax; in al, dx; sbb al, 0x75; ret;
0xffffffff81e53cd7: xchg esp, eax; xchg esi, eax; jmp rsi;
0xffffffff81e53cec: ret 0x17e;
0xffffffff81e53de2: ret 0x6d5d;
0xffffffff81e53ef4: ret 0x2226;
0xffffffff81e54254: ret 0x4433;
0xffffffff81e54442: ret 0x4f44;
0xffffffff81e544a4: mov bl, 4; pop rsp; add byte ptr [rdx-0x63], 0x62; and [rbp+0xe], dh; ret;
0xffffffff81e544a6: pop rsp; add byte ptr [rdx-0x63], 0x62; and [rbp+0xe], dh; ret;
0xffffffff81e5450d: ret 0x5caa;
0xffffffff81e54743: ret 0xebf0;
0xffffffff81e5478a: ret 0xc623;
0xffffffff81e548c7: ret 0x354c;
0xffffffff81e54a4d: ret 0xa058;
0xffffffff81e54a84: ret 0x81be;
0xffffffff81e54a88: ret 0x1fe;
0xffffffff81e54af9: ret 0xada7;
0xffffffff81e54b12: pop rsp; mov ebp, 0x22726de2; lodsb [rsi]; jmp qword ptr [rsi+0x27];
0xffffffff81e54b79: ret 0x8ad6;
0xffffffff81e54b7a: ret 0x8ad6;
0xffffffff81e54bfd: ret 0x6a03;
0xffffffff81e54cee: ret 0x298d;
0xffffffff81e54dbc: ret 0x78f3;
0xffffffff81e54f2a: sbb esp, edi; ret 0x8a77;
0xffffffff81e54f2c: ret 0x8a77;
0xffffffff81e5505e: ret 0x1da3;
0xffffffff81e5515d: ret 0xf09f;
0xffffffff81e55256: ret 0x8b1b;
0xffffffff81e552cf: ret 0xb4f8;
0xffffffff81e554d7: ret 0x4bbf;
0xffffffff81e554e8: ret 0xe3db;
0xffffffff81e55562: ret 0x34f7;
0xffffffff81e5557e: ret 0x8116;
0xffffffff81e55582: ret 0x6db3;
0xffffffff81e555fa: ret 0x835a;
0xffffffff81e5579b: ret 0x3064;
0xffffffff81e55955: ret 0xf25f;
0xffffffff81e55bbe: ret 0x7b5a;
0xffffffff81e55bcd: ret 0x9e33;
0xffffffff81e55d56: ret 0xc03e;
0xffffffff81e55de1: ret 0x4e87;
0xffffffff81e55ee6: ret 0x7279;
0xffffffff81e55fde: ret 0x51e6;
0xffffffff81e55ffd: mov esp, 0x7081f9ef; xchg esp, eax; hlt; scasb [rdi]; rcl dh, 1; ret;
0xffffffff81e56002: xchg esp, eax; hlt; scasb [rdi]; rcl dh, 1; ret;
0xffffffff81e560bb: ret 0x730b;
0xffffffff81e561a8: leave; adc eax, edx; and al, 0xb6; xor ch, [rdi]; not ah; jmp far fword ptr [rsi+rsi*8-0x1a12a1ff];
0xffffffff81e561e9: ret 0xd191;
0xffffffff81e561f3: ret 0xba67;
0xffffffff81e5631b: xor esp, edx; xchg esi, eax; xchg esp, eax; ret 0xea70;
0xffffffff81e5631d: xchg esi, eax; xchg esp, eax; ret 0xea70;
0xffffffff81e5631e: xchg esp, eax; ret 0xea70;
0xffffffff81e5631f: ret 0xea70;
0xffffffff81e56362: ret 0x62f2;
0xffffffff81e563ac: ret 0xc80a;
0xffffffff81e56666: ret 0x10cb;
0xffffffff81e56765: ret 0x914b;
0xffffffff81e56d38: sbb esp, esp; cli; iretd;
0xffffffff81e56dd4: ret 0xa397;
0xffffffff81e56e29: ret 0x23a7;
0xffffffff81e56f20: ret 0x7c66;
0xffffffff81e56f63: ret 0xf012;
0xffffffff81e570b9: ret 0x7986;
0xffffffff81e5712f: ret 0x849e;
0xffffffff81e5715d: ret 0xc809;
0xffffffff81e57489: ret 0x74b7;
0xffffffff81e574e4: ret 0xd82b;
0xffffffff81e574fb: ret 0x7a18;
0xffffffff81e57602: ret 0x7aca;
0xffffffff81e57696: ret 0x70fb;
0xffffffff81e57764: ret 0xf319;
0xffffffff81e57837: ret 0x2682;
0xffffffff81e578f1: ret 0xc6f9;
0xffffffff81e57a35: ret 0xdcec;
0xffffffff81e57d57: ret 0xda;
0xffffffff81e57e00: ret 0xdb43;
0xffffffff81e57ec3: ret 0x153;
0xffffffff81e57fb0: data16 ret 0x3238;
0xffffffff81e57fb1: ret 0x3238;
0xffffffff81e58239: ret 0xfcdf;
0xffffffff81e5823a: ret 0xfcdf;
0xffffffff81e582dd: ret 0x1fee;
0xffffffff81e582f8: ret 0x2521;
0xffffffff81e583bb: ret 0x32be;
0xffffffff81e5844f: and [rdi+0x703435e6], ah; scasd [rdi]; pop rsi; mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e58452: xor eax, 0x5eaf7034; mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e58453: xor al, 0x70; scasd [rdi]; pop rsi; mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e58455: scasd [rdi]; pop rsi; mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e58456: pop rsi; mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e58457: mov rax, 0xb485b56832653cd7; xchg esp, eax; ret;
0xffffffff81e5849a: ret 0x642e;
0xffffffff81e5849b: ret 0x642e;
0xffffffff81e586e0: ret 0x7cc2;
0xffffffff81e586e1: ret 0xb07c;
0xffffffff81e58718: ret 0x96e2;
0xffffffff81e5872c: sub dl, dl; mov al, [0x152d2c413ee156b8]; or eax, 0x66b3b12f; pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5872d: shl byte ptr [rax+0x3ee156b8], cl; sub al, 0x2d; adc eax, 0xb3b12f0d; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5872e: mov al, [0x152d2c413ee156b8]; or eax, 0x66b3b12f; pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5872f: mov eax, 0x413ee156; sub al, 0x2d; adc eax, 0xb3b12f0d; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58732: sub al, 0x2d; adc eax, 0xb3b12f0d; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58734: sub al, 0x2d; adc eax, 0xb3b12f0d; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58735: sub eax, 0xb12f0d15; mov bl, 0x66; pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58736: adc eax, 0xb3b12f0d; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58737: or eax, 0x66b3b12f; pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e58739: mov cl, 0xb3; pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5873a: mov bl, 0x66; pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5873b: pop sp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5873c: pop rsp; movsd [rdi], [rsi]; call far fword ptr [rax];
0xffffffff81e5876f: ret 0xf64e;
0xffffffff81e588b0: ret 0xd34f;
0xffffffff81e58972: ret 0xd2f3;
0xffffffff81e58b11: ret 0xf5c2;
0xffffffff81e58b12: ret 0x7ef5;
0xffffffff81e58bba: ret 0x472;
0xffffffff81e58be8: ret 0x387;
0xffffffff81e58cd8: ret 0x9273;
0xffffffff81e58d78: ret 0x9de9;
0xffffffff81e59093: ret 0x4aac;
0xffffffff81e5925d: ret 0xae7;
0xffffffff81e59838: ret 0x82ef;
0xffffffff81e5983d: ret 0xa7c1;
0xffffffff81e5987c: ret 0x53b2;
0xffffffff81e599ec: pop rsp; jmp qword ptr [rcx-0x4e3a65bf];
0xffffffff81e59a95: ret 0x158a;
0xffffffff81e59ac0: ret 0x36d3;
0xffffffff81e59ac1: ret 0x36d3;
0xffffffff81e59c70: ret 0xd580;
0xffffffff81e59cef: ret 0x8733;
0xffffffff81e59d03: ret 0xb3a7;
0xffffffff81e59d5f: ret 0x56e0;
0xffffffff81e59dc4: ret 0x8b24;
0xffffffff81e59f08: ret 0xd5bf;
0xffffffff81e59f4a: ret 0x9de1;
0xffffffff81e59f9a: ret 0xbdbe;
0xffffffff81e59fba: ret 0xa32f;
0xffffffff81e59fbe: ret 0x70d8;
0xffffffff81e59fd0: ret 0x5d63;
0xffffffff81e59ff2: ret 0xcde4;
0xffffffff81e5a008: ret 0x8685;
0xffffffff81e5a2c7: mov esp, esp; ret;
0xffffffff81e5a3ec: ret 0xe72a;
0xffffffff81e5a3ff: ret 0x781a;
0xffffffff81e5a400: ret 0x781a;
0xffffffff81e5a443: ret 0xcfcb;
0xffffffff81e5a463: ret 0xf74c;
0xffffffff81e5a64c: mov ebp, 0xb35652ed; and al, 0x7c; cmpsb [rsi], [rdi]; pop rsp; mov al, 0x89; iretd;
0xffffffff81e5a651: and al, 0x7c; cmpsb [rsi], [rdi]; pop rsp; mov al, 0x89; iretd;
0xffffffff81e5a653: cmpsb [rsi], [rdi]; pop rsp; mov al, 0x89; iretd;
0xffffffff81e5a654: pop rsp; mov al, 0x89; iretd;
0xffffffff81e5a692: ret 0xeb53;
0xffffffff81e5a8d5: ret 0x166b;
0xffffffff81e5aac9: ret 0xd710;
0xffffffff81e5ab5f: ret 0x5e8c;
0xffffffff81e5ac7f: ret 0xc6e;
0xffffffff81e5ae07: ret 0xce6;
0xffffffff81e5ae78: ret 0x429;
0xffffffff81e5aef6: ret 0x7b5f;
0xffffffff81e5af4e: ret 0x4b53;
0xffffffff81e5b092: ret 0xbc03;
0xffffffff81e5b148: ret 0xb341;
0xffffffff81e5b4b3: ret 0xb01c;
0xffffffff81e5b5ad: mov cl, 0xf2; pop rdi; mov esp, edx; or eax, 0x808ba37a; fist word ptr [rsi], st; iretd;
0xffffffff81e5b5af: pop rdi; mov esp, edx; or eax, 0x808ba37a; fist word ptr [rsi], st; iretd;
0xffffffff81e5b5b0: mov esp, edx; or eax, 0x808ba37a; fist word ptr [rsi], st; iretd;
0xffffffff81e5b5b6: mov [0xa9cf6416df42808b], eax; movsd [rdi], [rsi]; insd [rdi], dx; xchg esp, eax; adc dword ptr [rdi], 0x27; ret;
0xffffffff81e5b5bf: movsd [rdi], [rsi]; insd [rdi], dx; xchg esp, eax; adc dword ptr [rdi], 0x27; ret;
0xffffffff81e5b5c0: insd [rdi], dx; xchg esp, eax; adc dword ptr [rdi], 0x27; ret;
0xffffffff81e5b5c1: xchg esp, eax; adc dword ptr [rdi], 0x27; ret;
0xffffffff81e5b821: ret 0x950e;
0xffffffff81e5b851: ret 0x45ec;
0xffffffff81e5b974: ret 0xd9a9;
0xffffffff81e5b9fa: ret 0x724c;
0xffffffff81e5ba11: add esp, 0xbaa61381; add dword ptr [rbp-0x4f], 0x5f; lahf; ret;
0xffffffff81e5bab5: ret 0xa83d;
0xffffffff81e5bb3d: ret 0xa340;
0xffffffff81e5bb89: ret 0x6ac7;
0xffffffff81e5bda0: ret 0x701a;
0xffffffff81e5be0d: ret 0x8295;
0xffffffff81e5be4f: ret 0x7910;
0xffffffff81e5bef7: ret 0x2d2c;
0xffffffff81e5c180: ret 0x469f;
0xffffffff81e5c34b: ret 0x7d5e;
0xffffffff81e5c40a: ret 0xc01a;
0xffffffff81e5c48d: ret 0x1a76;
0xffffffff81e5c4e6: ret 0xc40b;
0xffffffff81e5c5cc: ret 0x9fa3;
0xffffffff81e5c672: ret 0xf57c;
0xffffffff81e5c69a: ret 0x3bc1;
0xffffffff81e5c77f: ret 0xe03e;
0xffffffff81e5c7cb: ret 0xd9b;
0xffffffff81e5c8fc: ret 0xee29;
0xffffffff81e5c98f: ret 0x518f;
0xffffffff81e5cac8: ret 0x42e2;
0xffffffff81e5cbc0: ret 0x5a05;
0xffffffff81e5ccd4: ret 0xba9c;
0xffffffff81e5ce3a: ret 0x64ae;
0xffffffff81e5d01a: ret 0xe6e9;
0xffffffff81e5d08f: ret 0xf7;
0xffffffff81e5d0e3: ret 0xb2ea;
0xffffffff81e5d0fa: mov edi, ebp; cmp [rcx], bh; test al, 0xc7; nop; xchg esp, eax; ret;
0xffffffff81e5d0fb: std; cmp [rcx], bh; test al, 0xc7; nop; xchg esp, eax; ret;
0xffffffff81e5d0fc: cmp [rcx], bh; test al, 0xc7; nop; xchg esp, eax; ret;
0xffffffff81e5d0fe: test al, 0xc7; nop; xchg esp, eax; ret;
0xffffffff81e5d100: nop; xchg esp, eax; ret;
0xffffffff81e5d118: ret 0x2de;
0xffffffff81e5d121: ret 0xe1e8;
0xffffffff81e5d306: ret 0x711b;
0xffffffff81e5d30e: ret 0xb521;
0xffffffff81e5d3d0: ret 0xe388;
0xffffffff81e5d414: ret 0xe540;
0xffffffff81e5d59a: ret 0xa2a0;
0xffffffff81e5d7ab: ret 0xfcde;
0xffffffff81e5d848: ret 0x6578;
0xffffffff81e5d9ba: ret 0x542d;
0xffffffff81e5db14: ret 0x6cd4;
0xffffffff81e5dc44: ret 0xb44f;
0xffffffff81e5dd22: ret 0x8ff4;
0xffffffff81e5dfc3: ret 0xb44;
0xffffffff81e5e113: ret 0x9dbb;
0xffffffff81e5e129: ret 0x908b;
0xffffffff81e5e394: ret 0xe08;
0xffffffff81e5e429: ret 0x3524;
0xffffffff81e5e4db: ret 0xc236;
0xffffffff81e5e4dc: ret 0x827e;
0xffffffff81e5e4dd: ret 0x827e;
0xffffffff81e5e58f: ret 0xc18c;
0xffffffff81e5e5d5: cmp [rsi-0x5e9a3cc0], dl; xchg ecx, eax; mov [rbx], dh; pop rsp; ret 0x4bb2;
0xffffffff81e5e5db: xchg ecx, eax; mov [rbx], dh; pop rsp; ret 0x4bb2;
0xffffffff81e5e5dc: mov [rbx], dh; pop rsp; ret 0x4bb2;
0xffffffff81e5e5de: pop rsp; ret 0x4bb2;
0xffffffff81e5e5df: ret 0x4bb2;
0xffffffff81e5e6b6: ret 0x3b8c;
0xffffffff81e5e769: ret 0x15b6;
0xffffffff81e5e77f: ret 0x7098;
0xffffffff81e5ea8b: mov dl, 0xf8; sbb esp, edi; ret 0x3c92;
0xffffffff81e5ea8c: mov dl, 0xf8; sbb esp, edi; ret 0x3c92;
0xffffffff81e5ea8d: clc; sbb esp, edi; ret 0x3c92;
0xffffffff81e5ea8e: sbb esp, edi; ret 0x3c92;
0xffffffff81e5ea90: ret 0x3c92;
0xffffffff81e5ee14: ret 0xa1b2;
0xffffffff81e5ef55: ret 0xca9b;
0xffffffff81e5f12e: ret 0x242;
0xffffffff81e5f165: ret 0x7e5f;
0xffffffff81e5f331: xor al, 0; xchg edi, edi; xchg [rax+rbp*4], esp; ret 0x627b;
0xffffffff81e5f333: xchg edi, edi; xchg [rax+rbp*4], esp; ret 0x627b;
0xffffffff81e5f335: xchg [rax+rbp*4], esp; ret 0x627b;
0xffffffff81e5f338: ret 0x627b;
0xffffffff81e5f52f: ret 0x55b;
0xffffffff81e5f595: ret 0x582;
0xffffffff81e5f5e5: ret 0x755d;
0xffffffff81e5f6fc: mov ch, 0xd; fstp st(4), st; leave; ror byte ptr [rdi+0x6d], 0xbf; mov dl, 0xef; ret;
0xffffffff81e5f6fe: fstp st(4), st; leave; ror byte ptr [rdi+0x6d], 0xbf; mov dl, 0xef; ret;
0xffffffff81e5f700: leave; ror byte ptr [rdi+0x6d], 0xbf; mov dl, 0xef; ret;
0xffffffff81e5f849: ret 0x216f;
0xffffffff81e5f879: ret 0xb26e;
0xffffffff81e5f895: leave; ret;
0xffffffff81e5fb34: leave; push rcx; xchg esi, eax; adc dword ptr [rdi-0x50], 0xd550adc5; xor [rbp-0x46252b4b], dh; jmp qword ptr [rdi];
0xffffffff81e5fbd2: ret 0x73a6;
0xffffffff81e5fd1c: ret 0xde;
0xffffffff81e5fd5b: ret 0x3b06;
0xffffffff81e5fe31: ret 0xe84c;
0xffffffff81e5ff3d: ret 0x5a9e;
0xffffffff81e5fff9: ret 0x84c8;
0xffffffff81e6015f: ret 0xfe3f;
0xffffffff81e6017a: ret 0x2265;
0xffffffff81e60201: ret 0x2278;
0xffffffff81e60262: ret 0xab2a;
0xffffffff81e6041a: ret 0xe4e5;
0xffffffff81e6050c: ret 0x29ac;
0xffffffff81e606c8: ret 0x6fd8;
0xffffffff81e606e6: ret 0x3473;
0xffffffff81e6071c: ret 0x2109;
0xffffffff81e60793: ret 0x838e;
0xffffffff81e608e8: ret 0xa539;
0xffffffff81e60958: ret 0x551e;
0xffffffff81e60b76: ret 0xd19c;
0xffffffff81e60b97: xor bl, al; pop rsp; or edi, edx; ret;
0xffffffff81e60b99: pop rsp; or edi, edx; ret;
0xffffffff81e60c1a: ret 0x6809;
0xffffffff81e60cf6: pop rax; mov al, dh; pop rsp; sub eax, 0x5855ead; in al, 7; iretd;
0xffffffff81e60cf7: mov al, dh; pop rsp; sub eax, 0x5855ead; in al, 7; iretd;
0xffffffff81e60cf9: pop rsp; sub eax, 0x5855ead; in al, 7; iretd;
0xffffffff81e60ea9: ret 0x218e;
0xffffffff81e60f37: ret 0x6df1;
0xffffffff81e60fd0: ret 0x1ab6;
0xffffffff81e61178: ret 0xd23e;
0xffffffff81e611aa: ret 0x6cf5;
0xffffffff81e611be: ret 0x3a74;
0xffffffff81e612a2: ret 0xfca9;
0xffffffff81e612ff: cmp al, 0xeb; xchg esp, eax; imul esi, [rsi+0x1dfcb95], 0xffffff83; add ecx, ebx; mov bl, 0xa2; jmp qword ptr [rdx+0x7f02a85c];
0xffffffff81e61301: xchg esp, eax; imul esi, [rsi+0x1dfcb95], 0xffffff83; add ecx, ebx; mov bl, 0xa2; jmp qword ptr [rdx+0x7f02a85c];
0xffffffff81e61363: ret 0x9bb;
0xffffffff81e61368: rol byte ptr [rbx-0x71f24664], 0xc2; sbb esp, ecx; test eax, 0xf40391d9; ret 0x48a6;
0xffffffff81e6136d: mov es, dx; sbb esp, ecx; test eax, 0xf40391d9; ret 0x48a6;
0xffffffff81e6136e: ret 0xe11b;
0xffffffff81e6136f: sbb esp, ecx; test eax, 0xf40391d9; ret 0x48a6;
0xffffffff81e61376: ret 0x48a6;
0xffffffff81e616c4: ret 0xfd9a;
0xffffffff81e616ce: ret 0x452f;
0xffffffff81e616f2: ret 0x664c;
0xffffffff81e61733: ret 0x9537;
0xffffffff81e617a9: ret 0x808f;
0xffffffff81e618e0: ret 0x1295;
0xffffffff81e619dc: ret 0xb9de;
0xffffffff81e61b94: ret 0xbf93;
0xffffffff81e61bb2: ret 0x9da7;
0xffffffff81e61bda: mov al, [rax-0x75206333]; add cl, [rsi-0xe]; test eax, 0x5899197; imul ebx, esi, 0x44161cb8; pop rsp; ret;
0xffffffff81e61be0: add cl, [rsi-0xe]; test eax, 0x5899197; imul ebx, esi, 0x44161cb8; pop rsp; ret;
0xffffffff81e61be3: test eax, 0x5899197; imul ebx, esi, 0x44161cb8; pop rsp; ret;
0xffffffff81e61be8: imul ebx, esi, 0x44161cb8; pop rsp; ret;
0xffffffff81e61beb: sbb al, 0x16; pop rsp; ret;
0xffffffff81e61c2e: leave; test byte ptr [rcx-0x72ffade8], 0x94; fld st, dword ptr [rax+0x20beb907]; and [rbx-0x4759e5c6], edi; push rdi; ret 0xa3f1;
0xffffffff81e61c35: xchg esp, eax; fld st, dword ptr [rax+0x20beb907]; and [rbx-0x4759e5c6], edi; push rdi; ret 0xa3f1;
0xffffffff81e61c44: ret 0xa3f1;
0xffffffff81e61e88: ret 0x741;
0xffffffff81e61e89: ret 0x741;
0xffffffff81e61ebe: ret 0x7dc5;
0xffffffff81e61fa2: ret 0xd80a;
0xffffffff81e62013: ret 0xe8dd;
0xffffffff81e6206e: mov bh, 0x28; shl byte ptr [rdx-0x6cf75de0], 1; mov edx, 0xaf75dd5e; xchg esp, eax; push rcx; ret;
0xffffffff81e6206f: sub al, dl; mov [0x75dd5eba9308a220], al; scasd [rdi]; xchg esp, eax; push rcx; ret;
0xffffffff81e62070: shl byte ptr [rdx-0x6cf75de0], 1; mov edx, 0xaf75dd5e; xchg esp, eax; push rcx; ret;
0xffffffff81e62071: mov [0x75dd5eba9308a220], al; scasd [rdi]; xchg esp, eax; push rcx; ret;
0xffffffff81e62072: and [rdx+0x5eba9308], ah; fnsave [rbp-0x51]; xchg esp, eax; push rcx; ret;
0xffffffff81e62074: or [rbx+0x75dd5eba], dl; scasd [rdi]; xchg esp, eax; push rcx; ret;
0xffffffff81e62075: xchg ebx, eax; mov edx, 0xaf75dd5e; xchg esp, eax; push rcx; ret;
0xffffffff81e62076: mov edx, 0xaf75dd5e; xchg esp, eax; push rcx; ret;
0xffffffff81e62077: pop rsi; fnsave [rbp-0x51]; xchg esp, eax; push rcx; ret;
0xffffffff81e62078: fnsave [rbp-0x51]; xchg esp, eax; push rcx; ret;
0xffffffff81e6207a: scasd [rdi]; xchg esp, eax; push rcx; ret;
0xffffffff81e6207b: xchg esp, eax; push rcx; ret;
0xffffffff81e621a5: ret 0xbf16;
0xffffffff81e622b9: ret 0xdb94;
0xffffffff81e623f9: ret 0x23d5;
0xffffffff81e62490: ret 0x2926;
0xffffffff81e624d2: ret 0x24fa;
0xffffffff81e62598: ret 0x5a0d;
0xffffffff81e62638: ret 0xed33;
0xffffffff81e6270e: ret 0xf5c;
0xffffffff81e627dc: ret 0xb826;
0xffffffff81e62808: ret 0x84c0;
0xffffffff81e629cf: push rdx; add esp, edx; sub [rsi], ecx; call qword ptr [rdi];
0xffffffff81e629d0: add esp, edx; sub [rsi], ecx; call qword ptr [rdi];
0xffffffff81e62df1: ret 0x75eb;
0xffffffff81e62e1a: ret 0xf0eb;
0xffffffff81e62e1f: ret 0x4bd4;
0xffffffff81e62e5d: sub esp, eax; iretd;
0xffffffff81e62e79: ret 0x9734;
0xffffffff81e62fa6: ret 0x2362;
0xffffffff81e6303d: ret 0x5ea1;
0xffffffff81e630d2: ret 0x223b;
0xffffffff81e63351: ret 0x97f9;
0xffffffff81e63435: ret 0x4234;
0xffffffff81e63560: ret 0xc6e7;
0xffffffff81e63581: ret 0x6054;
0xffffffff81e63635: ret 0x2696;
0xffffffff81e63645: ret 0xe54b;
0xffffffff81e636b4: ret 0xe92f;
0xffffffff81e6372f: ret 0x4c7;
0xffffffff81e63755: ret 0x79ad;
0xffffffff81e638a0: ret 0x9dee;
0xffffffff81e63a27: ret 0x4ce3;
0xffffffff81e63aa8: mov [rbx-0x53], dl; xor al, 0x33; add ecx, edi; adc esp, ebp; ret;
0xffffffff81e63aa9: push rbx; lodsd [rsi]; xor al, 0x33; add ecx, edi; adc esp, ebp; ret;
0xffffffff81e63aaa: lodsd [rsi]; xor al, 0x33; add ecx, edi; adc esp, ebp; ret;
0xffffffff81e63aab: xor al, 0x33; add ecx, edi; adc esp, ebp; ret;
0xffffffff81e63aad: add ecx, edi; adc esp, ebp; ret;
0xffffffff81e63aaf: adc esp, ebp; ret;
0xffffffff81e63cf3: ret 0x7aa3;
0xffffffff81e641f0: imul ebp, [rsi+0x76015f97], 0x6a4557ae; pop rsp; mov al, 0x3d; iretd;
0xffffffff81e641fa: pop rsp; mov al, 0x3d; iretd;
0xffffffff81e64339: ret 0x4609;
0xffffffff81e643c6: ret 0xe21b;
0xffffffff81e64422: ret 0xe02a;
0xffffffff81e644bf: ret 0x34d8;
0xffffffff81e644c2: mov esp, es; iretd;
0xffffffff81e6452d: ret 0x8518;
0xffffffff81e6455f: ret 0xe6ec;
0xffffffff81e64592: ret 0x1ee7;
0xffffffff81e6476f: ret 0xd131;
0xffffffff81e647c4: ret 0x9796;
0xffffffff81e649ef: ret 0x111b;
0xffffffff81e64a0b: ret 0xb5c0;
0xffffffff81e64aa1: ret 0xa703;
0xffffffff81e64b07: ret 0x57a6;
0xffffffff81e64c0c: ret 0x1662;
0xffffffff81e64de1: ret 0xdd6a;
0xffffffff81e650c9: ret 0x950a;
0xffffffff81e650f0: ret 0x191b;
0xffffffff81e65223: bnd ret 0x42d6;
0xffffffff81e65224: ret 0x42d6;
0xffffffff81e652de: ret 0xfb7;
0xffffffff81e655b5: ret 0xb956;
0xffffffff81e657b3: ret 0x82d3;
0xffffffff81e6590b: ret 0x88b7;
0xffffffff81e659be: ret 0x10e6;
0xffffffff81e65a60: ret 0x7100;
0xffffffff81e65ae4: ret 0xb107;
0xffffffff81e65c67: sub esp, ebp; iretd;
0xffffffff81e65c6a: ret 0x70be;
0xffffffff81e65d77: ret 0x74d6;
0xffffffff81e65ebb: ret 0x7e7a;
0xffffffff81e66015: ret 0x5400;
0xffffffff81e6608b: ret 0xad60;
0xffffffff81e66394: ret 0xf46c;
0xffffffff81e663dc: ret 0xb6b0;
0xffffffff81e663eb: xchg esp, eax; xchg [rax+0x24ae5c12], bl; ficom st, dword ptr [rdx+0x60c5bcb]; hlt; ret 0x515d;
0xffffffff81e663f9: ret 0x515d;
0xffffffff81e664c0: ret 0xc976;
0xffffffff81e66558: ret 0xe22;
0xffffffff81e66644: scasd [rdi]; leave; add al, 0x77; adc dword ptr [rax], 0x73; xor [rbx+0x3e], bh; iretd;
0xffffffff81e66645: leave; add al, 0x77; adc dword ptr [rax], 0x73; xor [rbx+0x3e], bh; iretd;
0xffffffff81e667b0: ret 0x58b7;
0xffffffff81e667c0: ret 0xd23a;
0xffffffff81e6684f: ret 0xe5f3;
0xffffffff81e669a0: ret 0xf301;
0xffffffff81e66a64: ret 0xe9ac;
0xffffffff81e66a65: ret 0xe9ac;
0xffffffff81e66a71: ret 0xd6eb;
0xffffffff81e66a79: ret 0x2834;
0xffffffff81e66b64: pop rsp; push 0xffffffffa97ad046; in al, dx; sub edx, esp; outsb dx, [rsi]; iretd;
0xffffffff81e66b94: ret 0x62f7;
0xffffffff81e66c58: ret 0xe9fc;
0xffffffff81e66d33: ret 0xd426;
0xffffffff81e66da1: ret 0x6f97;
0xffffffff81e67190: ret 0xfe58;
0xffffffff81e67228: ret 0x6a90;
0xffffffff81e672a5: ret 0x3e;
0xffffffff81e673c2: ret 0x124b;
0xffffffff81e676a4: ret 0x2019;
0xffffffff81e676cd: ret 0x8c5d;
0xffffffff81e67775: ret 0xe4de;
0xffffffff81e677b7: rcr byte ptr [rsi-0x71], 0x15; xchg esp, eax; pop rdi; push 0xffffffff8768a9f1; xor al, 0x13; sysret;
0xffffffff81e677bb: xchg esp, eax; pop rdi; push 0xffffffff8768a9f1; xor al, 0x13; sysret;
0xffffffff81e67863: ret 0x1d34;
0xffffffff81e67b57: ret 0x5c76;
0xffffffff81e67b59: pop rsp; in eax, 0x47; movsd [rdi], [rsi]; bnd ret 0x7cd3;
0xffffffff81e67b5e: bnd ret 0x7cd3;
0xffffffff81e67b5f: ret 0x7cd3;
0xffffffff81e67c2e: ret 0x36b1;
0xffffffff81e67d31: ret 0x37ad;
0xffffffff81e67e09: ret 0x3c8e;
0xffffffff81e67e57: sub ah, bl; sbb eax, 0x6d48c69f; pop rsp; ret;
0xffffffff81e67e59: sbb eax, 0x6d48c69f; pop rsp; ret;
0xffffffff81e67e5d: insd [rdi], dx; pop rsp; ret;
0xffffffff81e67e70: ret 0x8302;
0xffffffff81e67f09: leave; or al, 0xc7; scasb [rdi]; lahf; push rdx; ret 0xe0a1;
0xffffffff81e67f10: ret 0xe0a1;
0xffffffff81e67f5c: ret 0x1634;
0xffffffff81e68095: ret 0xd2ef;
0xffffffff81e680a9: ret 0xb638;
0xffffffff81e682c4: ret 0x5645;
0xffffffff81e68361: ret 0x7c50;
0xffffffff81e68545: ret 0xd2aa;
0xffffffff81e686b7: ret 0xf68e;
0xffffffff81e686e6: ret 0xf8d0;
0xffffffff81e68819: ret 0x22f3;
0xffffffff81e68878: ret 0x6d19;
0xffffffff81e688ee: ret 0xfc4b;
0xffffffff81e68b77: ret 0xb3ae;
0xffffffff81e68be7: ret 0x3ee1;
0xffffffff81e68c2f: ret 0x2218;
0xffffffff81e68d1d: ret 0x4b52;
0xffffffff81e68d63: ret 0xb4b2;
0xffffffff81e68dd9: ret 0x232a;
0xffffffff81e68e84: ret 0x6972;
0xffffffff81e68fa2: ret 0xdc33;
0xffffffff81e68fee: ret 0x46b7;
0xffffffff81e690d5: ret 0xaeb7;
0xffffffff81e6928f: ret 0xf6f9;
0xffffffff81e69430: ret 0x2c1b;
0xffffffff81e69477: ret 0x4b56;
0xffffffff81e69934: ret 0xb231;
0xffffffff81e69962: ret 0x34a0;
0xffffffff81e69a43: ret 0xc2b1;
0xffffffff81e69a44: ret 0xc2b1;
0xffffffff81e69a46: ret 0x445e;
0xffffffff81e69c5d: ret 0x308e;
0xffffffff81e69c97: ret 0x292e;
0xffffffff81e69d2c: ret 0xc181;
0xffffffff81e69d64: ret 0xc5a;
0xffffffff81e69d9b: ret 0x49ba;
0xffffffff81e69e6d: ret 0x3f9e;
0xffffffff81e69f00: ret 0x5821;
0xffffffff81e69fed: ret 0x8d17;
0xffffffff81e6a274: ret 0x971a;
0xffffffff81e6a330: ret 0xa2c5;
0xffffffff81e6a48e: ret 0xe386;
0xffffffff81e6a4ca: leave; mov al, 0x7d; call rdx;
0xffffffff81e6a4d5: ret 0x557;
0xffffffff81e6a5b5: ret 0x4e84;
0xffffffff81e6a678: ret 0xe5ad;
0xffffffff81e6a742: ret 0xe6c;
0xffffffff81e6a801: xchg esp, eax; ret;
0xffffffff81e6a826: ret 0xfa77;
0xffffffff81e6a96d: ret 0x8a27;
0xffffffff81e6a9d9: ret 0x5ba5;
0xffffffff81e6ab4c: ret 0xbe9b;
0xffffffff81e6abda: ret 0x487c;
0xffffffff81e6abed: ret 0x48df;
0xffffffff81e6ae45: leave; ret 0x6899;
0xffffffff81e6ae46: ret 0x6899;
0xffffffff81e6ae78: ret 0x36ba;
0xffffffff81e6af26: ret 0xccc4;
0xffffffff81e6b0e6: mov esp, 0x78e2b12; xchg esp, eax; or eax, 0xaa85490f; ret 0xe09f;
0xffffffff81e6b0e7: adc ch, [rbx]; mov es, [rdi]; xchg esp, eax; or eax, 0xaa85490f; ret 0xe09f;
0xffffffff81e6b0e9: mov es, [rdi]; xchg esp, eax; or eax, 0xaa85490f; ret 0xe09f;
0xffffffff81e6b0eb: xchg esp, eax; or eax, 0xaa85490f; ret 0xe09f;
0xffffffff81e6b0f1: ret 0xe09f;
0xffffffff81e6b20c: ret 0x5580;
0xffffffff81e6b351: ret 0x81f5;
0xffffffff81e6b53e: pcmpeqb mm5, [rbp+0x16]; xchg esp, eax; bswap edi; leave; xchg edx, eax; ret;
0xffffffff81e6b542: xchg esp, eax; bswap edi; leave; xchg edx, eax; ret;
0xffffffff81e6b543: bswap edi; leave; xchg edx, eax; ret;
0xffffffff81e6b545: leave; xchg edx, eax; ret;
0xffffffff81e6b636: ret 0x9c99;
0xffffffff81e6b6af: ret 0x5210;
0xffffffff81e6b6b0: ret 0x5210;
0xffffffff81e6b841: ret 0x475;
0xffffffff81e6b846: ret 0xda1a;
0xffffffff81e6b868: ret 0x9106;
0xffffffff81e6b869: ret 0x9106;
0xffffffff81e6b892: ret 0x4ab0;
0xffffffff81e6b8bc: ret 0x4f76;
0xffffffff81e6b9a7: ret 0xb393;
0xffffffff81e6ba70: ret 0x3dea;
0xffffffff81e6bacf: mov edx, 0xeecf89f6; leave; mov [rbx-0x76], ebp; insd [rdi], dx; stc; ret 0xb2dc;
0xffffffff81e6bad3: out dx, al; leave; mov [rbx-0x76], ebp; insd [rdi], dx; stc; ret 0xb2dc;
0xffffffff81e6bad5: leave; mov [rbx-0x76], ebp; insd [rdi], dx; stc; ret 0xb2dc;
0xffffffff81e6badb: ret 0xb2dc;
0xffffffff81e6bb96: ret 0xf9cd;
0xffffffff81e6bb99: ret 0xd779;
0xffffffff81e6bbb7: ret;
0xffffffff81e6be9b: ret 0x9ac9;
0xffffffff81e6c06e: ret 0xec03;
0xffffffff81e6c14c: ret 0x6bd6;
0xffffffff81e6c37b: ret 0xc750;
0xffffffff81e6c582: ret 0x1b5f;
0xffffffff81e6c681: ret 0x145b;
0xffffffff81e6c733: ret 0x938a;
0xffffffff81e6c747: ret 0xebf;
0xffffffff81e6c7bb: sar byte ptr [rsi-0x64], 1; xlat fs:[rbx]; or eax, 0xe17c80ca; xchg esp, eax; iretd;
0xffffffff81e6c7bd: pushfq; xlat fs:[rbx]; or eax, 0xe17c80ca; xchg esp, eax; iretd;
0xffffffff81e6c7be: xlat fs:[rbx]; or eax, 0xe17c80ca; xchg esp, eax; iretd;
0xffffffff81e6c7bf: xlat [rbx]; or eax, 0xe17c80ca; xchg esp, eax; iretd;
0xffffffff81e6c7c0: or eax, 0xe17c80ca; xchg esp, eax; iretd;
0xffffffff81e6c89e: leave; iretq;
0xffffffff81e6c90e: adc al, 6; sbb al, 0x75; cmp eax, [rsi+0x4635589b]; pop rsp; call qword ptr [rdi+0x1f];
0xffffffff81e6c910: sbb al, 0x75; cmp eax, [rsi+0x4635589b]; pop rsp; call qword ptr [rdi+0x1f];
0xffffffff81e6c912: cmp eax, [rsi+0x4635589b]; pop rsp; call qword ptr [rdi+0x1f];
0xffffffff81e6c918: pop rsp; call qword ptr [rdi+0x1f];
0xffffffff81e6c9bc: ret 0x9662;
0xffffffff81e6cae7: ret 0x9715;
0xffffffff81e6cb5f: xchg esp, eax; fisubr st, word ptr [rbx]; outsd dx, [rsi]; xchg [rdx+0x52], eax; sbb dl, dl; ret 0xd2cb;
0xffffffff81e6cb68: ret 0xd2cb;
0xffffffff81e6cbb7: ret 0x7bef;
0xffffffff81e6cd1e: ret 0xa47;
0xffffffff81e6cf53: ret 0x7e36;
0xffffffff81e6cf8a: ret 0x933;
0xffffffff81e6d0ab: ret 0x38cb;
0xffffffff81e6d320: ret 0x4ad1;
0xffffffff81e6d368: ret 0xcf4a;
0xffffffff81e6d3ba: ret 0x24d2;
0xffffffff81e6d518: ret 0x8029;
0xffffffff81e6d609: ret 0xc6cb;
0xffffffff81e6d664: ret 0x7028;
0xffffffff81e6d67a: ret 0x2864;
0xffffffff81e6d86e: ret 0x31ab;
0xffffffff81e6d89b: stosd [rdi]; xchg esp, eax; clc; ret 0x7993;
0xffffffff81e6d89c: xchg esp, eax; clc; ret 0x7993;
0xffffffff81e6d89e: ret 0x7993;
0xffffffff81e6d992: leave; outsd dx, [rsi]; ret;
0xffffffff81e6d9c3: ret 0x2ce;
0xffffffff81e6da17: ret 0x6733;
0xffffffff81e6db64: ret 0xdf63;
0xffffffff81e6dbba: ret 0x3372;
0xffffffff81e6dc91: mov [0xa87c4f209e03e5b0], al; xchg [rsi+0x40419c1f], bpl; pop rsp; iretd;
0xffffffff81e6dc92: mov al, 0xe5; add ebx, [rsi-0x5783b0e0]; xchg [rsi+0x40419c1f], bpl; pop rsp; iretd;
0xffffffff81e6dc94: add ebx, [rsi-0x5783b0e0]; xchg [rsi+0x40419c1f], bpl; pop rsp; iretd;
0xffffffff81e6dc95: sahf; and [rdi+0x7c], cl; test al, 0x40; xchg [rsi+0x40419c1f], ch; pop rsp; iretd;
0xffffffff81e6dc96: and [rdi+0x7c], cl; test al, 0x40; xchg [rsi+0x40419c1f], ch; pop rsp; iretd;
0xffffffff81e6dc99: test al, 0x40; xchg [rsi+0x40419c1f], ch; pop rsp; iretd;
0xffffffff81e6dc9a: xchg [rsi+0x40419c1f], bpl; pop rsp; iretd;
0xffffffff81e6dc9b: xchg [rsi+0x40419c1f], ch; pop rsp; iretd;
0xffffffff81e6dc9e: pushfq; pop rsp; iretd;
0xffffffff81e6e1c6: ret 0xba33;
0xffffffff81e6e25a: ret 0xcece;
0xffffffff81e6e2b9: ret 0x26e9;
0xffffffff81e6e370: ret 0xfb07;
0xffffffff81e6e40e: ret 0x4cbd;
0xffffffff81e6e441: leave; jmp far fword ptr [rbp+0x7e028c3b];
0xffffffff81e6e460: ret 0x76ad;
0xffffffff81e6e4eb: ret 0x7619;
0xffffffff81e6e642: ret 0x1585;
0xffffffff81e6e678: ret 0xa685;
0xffffffff81e6e76c: ret 0x97a8;
0xffffffff81e6e774: mov esp, fs; adc al, [rsi]; cmp ch, cl; mov ah, 0x62; iretd;
0xffffffff81e6e867: ret 0xfdb7;
0xffffffff81e6e982: xchg esp, edi; nop; iretd;
0xffffffff81e6e989: ret 0x475d;
0xffffffff81e6e9bd: ret 0x5e30;
0xffffffff81e6ea27: ret 0x8e47;
0xffffffff81e6ea9f: ret 0xe9d6;
0xffffffff81e6eb37: ret 0x925;
0xffffffff81e6eca5: ret 0xb106;
0xffffffff81e6ecba: ret 0x8a66;
0xffffffff81e6ed8f: ret 0x91cd;
0xffffffff81e6edac: ret 0xd578;
0xffffffff81e6ef1d: ret 0xf2c2;
0xffffffff81e6ef1e: ret 0x99f2;
0xffffffff81e6ef66: ret 0x75f0;
0xffffffff81e6ef9b: ret 0x3856;
0xffffffff81e6f094: adc [rdx*4+0x7756cace], bh; leave; sbb r10b, dil; mov bh, 0x1c; pop rcx; ret;
0xffffffff81e6f09b: leave; sbb r10b, dil; mov bh, 0x1c; pop rcx; ret;
0xffffffff81e6f0d8: ret 0xff2c;
0xffffffff81e6f1a0: ret 0x4333;
0xffffffff81e6f2cf: ret 0x727d;
0xffffffff81e6f325: ret 0x1987;
0xffffffff81e6f326: ret 0x1987;
0xffffffff81e6f3db: ret 0xf172;
0xffffffff81e6f43b: ret 0xe9a1;
0xffffffff81e6f44a: data16 ret 0x7306;
0xffffffff81e6f44c: ret 0x7306;
0xffffffff81e6f5bf: ret 0x3ce7;
0xffffffff81e6f606: ret 0x5be6;
0xffffffff81e6f6d6: ret 0x8a6c;
0xffffffff81e6f7d7: ret 0xe13e;
0xffffffff81e6f92f: ret 0x3e3;
0xffffffff81e6f9ba: ret 0xdcf2;
0xffffffff81e6f9e7: ret 0x9e6;
0xffffffff81e6fa8a: xor dword ptr [rip+0x35bf2609], 0xd8903b76; and al, 0x2f; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa8c: or [rsi], esp; mov edi, 0x903b7635; fsub st, dword ptr [rdi+rbp]; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa8d: mov edi, 0x903b7635; fsub st, dword ptr [rdi+rbp]; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa8e: mov edi, 0x903b7635; fsub st, dword ptr [rdi+rbp]; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa8f: xor eax, 0xd8903b76; and al, 0x2f; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa92: nop; fsub st, dword ptr [rdi+rbp]; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa93: fsub st, dword ptr [rdi+rbp]; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa94: and al, 0x2f; leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fa96: leave; or eax, 0x92cfb71c; ret;
0xffffffff81e6fb99: pop rsp; iretd;
0xffffffff81e6fc4b: ret 0x85b1;
0xffffffff81e6fc76: ret 0xc26;
0xffffffff81e6fd57: ret 0xea9;
0xffffffff81e6fd74: ret 0x7aab;
0xffffffff81e6fdd4: ret 0xe5c3;
0xffffffff81e6fe22: ret 0xa3da;
0xffffffff81e6ff5a: ret 0x22ba;
0xffffffff81e70040: ret 0xff4;
0xffffffff81e701a3: ret 0x4a28;
0xffffffff81e702b6: ret 0x348c;
0xffffffff81e702c9: xchg esp, eax; pop r15; ret 0x7605;
0xffffffff81e702cc: ret 0x7605;
0xffffffff81e70389: ret 0x8c3e;
0xffffffff81e7045d: ret 0x6d65;
0xffffffff81e7057a: ret 0xceed;
0xffffffff81e706e3: ret 0x6722;
0xffffffff81e70810: ret 0x4aab;
0xffffffff81e7084a: ret 0x709;
0xffffffff81e70995: ret 0x70b7;
0xffffffff81e70b14: ret 0x1f43;
0xffffffff81e70b3f: ret 0xf830;
0xffffffff81e70b65: ret 0x7e31;
0xffffffff81e70b9b: ret 0x1d56;
0xffffffff81e70d27: ret 0x1d78;
0xffffffff81e70f63: leave; xchg ecx, eax; iretd;
0xffffffff81e71118: ret 0x477;
0xffffffff81e7119d: ret 0x4ff1;
0xffffffff81e711de: ret 0x7104;
0xffffffff81e7124c: stosd [rdi]; pop rsp; iretq;
0xffffffff81e7124d: pop rsp; iretq;
0xffffffff81e713c9: ret 0x6c93;
0xffffffff81e71729: ret 0x90c;
0xffffffff81e717a3: ret 0xec2b;
0xffffffff81e71932: ret 0x8d9;
0xffffffff81e71937: ret 0x5c1e;
0xffffffff81e71aa4: ret 0xc037;
0xffffffff81e71aa6: ret 0xc037;
0xffffffff81e71ac6: leave; and al, [rsi-0x69fe10b8]; in al, 0x25; and esi, esp; ret;
0xffffffff81e71aeb: xchg edx, esp; mov dh, 0x63; jmp qword ptr [rdi+0xa7b5f29];
0xffffffff81e71b21: ret 0x9705;
0xffffffff81e71bf5: ret 0x5c71;
0xffffffff81e71c01: ret 0xbcc2;
0xffffffff81e71c02: ret 0x84bc;
0xffffffff81e71daf: ret 0x6684;
0xffffffff81e71f4f: ret 0xa99c;
0xffffffff81e7215d: ret 0x4b4f;
0xffffffff81e723c6: ret 0xade9;
0xffffffff81e72441: ret 0xd6c1;
0xffffffff81e7250d: ret 0xfe19;
0xffffffff81e72559: ret 0xb5c3;
0xffffffff81e725b9: ret 0x8aa3;
0xffffffff81e725ba: ret 0x8aa3;
0xffffffff81e725db: ret 0x988f;
0xffffffff81e726e2: ret 0xa4ae;
0xffffffff81e726fe: ret 0xef84;
0xffffffff81e727df: ret 0xb64e;
0xffffffff81e7283e: xor eax, 0xfe8c371d; xchg esp, eax; sbb eax, 0xf5638c73; iretd;
0xffffffff81e72843: xchg esp, eax; sbb eax, 0xf5638c73; iretd;
0xffffffff81e728e8: ret 0x54b3;
0xffffffff81e72c72: ret 0xb4e3;
0xffffffff81e72da3: ret 0xe919;
0xffffffff81e72e6f: ret 0x714b;
0xffffffff81e72edf: ret 0xde5e;
0xffffffff81e72f63: ret 0x9c02;
0xffffffff81e72fca: ret 0xba92;
0xffffffff81e7303f: ret 0x7ef2;
0xffffffff81e7312a: ret 0xc28f;
0xffffffff81e7312c: ret 0x2e9a;
0xffffffff81e731cf: ret 0x3b40;
0xffffffff81e732b5: ret 0xed07;
0xffffffff81e732ce: ret 0x10b;
0xffffffff81e732f9: ret 0xfad2;
0xffffffff81e73395: pop rdx; sub esp, ecx; add [rdx], dh; ret;
0xffffffff81e73396: sub esp, ecx; add [rdx], dh; ret;
0xffffffff81e73433: ret 0xb7f3;
0xffffffff81e735b5: ret 0xd6ed;
0xffffffff81e73813: ret 0x7d3b;
0xffffffff81e73884: ret 0x1ba3;
0xffffffff81e73894: ret 0x2ec6;
0xffffffff81e73951: ret 0xc982;
0xffffffff81e73a98: ret 0xa44f;
0xffffffff81e73b28: leave; ret 0x9a72;
0xffffffff81e73b29: ret 0x9a72;
0xffffffff81e73b5a: ret 0xd34b;
0xffffffff81e73bcb: ret 0xf513;
0xffffffff81e73bd2: leave; sub [rdx], ah; add eax, 0x275fbb88; iretd;
0xffffffff81e73c2f: ret 0x7856;
0xffffffff81e73d74: ret 0x476e;
0xffffffff81e73d87: ret 0x5b7;
0xffffffff81e73ec0: ret 0x2d69;
0xffffffff81e74113: ret 0x819b;
0xffffffff81e74152: ret 0x5422;
0xffffffff81e74153: ret 0x5422;
0xffffffff81e74340: ret 0x8b67;
0xffffffff81e74372: ret 0x23e8;
0xffffffff81e743e4: pop rsp; mov dl, 0xc1; ret;
0xffffffff81e74411: ret 0x7454;
0xffffffff81e744c8: ret 0xafe;
0xffffffff81e7452c: ret 0x8e82;
0xffffffff81e745f9: ret 0x9660;
0xffffffff81e74bc8: ret 0x7917;
0xffffffff81e74e60: ret 0x1b9c;
0xffffffff81e74f29: ret 0xbf96;
0xffffffff81e74fa3: ret 0x750e;
0xffffffff81e7502d: ret 0xdcdb;
0xffffffff81e7520c: ret 0x8f31;
0xffffffff81e7520d: ret 0x8f31;
0xffffffff81e752cd: ret 0x8045;
0xffffffff81e753c9: ret 0xec0f;
0xffffffff81e75433: ret 0xb17;
0xffffffff81e755cf: cli; leave; xor ah, cl; sbb eax, 0x7528250; shl dword ptr [rbx], cl; iretd;
0xffffffff81e755d1: leave; xor ah, cl; sbb eax, 0x7528250; shl dword ptr [rbx], cl; iretd;
0xffffffff81e7569f: add [rdi-0x56], ecx; xchg esp, eax; mov edx, 0x66824b71; ret;
0xffffffff81e756a1: stosb [rdi]; xchg esp, eax; mov edx, 0x66824b71; ret;
0xffffffff81e756a2: xchg esp, eax; mov edx, 0x66824b71; ret;
0xffffffff81e75841: xchg [rax], esp; iretd;
0xffffffff81e7594e: ret 0x41f0;
0xffffffff81e75a55: ret 0xa9b0;
0xffffffff81e75bf7: ret 0x4219;
0xffffffff81e75cf3: push rdi; leave; or eax, 0x460ed2c5; iretd;
0xffffffff81e75cf4: leave; or eax, 0x460ed2c5; iretd;
0xffffffff81e75d48: ret 0x2b0;
0xffffffff81e75e5f: ret 0x75db;
0xffffffff81e75ed2: ret 0x50e7;
0xffffffff81e76164: ret 0x2710;
0xffffffff81e7618d: rcr dword ptr [rdx+0x10f65c53], cl; sub esp, esp; xor ebp, [rbp-0x4bd290f6]; movsb [rdi], [rsi]; ret;
0xffffffff81e76190: pop rsp; not byte ptr [rax]; sub esp, esp; xor ebp, [rbp-0x4bd290f6]; movsb [rdi], [rsi]; ret;
0xffffffff81e76191: not byte ptr [rax]; sub esp, esp; xor ebp, [rbp-0x4bd290f6]; movsb [rdi], [rsi]; ret;
0xffffffff81e76193: sub esp, esp; xor ebp, [rbp-0x4bd290f6]; movsb [rdi], [rsi]; ret;
0xffffffff81e762b1: ret 0x5819;
0xffffffff81e7638b: ret 0x1b9e;
0xffffffff81e766d8: ret 0x420f;
0xffffffff81e7673e: ret 0xf97d;
0xffffffff81e76832: ret 0x8a42;
0xffffffff81e7686a: ret 0x8d5d;
0xffffffff81e76a27: ret 0x85ad;
0xffffffff81e76ae4: ret 0xe044;
0xffffffff81e76bd7: xchg [rsi], esp; ret 0x8aa8;
0xffffffff81e76bd8: ret 0x8aa8;
0xffffffff81e76bd9: ret 0x8aa8;
0xffffffff81e76d04: ret 0x1af4;
0xffffffff81e76e79: ret 0x4ecb;
0xffffffff81e76f5e: ret 0x73bf;
0xffffffff81e77238: xchg esp, eax; mov [rbx], ds; cmpsd [rsi], [rdi]; iretd;
0xffffffff81e773cb: ret 0x22;
0xffffffff81e7771d: ret 0x1414;
0xffffffff81e77818: ret 0x1ca9;
0xffffffff81e778b7: ret 0x4388;
0xffffffff81e77ab6: ret 0x7af9;
0xffffffff81e77c33: ret 0x1445;
0xffffffff81e77c59: ret 0xe369;
0xffffffff81e77cdb: ret 0xb4f9;
0xffffffff81e77de3: ret 0x2f02;
0xffffffff81e77e14: ret 0xe78e;
0xffffffff81e77e63: ret 0x967;
0xffffffff81e77ec2: ret 0x6d33;
0xffffffff81e77efd: ret 0x37e9;
0xffffffff81e77f11: ret 0x2d85;
0xffffffff81e77fd4: adc al, 0xae; xchg esp, eax; fsubp st(7), st; iretd;
0xffffffff81e77fd5: scasb [rdi]; xchg esp, eax; fsubp st(7), st; iretd;
0xffffffff81e77fd6: xchg esp, eax; fsubp st(7), st; iretd;
0xffffffff81e7802a: ret 0x844d;
0xffffffff81e7811f: ret 0xc24c;
0xffffffff81e78121: ret 0x425c;
0xffffffff81e7813b: ret 0x8429;
0xffffffff81e7818c: ret 0x87c;
0xffffffff81e7819c: ret 0xff7;
0xffffffff81e781b6: ret 0xc8b9;
0xffffffff81e781bb: ret 0x8190;
0xffffffff81e781dd: outsb dx, [rsi]; xchg esp, eax; fcom st, qword ptr [rbx-0xbbcae22]; pop rsi; ret 0x8443;
0xffffffff81e781de: xchg esp, eax; fcom st, qword ptr [rbx-0xbbcae22]; pop rsi; ret 0x8443;
0xffffffff81e781e6: ret 0x8443;
0xffffffff81e782a2: ret 0x967e;
0xffffffff81e782f8: ret 0xffe1;
0xffffffff81e7833d: ret 0x4bef;
0xffffffff81e78393: xchg esp, eax; ret 0x972b;
0xffffffff81e78394: ret 0x972b;
0xffffffff81e78444: ret 0xedf3;
0xffffffff81e7845a: ret 0x7f5c;
0xffffffff81e784a2: ret 0x8475;
0xffffffff81e7859d: popfq; shr dword ptr [rbx-0x4f05b662], 1; xchg esp, eax; call qword ptr [rsi-0xe];
0xffffffff81e7859e: shr dword ptr [rbx-0x4f05b662], 1; xchg esp, eax; call qword ptr [rsi-0xe];
0xffffffff81e785a4: xchg esp, eax; call qword ptr [rsi-0xe];
0xffffffff81e786b6: ret 0x8491;
0xffffffff81e786c5: ret 0x84bd;
0xffffffff81e786d0: ret 0xe1f6;
0xffffffff81e786e6: ret 0x8a7;
0xffffffff81e786f1: ret 0x8cf;
0xffffffff81e7870f: ret 0x841d;
0xffffffff81e7872b: ret 0xdc65;
0xffffffff81e78762: xchg esp, eax; ret 0xd5d5;
0xffffffff81e78763: ret 0xd5d5;
0xffffffff81e78767: ret 0xf481;
0xffffffff81e7877b: ret 0x4bdc;
0xffffffff81e78a23: ret 0x697d;
0xffffffff81e78a3f: ret 0x82f;
0xffffffff81e78ab1: ret 0x3771;
0xffffffff81e78af6: ret 0xd72c;
0xffffffff81e78b1a: ret 0x62b2;
0xffffffff81e78b1b: ret 0x62b2;
0xffffffff81e78e08: leave; iretd;
0xffffffff81e78f2b: ret 0x7b75;
0xffffffff81e79034: ret 0xe7ee;
0xffffffff81e79159: ret 0x554c;
0xffffffff81e79285: ret 0x416f;
0xffffffff81e792fe: ret 0x3e25;
0xffffffff81e793fb: ret 0xc246;
0xffffffff81e793fd: ret 0x3088;
0xffffffff81e7940d: ret 0x94ae;
0xffffffff81e79418: ret 0x6ed8;
0xffffffff81e79454: ret 0xeeef;
0xffffffff81e79466: ret 0xcf93;
0xffffffff81e79492: ret 0x8455;
0xffffffff81e79566: ret 0x84fd;
0xffffffff81e795bd: ret 0xebb0;
0xffffffff81e7966b: ret 0x844b;
0xffffffff81e796a2: ret 0xe244;
0xffffffff81e796f5: cmp [rdx+0x481c201f], ah; out 0xe2, al; imul ebp, [rdi+0x4c], 0xe1eff93d; leave; push rbx; call far fword ptr [rsi];
0xffffffff81e796f8: and [rax+rcx*2], bl; out 0xe2, al; imul ebp, [rdi+0x4c], 0xe1eff93d; leave; push rbx; call far fword ptr [rsi];
0xffffffff81e796f9: sbb al, 0x48; out 0xe2, al; imul ebp, [rdi+0x4c], 0xe1eff93d; leave; push rbx; call far fword ptr [rsi];
0xffffffff81e796fb: out 0xe2, al; imul ebp, [rdi+0x4c], 0xe1eff93d; leave; push rbx; call far fword ptr [rsi];
0xffffffff81e796fd: imul ebp, [rdi+0x4c], 0xe1eff93d; leave; push rbx; call far fword ptr [rsi];
0xffffffff81e79704: leave; push rbx; call far fword ptr [rsi];
0xffffffff81e797bd: ret 0x841b;
0xffffffff81e797db: ret 0xc22a;
0xffffffff81e797dd: ret 0x84e3;
0xffffffff81e797f1: ret 0x29c8;
0xffffffff81e7984b: pop rsp; ret 0x8431;
0xffffffff81e7984c: ret 0x8431;
0xffffffff81e799dc: ret 0xe91d;
0xffffffff81e799e4: ret 0xcc97;
0xffffffff81e79a23: ret 0xe554;
0xffffffff81e79ba5: ret 0x3e6f;
0xffffffff81e79c96: ret 0x88c9;
0xffffffff81e79dae: ret 0x197f;
0xffffffff81e79de6: ret 0xf078;
0xffffffff81e79f44: ret 0xb86a;
0xffffffff81e7a01c: ret 0x3c8;
0xffffffff81e7a2af: ret 0xbdcd;
0xffffffff81e7a42a: ret 0x61cb;
0xffffffff81e7a44c: ret 0x4ac3;
0xffffffff81e7a61e: ret 0x8768;
0xffffffff81e7a6b2: ret 0x15a8;
0xffffffff81e7a79c: ret;
0xffffffff81e7a91a: ret 0x70e4;
0xffffffff81e7ac5a: ret 0xf157;
0xffffffff81e7ac9b: xchg esp, eax; iretd;
0xffffffff81e7adf5: ret 0xf63;
0xffffffff81e7ae34: out 0x35, al; xchg esp, eax; sbb ebp, [rsi-0x12]; imul esp, [rcx-0x6c5fa948], 0x7e0ba880; push bx; ret 0xa9d4;
0xffffffff81e7ae36: xchg esp, eax; sbb ebp, [rsi-0x12]; imul esp, [rcx-0x6c5fa948], 0x7e0ba880; push bx; ret 0xa9d4;
0xffffffff81e7ae47: ret 0xa9d4;
0xffffffff81e7ae48: ret 0xa9d4;
0xffffffff81e7af0d: ret 0x95c1;
0xffffffff81e7b09e: ret 0x2313;
0xffffffff81e7b203: ret 0x92df;
0xffffffff81e7b2e6: ret 0x4a9a;
0xffffffff81e7b54f: leave; cmp dl, [rsp+rbp*4-0x4b]; iretd;
0xffffffff81e7b5bc: ret 0x35de;
0xffffffff81e7b60c: ret 0x517d;
0xffffffff81e7b626: ret 0x7906;
0xffffffff81e7b65a: ret 0x2d2d;
0xffffffff81e7b71e: ret 0x77e;
0xffffffff81e7b73f: ret 0x12fa;
0xffffffff81e7b7dc: ret 0xb633;
0xffffffff81e7ba10: ret 0x1355;
0xffffffff81e7ba4c: ret 0x6159;
0xffffffff81e7bd75: ret 0x4b95;
0xffffffff81e7be26: ret 0x149;
0xffffffff81e7be88: ret 0x7633;
0xffffffff81e7befd: ret 0x29e5;
0xffffffff81e7bfcf: leave; test eax, 0xe4f11c38; fstp qword ptr [rbx], st; pop rdx; ret;
0xffffffff81e7c033: ret 0x5da2;
0xffffffff81e7c104: ret 0xde13;
0xffffffff81e7c240: ret 0x29a5;
0xffffffff81e7c241: ret 0x29a5;
0xffffffff81e7c26e: ret 0xece4;
0xffffffff81e7c2b6: ret 0x817a;
0xffffffff81e7c331: ret 0x5149;
0xffffffff81e7c3e6: ret 0xcb6d;
0xffffffff81e7c499: ret 0x15f5;
0xffffffff81e7c4ca: ret 0x971d;
0xffffffff81e7c536: ret 0x9eb9;
0xffffffff81e7c5a8: ret 0xaa0e;
0xffffffff81e7c705: ret 0xa5e9;
0xffffffff81e7c9a0: ret 0x30dc;
0xffffffff81e7c9ae: xchg esp, eax; ror byte ptr [rbp-0x2c], cl; ret;
0xffffffff81e7c9f4: ret 0xcdd1;
0xffffffff81e7ca06: ret 0xebb7;
0xffffffff81e7cb09: data16 ret;
0xffffffff81e7cb58: ret 0x550b;
0xffffffff81e7cba2: ret 0xe8b9;
0xffffffff81e7cd66: ret 0x3a00;
0xffffffff81e7cddd: and cl, [rbx]; leave; mov bl, 0xb2; ret;
0xffffffff81e7cdde: and cl, [rbx]; leave; mov bl, 0xb2; ret;
0xffffffff81e7cde0: leave; mov bl, 0xb2; ret;
0xffffffff81e7ced2: ret 0xa1c5;
0xffffffff81e7cf22: ret 0xfe39;
0xffffffff81e7d0c9: ret 0x6fea;
0xffffffff81e7d137: ret 0xfc39;
0xffffffff81e7d234: ret 0xd27b;
0xffffffff81e7d2a6: ret 0xdfd1;
0xffffffff81e7d312: ret 0x6474;
0xffffffff81e7d366: ret 0x71ae;
0xffffffff81e7d3c9: ret 0x63ee;
0xffffffff81e7d4a0: ret 0x15e4;
0xffffffff81e7d6ee: ret 0x477b;
0xffffffff81e7daaa: ret 0x19c1;
0xffffffff81e7dac4: ret 0xd5d3;
0xffffffff81e7db02: ret 0x3578;
0xffffffff81e7db0e: ret 0x4e02;
0xffffffff81e7dc34: mov esp, esi; ret 0x566b;
0xffffffff81e7dc36: ret 0x566b;
0xffffffff81e7dc67: ret 0xc7ea;
0xffffffff81e7dd72: ret 0xe992;
0xffffffff81e7dd75: ret 0x224f;
0xffffffff81e7df4f: ret 0xbb87;
0xffffffff81e7df64: ret 0x1391;
0xffffffff81e7dfa1: sbb [rax+0x65], dh; mov [0x822a870a19889e4a], eax; xor al, 0xf2; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfa3: mov gs:[0x822a870a19889e4a], eax; xor al, 0xf2; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfa4: mov [0x822a870a19889e4a], eax; xor al, 0xf2; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfa6: sahf; mov [rcx], bl; or al, [rdi-0xdcb7dd6]; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfa7: mov [rcx], bl; or al, [rdi-0xdcb7dd6]; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfa9: or al, [rdi-0xdcb7dd6]; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfad: xor al, 0xf2; xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7dfaf: xchg esp, eax; or eax, 0x2c61863e; ret;
0xffffffff81e7e015: ret 0x76b4;
0xffffffff81e7e17e: ret 0x596c;
0xffffffff81e7e356: xchg rsp, rax; add bl, bl; sar dword ptr [rip+0x43b9e810], cl; iretd;
0xffffffff81e7e357: xchg esp, eax; add bl, bl; sar dword ptr [rip+0x43b9e810], cl; iretd;
0xffffffff81e7e3fc: ret 0x43fa;
0xffffffff81e7e40f: ret 0xa100;
0xffffffff81e7e575: ret 0x990b;
0xffffffff81e7e5f5: ret 0xd311;
0xffffffff81e7e659: ret 0x3430;
0xffffffff81e7e6bc: ret 0x7e4c;
0xffffffff81e7e718: ret 0x522a;
0xffffffff81e7e747: ret 0xe6a7;
0xffffffff81e7e748: ret 0xe6a7;
0xffffffff81e7e889: ret 0xb15b;
0xffffffff81e7e96d: ret 0xfc2c;
0xffffffff81e7e9e5: ret 0x214c;
0xffffffff81e7ed8e: ret 0x4149;
0xffffffff81e7efa3: mov edx, 0x4123ca30; leave; mov [0x995a143f8a3060d3], eax; push rbp; movsb [rdi], [rsi]; jmp far fword ptr [rdi+0x19ee5646];
0xffffffff81e7efa8: leave; mov [0x995a143f8a3060d3], eax; push rbp; movsb [rdi], [rsi]; jmp far fword ptr [rdi+0x19ee5646];
0xffffffff81e7f30d: ret 0xc437;
0xffffffff81e7f30e: ret 0xc437;
0xffffffff81e7f322: ret 0xb22a;
0xffffffff81e7f484: ret 0xd1c4;
0xffffffff81e7f586: ret 0xdaec;
0xffffffff81e7f604: ret 0xe56d;
0xffffffff81e7f621: ret 0xfbdb;
0xffffffff81e7f7a8: ret 0x2ecf;
0xffffffff81e7f7b7: ret 0xb8a7;
0xffffffff81e7f7dc: ret 0x7922;
0xffffffff81e7f82a: leave; adc [r15-0x1ff3183f], spl; and eax, 0x70c1f8d8; sbb al, 0x8f; ret 0x62c8;
0xffffffff81e7f839: ret 0x62c8;
0xffffffff81e7f83a: ret 0x62c8;
0xffffffff81e7f849: ret 0x3e06;
0xffffffff81e7f980: ret 0x6d89;
0xffffffff81e7fa1a: ret 0xa53e;
0xffffffff81e7fc78: ret 0xad2a;
0xffffffff81e7fdd1: ret 0xcdb6;
0xffffffff81e7fde5: ret 0xc97a;
0xffffffff81e80011: ret 0xbe61;
0xffffffff81e8013d: ret 0x100d;
0xffffffff81e80240: ret 0x2157;
0xffffffff81e8024a: ret 0xbf53;
0xffffffff81e80394: ret 0x1f23;
0xffffffff81e803f4: ret 0x381e;
0xffffffff81e8067f: adc dl, dl; add esp, edi; mov al, [0xdc40eebaf7beb2fe]; ret;
0xffffffff81e80681: add esp, edi; mov al, [0xdc40eebaf7beb2fe]; ret;
0xffffffff81e807dc: cmp eax, 0x76d87ed; pop rsp; cmpsd [rsi], [rdi]; or eax, 0x2138e7bd; adc eax, 0xa1fbcf8b; ret;
0xffffffff81e807de: xchg [rbp+7], ebp; pop rsp; cmpsd [rsi], [rdi]; or eax, 0x2138e7bd; adc eax, 0xa1fbcf8b; ret;
0xffffffff81e807e1: pop rsp; cmpsd [rsi], [rdi]; or eax, 0x2138e7bd; adc eax, 0xa1fbcf8b; ret;
0xffffffff81e80803: xor [rbp-0x475cd9b2], ebx; pop rsp; sub [rsp+rax*4+0x7b69d393], bl; xchg ecx, eax; fadd st, st(5); ret 0x7f89;
0xffffffff81e80809: pop rsp; sub [rsp+rax*4+0x7b69d393], bl; xchg ecx, eax; fadd st, st(5); ret 0x7f89;
0xffffffff81e80814: ret 0x7f89;
0xffffffff81e80bbe: ret 0x2178;
0xffffffff81e80c23: ret 0x5cc7;
0xffffffff81e80c4f: ret 0x51e8;
0xffffffff81e80ef1: ret 0x2bcc;
0xffffffff81e8106d: ret 0x8433;
0xffffffff81e810e6: ret 0xd337;
0xffffffff81e81178: sub esp, ebx; pop rbx; int3; cmp bh, [rbx-0x4b2968af]; mov al, 0x88; ret 0xdb57;
0xffffffff81e81184: ret 0xdb57;
0xffffffff81e81186: ret 0xdb57;
0xffffffff81e81211: ret 0x3ccc;
0xffffffff81e81283: ret 0x6ccf;
0xffffffff81e812f2: ret 0xa76f;
0xffffffff81e81316: ret 0x9b74;
0xffffffff81e8144e: ret 0x6cd3;
0xffffffff81e814a7: leave; xlat [rbx]; mov edi, 0x655fdc73; fld st, qword ptr [rsi+0x231b497f]; lea eax, [rdx-0x7f]; call far fword ptr [rdi-0x4c1ca489];
0xffffffff81e8162d: ret 0x51a8;
0xffffffff81e81729: ret 0xfe10;
0xffffffff81e81755: ret 0x5a20;
0xffffffff81e81763: ret 0x1890;
0xffffffff81e81783: ret 0x7a7e;
0xffffffff81e81871: ret 0xcc7;
0xffffffff81e81981: ret 0x1270;
0xffffffff81e81986: ret 0x6031;
0xffffffff81e819bb: ret 0x13cc;
0xffffffff81e819d3: or [rdi+0x72242153], ah; xchg esp, eax; xchg esi, eax; lahf; adc [rbx-0x48], edi; ret 0x5d8a;
0xffffffff81e819d6: and [rdx+rsi*2], esp; xchg esp, eax; xchg esi, eax; lahf; adc [rbx-0x48], edi; ret 0x5d8a;
0xffffffff81e819d7: and al, 0x72; xchg esp, eax; xchg esi, eax; lahf; adc [rbx-0x48], edi; ret 0x5d8a;
0xffffffff81e819d9: xchg esp, eax; xchg esi, eax; lahf; adc [rbx-0x48], edi; ret 0x5d8a;
0xffffffff81e819df: ret 0x5d8a;
0xffffffff81e81a6b: ret 0x58cc;
0xffffffff81e81b29: ret 0xd4b5;
0xffffffff81e81d25: ret 0x6fe8;
0xffffffff81e81ee0: ret 0x10f2;
0xffffffff81e8201c: ret 0x2512;
0xffffffff81e8217f: ret 0x918b;
0xffffffff81e82246: ret 0xb2cf;
0xffffffff81e8225d: ret 0x85f1;
0xffffffff81e823e0: ret 0xf829;
0xffffffff81e82490: ret 0x3f64;
0xffffffff81e825e8: ret 0x4606;
0xffffffff81e8261d: push rdx; cwde; xor [rbx+rax*2-0x693fc669], ah; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e8261e: cwde; xor [rbx+rax*2-0x693fc669], ah; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e8261f: xor [rbx+rax*2-0x693fc669], ah; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82621: xchg r15d, eax; cmp eax, eax; xchg esi, eax; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82622: xchg edi, eax; cmp eax, eax; xchg esi, eax; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82623: cmp eax, eax; xchg esi, eax; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82625: xchg esi, eax; pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82626: pop rsp; movsxd ebx, [rcx+rsi*8-0x53c0d341]; ret;
0xffffffff81e82653: ret 0xea61;
0xffffffff81e8270b: ret 0x5e70;
0xffffffff81e8295e: ret;
0xffffffff81e829d1: cmp [rbp-0x5a], eax; mov [rbp+0x230a772a], ebp; movsb [rdi], [rsi]; mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e829d3: cmpsb [rsi], [rdi]; mov [rbp+0x230a772a], ebp; movsb [rdi], [rsi]; mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e829d7: mov [rbp+0x230a772a], ebp; movsb [rdi], [rsi]; mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e829db: or ah, [rbx]; movsb [rdi], [rsi]; mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e829dd: movsb [rdi], [rsi]; mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e829de: mov esp, ebx; sbb edx, [rsi]; iretd;
0xffffffff81e82a4e: ret 0x26a0;
0xffffffff81e82dc2: ret 0xacf9;
0xffffffff81e82f33: ret 0x6881;
0xffffffff81e83004: ret 0x3c9d;
0xffffffff81e83104: ret 0x1b8f;
0xffffffff81e83130: ret 0xd1ad;
0xffffffff81e831ef: ret 0x744c;
0xffffffff81e832d3: ret 0x96a9;
0xffffffff81e835fc: leave; mov ebx, 0xb86a977c; cmp [rcx-0x7e0903bb], dl; mov bh, 4; adc ecx, [rsi+rbp+0x62]; iretd;
0xffffffff81e83698: ret 0xef07;
0xffffffff81e83699: ret 0xef07;
0xffffffff81e8394c: ret 0x913b;
0xffffffff81e83dd6: ret 0xffe6;
0xffffffff81e83e8b: ret 0x85b3;
0xffffffff81e83f5a: ret 0x1f7;
0xffffffff81e8406e: ret 0x87f8;
0xffffffff81e8418f: ret 0x9816;
0xffffffff81e84290: ret 0xc1c1;
0xffffffff81e8432f: ret 0xf4f9;
0xffffffff81e8439e: ret 0x8e20;
0xffffffff81e843b8: ret 0x3e8b;
0xffffffff81e8448a: ret 0x50d1;
0xffffffff81e844fa: ret 0xa890;
0xffffffff81e8458b: ret 0x4fa3;
0xffffffff81e846ab: ret 0xa89a;
0xffffffff81e84706: ret 0x6b84;
0xffffffff81e8478c: ret 0x9eee;
0xffffffff81e847ab: ret 0xd72f;
0xffffffff81e8488b: sub edi, [rbp-0x1bd9476a]; stc; and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e8488c: mov ebp, 0xe426b896; stc; and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e8488d: xchg esi, eax; mov eax, 0x20f9e426; in al, dx; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e8488e: mov eax, 0x20f9e426; in al, dx; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e8488f: in al, 0xf9; and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e84890: in al, 0xf9; and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e84891: stc; and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e84892: and ah, ch; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e84893: in al, dx; rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e84894: rcl byte ptr [rax-0x2c], 1; pop rsp; ret;
0xffffffff81e848b2: ret 0xf65f;
0xffffffff81e848bd: ret;
0xffffffff81e84966: ret 0x7efd;
0xffffffff81e8497d: ret 0x5c7b;
0xffffffff81e84b8d: ret 0x5b8a;
0xffffffff81e84c3e: ret 0xf57b;
0xffffffff81e84d0c: rep ret;
0xffffffff81e84ea5: ret 0xda76;
0xffffffff81e84eda: ret 0x3e26;
0xffffffff81e84fde: ret 0xea02;
0xffffffff81e850ea: xchg esp, eax; pop rdi; pop rsp; leave; in eax, dx; ret 0xb008;
0xffffffff81e850eb: pop rdi; pop rsp; leave; in eax, dx; ret 0xb008;
0xffffffff81e850ec: pop rsp; leave; in eax, dx; ret 0xb008;
0xffffffff81e850ed: leave; in eax, dx; ret 0xb008;
0xffffffff81e850f0: ret 0xb008;
0xffffffff81e854a3: ret 0xaa97;
0xffffffff81e854cd: ret 0x241e;
0xffffffff81e854f5: ret 0x8a04;
0xffffffff81e85512: ret 0xd058;
0xffffffff81e85529: ret;
0xffffffff81e8564f: ret 0xa6b8;
0xffffffff81e8565b: ret 0x46f7;
0xffffffff81e856d4: ret 0xe59b;
0xffffffff81e856da: ret 0xd895;
0xffffffff81e85752: ret 0xc596;
0xffffffff81e8595d: pop rsp; add [rcx+0x7e], cl; mov eax, [0x565877ce6d934e20]; sub rax, 0xffffffff8e4e9837; iretd;
0xffffffff81e85a60: ret 0x611b;
0xffffffff81e85a85: ret 0x5b56;
0xffffffff81e85c02: ret 0x301a;
0xffffffff81e85f07: ret 0xf927;
0xffffffff81e85fe0: ret 0x659f;
0xffffffff81e8640a: ret 0xddda;
0xffffffff81e8641f: ret 0x122c;
0xffffffff81e86446: ret 0xf1d;
0xffffffff81e864e2: ret 0xab8b;
0xffffffff81e865f3: ret 0xc2b;
0xffffffff81e865f9: ret 0xe303;
0xffffffff81e8672a: ret 0x3b71;
0xffffffff81e867cb: ret 0x6aee;
0xffffffff81e86b34: ret 0x6ab7;
0xffffffff81e86c38: mov [0x6075a9f6897d9bf4], eax; xchg esp, eax; xchg esp, eax; bnd ret 0xa33e;
0xffffffff81e86c41: xchg esp, eax; xchg esp, eax; bnd ret 0xa33e;
0xffffffff81e86c42: xchg esp, eax; bnd ret 0xa33e;
0xffffffff81e86c43: bnd ret 0xa33e;
0xffffffff81e86c44: ret 0xa33e;
0xffffffff81e86d2b: ret 0x186f;
0xffffffff81e86d2c: ret 0x186f;
0xffffffff81e86d3a: ret 0x9699;
0xffffffff81e86d56: ret 0x8ee0;
0xffffffff81e86f1e: ret 0xe495;
0xffffffff81e86f66: pop rsp; fistp dword ptr [rsi-0x21], st; enter 0xa7cf, 0x2b; outsd dx, [rsi]; rcl dword ptr [rip-0x4576375], 0x2a; iretd;
0xffffffff81e87048: ret 0x7c45;
0xffffffff81e871e4: pop rsp; or esi, eax; sbb esp, [rbp-0x32]; mov ebp, 0x83341fef; add edi, [rdi+0x1f]; iretd;
0xffffffff81e871fe: ret 0xdc73;
0xffffffff81e87469: ret 0xecf6;
0xffffffff81e8749c: ret 0x16fa;
0xffffffff81e87545: ret 0xd758;
0xffffffff81e8761a: ret 0x6fff;
0xffffffff81e8765d: ret 0x7ef6;
0xffffffff81e87912: ret 0xd87e;
0xffffffff81e87a8e: bnd ret 0x4cb9;
0xffffffff81e87a8f: ret 0x4cb9;
0xffffffff81e87ae8: ret 0x5e6f;
0xffffffff81e87b12: ret 0x72d4;
0xffffffff81e87b31: ret 0x8deb;
0xffffffff81e87b4e: ret 0xc335;
0xffffffff81e87c1b: ret 0xc37b;
0xffffffff81e87c30: ret 0x5e31;
0xffffffff81e87e7e: ret 0xb699;
0xffffffff81e87fa1: ret 0x1af1;
0xffffffff81e88188: ret 0x6086;
0xffffffff81e88208: ret 0x4f18;
0xffffffff81e883a3: bnd ret;
0xffffffff81e883d0: ret 0x9c9f;
0xffffffff81e885d1: ret 0x7470;
0xffffffff81e8882c: mov esp, edx; imul edx, ebp, 0x9fb9019b; fistp word ptr [rbx+rcx*8+0x52], st; and [rbx-0x13c060a5], ebx; int 0x4c; iretd;
0xffffffff81e88a2c: ret 0x7436;
0xffffffff81e88ab0: ret 0x2630;
0xffffffff81e88abc: ret 0x9c2e;
0xffffffff81e88b13: ret 0xe70b;
0xffffffff81e88bda: ret 0x62c0;
0xffffffff81e88c4b: ret;
0xffffffff81e88cbf: ret 0xe2fd;
0xffffffff81e88d45: ret 0x63fd;
0xffffffff81e88ec4: ret 0x4414;
0xffffffff81e8926e: ret 0x97e0;
0xffffffff81e89585: ret 0xbb4a;
0xffffffff81e895a5: ret 0xee67;
0xffffffff81e895a6: ret 0xee67;
0xffffffff81e89703: hlt; pop rsp; out 0x41, al; lodsd [rsi]; fmul st, dword ptr [rax]; iretd;
0xffffffff81e89704: pop rsp; out 0x41, al; lodsd [rsi]; fmul st, dword ptr [rax]; iretd;
0xffffffff81e8a180: data16 ret 0x8100;
0xffffffff81e8a191: ret 0x8100;
0xffffffff81e8a580: ret 0xca82;
0xffffffff81e8b0d0: ret 0x1ec;
0xffffffff81e8bd20: ret 0x27a;
0xffffffff81e8c170: ret 0x2a7;
0xffffffff81e8c251: ret 0x8102;
0xffffffff81e8c2d0: ret 0x2d5;
0xffffffff81e8ce5a: add [rax], eax; add [rax], al; add [rax], al; xchg esp, eax; add dword ptr [rbx], 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8ce5c: add [rax], al; add [rax], al; xchg esp, eax; add dword ptr [rbx], 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8ce5e: add [rax], al; xchg esp, eax; add dword ptr [rbx], 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8ce60: xchg esp, eax; add dword ptr [rbx], 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8e79a: add [rax], eax; add [rax], al; add [rax], al; mov esp, [rsi]; add eax, 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8e79c: add [rax], al; add [rax], al; mov esp, [rsi]; add eax, 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8e79e: add [rax], al; mov esp, [rsi]; add eax, 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8e7a0: mov esp, [rsi]; add eax, 0xffffff81; jmp qword ptr [rdi];
0xffffffff81e8eb30: ret 0x61e;
0xffffffff81e8f290: ret 0x80d;
0xffffffff81e90100: ret 0xb3e;
0xffffffff81e91150: ret 0xf70;
0xffffffff81e91320: ret 0xf84;
0xffffffff81e91d10: ret 0x1164;
0xffffffff81e91e11: ret 0x8112;
0xffffffff81e92121: ret 0x8115;
0xffffffff81e92450: ret 0x1eee;
0xffffffff81e92a11: ret 0x8125;
0xffffffff81e93490: ret 0x2f21;
0xffffffff81e93881: xchg esp, eax; xor eax, 0xffffff81; jmp far fword ptr [rax];
0xffffffff81e9391c: add [rax], al; add [rax], al; xchg esp, eax; stosb [rdi]; xor eax, 0xffffff81; jmp far fword ptr [rax];
0xffffffff81e9391e: add [rax], al; xchg esp, eax; stosb [rdi]; xor eax, 0xffffff81; jmp far fword ptr [rax];
0xffffffff81e93920: xchg esp, eax; stosb [rdi]; xor eax, 0xffffff81; jmp far fword ptr [rax];
0xffffffff81e943c1: ret 0x8143;
0xffffffff81e94640: ret 0x4582;
0xffffffff81e94961: ret 0x8149;
0xffffffff81e94d80: ret 0x4bce;
0xffffffff81e94db0: ret 0x4be8;
0xffffffff81e95463: pop rsp; sub eax, 0x720000; add eax, [rbx]; add ecx, [rdi]; not byte ptr [rsi]; call qword ptr [rdx+0x2d];
0xffffffff81e9582e: ret 0x18a3;
0xffffffff81e9598b: add [rax], al; leave; mov dl, 0x18; call far fword ptr [rbp+0x29];
0xffffffff81e9598d: leave; mov dl, 0x18; call far fword ptr [rbp+0x29];
0xffffffff81e95e60: ret 0x18c8;
0xffffffff81e96153: ret 0xff19;
0xffffffff81e96843: add [rip-0x50a9fffb], al; sbb eax, 0x1e59ff; add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e96844: add eax, 0xaf560005; sbb eax, 0x1e59ff; add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e96846: add [rsi-0x51], dl; sbb eax, 0x1e59ff; add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e96848: scasd [rdi]; sbb eax, 0x1e59ff; add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e96849: sbb eax, 0x1e59ff; add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e9684e: add [rdi+0x50500], dl; xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e96854: xchg esp, eax; add [rsi], ebx; call qword ptr [rcx+0x1e];
0xffffffff81e97092: ret 0x18;
0xffffffff81e97121: pop rsp; sbb [rax], al; add [rcx+rax], dh; add eax, [rbx]; add ecx, [rsp+rax+0x2d]; call qword ptr [rdx+0x18];
0xffffffff81e9756d: add ebp, [rbp+0x2dff3ab0]; adc eax, 0x1340000; add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97573: adc eax, 0x1340000; add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97574: add [rax], al; xor al, 1; add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97575: add [rcx+rax], dh; add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97576: xor al, 1; add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97578: add eax, [rbx]; add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e9757a: add esp, ecx; mov al, 0x3a; jmp qword ptr [rbx];
0xffffffff81e97a04: ret 0x11;
0xffffffff81e97a0d: add [rdi+r15*8], ebx; add [rax], al; add bl, ah; add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a0e: add [rdi+rdi*8], ebx; add [rax], al; add bl, ah; add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a10: inc dword ptr [rax]; add [rax], al; add bl, ah; add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a12: add [rax], al; add bl, ah; add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a14: add bl, ah; add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a16: add [rip+0x2900000], al; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a17: add eax, 0x2900000; pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a1c: pop rsp; jmp far fword ptr [rbp+0x75000011];
0xffffffff81e97a26: add [rbx+0xff5c02], al; add [rax], al; add dl, cl; add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a28: add bl, [rdi+rdi*8]; add [rax], al; add dl, cl; add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a2a: inc dword ptr [rax]; add [rax], al; add dl, cl; add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a2c: add [rax], al; add dl, cl; add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a2e: add dl, cl; add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a30: add [rip+0x4b70000], eax; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a31: add eax, 0x4b70000; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a32: add [rax], al; mov bh, 4; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a34: mov bh, 4; pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97a36: pop rsp; call far fword ptr [rax+0x75000011];
0xffffffff81e97ffe: ret 0x96a1;
0xffffffff81e98f61: ret 0xe881;
0xffffffff81e98f74: ret 0x4881;
0xffffffff81e98fd9: ret 0x4d6;
0xffffffff81e99310: ret 0x7ea0;
0xffffffff81e99495: sub eax, 0xff1e3125; add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81e99497: and eax, 0x48ff1e31; add esp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81e9949b: add rsp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81e9949c: add esp, 0x28; pop rbx; pop rbp; ret;
0xffffffff81e99607: pop rsp; pop rbp; ret;
0xffffffff81e99a41: or dword ptr [rax-0x77], 0x2ca6e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a4f: mov dword ptr [rax-0x55], 0x894881c5; in eax, 0xe8; xchg esp, eax; sub al, 0x5c; call far fword ptr [rbp-0x3d];
0xffffffff81e99a53: or dword ptr [rax-0x77], 0x2c94e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a56: in eax, 0xe8; xchg esp, eax; sub al, 0x5c; call far fword ptr [rbp-0x3d];
0xffffffff81e99a58: xchg esp, eax; sub al, 0x5c; call far fword ptr [rbp-0x3d];
0xffffffff81e99a65: or dword ptr [rax-0x77], 0x2c82e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a77: or dword ptr [rax-0x77], 0x2c70e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a89: or dword ptr [rax-0x77], 0x2c5ee8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a99: mov al, 0xc5; or dword ptr [rax-0x77], 0x2c4ce8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99a9b: or dword ptr [rax-0x77], 0x2c4ce8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99aab: mov cl, 0xc5; or dword ptr [rax-0x77], 0x2c3ae8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99aad: or dword ptr [rax-0x77], 0x2c3ae8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99abd: mov dl, 0xc5; or dword ptr [rax-0x77], 0x2c28e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99abf: or dword ptr [rax-0x77], 0x2c28e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99acf: mov ah, 0xc5; or dword ptr [rax-0x77], 0x2c16e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ad1: or dword ptr [rax-0x77], 0x2c16e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99adf: mov dword ptr [rax-0x4b], 0x894881c5; in eax, 0xe8; add al, 0x2c; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ae0: mov bpl, 0xc5; or dword ptr [rax-0x77], 0x2c04e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ae1: mov ch, 0xc5; or dword ptr [rax-0x77], 0x2c04e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ae3: or dword ptr [rax-0x77], 0x2c04e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ae6: in eax, 0xe8; add al, 0x2c; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ae8: add al, 0x2c; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99af3: mov dh, 0xc5; or dword ptr [rax-0x77], 0x2bf2e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99af5: or dword ptr [rax-0x77], 0x2bf2e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99b07: or dword ptr [rax-0x77], 0x2be0e8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99b19: or dword ptr [rax-0x77], 0x2bcee8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99b2b: or dword ptr [rax-0x77], 0x2bbce8e5; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99b4d: cdq; pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99b4e: pop rsp; call far fword ptr [rbp-0x3d];
0xffffffff81e99ba9: pop rsp; pop rbp; call far fword ptr [rbp-0x3d];
0xffffffff81e9a174: leave; out 0x17, eax; call far fword ptr [rcx];
0xffffffff81e9a2ff: inc dword ptr [rbp+rcx*8+0x18]; dec dword ptr [rax-0x33]; sbb bh, bh; pop rsp; int 0x18; jmp qword ptr [rsi-0x33];
0xffffffff81e9a301: int 0x18; dec dword ptr [rax-0x33]; sbb bh, bh; pop rsp; int 0x18; jmp qword ptr [rsi-0x33];
0xffffffff81e9a303: dec dword ptr [rax-0x33]; sbb bh, bh; pop rsp; int 0x18; jmp qword ptr [rsi-0x33];
0xffffffff81e9a306: sbb bh, bh; pop rsp; int 0x18; jmp qword ptr [rsi-0x33];
0xffffffff81e9a308: pop rsp; int 0x18; jmp qword ptr [rsi-0x33];
0xffffffff81e9a467: push qword ptr [rdx-2]; sbb bh, bh; leave; add [rcx], ebx; jmp rdi;
0xffffffff81e9a46a: sbb bh, bh; leave; add [rcx], ebx; jmp rdi;
0xffffffff81e9a46c: leave; add [rcx], ebx; jmp rdi;
0xffffffff81e9a775: ret 0xff1b;
0xffffffff81e9a90c: pop rsp; adc [rip+0x1d1095ff], bl; jmp qword ptr [rcx+rdx+0x1d];
0xffffffff81e9a964: ret 0x71af;
0xffffffff81e9a9dd: push 0x695aff1d; sbb eax, 0x1d6989ff; push qword ptr [rbx+0x16ff1d6e]; xchg esp, eax; sbb eax, 0x1db1d7ff; call far fword ptr [rdi-0x4b];
0xffffffff81e9a9e2: sbb eax, 0x1d6989ff; push qword ptr [rbx+0x16ff1d6e]; xchg esp, eax; sbb eax, 0x1db1d7ff; call far fword ptr [rdi-0x4b];
0xffffffff81e9a9e4: mov [rcx+0x1d], ebp; push qword ptr [rbx+0x16ff1d6e]; xchg esp, eax; sbb eax, 0x1db1d7ff; call far fword ptr [rdi-0x4b];
0xffffffff81e9a9e7: push qword ptr [rbx+0x16ff1d6e]; xchg esp, eax; sbb eax, 0x1db1d7ff; call far fword ptr [rdi-0x4b];
0xffffffff81e9a9ed: xchg esp, eax; sbb eax, 0x1db1d7ff; call far fword ptr [rdi-0x4b];
0xffffffff81e9aa13: inc dword ptr [rbp-0x39]; sbb eax, 0x1dc751ff; push rbx; leave; sbb eax, 0x1dca02ff; jmp far fword ptr [rdx-0x900e232];
0xffffffff81e9aa16: sbb eax, 0x1dc751ff; push rbx; leave; sbb eax, 0x1dca02ff; jmp far fword ptr [rdx-0x900e232];
0xffffffff81e9aa1b: push rbx; leave; sbb eax, 0x1dca02ff; jmp far fword ptr [rdx-0x900e232];
0xffffffff81e9aa1d: leave; sbb eax, 0x1dca02ff; jmp far fword ptr [rdx-0x900e232];
0xffffffff81e9accd: ret 0xff1e;
0xffffffff81e9ae55: ret 0xff20;
0xffffffff81e9af59: and dword ptr [rcx], 0x21870fff; push qword ptr [rdi+rax*4]; and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af5d: xchg [rcx], esp; push qword ptr [rdi+rax*4]; and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af5e: and edi, edi; xor al, 0x87; and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af5f: push qword ptr [rdi+rax*4]; and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af60: xor al, 0x87; and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af61: xchg [rcx], esp; call qword ptr [rbp+rcx*4-0x6f1e00df];
0xffffffff81e9af62: and edi, edi; xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9af64: xchg esp, eax; lea esp, [rcx]; jmp rcx;
0xffffffff81e9b692: and al, 0xff; pop rsp; out 0x24, eax; jmp rsi;
0xffffffff81e9b694: pop rsp; out 0x24, eax; jmp rsi;
0xffffffff81e9b78c: pop rsp; lahf; and eax, 0x259f86ff; jmp qword ptr [rbp-0x5f];
0xffffffff81e9b848: pop rsp; and eax, 0x2cd3ff26; push rsp; call far fword ptr [rsi+0x72ff262f];
0xffffffff81e9ba61: mov esp, [rdi]; inc dword ptr [rdi-0x5300d874]; mov [rdi], fs; inc edx; mov [rdi], fs; call rcx;
0xffffffff81e9ba6c: ret 0x278c;
0xffffffff81e9bd42: sub edi, edi; xchg esp, eax; movsxd esp, edx; inc dword ptr [rax]; mov ch, 0x29; jmp qword ptr [rdx-0x800d64b];
0xffffffff81e9bd44: xchg esp, eax; movsxd esp, edx; inc dword ptr [rax]; mov ch, 0x29; jmp qword ptr [rdx-0x800d64b];
0xffffffff81e9c474: xchg esp, eax; mov [rip+0x2d9249ff], gs; call rbp;
0xffffffff81e9c5b0: xchg esp, eax; movsd [rdi], [rsi]; call far fword ptr [rcx];
0xffffffff81e9c834: ret 0x300a;
0xffffffff81e9ca0d: ret 0xff30;
0xffffffff81e9cbe8: ret 0x3182;
0xffffffff81e9cd79: ret 0xff32;
0xffffffff81e9cd9b: dec ecx; leave; xor bh, bh; cmp eax, 0x51ff32ca; int 0x32; call qword ptr [rax-0x3400cd33];
0xffffffff81e9cd9c: leave; leave; xor bh, bh; cmp eax, 0x51ff32ca; int 0x32; call qword ptr [rax-0x3400cd33];
0xffffffff81e9cd9d: leave; xor bh, bh; cmp eax, 0x51ff32ca; int 0x32; call qword ptr [rax-0x3400cd33];
0xffffffff81e9ce1e: xor bh, bh; leave; fidiv st, dword ptr [rdx]; jmp rbx;
0xffffffff81e9ce20: leave; fidiv st, dword ptr [rdx]; jmp rbx;
0xffffffff81e9cf94: ret 0x3339;
0xffffffff81e9d154: sti; shl dword ptr [rip+0x35ca3cff], 0xff; add esp, ecx; xor eax, 0x35cc91ff; call far fword ptr [rbp-0x33];
0xffffffff81e9d155: shl dword ptr [rip+0x35ca3cff], 0xff; add esp, ecx; xor eax, 0x35cc91ff; call far fword ptr [rbp-0x33];
0xffffffff81e9d15c: add esp, ecx; xor eax, 0x35cc91ff; call far fword ptr [rbp-0x33];
0xffffffff81e9d210: leave; cmpsd [rsi], [rdi]; call far fword ptr [rdi];
0xffffffff81e9d40c: ret 0x3f83;
0xffffffff81e9d560: rcl dword ptr [rdx-0x6c1900bf], 0x41; inc dword ptr [rax]; xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d564: out 0x93, al; inc dword ptr [r8]; xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d565: xchg ebx, eax; inc dword ptr [r8]; xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d566: inc dword ptr [r8]; xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d567: inc dword ptr [rax]; xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d569: xchg esp, eax; call qword ptr [r11-0x6b];
0xffffffff81e9d6f8: ret 0x42c1;
0xffffffff81e9d701: ret 0xff42;
0xffffffff81e9dac1: ret 0xff47;
0xffffffff81e9dc24: ret 0x4a80;
0xffffffff81e9dc35: mov cl, [rdx-1]; xchg rsp, rax; jmp far fword ptr [rbx+r11*4-0x618200b6];
0xffffffff81e9dc38: xchg rsp, rax; jmp far fword ptr [rbx+r11*4-0x618200b6];
0xffffffff81e9dc39: xchg esp, eax; jmp far fword ptr [rbx+r11*4-0x618200b6];
0xffffffff81e9dc90: mov esp, [rip+0x25a4ff4b]; push qword ptr [r11+0x1cff4b25]; jmp qword ptr [r11];
0xffffffff81e9dcb8: pop rsp; sub [rbx-1], cl; sub [rbx-1], ecx; mov [0x6dff4b2b54ff4b29], eax; sub ecx, [rbx-1]; ret;
0xffffffff81e9dda4: mov rdx, 0xba5dff4bba4eff4b; inc qword ptr [r13-0x7000b442]; mov esi, 0xc8efff4b; dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9dda8: mov rdx, 0xbe85ff4bba5dff4b; dec qword ptr [r15-0x1000b442]; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9dda9: mov edx, 0xba5dff4b; inc qword ptr [r13-0x7000b442]; mov esi, 0xc8efff4b; dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddac: pop rbp; mov edx, 0xbe85ff4b; dec qword ptr [r15-0x1000b442]; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddad: mov edx, 0xbe85ff4b; dec qword ptr [r15-0x1000b442]; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddae: inc qword ptr [r13-0x7000b442]; mov esi, 0xc8efff4b; dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddaf: inc dword ptr [rbp-0x7000b442]; mov esi, 0xc8efff4b; dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddb2: dec qword ptr [r15-0x1000b442]; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddb3: dec dword ptr [rdi-0x1000b442]; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddb5: mov esi, 0xc8efff4b; dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddb8: out dx, eax; enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddb9: enter 0xff4b, 8; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddba: dec qword ptr [r8]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddbb: dec dword ptr [rax]; leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9ddbd: leave; jmp far fword ptr [r13-0x37];
0xffffffff81e9de24: leave; adc eax, 0x35f9ff4d; jmp qword ptr [r13+0x5c];
0xffffffff81e9df2c: xchg esp, eax; mov ch, 0x4f; call far fword ptr [rax-0x6e00b04b];
0xffffffff81e9df3c: ret 0x4fb7;
0xffffffff81e9dfc8: xchg esp, eax; push rsp; push rcx; call far fword ptr [rdx];
0xffffffff81e9dfe8: fmul st, qword ptr [rbx-0x6c3000af]; push rcx; inc dword ptr [rcx]; xchg esp, eax; push rcx; jmp far fword ptr [rdx-0x3700ae3c];
0xffffffff81e9dfed: xchg ebx, eax; push rcx; inc dword ptr [rcx]; xchg esp, eax; push rcx; jmp far fword ptr [rdx-0x3700ae3c];
0xffffffff81e9dfee: push rcx; inc dword ptr [rcx]; xchg esp, eax; push rcx; jmp far fword ptr [rdx-0x3700ae3c];
0xffffffff81e9dfef: inc dword ptr [rcx]; xchg esp, eax; push rcx; jmp far fword ptr [rdx-0x3700ae3c];
0xffffffff81e9dff1: xchg esp, eax; push rcx; jmp far fword ptr [rdx-0x3700ae3c];
0xffffffff81e9e07d: xchg esp, eax; push rdx; inc dword ptr [rsi]; popfq; push rdx; call far fword ptr [rbx];
0xffffffff81e9e1a8: pop rsp; push rbp; push rsp; call qword ptr [rdx-0x4f00abaa];
0xffffffff81e9e220: scasd [rdi]; enter 0xff54, 0xca; enter 0xff54, 0xdd; leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e221: enter 0xff54, 0xca; enter 0xff54, 0xdd; leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e222: push rsp; dec edx; enter 0xff54, 0xdd; leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e223: dec edx; enter 0xff54, 0xdd; leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e225: enter 0xff54, 0xdd; leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e229: leave; push rsp; call far fword ptr [rdi-0x32];
0xffffffff81e9e5f9: add al, 0x5c; push qword ptr [rbp+5]; pop rsp; dec dword ptr [rbp+rax+0x5c1ff5c]; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e5fa: pop rsp; push qword ptr [rbp+5]; pop rsp; dec dword ptr [rbp+rax+0x5c1ff5c]; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e5fb: push qword ptr [rbp+5]; pop rsp; dec dword ptr [rbp+rax+0x5c1ff5c]; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e5fe: pop rsp; dec dword ptr [rbp+rax+0x5c1ff5c]; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e5ff: dec dword ptr [rbp+rax+0x5c1ff5c]; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e600: mov [rip+0x5c1ff5c], es; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e601: add eax, 0x5c1ff5c; pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e606: pop rsp; call qword ptr [rcx-0x400a3fa];
0xffffffff81e9e60e: pop rsp; jmp far fword ptr [rcx-0x2500a3f9];
0xffffffff81e9e614: fiadd st, dword ptr [rdi]; pop rsp; call far fword ptr [rax+rcx];
0xffffffff81e9e616: pop rsp; call far fword ptr [rax+rcx];
0xffffffff81e9e62c: or dword ptr [rbx], 0xd16ff5c; pop rsp; dec dword ptr [rbp-0x2500a3f3]; or eax, 0xe1aff5c; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e632: pop rsp; dec dword ptr [rbp-0x2500a3f3]; or eax, 0xe1aff5c; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e633: dec dword ptr [rbp-0x2500a3f3]; or eax, 0xe1aff5c; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e634: lea ecx, [rip+0xddaff5c]; pop rsp; call far fword ptr [rdx];
0xffffffff81e9e635: or eax, 0xddaff5c; pop rsp; call far fword ptr [rdx];
0xffffffff81e9e638: fimul st, dword ptr [rip+0xe1aff5c]; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e639: or eax, 0xe1aff5c; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e63a: pop rsp; call far fword ptr [rdx];
0xffffffff81e9e63c: sbb cl, [rsi]; pop rsp; jmp qword ptr [rax];
0xffffffff81e9e640: and [rsi], cl; pop rsp; jmp qword ptr [rbp+0xe];
0xffffffff81e9e642: pop rsp; jmp qword ptr [rbp+0xe];
0xffffffff81e9e646: pop rsp; jmp far fword ptr [rbx+0xfff5c0e];
0xffffffff81e9e64a: pop rsp; dec dword ptr [rdi]; subps xmm7, xmm7; ret 0x5c0f;
0xffffffff81e9e650: ret 0x5c0f;
0xffffffff81e9e65e: pop rsp; jmp far fword ptr [rdx+0x11];
0xffffffff81e9e660: push 0x11; pop rsp; jmp qword ptr [rsi-0x800a3ef];
0xffffffff81e9e662: pop rsp; jmp qword ptr [rsi-0x800a3ef];
0xffffffff81e9e668: not dword ptr [rcx]; pop rsp; call qword ptr [rdi+0x12];
0xffffffff81e9e66a: pop rsp; call qword ptr [rdi+0x12];
0xffffffff81e9e67e: pop rsp; jmp far fword ptr [rbx+rdx+0x13f0ff5c];
0xffffffff81e9e68e: pop rsp; jmp far fword ptr [rbp-0x1d00a3ec];
0xffffffff81e9e692: pop rsp; jmp rdx;
0xffffffff81e9e699: adc eax, 0x155bff5c; pop rsp; dec dword ptr [rsi-0x3a00a3eb]; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e69a: pop rsp; call far fword ptr [rbx+0x15];
0xffffffff81e9e69d: adc eax, 0x158eff5c; pop rsp; inc ebp; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e69e: pop rsp; dec dword ptr [rsi-0x3a00a3eb]; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e69f: dec dword ptr [rsi-0x3a00a3eb]; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6a2: pop rsp; inc ebp; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6a3: inc ebp; adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6a4: vsubpd ymm15, ymm13, ymm7; or edx, [rsi]; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6a5: adc eax, 0x160bff5c; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6a8: or edx, [rsi]; pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6aa: pop rsp; jmp qword ptr [rdx+0x16];
0xffffffff81e9e6b6: pop rsp; call qword ptr [rsi+0x17];
0xffffffff81e9e6ba: pop rsp; call far fword ptr [rdi+rdx+0x17f3ff5c];
0xffffffff81e9e6c2: pop rsp; call far fword ptr [rbx+0x18];
0xffffffff81e9e6d4: mov [rcx], bl; pop rsp; jmp rcx;
0xffffffff81e9e6d6: pop rsp; jmp rcx;
0xffffffff81e9e6f2: pop rsp; jmp far fword ptr [rbp+0x1b];
0xffffffff81e9e6f5: sbb ebx, [rdi+rdi*8-0x4d]; sbb ebx, [rdi+rdi*8+0xa]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6f6: pop rsp; push qword ptr [rbx+0xaff5c1b]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6f7: push qword ptr [rbx+0xaff5c1b]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6f9: sbb ebx, [rdi+rdi*8+0xa]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6fa: pop rsp; dec dword ptr [rdx]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6fb: dec dword ptr [rdx]; sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6fc: or bl, [rsp+rbx*2]; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6fd: sbb al, 0x5c; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6fe: pop rsp; push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e6ff: push qword ptr [rdx+0x1c]; pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e702: pop rsp; jmp far fword ptr [rcx-0x2100a3e4];
0xffffffff81e9e704: test eax, 0xdeff5c1c; sbb al, 0x5c; dec dword ptr [rcx+0x1d]; pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e708: ficomp st, word ptr [rsp+rbx*2]; dec dword ptr [rcx+0x1d]; pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e709: sbb al, 0x5c; dec dword ptr [rcx+0x1d]; pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e70a: pop rsp; dec dword ptr [rcx+0x1d]; pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e70b: dec dword ptr [rcx+0x1d]; pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e70e: pop rsp; call qword ptr [rcx-0x1700a3e3];
0xffffffff81e9e715: sbb eax, 0x1e1dff5c; pop rsp; call qword ptr [rsi+rbx+0x5c];
0xffffffff81e9e71a: pop rsp; call qword ptr [rsi+rbx+0x5c];
0xffffffff81e9e72c: cmp ebx, [rdi]; pop rsp; push qword ptr [rax+0x1f]; pop rsp; jmp qword ptr [rdi-0x1000a3e1];
0xffffffff81e9e72e: pop rsp; push qword ptr [rax+0x1f]; pop rsp; jmp qword ptr [rdi-0x1000a3e1];
0xffffffff81e9e72f: push qword ptr [rax+0x1f]; pop rsp; jmp qword ptr [rdi-0x1000a3e1];
0xffffffff81e9e732: pop rsp; jmp qword ptr [rdi-0x1000a3e1];
0xffffffff81e9e73a: pop rsp; jmp qword ptr [rax];
0xffffffff81e9e73c: and al, 0x20; pop rsp; jmp far fword ptr [rax+0x5c];
0xffffffff81e9e73e: pop rsp; jmp far fword ptr [rax+0x5c];
0xffffffff81e9e742: pop rsp; jmp qword ptr [rcx-0x2700a3e0];
0xffffffff81e9e74c: mov rsp, dr3; inc dword ptr [rsi+0x21]; pop rsp; jmp far fword ptr [rsi-0x1a00a3df];
0xffffffff81e9e74e: pop rsp; inc dword ptr [rsi+0x21]; pop rsp; jmp far fword ptr [rsi-0x1a00a3df];
0xffffffff81e9e74f: inc dword ptr [rsi+0x21]; pop rsp; jmp far fword ptr [rsi-0x1a00a3df];
0xffffffff81e9e752: pop rsp; jmp far fword ptr [rsi-0x1a00a3df];
0xffffffff81e9e756: pop rsp; jmp rbp;
0xffffffff81e9e75e: pop rsp; call far fword ptr [rdx+0x22];
0xffffffff81e9e768: ret 0x5c22;
0xffffffff81e9e77a: pop rsp; call qword ptr [rsi];
0xffffffff81e9e77e: pop rsp; call qword ptr [rax+0x24];
0xffffffff81e9e782: pop rsp; inc dword ptr [rdi-0x4300a3dc]; and al, 0x5c; push rbx; and al, 0x5c; jmp far fword ptr [rax];
0xffffffff81e9e78a: pop rsp; push rbx; and al, 0x5c; jmp far fword ptr [rax];
0xffffffff81e9e790: sub [rip+0x2566ff5c], ah; pop rsp; call far fword ptr [rbp-0x2d00a3db];
0xffffffff81e9e791: and eax, 0x2566ff5c; pop rsp; call far fword ptr [rbp-0x2d00a3db];
0xffffffff81e9e792: pop rsp; jmp qword ptr [rsi+0x25];
0xffffffff81e9e794: and ax, 0xff5c; popfq; and eax, 0x25d2ff5c; pop rsp; call qword ptr [rcx];
0xffffffff81e9e795: and eax, 0x259dff5c; pop rsp; call rdx;
0xffffffff81e9e796: pop rsp; call far fword ptr [rbp-0x2d00a3db];
0xffffffff81e9e798: popfq; and eax, 0x25d2ff5c; pop rsp; call qword ptr [rcx];
0xffffffff81e9e799: and eax, 0x25d2ff5c; pop rsp; call qword ptr [rcx];
0xffffffff81e9e79e: pop rsp; call qword ptr [rcx];
0xffffffff81e9e7b0: add ch, [rbx]; pop rsp; call qword ptr [rcx-0x3600a3d5];
0xffffffff81e9e7b2: pop rsp; call qword ptr [rcx-0x3600a3d5];
0xffffffff81e9e7ba: pop rsp; call qword ptr [rdi-0x3e00a3d1];
0xffffffff81e9e7c8: sbb [rax], esi; pop rsp; inc dword ptr [rbx+0x30]; pop rsp; jmp far fword ptr [rdi+0x30];
0xffffffff81e9e7ca: pop rsp; inc dword ptr [rbx+0x30]; pop rsp; jmp far fword ptr [rdi+0x30];
0xffffffff81e9e7cb: inc dword ptr [rbx+0x30]; pop rsp; jmp far fword ptr [rdi+0x30];
0xffffffff81e9e7ce: pop rsp; jmp far fword ptr [rdi+0x30];
0xffffffff81e9e7d2: pop rsp; call far fword ptr [rbx-0x600a3d0];
0xffffffff81e9e7de: pop rsp; jmp qword ptr [rsi];
0xffffffff81e9e7e2: pop rsp; call far fword ptr [rax+0x31];
0xffffffff81e9e7f6: pop rsp; inc dword ptr [rbx+0x32]; pop rsp; jmp far fword ptr [rdi+0x32];
0xffffffff81e9e7f7: inc dword ptr [rbx+0x32]; pop rsp; jmp far fword ptr [rdi+0x32];
0xffffffff81e9e7fa: pop rsp; jmp far fword ptr [rdi+0x32];
0xffffffff81e9e7fe: pop rsp; call far fword ptr [rbx-0x3a00a3ce];
0xffffffff81e9e80c: sbb [rbx], esi; pop rsp; inc dword ptr [rbx+0x33]; pop rsp; jmp far fword ptr [rdi+0x33];
0xffffffff81e9e80e: pop rsp; inc dword ptr [rbx+0x33]; pop rsp; jmp far fword ptr [rdi+0x33];
0xffffffff81e9e80f: inc dword ptr [rbx+0x33]; pop rsp; jmp far fword ptr [rdi+0x33];
0xffffffff81e9e812: pop rsp; jmp far fword ptr [rdi+0x33];
0xffffffff81e9e816: pop rsp; call far fword ptr [rbx-0x3800a3cd];
0xffffffff81e9e824: sbb esi, [rsp+rbx*2]; inc dword ptr [rbp+0x34]; pop rsp; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e825: xor al, 0x5c; inc dword ptr [rbp+0x34]; pop rsp; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e826: pop rsp; inc dword ptr [rbp+0x34]; pop rsp; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e827: inc dword ptr [rbp+0x34]; pop rsp; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e829: xor al, 0x5c; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e82a: pop rsp; push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e82b: push qword ptr [rcx+0x34]; pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e82e: pop rsp; jmp qword ptr [rbx+0x35];
0xffffffff81e9e830: movsxd esi, [rip+0x358dff5c]; pop rsp; jmp far fword ptr [rdi-0x2e00a3cb];
0xffffffff81e9e831: xor eax, 0x358dff5c; pop rsp; jmp far fword ptr [rdi-0x2e00a3cb];
0xffffffff81e9e834: lea esi, [rip+0x35afff5c]; pop rsp; call rcx;
0xffffffff81e9e835: xor eax, 0x35afff5c; pop rsp; call rcx;
0xffffffff81e9e836: pop rsp; jmp far fword ptr [rdi-0x2e00a3cb];
0xffffffff81e9e839: xor eax, 0x35d1ff5c; pop rsp; push rbx; xor eax, 0x363dff5c; pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e83a: pop rsp; call rcx;
0xffffffff81e9e83e: pop rsp; push rbx; xor eax, 0x363dff5c; pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e83f: push rbx; xor eax, 0x363dff5c; pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e841: xor eax, 0x363dff5c; pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e844: cmp eax, 0x6aff5c36; pop rsp; dec dword ptr [rsi+rsi+0x36aeff5c]; pop rsp; call rdx;
0xffffffff81e9e845: pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e846: pop rsp; jmp far fword ptr [rdx+0x36];
0xffffffff81e9e848: push 0x36; pop rsp; dec dword ptr [rsi+rsi+0x36aeff5c]; pop rsp; call rdx;
0xffffffff81e9e849: pop rsp; dec dword ptr [rsi+rsi+0x36aeff5c]; pop rsp; call rdx;
0xffffffff81e9e84a: pop rsp; dec dword ptr [rsi+rsi+0x36aeff5c]; pop rsp; call rdx;
0xffffffff81e9e84b: dec dword ptr [rsi+rsi+0x36aeff5c]; pop rsp; call rdx;
0xffffffff81e9e84d: pop rsp; jmp far fword ptr [rsi-0x2d00a3ca];
0xffffffff81e9e84e: pop rsp; jmp far fword ptr [rsi-0x2d00a3ca];
0xffffffff81e9e850: scasb [rdi]; pop rsp; call rdx;
0xffffffff81e9e851: pop rsp; call rdx;
0xffffffff81e9e854: shl byte ptr [rsi], cl; pop rsp; push rsi; pop rsp; call far fword ptr [rax];
0xffffffff81e9e855: pop rsp; push rsi; pop rsp; call far fword ptr [rax];
0xffffffff81e9e856: pop rsp; push rsi; pop rsp; call far fword ptr [rax];
0xffffffff81e9e857: push rsi; pop rsp; call far fword ptr [rax];
0xffffffff81e9e858: div byte ptr [rsi]; pop rsp; call far fword ptr [rax];
0xffffffff81e9e859: pop rsp; call far fword ptr [rax];
0xffffffff81e9e872: pop rsp; inc dword ptr [rcx+0x38]; pop rsp; jmp far fword ptr [rbx+0x38];
0xffffffff81e9e873: inc dword ptr [rcx+0x38]; pop rsp; jmp far fword ptr [rbx+0x38];
0xffffffff81e9e876: pop rsp; jmp far fword ptr [rbx+0x38];
0xffffffff81e9e87a: pop rsp; call qword ptr [rbp-0x3e00a3c8];
0xffffffff81e9e88a: pop rsp; inc dword ptr [rbx+0x39]; pop rsp; jmp far fword ptr [rdi+0x39];
0xffffffff81e9e88b: inc dword ptr [rbx+0x39]; pop rsp; jmp far fword ptr [rdi+0x39];
0xffffffff81e9e88e: pop rsp; jmp far fword ptr [rdi+0x39];
0xffffffff81e9e892: pop rsp; call far fword ptr [rcx-0x3a00a3c7];
0xffffffff81e9e89e: pop rsp; call far fword ptr [rbx];
0xffffffff81e9e8a0: sbb edi, [rdx]; pop rsp; inc dword ptr [rbp+0x3a]; pop rsp; jmp far fword ptr [rdi+0x3a];
0xffffffff81e9e8a2: pop rsp; inc dword ptr [rbp+0x3a]; pop rsp; jmp far fword ptr [rdi+0x3a];
0xffffffff81e9e8a3: inc dword ptr [rbp+0x3a]; pop rsp; jmp far fword ptr [rdi+0x3a];
0xffffffff81e9e8a6: pop rsp; jmp far fword ptr [rdi+0x3a];
0xffffffff81e9e8aa: pop rsp; call far fword ptr [rbx-0x3800a3c6];
0xffffffff81e9e8ba: pop rsp; inc dword ptr [rdi+0x3b]; pop rsp; push qword ptr [rbx+0x3b]; pop rsp; call far fword ptr [rdi-0x3600a3c5];
0xffffffff81e9e8bb: inc dword ptr [rdi+0x3b]; pop rsp; push qword ptr [rbx+0x3b]; pop rsp; call far fword ptr [rdi-0x3600a3c5];
0xffffffff81e9e8be: pop rsp; push qword ptr [rbx+0x3b]; pop rsp; call far fword ptr [rdi-0x3600a3c5];
0xffffffff81e9e8bf: push qword ptr [rbx+0x3b]; pop rsp; call far fword ptr [rdi-0x3600a3c5];
0xffffffff81e9e8c2: pop rsp; call far fword ptr [rdi-0x3600a3c5];
0xffffffff81e9e8da: pop rsp; jmp qword ptr [rbx-0x3200a3c4];
0xffffffff81e9e8de: pop rsp; dec ebp; cmp al, 0x5c; push rdi; cmp al, 0x5c; jmp qword ptr [rcx];
0xffffffff81e9e8e0: int 0x3c; pop rsp; push rdi; cmp al, 0x5c; jmp qword ptr [rcx];
0xffffffff81e9e8e2: pop rsp; push rdi; cmp al, 0x5c; jmp qword ptr [rcx];
0xffffffff81e9e8e6: pop rsp; jmp qword ptr [rcx];
0xffffffff81e9e8e8: and [rip+0x3d4dff5c], edi; pop rsp; push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8e9: cmp eax, 0x3d4dff5c; pop rsp; push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8ea: pop rsp; dec dword ptr [rbp+0x3d]; pop rsp; push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8eb: dec dword ptr [rbp+0x3d]; pop rsp; push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8ec: cmp rax, 0x3d77ff5c; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8ed: cmp eax, 0x3d77ff5c; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8ee: pop rsp; push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8ef: push qword ptr [rdi+0x3d]; pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e8f2: pop rsp; jmp qword ptr [rbx-0x3200a3c3];
0xffffffff81e9e909: pop rsp; jmp qword ptr [rdi-0x2c00a3c2];
0xffffffff81e9e90a: pop rsp; jmp qword ptr [rdi-0x2c00a3c2];
0xffffffff81e9e90c: cmpsd [rsi], [rdi]; pop rsp; call rbx;
0xffffffff81e9e90d: pop rsp; call rbx;
0xffffffff81e9e914: std; pop rsp; jmp far fword ptr [rcx];
0xffffffff81e9e915: pop rsp; jmp far fword ptr [rcx];
0xffffffff81e9e916: pop rsp; jmp far fword ptr [rcx];
0xffffffff81e9e918: sub [rdi], edi; pop rsp; call qword ptr [rbx+0x3f];
0xffffffff81e9e91a: pop rsp; call qword ptr [rbx+0x3f];
0xffffffff81e9e922: pop rsp; jmp far fword ptr [rcx-0x2c00a3c1];
0xffffffff81e9e926: pop rsp; call rbx;
0xffffffff81e9e92e: pop rsp; jmp far fword ptr [rbx];
0xffffffff81e9e932: pop rsp; call qword ptr [rbp+0x40];
0xffffffff81e9e93a: pop rsp; jmp far fword ptr [rbp-0x2600a3c0];
0xffffffff81e9e942: pop rsp; inc dword ptr [rip+0x31ff5c41]; pop r12; call far fword ptr [rbp+0x41];
0xffffffff81e9e946: pop rsp; push qword ptr [rcx]; pop r12; call far fword ptr [rbp+0x41];
0xffffffff81e9e94a: pop rsp; call far fword ptr [rbp+0x41];
0xffffffff81e9e960: cmp eax, 0x67ff5c42; pop rsp; call qword ptr [rcx-0x4200a3be];
0xffffffff81e9e962: pop rsp; jmp qword ptr [rdi+0x42];
0xffffffff81e9e966: pop rsp; call qword ptr [rcx-0x4200a3be];
0xffffffff81e9e975: pop r12; inc dword ptr [rcx+0x43]; pop rsp; jmp far fword ptr [rbp+0x43];
0xffffffff81e9e976: pop rsp; inc dword ptr [rcx+0x43]; pop rsp; jmp far fword ptr [rbp+0x43];
0xffffffff81e9e977: inc dword ptr [rcx+0x43]; pop rsp; jmp far fword ptr [rbp+0x43];
0xffffffff81e9e97a: pop rsp; jmp far fword ptr [rbp+0x43];
0xffffffff81e9e97e: pop rsp; call qword ptr [rdi-0x3e00a3bd];
0xffffffff81e9e98e: pop rsp; inc dword ptr [rcx+0x44]; pop rsp; jmp far fword ptr [rbp+0x44];
0xffffffff81e9e98f: inc dword ptr [rcx+0x44]; pop rsp; jmp far fword ptr [rbp+0x44];
0xffffffff81e9e992: pop rsp; jmp far fword ptr [rbp+0x44];
0xffffffff81e9e994: insd [rdi], dx; pop rsp; call far fword ptr [rcx-0x3c00a3bc];
0xffffffff81e9e996: pop rsp; call far fword ptr [rcx-0x3c00a3bc];
0xffffffff81e9e998: cdq; pop rsp; inc ebx; pop rsp; call rsi;
0xffffffff81e9e99a: pop rsp; inc ebx; pop rsp; call rsi;
0xffffffff81e9e99b: inc ebx; pop rsp; call rsi;
0xffffffff81e9e99e: pop rsp; call rsi;
0xffffffff81e9e9a4: fadd st, qword ptr [rbp+0x5c]; dec dword ptr [rsi+rax*2]; pop rsp; jmp rdi;
0xffffffff81e9e9a5: pop r12; dec dword ptr [rsi+rax*2]; pop rsp; jmp rdi;
0xffffffff81e9e9a6: pop rsp; dec dword ptr [rsi+rax*2]; pop rsp; jmp rdi;
0xffffffff81e9e9a7: dec dword ptr [rsi+rax*2]; pop rsp; jmp rdi;
0xffffffff81e9e9a8: or al, 0x46; pop rsp; jmp rdi;
0xffffffff81e9e9b1: push rsp; pop rsp; jmp qword ptr [rax-0x5a00a3ac];
0xffffffff81e9e9b2: pop rsp; jmp qword ptr [rax-0x5a00a3ac];
0xffffffff81e9e9b5: push rsp; pop rsp; jmp qword ptr [rbp-0x4300a3ac];
0xffffffff81e9e9b6: pop rsp; jmp qword ptr [rbp-0x4300a3ac];
0xffffffff81e9e9c1: push rsp; pop rsp; push rsi; push rsp; pop rsp; call qword ptr [rbx];
0xffffffff81e9e9c2: pop rsp; push rsi; push rsp; pop rsp; call qword ptr [rbx];
0xffffffff81e9e9c3: push rsi; push rsp; pop rsp; call qword ptr [rbx];
0xffffffff81e9e9c5: push rsp; pop rsp; call qword ptr [rbx];
0xffffffff81e9e9c9: push rbp; pop rsp; jmp far fword ptr [rax+0x58];
0xffffffff81e9e9ca: pop rsp; jmp far fword ptr [rax+0x58];
0xffffffff81e9e9cc: push 0xffffffff87ff5c58; pop rax; pop rsp; inc dword ptr [rcx+rbx*2]; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9cd: pop rax; pop rsp; inc dword ptr [rdi+0x4ff5c58]; pop rcx; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9ce: pop rsp; inc dword ptr [rdi+0x4ff5c58]; pop rcx; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9cf: inc dword ptr [rdi+0x4ff5c58]; pop rcx; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d0: xchg [rax+0x5c], ebx; inc dword ptr [rcx+rbx*2]; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d1: pop rax; pop rsp; inc dword ptr [rcx+rbx*2]; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d2: pop rsp; inc dword ptr [rcx+rbx*2]; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d3: inc dword ptr [rcx+rbx*2]; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d4: add al, 0x59; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d5: pop rcx; pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d6: pop rsp; jmp far fword ptr [rsi];
0xffffffff81e9e9d8: pop rcx; pop rsp; call far fword ptr [rax+0x59];
0xffffffff81e9e9d9: pop rcx; pop rsp; call far fword ptr [rax+0x59];
0xffffffff81e9e9da: pop rsp; call far fword ptr [rax+0x59];
0xffffffff81e9e9dc: pop rax; pop rcx; pop rsp; inc dword ptr [rbp+0x5a]; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9dd: pop rcx; pop rsp; inc dword ptr [rbp+0x5a]; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9de: pop rsp; inc dword ptr [rbp+0x5a]; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9df: inc dword ptr [rbp+0x5a]; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9e0: pop r10; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9e1: pop rdx; pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9e2: pop rsp; jmp far fword ptr [rdi+0x5a];
0xffffffff81e9e9e4: outsd dx, [rsi]; pop rdx; pop rsp; call far fword ptr [rcx+0xfff5c5a];
0xffffffff81e9e9e5: pop rdx; pop rsp; call far fword ptr [rcx+0xfff5c5a];
0xffffffff81e9e9e6: pop rsp; call far fword ptr [rcx+0xfff5c5a];
0xffffffff81e9e9f5: pop rbx; pop rsp; call qword ptr [rax];
0xffffffff81e9e9f8: adc [rsp+rbx*2-1], bl; pop rax; pop rsp; pop rsp; call qword ptr [rsi-0x3d00a3a4];
0xffffffff81e9e9f9: pop rsp; pop rsp; call far fword ptr [rax+0x5c];
0xffffffff81e9e9fa: pop rsp; call far fword ptr [rax+0x5c];
0xffffffff81e9e9fc: pop rax; pop rsp; pop rsp; call qword ptr [rsi-0x3d00a3a4];
0xffffffff81e9e9fd: pop rsp; pop rsp; call qword ptr [rsi-0x3d00a3a4];
0xffffffff81e9e9fe: pop rsp; call qword ptr [rsi-0x3d00a3a4];
0xffffffff81e9ea04: ret 0x5c5c;
0xffffffff81e9ea08: in al, dx; pop rsp; pop rsp; call far fword ptr [rax];
0xffffffff81e9ea09: pop rsp; pop rsp; call far fword ptr [rax];
0xffffffff81e9ea0c: sbb [rbp+0x5c], bl; inc dword ptr [rbp+rbx*2+0x5c]; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea0d: pop rbp; pop rsp; inc dword ptr [rbp+rbx*2+0x5c]; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea0e: pop rsp; inc dword ptr [rbp+rbx*2+0x5c]; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea0f: inc dword ptr [rbp+rbx*2+0x5c]; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea11: pop rbp; pop rsp; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea12: pop rsp; push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea13: push qword ptr [rax+0x5d]; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea15: pop rbp; pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea16: pop rsp; call far fword ptr [rdx-0x3b00a3a3];
0xffffffff81e9ea20: out dx, al; pop rbp; pop rsp; call far fword ptr [rax];
0xffffffff81e9ea21: pop rbp; pop rsp; call far fword ptr [rax];
0xffffffff81e9ea25: pop rsi; pop rsp; inc dword ptr [rsi+rbx*2+0x5c]; jmp far fword ptr [rsi+0x5e];
0xffffffff81e9ea26: pop rsp; inc dword ptr [rsi+rbx*2+0x5c]; jmp far fword ptr [rsi+0x5e];
0xffffffff81e9ea29: pop rsi; pop rsp; jmp far fword ptr [rsi+0x5e];
0xffffffff81e9ea2a: pop rsp; jmp far fword ptr [rsi+0x5e];
0xffffffff81e9ea2c: outsb dx, [rsi]; pop rsi; pop rsp; call far fword ptr [rax+0x39ff5c5e];
0xffffffff81e9ea2d: pop rsi; pop rsp; call far fword ptr [rax+0x39ff5c5e];
0xffffffff81e9ea2e: pop rsp; call far fword ptr [rax+0x39ff5c5e];
0xffffffff81e9ea36: pop rsp; inc dword ptr [rbx+0x5c]; jmp qword ptr [rcx-0x3b00a396];
0xffffffff81e9ea3a: pop rsp; jmp qword ptr [rcx-0x3b00a396];
0xffffffff81e9ea3c: mov eax, [0x31ff5c6ac4ff5c6a]; imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea3f: inc esp; push 0x5c; push qword ptr [rcx]; imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea41: push 0x5c; push qword ptr [rcx]; imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea42: pop rsp; push qword ptr [rcx]; imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea43: push qword ptr [rcx]; imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea45: imul ebx, [rdi+rdi*8-0x63], 0x6b; pop rsp; call rbp;
0xffffffff81e9ea46: pop rsp; call far fword ptr [rbp-0x2a00a395];
0xffffffff81e9ea48: popfq; imul ebx, [rdi+rdi*8-0x2b], 0x6b; pop rsp; call far fword ptr [rsi];
0xffffffff81e9ea49: imul ebx, [rdi+rdi*8-0x2b], 0x6b; pop rsp; call far fword ptr [rsi];
0xffffffff81e9ea4e: pop rsp; call far fword ptr [rsi];
0xffffffff81e9ea69: insd [rdi], dx; pop rsp; inc dword ptr [rsi]; outsb dx, [rsi]; pop rsp; call far fword ptr [rdx+0x6e];
0xffffffff81e9ea6a: pop rsp; inc dword ptr [rsi]; outsb dx, [rsi]; pop rsp; call far fword ptr [rdx+0x6e];
0xffffffff81e9ea6b: inc dword ptr [rsi]; outsb dx, [rsi]; pop rsp; call far fword ptr [rdx+0x6e];
0xffffffff81e9ea6d: outsb dx, [rsi]; pop rsp; call far fword ptr [rdx+0x6e];
0xffffffff81e9ea6e: pop rsp; call far fword ptr [rdx+0x6e];
0xffffffff81e9ea70: pop rdx; outsb dx, [rsi]; pop rsp; call qword ptr [rsi+rbp*2+0x6ef0ff5c];
0xffffffff81e9ea71: outsb dx, [rsi]; pop rsp; call qword ptr [rsi+rbp*2+0x6ef0ff5c];
0xffffffff81e9ea72: pop rsp; call qword ptr [rsi+rbp*2+0x6ef0ff5c];
0xffffffff81e9ea75: outsb dx, [rsi]; pop rsp; push rax; outsb dx, [rsi]; pop rsp; jmp far fword ptr [rax];
0xffffffff81e9ea76: pop rsp; push rax; outsb dx, [rsi]; pop rsp; jmp far fword ptr [rax];
0xffffffff81e9ea77: push rax; outsb dx, [rsi]; pop rsp; jmp far fword ptr [rax];
0xffffffff81e9ea79: outsb dx, [rsi]; pop rsp; jmp far fword ptr [rax];
0xffffffff81e9ea7a: pop rsp; jmp far fword ptr [rax];
0xffffffff81e9ea7d: outsd dx, [rsi]; pop rsp; jmp qword ptr [rax+0x6f];
0xffffffff81e9ea7e: pop rsp; jmp qword ptr [rax+0x6f];
0xffffffff81e9ea81: outsd dx, [rsi]; pop rsp; call far fword ptr [rax-0x2d00a391];
0xffffffff81e9ea82: pop rsp; call far fword ptr [rax-0x2d00a391];
0xffffffff81e9ea84: cwde; outsd dx, [rsi]; pop rsp; call rdx;
0xffffffff81e9ea85: outsd dx, [rsi]; pop rsp; call rdx;
0xffffffff81e9ea86: pop rsp; call rdx;
0xffffffff81e9ea8e: pop rsp; jmp far fword ptr [rcx+0x70];
0xffffffff81e9ea92: pop rsp; jmp qword ptr [rcx-0x2600a390];
0xffffffff81e9ea9a: pop rsp; call qword ptr [rbx];
0xffffffff81e9eaaa: pop rsp; call qword ptr [rcx+0x72];
0xffffffff81e9eab2: pop rsp; jmp far fword ptr [rbp-0x2300a38e];
0xffffffff81e9eac2: pop rsp; jmp qword ptr [rbp+0x73];
0xffffffff81e9eac6: pop rsp; call qword ptr [rdx-0x4000a38d];
0xffffffff81e9ead6: pop rsp; inc dword ptr [rsi+0x74]; pop rsp; push qword ptr [rbp+0x74]; pop rsp; jmp qword ptr [rdx-0x3000a38c];
0xffffffff81e9ead7: inc dword ptr [rsi+0x74]; pop rsp; push qword ptr [rbp+0x74]; pop rsp; jmp qword ptr [rdx-0x3000a38c];
0xffffffff81e9eada: pop rsp; push qword ptr [rbp+0x74]; pop rsp; jmp qword ptr [rdx-0x3000a38c];
0xffffffff81e9eadb: push qword ptr [rbp+0x74]; pop rsp; jmp qword ptr [rdx-0x3000a38c];
0xffffffff81e9eade: pop rsp; jmp qword ptr [rdx-0x3000a38c];
0xffffffff81e9eaee: pop rsp; call far fword ptr [rbp+rsi*2+0x5c];
0xffffffff81e9eafa: pop rsp; jmp rdi;
0xffffffff81e9eafc: out 0x75, eax; pop rsp; jmp qword ptr [rax+0x79];
0xffffffff81e9eafe: pop rsp; jmp qword ptr [rax+0x79];
0xffffffff81e9eb1a: pop rsp; jmp qword ptr [rcx+rdi*2+0x79efff5c];
0xffffffff81e9eb22: pop rsp; call qword ptr [rsi+0x7a];
0xffffffff81e9eb26: pop rsp; call qword ptr [rcx-0x3000a386];
0xffffffff81e9eb32: pop rsp; call far fword ptr [rdi];
0xffffffff81e9eb36: pop rsp; dec dword ptr [rcx+0x7b]; pop rsp; push qword ptr [rbp+0x7b]; pop rsp; call far fword ptr [rbx-0x3b00a385];
0xffffffff81e9eb37: dec dword ptr [rcx+0x7b]; pop rsp; push qword ptr [rbp+0x7b]; pop rsp; call far fword ptr [rbx-0x3b00a385];
0xffffffff81e9eb3a: pop rsp; push qword ptr [rbp+0x7b]; pop rsp; call far fword ptr [rbx-0x3b00a385];
0xffffffff81e9eb3b: push qword ptr [rbp+0x7b]; pop rsp; call far fword ptr [rbx-0x3b00a385];
0xffffffff81e9eb3e: pop rsp; call far fword ptr [rbx-0x3b00a385];
0xffffffff81e9eb52: pop rsp; call qword ptr [rax];
0xffffffff81e9eb56: pop rsp; call rsp;
0xffffffff81e9eb62: pop rsp; call far fword ptr [rbp+0x7d];
0xffffffff81e9eb6c: sar byte ptr [rdi+0x5c], 0xff; sbb eax, 0x55ff5c80; sbb dword ptr [rdi+rdi*8-0x6b], 0xffffff83; pop rsp; jmp qword ptr [rbx-0x75];
0xffffffff81e9eb70: sbb eax, 0x55ff5c80; sbb dword ptr [rdi+rdi*8-0x6b], 0xffffff83; pop rsp; jmp qword ptr [rbx-0x75];
0xffffffff81e9eb71: sbb byte ptr [rdi+rdi*8+0x55], 0x83; pop rsp; call qword ptr [rbp+0x63ff5c83];
0xffffffff81e9eb72: pop rsp; call qword ptr [rbp-0x7d];
0xffffffff81e9eb74: push rbp; sbb dword ptr [rdi+rdi*8-0x6b], 0xffffff83; pop rsp; jmp qword ptr [rbx-0x75];
0xffffffff81e9eb75: sbb dword ptr [rdi+rdi*8-0x6b], 0xffffff83; pop rsp; jmp qword ptr [rbx-0x75];
0xffffffff81e9eb76: pop rsp; call qword ptr [rbp+0x63ff5c83];
0xffffffff81e9eb78: xchg ebp, eax; sbb dword ptr [rdi+rdi*8+0x63], 0xffffff8b; pop rsp; jmp far fword ptr [rbp-0x4300a375];
0xffffffff81e9eb79: sbb dword ptr [rdi+rdi*8+0x63], 0xffffff8b; pop rsp; jmp far fword ptr [rbp-0x4300a375];
0xffffffff81e9eb7a: pop rsp; jmp qword ptr [rbx-0x75];
0xffffffff81e9eb7e: pop rsp; jmp far fword ptr [rbp-0x4300a375];
0xffffffff81e9eb86: pop rsp; jmp qword ptr [rdi-0x74];
0xffffffff81e9eb8e: pop rsp; call far fword ptr [rcx+rdx*4-0x6e4600a4];
0xffffffff81e9eb98: ret 0x5c91;
0xffffffff81e9eb99: xchg ecx, eax; pop rsp; dec eax; xchg ecx, eax; pop rsp; call qword ptr [rdi];
0xffffffff81e9eb9a: pop rsp; dec eax; xchg ecx, eax; pop rsp; call qword ptr [rdi];
0xffffffff81e9eb9b: dec eax; xchg ecx, eax; pop rsp; call qword ptr [rdi];
0xffffffff81e9eb9d: xchg ecx, eax; pop rsp; call qword ptr [rdi];
0xffffffff81e9eb9e: pop rsp; call qword ptr [rdi];
0xffffffff81e9eba1: xchg edx, eax; pop rsp; call far fword ptr [rdx+rdx*4];
0xffffffff81e9eba2: pop rsp; call far fword ptr [rdx+rdx*4];
0xffffffff81e9eba9: xchg edx, eax; pop rsp; call qword ptr [rdx-0x6d];
0xffffffff81e9ebaa: pop rsp; call qword ptr [rdx-0x6d];
0xffffffff81e9ebad: xchg ebx, eax; pop rsp; inc dword ptr [rdx-0x7900a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rax-0x5b00a36d];
0xffffffff81e9ebae: pop rsp; inc dword ptr [rdx-0x7900a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rax-0x5b00a36d];
0xffffffff81e9ebaf: inc dword ptr [rdx-0x7900a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rax-0x5b00a36d];
0xffffffff81e9ebb1: xchg ebx, eax; pop rsp; inc dword ptr [rsi-0x5f00a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebb2: pop rsp; inc dword ptr [rsi-0x5f00a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebb3: inc dword ptr [rsi-0x5f00a36d]; xchg ebx, eax; pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebb4: xchg [rbx-0x6c5f00a4], dl; pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebb5: xchg ebx, eax; pop rsp; jmp qword ptr [rax-0x5b00a36d];
0xffffffff81e9ebb6: pop rsp; jmp qword ptr [rax-0x5b00a36d];
0xffffffff81e9ebb9: xchg ebx, eax; pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebba: pop rsp; jmp qword ptr [rbx+rdx*4-0x6c4100a4];
0xffffffff81e9ebc0: mov esi, 0xf6ff5c93; xchg ebx, eax; pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc1: xchg ebx, eax; pop rsp; push rsi; xchg ebx, eax; pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc2: pop rsp; push rsi; xchg ebx, eax; pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc3: push rsi; xchg ebx, eax; pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc4: not byte ptr [rbx-0x6bac00a4]; pop rsp; jmp far fword ptr [rdx];
0xffffffff81e9ebc5: xchg ebx, eax; pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc6: pop rsp; call qword ptr [rbx-0x6c];
0xffffffff81e9ebc8: push rbx; xchg esp, eax; pop rsp; jmp far fword ptr [rdx];
0xffffffff81e9ebc9: xchg esp, eax; pop rsp; jmp far fword ptr [rdx];
0xffffffff81e9ebca: pop rsp; jmp far fword ptr [rdx];
0xffffffff81e9ebcc: sub dl, [rsi-0x698d00a4]; pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebcd: xchg esi, eax; pop rsp; push qword ptr [rdx-0x6a]; pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebce: pop rsp; push qword ptr [rdx-0x6a]; pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebcf: push qword ptr [rdx-0x6a]; pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebd1: xchg esi, eax; pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebd2: pop rsp; jmp qword ptr [rcx-0x2a00a36a];
0xffffffff81e9ebd5: xchg esi, eax; pop rsp; call rbp;
0xffffffff81e9ebd6: pop rsp; call rbp;
0xffffffff81e9ebdc: fst dword ptr [rsi-0x690300a4], st; pop rsp; dec dword ptr [rbx-0x69]; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe0: cld; xchg esi, eax; pop rsp; dec dword ptr [rbx-0x69]; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe1: xchg esi, eax; pop rsp; dec dword ptr [rbx-0x69]; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe2: pop rsp; dec dword ptr [rbx-0x69]; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe3: dec dword ptr [rbx-0x69]; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe4: xchg r15, rax; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe5: xchg edi, eax; pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe6: pop rsp; call far fword ptr [rcx];
0xffffffff81e9ebe8: sbb [rax-0x672200a4], ebx; pop rsp; call qword ptr [rdi-0x66];
0xffffffff81e9ebec: fstp qword ptr [rax-0x65a800a4], st; pop rsp; jmp qword ptr [rdi-0x66];
0xffffffff81e9ebed: cwde; pop rsp; call qword ptr [rdi-0x66];
0xffffffff81e9ebee: pop rsp; call qword ptr [rdi-0x66];
0xffffffff81e9ebf2: pop rsp; jmp qword ptr [rdi-0x66];
0xffffffff81e9ebf6: pop rsp; call far fword ptr [rax];
0xffffffff81e9ebf8: sbb [rbx-0x649700a4], bl; pop rsp; jmp qword ptr [rdx];
0xffffffff81e9ebf9: fwait; pop rsp; jmp far fword ptr [rax-0x65];
0xffffffff81e9ebfa: pop rsp; jmp far fword ptr [rax-0x65];
0xffffffff81e9ebfd: fwait; pop rsp; jmp qword ptr [rdx];
0xffffffff81e9ebfe: pop rsp; jmp qword ptr [rdx];
0xffffffff81e9ec00: and bl, [rdi-0x5e4c00a4]; pop rsp; jmp far fword ptr [rdx-0x5d];
0xffffffff81e9ec04: mov bl, 0xa1; pop rsp; jmp far fword ptr [rdx-0x5d];
0xffffffff81e9ec06: pop rsp; jmp far fword ptr [rdx-0x5d];
0xffffffff81e9ec08: push 0xffffffffffffffa3; pop rsp; jmp far fword ptr [rdi-0x5d];
0xffffffff81e9ec0a: pop rsp; jmp far fword ptr [rdi-0x5d];
0xffffffff81e9ec15: ret 0xff5c;
0xffffffff81e9ed10: ret 0x6073;
0xffffffff81e9f14c: mov esp, 0x51ff648f; xchg esp, eax; call far fword ptr fs:[rdi-0x4b009b6a];
0xffffffff81e9f150: push rcx; xchg esp, eax; call far fword ptr fs:[rdi-0x4b009b6a];
0xffffffff81e9f151: xchg esp, eax; call far fword ptr fs:[rdi-0x4b009b6a];
0xffffffff81e9f22c: ret 0x6501;
0xffffffff81e9f2d5: pop rsp; call qword ptr gs:[rbx];
0xffffffff81e9f300: pop rsp; mov esp, [rbp-1]; insd [rdi], dx; mov esp, [rbp-1]; ficom st, word ptr [rax-0x6db2009b]; call far fword ptr gs:[rsi];
0xffffffff81e9f301: mov esp, [rbp-1]; insd [rdi], dx; mov esp, [rbp-1]; ficom st, word ptr [rax-0x6db2009b]; call far fword ptr gs:[rsi];
0xffffffff81e9f304: insd [rdi], dx; mov esp, [rbp-1]; ficom st, word ptr [rax-0x6db2009b]; call far fword ptr gs:[rsi];
0xffffffff81e9f305: mov esp, [rbp-1]; ficom st, word ptr [rax-0x6db2009b]; call far fword ptr gs:[rsi];
0xffffffff81e9f341: ret 0xff65;
0xffffffff81e9f3c9: pop rdx; dec cx; pop rsp; dec bp; pop rsp; call cx;
0xffffffff81e9f3ca: dec cx; pop rsp; dec bp; pop rsp; call cx;
0xffffffff81e9f3cb: dec ecx; pop rsp; dec bp; pop rsp; call cx;
0xffffffff81e9f3cc: leave; pop rsp; dec bp; pop rsp; call cx;
0xffffffff81e9f3cd: pop rsp; dec bp; pop rsp; call cx;
0xffffffff81e9f3ce: dec bp; pop rsp; call cx;
0xffffffff81e9f3cf: dec ebp; pop rsp; call cx;
0xffffffff81e9f3d1: pop rsp; call cx;
0xffffffff81e9f3d5: pop rsp; inc word ptr [rbx*2+0x5d65ff66]; call far dword ptr [rax+0x23ff665d];
0xffffffff81e9f404: ret 0x6670;
0xffffffff81e9f42c: xchg esp, eax; mov ebx, 0xbc9eff66; call bp;
0xffffffff81e9f5e1: ret 0xff68;
0xffffffff81e9f614: sub esp, 0xf013ff68; push 0x68f01fff; jmp qword ptr [rsp+rsi*8];
0xffffffff81e9f86c: ret 0x6b61;
0xffffffff81e9f988: xchg esp, eax; in eax, 0x6b; call qword ptr [rdx+rbp*8-0x14250095];
0xffffffff81e9f998: ret 0x6bed;
0xffffffff81e9fd99: pop rsp; outsb dx, [rsi]; jmp far fword ptr [rdi-0x490091a1];
0xffffffff81e9fdf5: xchg esp, eax; outsb dx, [rsi]; jmp far fword ptr [rdx];
0xffffffff81e9fe45: ret 0xff6e;
0xffffffff81e9fe48: pop rsp; ret;
0xffffffff81e9fe4d: ret;
